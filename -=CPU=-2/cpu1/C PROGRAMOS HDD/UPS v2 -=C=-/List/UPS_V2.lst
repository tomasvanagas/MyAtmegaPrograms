
AVRASM ver. 2.1.30  D:\TOMOSIUKS\-=CPU=-\UPS v2 -=C=-\List\UPS_V2.asm Tue Nov 01 15:57:38 2011

D:\TOMOSIUKS\-=CPU=-\UPS v2 -=C=-\List\UPS_V2.asm(1051): warning: Register r4 already defined by the .DEF directive
D:\TOMOSIUKS\-=CPU=-\UPS v2 -=C=-\List\UPS_V2.asm(1052): warning: Register r7 already defined by the .DEF directive
D:\TOMOSIUKS\-=CPU=-\UPS v2 -=C=-\List\UPS_V2.asm(1053): warning: Register r6 already defined by the .DEF directive
D:\TOMOSIUKS\-=CPU=-\UPS v2 -=C=-\List\UPS_V2.asm(1054): warning: Register r9 already defined by the .DEF directive
D:\TOMOSIUKS\-=CPU=-\UPS v2 -=C=-\List\UPS_V2.asm(1055): warning: Register r8 already defined by the .DEF directive
D:\TOMOSIUKS\-=CPU=-\UPS v2 -=C=-\List\UPS_V2.asm(1056): warning: Register r11 already defined by the .DEF directive
D:\TOMOSIUKS\-=CPU=-\UPS v2 -=C=-\List\UPS_V2.asm(1057): warning: Register r10 already defined by the .DEF directive
D:\TOMOSIUKS\-=CPU=-\UPS v2 -=C=-\List\UPS_V2.asm(1058): warning: Register r13 already defined by the .DEF directive
D:\TOMOSIUKS\-=CPU=-\UPS v2 -=C=-\List\UPS_V2.asm(1059): warning: Register r12 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V2.04.4a Advanced
                 ;(C) Copyright 1998-2009 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Chip type                : ATmega16
                 ;Program type             : Application
                 ;Clock frequency          : 8.000000 MHz
                 ;Memory model             : Small
                 ;Optimize for             : Speed
                 ;(s)printf features       : int, width
                 ;(s)scanf features        : int, width
                 ;External RAM size        : 0
                 ;Data Stack size          : 256 byte(s)
                 ;Heap size                : 0 byte(s)
                 ;Promote 'char' to 'int'  : Yes
                 ;'char' is unsigned       : Yes
                 ;8 bit enums              : Yes
                 ;global 'const' stored in FLASH: No
                 ;Enhanced core instructions    : On
                 ;Smart register allocation     : On
                 ;Automatic register allocation : On
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega16
                 	#pragma AVRPART MEMORY PROG_FLASH 16384
                 	#pragma AVRPART MEMORY EEPROM 512
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 1024
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X+
                 	LD   R22,X
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _OSC=R4
                 	.DEF _SKIP=R7
                 	.DEF _UPS_STATE=R6
                 	.DEF _OLD_UPS_STATE=R9
                 	.DEF _KRAUTI=R8
                 	.DEF _LOAD=R11
                 	.DEF _BEEPER_OFF=R10
                 	.DEF _RealTime=R13
                 	.DEF _LangoAdresas=R12
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;INTERRUPT VECTORS
000000 940c 0042 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 04fe 	JMP  _timer0_ovf_isr
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 _0x0:
00002a 4548
00002b 4c4c
00002c 004f
00002d 6964      	.DB  0x48,0x45,0x4C,0x4C,0x4F,0x0,0x64,0x69
00002e 6353
00002f 4168
000030 4772
000031 6e69      	.DB  0x53,0x63,0x68,0x41,0x72,0x47,0x69,0x6E
000032 0047
000033 4162
000034 7474
000035 7245      	.DB  0x47,0x0,0x62,0x41,0x74,0x74,0x45,0x72
000036 2059
000037 6f46
000038 4c75
000039 0074      	.DB  0x59,0x20,0x46,0x6F,0x75,0x4C,0x74,0x0
00003a 4163
00003b 746e
00003c 6420
00003d 5369      	.DB  0x63,0x41,0x6E,0x74,0x20,0x64,0x69,0x53
00003e 6863
00003f 7241
000040 4547
D:\TOMOSIUKS\-=CPU=-\UPS v2 -=C=-\List\UPS_V2.asm(1093): warning: .cseg .db misalignment - padding zero byte
000041 0000      	.DB  0x63,0x68,0x41,0x72,0x47,0x45,0x0
                 __RESET:
000042 94f8      	CLI
000043 27ee      	CLR  R30
000044 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000045 e0f1      	LDI  R31,1
000046 bffb      	OUT  GICR,R31
000047 bfeb      	OUT  GICR,R30
000048 bfe5      	OUT  MCUCR,R30
                 
                 ;DISABLE WATCHDOG
000049 e1f8      	LDI  R31,0x18
00004a bdf1      	OUT  WDTCR,R31
00004b bde1      	OUT  WDTCR,R30
                 
                 ;CLEAR R2-R14
00004c e08d      	LDI  R24,(14-2)+1
00004d e0a2      	LDI  R26,2
00004e 27bb      	CLR  R27
                 __CLEAR_REG:
00004f 93ed      	ST   X+,R30
000050 958a      	DEC  R24
000051 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000052 e080      	LDI  R24,LOW(0x400)
000053 e094      	LDI  R25,HIGH(0x400)
000054 e6a0      	LDI  R26,0x60
                 __CLEAR_SRAM:
000055 93ed      	ST   X+,R30
000056 9701      	SBIW R24,1
000057 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;STACK POINTER INITIALIZATION
000058 e5ef      	LDI  R30,LOW(0x45F)
000059 bfed      	OUT  SPL,R30
00005a e0e4      	LDI  R30,HIGH(0x45F)
00005b bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
00005c e6c0      	LDI  R28,LOW(0x160)
00005d e0d1      	LDI  R29,HIGH(0x160)
                 
00005e 940c 0521 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x160
                 
                 	.CSEG
                 ;/*****************************************************
                 ;Project : UPS v2
                 ;Version : v2
                 ;Date    : 2011-03-25
                 ;Author  : Tomas
                 ;
                 ;Chip type               : ATmega16
                 ;AVR Core Clock frequency: 8.000000 MHz
                 ;Memory model            : Small
                 ;External RAM size       : 0
                 ;Data Stack size         : 512
                 ;*****************************************************/
                 ;
                 ;#include <mega16.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x40
                 	.EQU __sm_mask=0xB0
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0xA0
                 	.EQU __sm_ext_standby=0xB0
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <delay.h>
                 ;#include <string.h>
                 ;
                 ;#define LED_SEGMENT_A PORTC.6
                 ;#define LED_SEGMENT_B PORTC.4
                 ;#define LED_SEGMENT_C PORTC.1
                 ;#define LED_SEGMENT_D PORTC.3
                 ;#define LED_SEGMENT_E PORTD.7
                 ;#define LED_SEGMENT_F PORTC.5
                 ;#define LED_SEGMENT_G PORTC.0
                 ;#define LED_SEGMENT_H PORTC.2
                 ;
                 ;#define LED_BLOCK_0 PORTC.7
                 ;#define LED_BLOCK_1 PORTA.6
                 ;#define LED_BLOCK_2 PORTA.7
                 ;#define LED_BLOCK_3 PORTA.4
                 ;
                 ;
                 ;///////////////////// VARIABLES /////////////////////////////////////
                 ;int OSC;
                 ;char BUTTON[4];
                 ;//char BATTERY;
                 ;char SKIP;
                 ;char UPS_STATE,OLD_UPS_STATE;
                 ;eeprom char BATTERY_FOULT;
                 ;char KRAUTI, LOAD, BEEPER_OFF;
                 ;
                 ;char LcdText[4], LcdTaskas[4];
                 ;
                 ;char RealTime;
                 ;
                 ;
                 ;
                 ;
                 ;
                 ;unsigned int Timer3;// Begancio Taskelio Taimeris
                 ;
                 ;eeprom unsigned int Timer4;// Paskutinio Iskrorivimo valandos
                 ;eeprom unsigned int Timer5;// Paskutinio Iskrorivimo minutes
                 ;
                 ;unsigned int Timer7;// Dabartinio Iskrovimo Laiko Sekundziu Skaicius
                 ;unsigned int Timer8;// Dabartinio Iskrovimo Laiko Minuciu Skaicius
                 ;unsigned int Timer9;// Dabartinio Iskrovimo Laiko Valandu Skaicius
                 ;
                 ;unsigned int Timer10;// 2 Mygtuko Uzlaikymo Taimeris
                 ;
                 ;unsigned int Timer11;// 3 Mygtuko Uzlaikymo Taimeris
                 ;
                 ;unsigned int Timer12;// Krovimo taimeris (30 sec)
                 ;
                 ;//unsigned int Timer13;
                 ;
                 ;unsigned int Timer14;// Iskrovimo sustabdymo taimeris
                 ;
                 ;//signed int Timer15;// 1 savaites taimerio sekundes dalis
                 ;
                 ;
                 ;unsigned int Timer19;// "diSchArGE FouLt" taimeris
                 ;
                 ;unsigned int Timer20;// "diSchArGinG" taimeris
                 ;
                 ;//unsigned int Timer22;
                 ;
                 ;//unsigned int Timer23;
                 ;
                 ;unsigned int Timer24;// ms skaicius po kiekvienos iskrovimo laiko sekundes suejimo
                 ;
                 ;char LangoAdresas;
                 ;char LanguTrigeris;
                 ;
                 ;unsigned int BATTERY_VOLTAGE;// Baterijos itampa (U x 10)
                 ;unsigned int BATTERY_VOLTAGE_ARCHIVE[10];
                 ;eeprom unsigned int MAX_BATTERY_VOLTAGE;// Baterijos maksimali itampa (Umax x 10)
                 ;eeprom unsigned int MIN_BATTERY_VOLTAGE;// Baterijos minimali itampa (Umin x 10)
                 ;char ItamposTrigeris1;
                 ;char ItamposTrigeris2;
                 ;
                 ;/////////////////////////////////////////////////////////////////////
                 ;#define ADC_VREF_TYPE 0x40
                 ;unsigned int read_adc(unsigned char adc_input){
                 ; 0000 005E unsigned int read_adc(unsigned char adc_input){
                 
                 	.CSEG
                 _read_adc:
                 ; 0000 005F ADMUX=adc_input | (ADC_VREF_TYPE & 0xff);
                 ;	adc_input -> Y+0
000060 81e8      	LD   R30,Y
000061 64e0      	ORI  R30,0x40
000062 b9e7      	OUT  0x7,R30
                 ; 0000 0060 delay_us(10);
                +
000063 e18b     +LDI R24 , LOW ( 27 )
                +__DELAY_USB_LOOP :
000064 958a     +DEC R24
000065 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 27
                 ; 0000 0061 ADCSRA|=0x40;
000066 9a36      	SBI  0x6,6
                 ; 0000 0062     while((ADCSRA & 0x10)==0);
                 _0x3:
000067 9b34      	SBIS 0x6,4
000068 cffe      	RJMP _0x3
                 ; 0000 0063 ADCSRA|=0x10;
000069 9a34      	SBI  0x6,4
                 ; 0000 0064 return ADCW;
00006a b1e4      	IN   R30,0x4
00006b b1f5      	IN   R31,0x4+1
00006c c033      	RJMP _0x2020004
                 ; 0000 0065 }
                 ;/////////////////////////////////////////////////////////////////////
                 ;/////////////////////////////////////////////////////////////////////
                 ;char NumToIndex(char Num){
                 ; 0000 0068 char NumToIndex(char Num){
                 _NumToIndex:
                 ; 0000 0069     if(Num==0){     return '0';}
                 ;	Num -> Y+0
00006d 81e8      	LD   R30,Y
00006e 30e0      	CPI  R30,0
00006f f411      	BRNE _0x6
000070 e3e0      	LDI  R30,LOW(48)
000071 c02e      	RJMP _0x2020004
                 ; 0000 006A     else if(Num==1){return '1';}
                 _0x6:
000072 81a8      	LD   R26,Y
000073 30a1      	CPI  R26,LOW(0x1)
000074 f411      	BRNE _0x8
000075 e3e1      	LDI  R30,LOW(49)
000076 c029      	RJMP _0x2020004
                 ; 0000 006B     else if(Num==2){return '2';}
                 _0x8:
000077 81a8      	LD   R26,Y
000078 30a2      	CPI  R26,LOW(0x2)
000079 f411      	BRNE _0xA
00007a e3e2      	LDI  R30,LOW(50)
00007b c024      	RJMP _0x2020004
                 ; 0000 006C     else if(Num==3){return '3';}
                 _0xA:
00007c 81a8      	LD   R26,Y
00007d 30a3      	CPI  R26,LOW(0x3)
00007e f411      	BRNE _0xC
00007f e3e3      	LDI  R30,LOW(51)
000080 c01f      	RJMP _0x2020004
                 ; 0000 006D     else if(Num==4){return '4';}
                 _0xC:
000081 81a8      	LD   R26,Y
000082 30a4      	CPI  R26,LOW(0x4)
000083 f411      	BRNE _0xE
000084 e3e4      	LDI  R30,LOW(52)
000085 c01a      	RJMP _0x2020004
                 ; 0000 006E     else if(Num==5){return '5';}
                 _0xE:
000086 81a8      	LD   R26,Y
000087 30a5      	CPI  R26,LOW(0x5)
000088 f411      	BRNE _0x10
000089 e3e5      	LDI  R30,LOW(53)
00008a c015      	RJMP _0x2020004
                 ; 0000 006F     else if(Num==6){return '6';}
                 _0x10:
00008b 81a8      	LD   R26,Y
00008c 30a6      	CPI  R26,LOW(0x6)
00008d f411      	BRNE _0x12
00008e e3e6      	LDI  R30,LOW(54)
00008f c010      	RJMP _0x2020004
                 ; 0000 0070     else if(Num==7){return '7';}
                 _0x12:
000090 81a8      	LD   R26,Y
000091 30a7      	CPI  R26,LOW(0x7)
000092 f411      	BRNE _0x14
000093 e3e7      	LDI  R30,LOW(55)
000094 c00b      	RJMP _0x2020004
                 ; 0000 0071     else if(Num==8){return '8';}
                 _0x14:
000095 81a8      	LD   R26,Y
000096 30a8      	CPI  R26,LOW(0x8)
000097 f411      	BRNE _0x16
000098 e3e8      	LDI  R30,LOW(56)
000099 c006      	RJMP _0x2020004
                 ; 0000 0072     else if(Num==9){return '9';}
                 _0x16:
00009a 81a8      	LD   R26,Y
00009b 30a9      	CPI  R26,LOW(0x9)
00009c f411      	BRNE _0x18
00009d e3e9      	LDI  R30,LOW(57)
00009e c001      	RJMP _0x2020004
                 ; 0000 0073 return 0;
                 _0x18:
00009f e0e0      	LDI  R30,LOW(0)
                 _0x2020004:
0000a0 9621      	ADIW R28,1
0000a1 9508      	RET
                 ; 0000 0074 }
                 ;
                 ;char UpdateVariableOSC(){
                 ; 0000 0076 char UpdateVariableOSC(){
                 _UpdateVariableOSC:
                 ; 0000 0077 OSC++;
0000a2 01f2      	MOVW R30,R4
0000a3 9631      	ADIW R30,1
0000a4 012f      	MOVW R4,R30
                 ; 0000 0078     if(OSC>=15){
0000a5 e0ef      	LDI  R30,LOW(15)
0000a6 e0f0      	LDI  R31,HIGH(15)
0000a7 164e      	CP   R4,R30
0000a8 065f      	CPC  R5,R31
0000a9 f014      	BRLT _0x19
                 ; 0000 0079     OSC = 0;
0000aa 2444      	CLR  R4
0000ab 2455      	CLR  R5
                 ; 0000 007A     }
                 ; 0000 007B return 1;
                 _0x19:
0000ac c400      	RJMP _0x2020002
                 ; 0000 007C }
                 ;
                 ;char WhatLcdChannelIsOn(){
                 ; 0000 007E char WhatLcdChannelIsOn(){
                 _WhatLcdChannelIsOn:
                 ; 0000 007F     if(OSC==0){
0000ad 2c04      	MOV  R0,R4
0000ae 2805      	OR   R0,R5
0000af f411      	BRNE _0x1A
                 ; 0000 0080     return 0;
0000b0 e0e0      	LDI  R30,LOW(0)
0000b1 9508      	RET
                 ; 0000 0081     }
                 ; 0000 0082     else if(OSC==4){
                 _0x1A:
0000b2 e0e4      	LDI  R30,LOW(4)
0000b3 e0f0      	LDI  R31,HIGH(4)
0000b4 15e4      	CP   R30,R4
0000b5 05f5      	CPC  R31,R5
0000b6 f409      	BRNE _0x1C
                 ; 0000 0083     return 1;
0000b7 c3f5      	RJMP _0x2020002
                 ; 0000 0084     }
                 ; 0000 0085     else if(OSC==8){
                 _0x1C:
0000b8 e0e8      	LDI  R30,LOW(8)
0000b9 e0f0      	LDI  R31,HIGH(8)
0000ba 15e4      	CP   R30,R4
0000bb 05f5      	CPC  R31,R5
0000bc f411      	BRNE _0x1E
                 ; 0000 0086     return 2;
0000bd e0e2      	LDI  R30,LOW(2)
0000be 9508      	RET
                 ; 0000 0087     }
                 ; 0000 0088     else if(OSC==12){
                 _0x1E:
0000bf e0ec      	LDI  R30,LOW(12)
0000c0 e0f0      	LDI  R31,HIGH(12)
0000c1 15e4      	CP   R30,R4
0000c2 05f5      	CPC  R31,R5
0000c3 f411      	BRNE _0x20
                 ; 0000 0089     return 3;
0000c4 e0e3      	LDI  R30,LOW(3)
0000c5 9508      	RET
                 ; 0000 008A     }
                 ; 0000 008B     else{
                 _0x20:
                 ; 0000 008C     return -1;
                 ; 0000 008D     }
                 ; 0000 008E return -1;
                 _0x2020003:
0000c6 efef      	LDI  R30,LOW(255)
0000c7 9508      	RET
                 ; 0000 008F }
                 ;
                 ;char RelayOutputs(){
                 ; 0000 0091 char RelayOutputs(){
                 _RelayOutputs:
                 ; 0000 0092     if(UPS_STATE==2){
0000c8 e0e2      	LDI  R30,LOW(2)
0000c9 15e6      	CP   R30,R6
0000ca f411      	BRNE _0x22
                 ; 0000 0093     PORTD.3 = 1;
0000cb 9a93      	SBI  0x12,3
                 ; 0000 0094     }
                 ; 0000 0095     else{
0000cc c001      	RJMP _0x25
                 _0x22:
                 ; 0000 0096     PORTD.3 = 0;
0000cd 9893      	CBI  0x12,3
                 ; 0000 0097     }
                 _0x25:
                 ; 0000 0098 
                 ; 0000 0099     if(KRAUTI==1){
0000ce e0e1      	LDI  R30,LOW(1)
0000cf 15e8      	CP   R30,R8
0000d0 f411      	BRNE _0x28
                 ; 0000 009A     PORTD.6 = 1;
0000d1 9a96      	SBI  0x12,6
                 ; 0000 009B     }
                 ; 0000 009C     else{
0000d2 c001      	RJMP _0x2B
                 _0x28:
                 ; 0000 009D     PORTD.6 = 0;
0000d3 9896      	CBI  0x12,6
                 ; 0000 009E     }
                 _0x2B:
                 ; 0000 009F KRAUTI = 0;
0000d4 2488      	CLR  R8
                 ; 0000 00A0 
                 ; 0000 00A1     if(LOAD==1){
0000d5 e0e1      	LDI  R30,LOW(1)
0000d6 15eb      	CP   R30,R11
0000d7 f411      	BRNE _0x2E
                 ; 0000 00A2     PORTD.5 = 1;
0000d8 9a95      	SBI  0x12,5
                 ; 0000 00A3     }
                 ; 0000 00A4     else{
0000d9 c001      	RJMP _0x31
                 _0x2E:
                 ; 0000 00A5     PORTD.5 = 0;
0000da 9895      	CBI  0x12,5
                 ; 0000 00A6     }
                 _0x31:
                 ; 0000 00A7 LOAD = 0;
0000db 24bb      	CLR  R11
                 ; 0000 00A8 
                 ; 0000 00A9     if(BEEPER_OFF==1){
0000dc e0e1      	LDI  R30,LOW(1)
0000dd 15ea      	CP   R30,R10
0000de f411      	BRNE _0x34
                 ; 0000 00AA     PORTD.4 = 1;
0000df 9a94      	SBI  0x12,4
                 ; 0000 00AB     }
                 ; 0000 00AC     else{
0000e0 c001      	RJMP _0x37
                 _0x34:
                 ; 0000 00AD     PORTD.4 = 0;
0000e1 9894      	CBI  0x12,4
                 ; 0000 00AE     }
                 _0x37:
                 ; 0000 00AF BEEPER_OFF = 0;
0000e2 24aa      	CLR  R10
                 ; 0000 00B0 
                 ; 0000 00B1 return 1;
0000e3 c3c9      	RJMP _0x2020002
                 ; 0000 00B2 }
                 ;
                 ;char UpdateLcd(){
                 ; 0000 00B4 char UpdateLcd(){
                 _UpdateLcd:
                 ; 0000 00B5 char i;
                 ; 0000 00B6 char LcdChannel = WhatLcdChannelIsOn();
                 ; 0000 00B7     if(LcdChannel!=-1){
0000e4 931a      	ST   -Y,R17
0000e5 930a      	ST   -Y,R16
                 ;	i -> R17
                 ;	LcdChannel -> R16
0000e6 dfc6      	RCALL _WhatLcdChannelIsOn
0000e7 2f0e      	MOV  R16,R30
0000e8 2fa0      	MOV  R26,R16
0000e9 efef      	LDI  R30,LOW(255)
0000ea e0b0      	LDI  R27,0
0000eb efff      	SER  R31
0000ec 17ea      	CP   R30,R26
0000ed 07fb      	CPC  R31,R27
0000ee f411      	BRNE PC+3
0000ef 940c 03f5 	JMP _0x3A
                 ; 0000 00B8     char a=0, b=0, c=0, d=0, e=0, f=0, g=0;
                 ; 0000 00B9     char input = LcdText[LcdChannel];
                 ; 0000 00BA     // Bloko valdymas
                 ; 0000 00BB         if(LcdChannel==0){     LED_BLOCK_0 = 1;LED_BLOCK_1 = 0;LED_BLOCK_2 = 0;LED_BLOCK_3 = 0;}
0000f1 9728      	SBIW R28,8
0000f2 e0e0      	LDI  R30,LOW(0)
0000f3 83e9      	STD  Y+1,R30
0000f4 83ea      	STD  Y+2,R30
0000f5 83eb      	STD  Y+3,R30
0000f6 83ec      	STD  Y+4,R30
0000f7 83ed      	STD  Y+5,R30
0000f8 83ee      	STD  Y+6,R30
0000f9 83ef      	STD  Y+7,R30
                 ;	a -> Y+7
                 ;	b -> Y+6
                 ;	c -> Y+5
                 ;	d -> Y+4
                 ;	e -> Y+3
                 ;	f -> Y+2
                 ;	g -> Y+1
                 ;	input -> Y+0
0000fa 2fe0      	MOV  R30,R16
0000fb e0f0      	LDI  R31,0
0000fc 59ec      	SUBI R30,LOW(-_LcdText)
0000fd 4ffe      	SBCI R31,HIGH(-_LcdText)
0000fe 81e0      	LD   R30,Z
0000ff 83e8      	ST   Y,R30
000100 3000      	CPI  R16,0
000101 f429      	BRNE _0x3B
000102 9aaf      	SBI  0x15,7
000103 98de      	CBI  0x1B,6
000104 98df      	CBI  0x1B,7
000105 98dc      	CBI  0x1B,4
                 ; 0000 00BC         else if(LcdChannel==1){LED_BLOCK_0 = 0;LED_BLOCK_1 = 1;LED_BLOCK_2 = 0;LED_BLOCK_3 = 0;}
000106 c014      	RJMP _0x44
                 _0x3B:
000107 3001      	CPI  R16,1
000108 f429      	BRNE _0x45
000109 98af      	CBI  0x15,7
00010a 9ade      	SBI  0x1B,6
00010b 98df      	CBI  0x1B,7
00010c 98dc      	CBI  0x1B,4
                 ; 0000 00BD         else if(LcdChannel==2){LED_BLOCK_0 = 0;LED_BLOCK_1 = 0;LED_BLOCK_2 = 1;LED_BLOCK_3 = 0;}
00010d c00d      	RJMP _0x4E
                 _0x45:
00010e 3002      	CPI  R16,2
00010f f429      	BRNE _0x4F
000110 98af      	CBI  0x15,7
000111 98de      	CBI  0x1B,6
000112 9adf      	SBI  0x1B,7
000113 98dc      	CBI  0x1B,4
                 ; 0000 00BE         else if(LcdChannel==3){LED_BLOCK_0 = 0;LED_BLOCK_1 = 0;LED_BLOCK_2 = 0;LED_BLOCK_3 = 1;}
000114 c006      	RJMP _0x58
                 _0x4F:
000115 3003      	CPI  R16,3
000116 f421      	BRNE _0x59
000117 98af      	CBI  0x15,7
000118 98de      	CBI  0x1B,6
000119 98df      	CBI  0x1B,7
00011a 9adc      	SBI  0x1B,4
                 ; 0000 00BF 
                 ; 0000 00C0     // Segmentu valdymas
                 ; 0000 00C1         if(input=='0'){
                 _0x59:
                 _0x58:
                 _0x4E:
                 _0x44:
00011b 81a8      	LD   R26,Y
00011c 33a0      	CPI  R26,LOW(0x30)
00011d f439      	BRNE _0x62
                 ; 0000 00C2         a = 1;
00011e e0e1      	LDI  R30,LOW(1)
00011f 83ef      	STD  Y+7,R30
                 ; 0000 00C3         b = 1;
000120 83ee      	STD  Y+6,R30
                 ; 0000 00C4         c = 1;
000121 83ed      	STD  Y+5,R30
                 ; 0000 00C5         d = 1;
000122 83ec      	STD  Y+4,R30
                 ; 0000 00C6         e = 1;
000123 83eb      	STD  Y+3,R30
                 ; 0000 00C7         f = 1;
000124 c297      	RJMP _0x20F
                 ; 0000 00C8         g = 0;
                 ; 0000 00C9         }
                 ; 0000 00CA         else if(input=='1'){
                 _0x62:
000125 81a8      	LD   R26,Y
000126 33a1      	CPI  R26,LOW(0x31)
000127 f439      	BRNE _0x64
                 ; 0000 00CB         a = 0;
000128 e0e0      	LDI  R30,LOW(0)
000129 83ef      	STD  Y+7,R30
                 ; 0000 00CC         b = 1;
00012a e0e1      	LDI  R30,LOW(1)
00012b 83ee      	STD  Y+6,R30
                 ; 0000 00CD         c = 1;
00012c 83ed      	STD  Y+5,R30
                 ; 0000 00CE         d = 0;
00012d e0e0      	LDI  R30,LOW(0)
00012e c289      	RJMP _0x210
                 ; 0000 00CF         e = 0;
                 ; 0000 00D0         f = 0;
                 ; 0000 00D1         g = 0;
                 ; 0000 00D2         }
                 ; 0000 00D3         else if(input=='2'){
                 _0x64:
00012f 81a8      	LD   R26,Y
000130 33a2      	CPI  R26,LOW(0x32)
000131 f461      	BRNE _0x66
                 ; 0000 00D4         a = 1;
000132 e0e1      	LDI  R30,LOW(1)
000133 83ef      	STD  Y+7,R30
                 ; 0000 00D5         b = 1;
000134 83ee      	STD  Y+6,R30
                 ; 0000 00D6         c = 0;
000135 e0e0      	LDI  R30,LOW(0)
000136 83ed      	STD  Y+5,R30
                 ; 0000 00D7         d = 1;
000137 e0e1      	LDI  R30,LOW(1)
000138 83ec      	STD  Y+4,R30
                 ; 0000 00D8         e = 1;
000139 83eb      	STD  Y+3,R30
                 ; 0000 00D9         f = 0;
00013a e0e0      	LDI  R30,LOW(0)
00013b 83ea      	STD  Y+2,R30
                 ; 0000 00DA         g = 1;
00013c e0e1      	LDI  R30,LOW(1)
00013d c280      	RJMP _0x211
                 ; 0000 00DB         }
                 ; 0000 00DC         else if(input=='3'){
                 _0x66:
00013e 81a8      	LD   R26,Y
00013f 33a3      	CPI  R26,LOW(0x33)
000140 f451      	BRNE _0x68
                 ; 0000 00DD         a = 1;
000141 e0e1      	LDI  R30,LOW(1)
000142 83ef      	STD  Y+7,R30
                 ; 0000 00DE         b = 1;
000143 83ee      	STD  Y+6,R30
                 ; 0000 00DF         c = 1;
000144 83ed      	STD  Y+5,R30
                 ; 0000 00E0         d = 1;
000145 83ec      	STD  Y+4,R30
                 ; 0000 00E1         e = 0;
000146 e0e0      	LDI  R30,LOW(0)
000147 83eb      	STD  Y+3,R30
                 ; 0000 00E2         f = 0;
000148 83ea      	STD  Y+2,R30
                 ; 0000 00E3         g = 1;
000149 e0e1      	LDI  R30,LOW(1)
00014a c273      	RJMP _0x211
                 ; 0000 00E4         }
                 ; 0000 00E5         else if(input=='4'){
                 _0x68:
00014b 81a8      	LD   R26,Y
00014c 33a4      	CPI  R26,LOW(0x34)
00014d f459      	BRNE _0x6A
                 ; 0000 00E6         a = 0;
00014e e0e0      	LDI  R30,LOW(0)
00014f 83ef      	STD  Y+7,R30
                 ; 0000 00E7         b = 1;
000150 e0e1      	LDI  R30,LOW(1)
000151 83ee      	STD  Y+6,R30
                 ; 0000 00E8         c = 1;
000152 83ed      	STD  Y+5,R30
                 ; 0000 00E9         d = 0;
000153 e0e0      	LDI  R30,LOW(0)
000154 83ec      	STD  Y+4,R30
                 ; 0000 00EA         e = 0;
000155 83eb      	STD  Y+3,R30
                 ; 0000 00EB         f = 1;
000156 e0e1      	LDI  R30,LOW(1)
000157 83ea      	STD  Y+2,R30
                 ; 0000 00EC         g = 1;
000158 c265      	RJMP _0x211
                 ; 0000 00ED         }
                 ; 0000 00EE         else if(input=='5'){
                 _0x6A:
000159 81a8      	LD   R26,Y
00015a 33a5      	CPI  R26,LOW(0x35)
00015b f461      	BRNE _0x6C
                 ; 0000 00EF         a = 1;
00015c e0e1      	LDI  R30,LOW(1)
00015d 83ef      	STD  Y+7,R30
                 ; 0000 00F0         b = 0;
00015e e0e0      	LDI  R30,LOW(0)
00015f 83ee      	STD  Y+6,R30
                 ; 0000 00F1         c = 1;
000160 e0e1      	LDI  R30,LOW(1)
000161 83ed      	STD  Y+5,R30
                 ; 0000 00F2         d = 1;
000162 83ec      	STD  Y+4,R30
                 ; 0000 00F3         e = 0;
000163 e0e0      	LDI  R30,LOW(0)
000164 83eb      	STD  Y+3,R30
                 ; 0000 00F4         f = 1;
000165 e0e1      	LDI  R30,LOW(1)
000166 83ea      	STD  Y+2,R30
                 ; 0000 00F5         g = 1;
000167 c256      	RJMP _0x211
                 ; 0000 00F6         }
                 ; 0000 00F7         else if(input=='6'){
                 _0x6C:
000168 81a8      	LD   R26,Y
000169 33a6      	CPI  R26,LOW(0x36)
00016a f451      	BRNE _0x6E
                 ; 0000 00F8         a = 1;
00016b e0e1      	LDI  R30,LOW(1)
00016c 83ef      	STD  Y+7,R30
                 ; 0000 00F9         b = 0;
00016d e0e0      	LDI  R30,LOW(0)
00016e 83ee      	STD  Y+6,R30
                 ; 0000 00FA         c = 1;
00016f e0e1      	LDI  R30,LOW(1)
000170 83ed      	STD  Y+5,R30
                 ; 0000 00FB         d = 1;
000171 83ec      	STD  Y+4,R30
                 ; 0000 00FC         e = 1;
000172 83eb      	STD  Y+3,R30
                 ; 0000 00FD         f = 1;
000173 83ea      	STD  Y+2,R30
                 ; 0000 00FE         g = 1;
000174 c249      	RJMP _0x211
                 ; 0000 00FF         }
                 ; 0000 0100         else if(input=='7'){
                 _0x6E:
000175 81a8      	LD   R26,Y
000176 33a7      	CPI  R26,LOW(0x37)
000177 f431      	BRNE _0x70
                 ; 0000 0101         a = 1;
000178 e0e1      	LDI  R30,LOW(1)
000179 83ef      	STD  Y+7,R30
                 ; 0000 0102         b = 1;
00017a 83ee      	STD  Y+6,R30
                 ; 0000 0103         c = 1;
00017b 83ed      	STD  Y+5,R30
                 ; 0000 0104         d = 0;
00017c e0e0      	LDI  R30,LOW(0)
00017d c23a      	RJMP _0x210
                 ; 0000 0105         e = 0;
                 ; 0000 0106         f = 0;
                 ; 0000 0107         g = 0;
                 ; 0000 0108         }
                 ; 0000 0109         else if(input=='8'){
                 _0x70:
00017e 81a8      	LD   R26,Y
00017f 33a8      	CPI  R26,LOW(0x38)
000180 f441      	BRNE _0x72
                 ; 0000 010A         a = 1;
000181 e0e1      	LDI  R30,LOW(1)
000182 83ef      	STD  Y+7,R30
                 ; 0000 010B         b = 1;
000183 83ee      	STD  Y+6,R30
                 ; 0000 010C         c = 1;
000184 83ed      	STD  Y+5,R30
                 ; 0000 010D         d = 1;
000185 83ec      	STD  Y+4,R30
                 ; 0000 010E         e = 1;
000186 83eb      	STD  Y+3,R30
                 ; 0000 010F         f = 1;
000187 83ea      	STD  Y+2,R30
                 ; 0000 0110         g = 1;
000188 c235      	RJMP _0x211
                 ; 0000 0111         }
                 ; 0000 0112         else if(input=='9'){
                 _0x72:
000189 81a8      	LD   R26,Y
00018a 33a9      	CPI  R26,LOW(0x39)
00018b f451      	BRNE _0x74
                 ; 0000 0113         a = 1;
00018c e0e1      	LDI  R30,LOW(1)
00018d 83ef      	STD  Y+7,R30
                 ; 0000 0114         b = 1;
00018e 83ee      	STD  Y+6,R30
                 ; 0000 0115         c = 1;
00018f 83ed      	STD  Y+5,R30
                 ; 0000 0116         d = 1;
000190 83ec      	STD  Y+4,R30
                 ; 0000 0117         e = 0;
000191 e0e0      	LDI  R30,LOW(0)
000192 83eb      	STD  Y+3,R30
                 ; 0000 0118         f = 1;
000193 e0e1      	LDI  R30,LOW(1)
000194 83ea      	STD  Y+2,R30
                 ; 0000 0119         g = 1;
000195 c228      	RJMP _0x211
                 ; 0000 011A         }
                 ; 0000 011B         else if(input=='a'){
                 _0x74:
000196 81a8      	LD   R26,Y
000197 36a1      	CPI  R26,LOW(0x61)
000198 f429      	BRNE _0x76
                 ; 0000 011C         a = 0;
000199 e0e0      	LDI  R30,LOW(0)
00019a 83ef      	STD  Y+7,R30
                 ; 0000 011D         b = 0;
00019b 83ee      	STD  Y+6,R30
                 ; 0000 011E         c = 0;
00019c 83ed      	STD  Y+5,R30
                 ; 0000 011F         d = 0;
00019d c21a      	RJMP _0x210
                 ; 0000 0120         e = 0;
                 ; 0000 0121         f = 0;
                 ; 0000 0122         g = 0;
                 ; 0000 0123         }
                 ; 0000 0124         else if(input=='A'){
                 _0x76:
00019e 81a8      	LD   R26,Y
00019f 34a1      	CPI  R26,LOW(0x41)
0001a0 f451      	BRNE _0x78
                 ; 0000 0125         a = 1;
0001a1 e0e1      	LDI  R30,LOW(1)
0001a2 83ef      	STD  Y+7,R30
                 ; 0000 0126         b = 1;
0001a3 83ee      	STD  Y+6,R30
                 ; 0000 0127         c = 1;
0001a4 83ed      	STD  Y+5,R30
                 ; 0000 0128         d = 0;
0001a5 e0e0      	LDI  R30,LOW(0)
0001a6 83ec      	STD  Y+4,R30
                 ; 0000 0129         e = 1;
0001a7 e0e1      	LDI  R30,LOW(1)
0001a8 83eb      	STD  Y+3,R30
                 ; 0000 012A         f = 1;
0001a9 83ea      	STD  Y+2,R30
                 ; 0000 012B         g = 1;
0001aa c213      	RJMP _0x211
                 ; 0000 012C         }
                 ; 0000 012D         else if(input=='b'){
                 _0x78:
0001ab 81a8      	LD   R26,Y
0001ac 36a2      	CPI  R26,LOW(0x62)
0001ad f449      	BRNE _0x7A
                 ; 0000 012E         a = 0;
0001ae e0e0      	LDI  R30,LOW(0)
0001af 83ef      	STD  Y+7,R30
                 ; 0000 012F         b = 0;
0001b0 83ee      	STD  Y+6,R30
                 ; 0000 0130         c = 1;
0001b1 e0e1      	LDI  R30,LOW(1)
0001b2 83ed      	STD  Y+5,R30
                 ; 0000 0131         d = 1;
0001b3 83ec      	STD  Y+4,R30
                 ; 0000 0132         e = 1;
0001b4 83eb      	STD  Y+3,R30
                 ; 0000 0133         f = 1;
0001b5 83ea      	STD  Y+2,R30
                 ; 0000 0134         g = 1;
0001b6 c207      	RJMP _0x211
                 ; 0000 0135         }
                 ; 0000 0136         else if(input=='B'){
                 _0x7A:
0001b7 81a8      	LD   R26,Y
0001b8 34a2      	CPI  R26,LOW(0x42)
0001b9 f429      	BRNE _0x7C
                 ; 0000 0137         a = 0;
0001ba e0e0      	LDI  R30,LOW(0)
0001bb 83ef      	STD  Y+7,R30
                 ; 0000 0138         b = 0;
0001bc 83ee      	STD  Y+6,R30
                 ; 0000 0139         c = 0;
0001bd 83ed      	STD  Y+5,R30
                 ; 0000 013A         d = 0;
0001be c1f9      	RJMP _0x210
                 ; 0000 013B         e = 0;
                 ; 0000 013C         f = 0;
                 ; 0000 013D         g = 0;
                 ; 0000 013E         }
                 ; 0000 013F         else if(input=='c'){
                 _0x7C:
0001bf 81a8      	LD   R26,Y
0001c0 36a3      	CPI  R26,LOW(0x63)
0001c1 f459      	BRNE _0x7E
                 ; 0000 0140         a = 0;
0001c2 e0e0      	LDI  R30,LOW(0)
0001c3 83ef      	STD  Y+7,R30
                 ; 0000 0141         b = 0;
0001c4 83ee      	STD  Y+6,R30
                 ; 0000 0142         c = 0;
0001c5 83ed      	STD  Y+5,R30
                 ; 0000 0143         d = 1;
0001c6 e0e1      	LDI  R30,LOW(1)
0001c7 83ec      	STD  Y+4,R30
                 ; 0000 0144         e = 1;
0001c8 83eb      	STD  Y+3,R30
                 ; 0000 0145         f = 0;
0001c9 e0e0      	LDI  R30,LOW(0)
0001ca 83ea      	STD  Y+2,R30
                 ; 0000 0146         g = 1;
0001cb e0e1      	LDI  R30,LOW(1)
0001cc c1f1      	RJMP _0x211
                 ; 0000 0147         }
                 ; 0000 0148         else if(input=='C'){
                 _0x7E:
0001cd 81a8      	LD   R26,Y
0001ce 34a3      	CPI  R26,LOW(0x43)
0001cf f451      	BRNE _0x80
                 ; 0000 0149         a = 1;
0001d0 e0e1      	LDI  R30,LOW(1)
0001d1 83ef      	STD  Y+7,R30
                 ; 0000 014A         b = 0;
0001d2 e0e0      	LDI  R30,LOW(0)
0001d3 83ee      	STD  Y+6,R30
                 ; 0000 014B         c = 0;
0001d4 83ed      	STD  Y+5,R30
                 ; 0000 014C         d = 1;
0001d5 e0e1      	LDI  R30,LOW(1)
0001d6 83ec      	STD  Y+4,R30
                 ; 0000 014D         e = 1;
0001d7 83eb      	STD  Y+3,R30
                 ; 0000 014E         f = 1;
0001d8 83ea      	STD  Y+2,R30
                 ; 0000 014F         g = 1;
0001d9 c1e4      	RJMP _0x211
                 ; 0000 0150         }
                 ; 0000 0151         else if(input=='d'){
                 _0x80:
0001da 81a8      	LD   R26,Y
0001db 36a4      	CPI  R26,LOW(0x64)
0001dc f459      	BRNE _0x82
                 ; 0000 0152         a = 0;
0001dd e0e0      	LDI  R30,LOW(0)
0001de 83ef      	STD  Y+7,R30
                 ; 0000 0153         b = 1;
0001df e0e1      	LDI  R30,LOW(1)
0001e0 83ee      	STD  Y+6,R30
                 ; 0000 0154         c = 1;
0001e1 83ed      	STD  Y+5,R30
                 ; 0000 0155         d = 1;
0001e2 83ec      	STD  Y+4,R30
                 ; 0000 0156         e = 1;
0001e3 83eb      	STD  Y+3,R30
                 ; 0000 0157         f = 0;
0001e4 e0e0      	LDI  R30,LOW(0)
0001e5 83ea      	STD  Y+2,R30
                 ; 0000 0158         g = 1;
0001e6 e0e1      	LDI  R30,LOW(1)
0001e7 c1d6      	RJMP _0x211
                 ; 0000 0159         }
                 ; 0000 015A         else if(input=='D'){
                 _0x82:
0001e8 81a8      	LD   R26,Y
0001e9 34a4      	CPI  R26,LOW(0x44)
0001ea f429      	BRNE _0x84
                 ; 0000 015B         a = 0;
0001eb e0e0      	LDI  R30,LOW(0)
0001ec 83ef      	STD  Y+7,R30
                 ; 0000 015C         b = 0;
0001ed 83ee      	STD  Y+6,R30
                 ; 0000 015D         c = 0;
0001ee 83ed      	STD  Y+5,R30
                 ; 0000 015E         d = 0;
0001ef c1c8      	RJMP _0x210
                 ; 0000 015F         e = 0;
                 ; 0000 0160         f = 0;
                 ; 0000 0161         g = 0;
                 ; 0000 0162         }
                 ; 0000 0163         else if(input=='e'){
                 _0x84:
0001f0 81a8      	LD   R26,Y
0001f1 36a5      	CPI  R26,LOW(0x65)
0001f2 f429      	BRNE _0x86
                 ; 0000 0164         a = 0;
0001f3 e0e0      	LDI  R30,LOW(0)
0001f4 83ef      	STD  Y+7,R30
                 ; 0000 0165         b = 0;
0001f5 83ee      	STD  Y+6,R30
                 ; 0000 0166         c = 0;
0001f6 83ed      	STD  Y+5,R30
                 ; 0000 0167         d = 0;
0001f7 c1c0      	RJMP _0x210
                 ; 0000 0168         e = 0;
                 ; 0000 0169         f = 0;
                 ; 0000 016A         g = 0;
                 ; 0000 016B         }
                 ; 0000 016C         else if(input=='E'){
                 _0x86:
0001f8 81a8      	LD   R26,Y
0001f9 34a5      	CPI  R26,LOW(0x45)
0001fa f451      	BRNE _0x88
                 ; 0000 016D         a = 1;
0001fb e0e1      	LDI  R30,LOW(1)
0001fc 83ef      	STD  Y+7,R30
                 ; 0000 016E         b = 0;
0001fd e0e0      	LDI  R30,LOW(0)
0001fe 83ee      	STD  Y+6,R30
                 ; 0000 016F         c = 0;
0001ff 83ed      	STD  Y+5,R30
                 ; 0000 0170         d = 1;
000200 e0e1      	LDI  R30,LOW(1)
000201 83ec      	STD  Y+4,R30
                 ; 0000 0171         e = 1;
000202 83eb      	STD  Y+3,R30
                 ; 0000 0172         f = 1;
000203 83ea      	STD  Y+2,R30
                 ; 0000 0173         g = 1;
000204 c1b9      	RJMP _0x211
                 ; 0000 0174         }
                 ; 0000 0175         else if(input=='f'){
                 _0x88:
000205 81a8      	LD   R26,Y
000206 36a6      	CPI  R26,LOW(0x66)
000207 f429      	BRNE _0x8A
                 ; 0000 0176         a = 0;
000208 e0e0      	LDI  R30,LOW(0)
000209 83ef      	STD  Y+7,R30
                 ; 0000 0177         b = 0;
00020a 83ee      	STD  Y+6,R30
                 ; 0000 0178         c = 0;
00020b 83ed      	STD  Y+5,R30
                 ; 0000 0179         d = 0;
00020c c1ab      	RJMP _0x210
                 ; 0000 017A         e = 0;
                 ; 0000 017B         f = 0;
                 ; 0000 017C         g = 0;
                 ; 0000 017D         }
                 ; 0000 017E         else if(input=='F'){
                 _0x8A:
00020d 81a8      	LD   R26,Y
00020e 34a6      	CPI  R26,LOW(0x46)
00020f f451      	BRNE _0x8C
                 ; 0000 017F         a = 1;
000210 e0e1      	LDI  R30,LOW(1)
000211 83ef      	STD  Y+7,R30
                 ; 0000 0180         b = 0;
000212 e0e0      	LDI  R30,LOW(0)
000213 83ee      	STD  Y+6,R30
                 ; 0000 0181         c = 0;
000214 83ed      	STD  Y+5,R30
                 ; 0000 0182         d = 0;
000215 83ec      	STD  Y+4,R30
                 ; 0000 0183         e = 1;
000216 e0e1      	LDI  R30,LOW(1)
000217 83eb      	STD  Y+3,R30
                 ; 0000 0184         f = 1;
000218 83ea      	STD  Y+2,R30
                 ; 0000 0185         g = 1;
000219 c1a4      	RJMP _0x211
                 ; 0000 0186         }
                 ; 0000 0187         else if(input=='g'){
                 _0x8C:
00021a 81a8      	LD   R26,Y
00021b 36a7      	CPI  R26,LOW(0x67)
00021c f429      	BRNE _0x8E
                 ; 0000 0188         a = 0;
00021d e0e0      	LDI  R30,LOW(0)
00021e 83ef      	STD  Y+7,R30
                 ; 0000 0189         b = 0;
00021f 83ee      	STD  Y+6,R30
                 ; 0000 018A         c = 0;
000220 83ed      	STD  Y+5,R30
                 ; 0000 018B         d = 0;
000221 c196      	RJMP _0x210
                 ; 0000 018C         e = 0;
                 ; 0000 018D         f = 0;
                 ; 0000 018E         g = 0;
                 ; 0000 018F         }
                 ; 0000 0190         else if(input=='G'){
                 _0x8E:
000222 81a8      	LD   R26,Y
000223 34a7      	CPI  R26,LOW(0x47)
000224 f449      	BRNE _0x90
                 ; 0000 0191         a = 1;
000225 e0e1      	LDI  R30,LOW(1)
000226 83ef      	STD  Y+7,R30
                 ; 0000 0192         b = 0;
000227 e0e0      	LDI  R30,LOW(0)
000228 83ee      	STD  Y+6,R30
                 ; 0000 0193         c = 1;
000229 e0e1      	LDI  R30,LOW(1)
00022a 83ed      	STD  Y+5,R30
                 ; 0000 0194         d = 1;
00022b 83ec      	STD  Y+4,R30
                 ; 0000 0195         e = 1;
00022c 83eb      	STD  Y+3,R30
                 ; 0000 0196         f = 1;
00022d c18e      	RJMP _0x20F
                 ; 0000 0197         g = 0;
                 ; 0000 0198         }
                 ; 0000 0199         else if(input=='h'){
                 _0x90:
00022e 81a8      	LD   R26,Y
00022f 36a8      	CPI  R26,LOW(0x68)
000230 f459      	BRNE _0x92
                 ; 0000 019A         a = 0;
000231 e0e0      	LDI  R30,LOW(0)
000232 83ef      	STD  Y+7,R30
                 ; 0000 019B         b = 0;
000233 83ee      	STD  Y+6,R30
                 ; 0000 019C         c = 1;
000234 e0e1      	LDI  R30,LOW(1)
000235 83ed      	STD  Y+5,R30
                 ; 0000 019D         d = 0;
000236 e0e0      	LDI  R30,LOW(0)
000237 83ec      	STD  Y+4,R30
                 ; 0000 019E         e = 1;
000238 e0e1      	LDI  R30,LOW(1)
000239 83eb      	STD  Y+3,R30
                 ; 0000 019F         f = 1;
00023a 83ea      	STD  Y+2,R30
                 ; 0000 01A0         g = 1;
00023b c182      	RJMP _0x211
                 ; 0000 01A1         }
                 ; 0000 01A2         else if(input=='H'){
                 _0x92:
00023c 81a8      	LD   R26,Y
00023d 34a8      	CPI  R26,LOW(0x48)
00023e f459      	BRNE _0x94
                 ; 0000 01A3         a = 0;
00023f e0e0      	LDI  R30,LOW(0)
000240 83ef      	STD  Y+7,R30
                 ; 0000 01A4         b = 1;
000241 e0e1      	LDI  R30,LOW(1)
000242 83ee      	STD  Y+6,R30
                 ; 0000 01A5         c = 1;
000243 83ed      	STD  Y+5,R30
                 ; 0000 01A6         d = 0;
000244 e0e0      	LDI  R30,LOW(0)
000245 83ec      	STD  Y+4,R30
                 ; 0000 01A7         e = 1;
000246 e0e1      	LDI  R30,LOW(1)
000247 83eb      	STD  Y+3,R30
                 ; 0000 01A8         f = 1;
000248 83ea      	STD  Y+2,R30
                 ; 0000 01A9         g = 1;
000249 c174      	RJMP _0x211
                 ; 0000 01AA         }
                 ; 0000 01AB         else if(input=='i'){
                 _0x94:
00024a 81a8      	LD   R26,Y
00024b 36a9      	CPI  R26,LOW(0x69)
00024c f439      	BRNE _0x96
                 ; 0000 01AC         a = 0;
00024d e0e0      	LDI  R30,LOW(0)
00024e 83ef      	STD  Y+7,R30
                 ; 0000 01AD         b = 0;
00024f 83ee      	STD  Y+6,R30
                 ; 0000 01AE         c = 1;
000250 e0e1      	LDI  R30,LOW(1)
000251 83ed      	STD  Y+5,R30
                 ; 0000 01AF         d = 0;
000252 e0e0      	LDI  R30,LOW(0)
000253 c164      	RJMP _0x210
                 ; 0000 01B0         e = 0;
                 ; 0000 01B1         f = 0;
                 ; 0000 01B2         g = 0;
                 ; 0000 01B3         }
                 ; 0000 01B4         else if(input=='I'){
                 _0x96:
000254 81a8      	LD   R26,Y
000255 34a9      	CPI  R26,LOW(0x49)
000256 f439      	BRNE _0x98
                 ; 0000 01B5         a = 0;
000257 e0e0      	LDI  R30,LOW(0)
000258 83ef      	STD  Y+7,R30
                 ; 0000 01B6         b = 1;
000259 e0e1      	LDI  R30,LOW(1)
00025a 83ee      	STD  Y+6,R30
                 ; 0000 01B7         c = 1;
00025b 83ed      	STD  Y+5,R30
                 ; 0000 01B8         d = 0;
00025c e0e0      	LDI  R30,LOW(0)
00025d c15a      	RJMP _0x210
                 ; 0000 01B9         e = 0;
                 ; 0000 01BA         f = 0;
                 ; 0000 01BB         g = 0;
                 ; 0000 01BC         }
                 ; 0000 01BD         else if(input=='j'){
                 _0x98:
00025e 81a8      	LD   R26,Y
00025f 36aa      	CPI  R26,LOW(0x6A)
000260 f429      	BRNE _0x9A
                 ; 0000 01BE         a = 0;
000261 e0e0      	LDI  R30,LOW(0)
000262 83ef      	STD  Y+7,R30
                 ; 0000 01BF         b = 0;
000263 83ee      	STD  Y+6,R30
                 ; 0000 01C0         c = 0;
000264 83ed      	STD  Y+5,R30
                 ; 0000 01C1         d = 0;
000265 c152      	RJMP _0x210
                 ; 0000 01C2         e = 0;
                 ; 0000 01C3         f = 0;
                 ; 0000 01C4         g = 0;
                 ; 0000 01C5         }
                 ; 0000 01C6         else if(input=='J'){
                 _0x9A:
000266 81a8      	LD   R26,Y
000267 34aa      	CPI  R26,LOW(0x4A)
000268 f429      	BRNE _0x9C
                 ; 0000 01C7         a = 0;
000269 e0e0      	LDI  R30,LOW(0)
00026a 83ef      	STD  Y+7,R30
                 ; 0000 01C8         b = 1;
00026b e0e1      	LDI  R30,LOW(1)
00026c 83ee      	STD  Y+6,R30
                 ; 0000 01C9         c = 1;
00026d c148      	RJMP _0x212
                 ; 0000 01CA         d = 1;
                 ; 0000 01CB         e = 0;
                 ; 0000 01CC         f = 0;
                 ; 0000 01CD         g = 0;
                 ; 0000 01CE         }
                 ; 0000 01CF         else if(input=='k'){
                 _0x9C:
00026e 81a8      	LD   R26,Y
00026f 36ab      	CPI  R26,LOW(0x6B)
000270 f429      	BRNE _0x9E
                 ; 0000 01D0         a = 0;
000271 e0e0      	LDI  R30,LOW(0)
000272 83ef      	STD  Y+7,R30
                 ; 0000 01D1         b = 0;
000273 83ee      	STD  Y+6,R30
                 ; 0000 01D2         c = 0;
000274 83ed      	STD  Y+5,R30
                 ; 0000 01D3         d = 0;
000275 c142      	RJMP _0x210
                 ; 0000 01D4         e = 0;
                 ; 0000 01D5         f = 0;
                 ; 0000 01D6         g = 0;
                 ; 0000 01D7         }
                 ; 0000 01D8         else if(input=='K'){
                 _0x9E:
000276 81a8      	LD   R26,Y
000277 34ab      	CPI  R26,LOW(0x4B)
000278 f429      	BRNE _0xA0
                 ; 0000 01D9         a = 0;
000279 e0e0      	LDI  R30,LOW(0)
00027a 83ef      	STD  Y+7,R30
                 ; 0000 01DA         b = 0;
00027b 83ee      	STD  Y+6,R30
                 ; 0000 01DB         c = 0;
00027c 83ed      	STD  Y+5,R30
                 ; 0000 01DC         d = 0;
00027d c13a      	RJMP _0x210
                 ; 0000 01DD         e = 0;
                 ; 0000 01DE         f = 0;
                 ; 0000 01DF         g = 0;
                 ; 0000 01E0         }
                 ; 0000 01E1         else if(input=='l'){
                 _0xA0:
00027e 81a8      	LD   R26,Y
00027f 36ac      	CPI  R26,LOW(0x6C)
000280 f429      	BRNE _0xA2
                 ; 0000 01E2         a = 0;
000281 e0e0      	LDI  R30,LOW(0)
000282 83ef      	STD  Y+7,R30
                 ; 0000 01E3         b = 0;
000283 83ee      	STD  Y+6,R30
                 ; 0000 01E4         c = 0;
000284 83ed      	STD  Y+5,R30
                 ; 0000 01E5         d = 0;
000285 c132      	RJMP _0x210
                 ; 0000 01E6         e = 0;
                 ; 0000 01E7         f = 0;
                 ; 0000 01E8         g = 0;
                 ; 0000 01E9         }
                 ; 0000 01EA         else if(input=='L'){
                 _0xA2:
000286 81a8      	LD   R26,Y
000287 34ac      	CPI  R26,LOW(0x4C)
000288 f441      	BRNE _0xA4
                 ; 0000 01EB         a = 0;
000289 e0e0      	LDI  R30,LOW(0)
00028a 83ef      	STD  Y+7,R30
                 ; 0000 01EC         b = 0;
00028b 83ee      	STD  Y+6,R30
                 ; 0000 01ED         c = 0;
00028c 83ed      	STD  Y+5,R30
                 ; 0000 01EE         d = 1;
00028d e0e1      	LDI  R30,LOW(1)
00028e 83ec      	STD  Y+4,R30
                 ; 0000 01EF         e = 1;
00028f 83eb      	STD  Y+3,R30
                 ; 0000 01F0         f = 1;
000290 c12b      	RJMP _0x20F
                 ; 0000 01F1         g = 0;
                 ; 0000 01F2         }
                 ; 0000 01F3         else if(input=='m'){
                 _0xA4:
000291 81a8      	LD   R26,Y
000292 36ad      	CPI  R26,LOW(0x6D)
000293 f429      	BRNE _0xA6
                 ; 0000 01F4         a = 0;
000294 e0e0      	LDI  R30,LOW(0)
000295 83ef      	STD  Y+7,R30
                 ; 0000 01F5         b = 0;
000296 83ee      	STD  Y+6,R30
                 ; 0000 01F6         c = 0;
000297 83ed      	STD  Y+5,R30
                 ; 0000 01F7         d = 0;
000298 c11f      	RJMP _0x210
                 ; 0000 01F8         e = 0;
                 ; 0000 01F9         f = 0;
                 ; 0000 01FA         g = 0;
                 ; 0000 01FB         }
                 ; 0000 01FC         else if(input=='M'){
                 _0xA6:
000299 81a8      	LD   R26,Y
00029a 34ad      	CPI  R26,LOW(0x4D)
00029b f429      	BRNE _0xA8
                 ; 0000 01FD         a = 0;
00029c e0e0      	LDI  R30,LOW(0)
00029d 83ef      	STD  Y+7,R30
                 ; 0000 01FE         b = 0;
00029e 83ee      	STD  Y+6,R30
                 ; 0000 01FF         c = 0;
00029f 83ed      	STD  Y+5,R30
                 ; 0000 0200         d = 0;
0002a0 c117      	RJMP _0x210
                 ; 0000 0201         e = 0;
                 ; 0000 0202         f = 0;
                 ; 0000 0203         g = 0;
                 ; 0000 0204         }
                 ; 0000 0205         else if(input=='n'){
                 _0xA8:
0002a1 81a8      	LD   R26,Y
0002a2 36ae      	CPI  R26,LOW(0x6E)
0002a3 f469      	BRNE _0xAA
                 ; 0000 0206         a = 0;
0002a4 e0e0      	LDI  R30,LOW(0)
0002a5 83ef      	STD  Y+7,R30
                 ; 0000 0207         b = 0;
0002a6 83ee      	STD  Y+6,R30
                 ; 0000 0208         c = 1;
0002a7 e0e1      	LDI  R30,LOW(1)
0002a8 83ed      	STD  Y+5,R30
                 ; 0000 0209         d = 0;
0002a9 e0e0      	LDI  R30,LOW(0)
0002aa 83ec      	STD  Y+4,R30
                 ; 0000 020A         e = 1;
0002ab e0e1      	LDI  R30,LOW(1)
0002ac 83eb      	STD  Y+3,R30
                 ; 0000 020B         f = 0;
0002ad e0e0      	LDI  R30,LOW(0)
0002ae 83ea      	STD  Y+2,R30
                 ; 0000 020C         g = 1;
0002af e0e1      	LDI  R30,LOW(1)
0002b0 c10d      	RJMP _0x211
                 ; 0000 020D         }
                 ; 0000 020E         else if(input=='N'){
                 _0xAA:
0002b1 81a8      	LD   R26,Y
0002b2 34ae      	CPI  R26,LOW(0x4E)
0002b3 f429      	BRNE _0xAC
                 ; 0000 020F         a = 0;
0002b4 e0e0      	LDI  R30,LOW(0)
0002b5 83ef      	STD  Y+7,R30
                 ; 0000 0210         b = 0;
0002b6 83ee      	STD  Y+6,R30
                 ; 0000 0211         c = 0;
0002b7 83ed      	STD  Y+5,R30
                 ; 0000 0212         d = 0;
0002b8 c0ff      	RJMP _0x210
                 ; 0000 0213         e = 0;
                 ; 0000 0214         f = 0;
                 ; 0000 0215         g = 0;
                 ; 0000 0216         }
                 ; 0000 0217         else if(input=='o'){
                 _0xAC:
0002b9 81a8      	LD   R26,Y
0002ba 36af      	CPI  R26,LOW(0x6F)
0002bb f459      	BRNE _0xAE
                 ; 0000 0218         a = 0;
0002bc e0e0      	LDI  R30,LOW(0)
0002bd 83ef      	STD  Y+7,R30
                 ; 0000 0219         b = 0;
0002be 83ee      	STD  Y+6,R30
                 ; 0000 021A         c = 1;
0002bf e0e1      	LDI  R30,LOW(1)
0002c0 83ed      	STD  Y+5,R30
                 ; 0000 021B         d = 1;
0002c1 83ec      	STD  Y+4,R30
                 ; 0000 021C         e = 1;
0002c2 83eb      	STD  Y+3,R30
                 ; 0000 021D         f = 0;
0002c3 e0e0      	LDI  R30,LOW(0)
0002c4 83ea      	STD  Y+2,R30
                 ; 0000 021E         g = 1;
0002c5 e0e1      	LDI  R30,LOW(1)
0002c6 c0f7      	RJMP _0x211
                 ; 0000 021F         }
                 ; 0000 0220         else if(input=='O'){
                 _0xAE:
0002c7 81a8      	LD   R26,Y
0002c8 34af      	CPI  R26,LOW(0x4F)
0002c9 f439      	BRNE _0xB0
                 ; 0000 0221         a = 1;
0002ca e0e1      	LDI  R30,LOW(1)
0002cb 83ef      	STD  Y+7,R30
                 ; 0000 0222         b = 1;
0002cc 83ee      	STD  Y+6,R30
                 ; 0000 0223         c = 1;
0002cd 83ed      	STD  Y+5,R30
                 ; 0000 0224         d = 1;
0002ce 83ec      	STD  Y+4,R30
                 ; 0000 0225         e = 1;
0002cf 83eb      	STD  Y+3,R30
                 ; 0000 0226         f = 1;
0002d0 c0eb      	RJMP _0x20F
                 ; 0000 0227         g = 0;
                 ; 0000 0228         }
                 ; 0000 0229         else if(input=='p'){
                 _0xB0:
0002d1 81a8      	LD   R26,Y
0002d2 37a0      	CPI  R26,LOW(0x70)
0002d3 f429      	BRNE _0xB2
                 ; 0000 022A         a = 0;
0002d4 e0e0      	LDI  R30,LOW(0)
0002d5 83ef      	STD  Y+7,R30
                 ; 0000 022B         b = 0;
0002d6 83ee      	STD  Y+6,R30
                 ; 0000 022C         c = 0;
0002d7 83ed      	STD  Y+5,R30
                 ; 0000 022D         d = 0;
0002d8 c0df      	RJMP _0x210
                 ; 0000 022E         e = 0;
                 ; 0000 022F         f = 0;
                 ; 0000 0230         g = 0;
                 ; 0000 0231         }
                 ; 0000 0232         else if(input=='P'){
                 _0xB2:
0002d9 81a8      	LD   R26,Y
0002da 35a0      	CPI  R26,LOW(0x50)
0002db f451      	BRNE _0xB4
                 ; 0000 0233         a = 1;
0002dc e0e1      	LDI  R30,LOW(1)
0002dd 83ef      	STD  Y+7,R30
                 ; 0000 0234         b = 1;
0002de 83ee      	STD  Y+6,R30
                 ; 0000 0235         c = 0;
0002df e0e0      	LDI  R30,LOW(0)
0002e0 83ed      	STD  Y+5,R30
                 ; 0000 0236         d = 0;
0002e1 83ec      	STD  Y+4,R30
                 ; 0000 0237         e = 1;
0002e2 e0e1      	LDI  R30,LOW(1)
0002e3 83eb      	STD  Y+3,R30
                 ; 0000 0238         f = 1;
0002e4 83ea      	STD  Y+2,R30
                 ; 0000 0239         g = 1;
0002e5 c0d8      	RJMP _0x211
                 ; 0000 023A         }
                 ; 0000 023B         else if(input=='q'){
                 _0xB4:
0002e6 81a8      	LD   R26,Y
0002e7 37a1      	CPI  R26,LOW(0x71)
0002e8 f429      	BRNE _0xB6
                 ; 0000 023C         a = 0;
0002e9 e0e0      	LDI  R30,LOW(0)
0002ea 83ef      	STD  Y+7,R30
                 ; 0000 023D         b = 0;
0002eb 83ee      	STD  Y+6,R30
                 ; 0000 023E         c = 0;
0002ec 83ed      	STD  Y+5,R30
                 ; 0000 023F         d = 0;
0002ed c0ca      	RJMP _0x210
                 ; 0000 0240         e = 0;
                 ; 0000 0241         f = 0;
                 ; 0000 0242         g = 0;
                 ; 0000 0243         }
                 ; 0000 0244         else if(input=='Q'){
                 _0xB6:
0002ee 81a8      	LD   R26,Y
0002ef 35a1      	CPI  R26,LOW(0x51)
0002f0 f429      	BRNE _0xB8
                 ; 0000 0245         a = 0;
0002f1 e0e0      	LDI  R30,LOW(0)
0002f2 83ef      	STD  Y+7,R30
                 ; 0000 0246         b = 0;
0002f3 83ee      	STD  Y+6,R30
                 ; 0000 0247         c = 0;
0002f4 83ed      	STD  Y+5,R30
                 ; 0000 0248         d = 0;
0002f5 c0c2      	RJMP _0x210
                 ; 0000 0249         e = 0;
                 ; 0000 024A         f = 0;
                 ; 0000 024B         g = 0;
                 ; 0000 024C         }
                 ; 0000 024D         else if(input=='r'){
                 _0xB8:
0002f6 81a8      	LD   R26,Y
0002f7 37a2      	CPI  R26,LOW(0x72)
0002f8 f459      	BRNE _0xBA
                 ; 0000 024E         a = 0;
0002f9 e0e0      	LDI  R30,LOW(0)
0002fa 83ef      	STD  Y+7,R30
                 ; 0000 024F         b = 0;
0002fb 83ee      	STD  Y+6,R30
                 ; 0000 0250         c = 0;
0002fc 83ed      	STD  Y+5,R30
                 ; 0000 0251         d = 0;
0002fd 83ec      	STD  Y+4,R30
                 ; 0000 0252         e = 1;
0002fe e0e1      	LDI  R30,LOW(1)
0002ff 83eb      	STD  Y+3,R30
                 ; 0000 0253         f = 0;
000300 e0e0      	LDI  R30,LOW(0)
000301 83ea      	STD  Y+2,R30
                 ; 0000 0254         g = 1;
000302 e0e1      	LDI  R30,LOW(1)
000303 c0ba      	RJMP _0x211
                 ; 0000 0255         }
                 ; 0000 0256         else if(input=='R'){
                 _0xBA:
000304 81a8      	LD   R26,Y
000305 35a2      	CPI  R26,LOW(0x52)
000306 f429      	BRNE _0xBC
                 ; 0000 0257         a = 0;
000307 e0e0      	LDI  R30,LOW(0)
000308 83ef      	STD  Y+7,R30
                 ; 0000 0258         b = 0;
000309 83ee      	STD  Y+6,R30
                 ; 0000 0259         c = 0;
00030a 83ed      	STD  Y+5,R30
                 ; 0000 025A         d = 0;
00030b c0ac      	RJMP _0x210
                 ; 0000 025B         e = 0;
                 ; 0000 025C         f = 0;
                 ; 0000 025D         g = 0;
                 ; 0000 025E         }
                 ; 0000 025F         else if(input=='s'){
                 _0xBC:
00030c 81a8      	LD   R26,Y
00030d 37a3      	CPI  R26,LOW(0x73)
00030e f429      	BRNE _0xBE
                 ; 0000 0260         a = 0;
00030f e0e0      	LDI  R30,LOW(0)
000310 83ef      	STD  Y+7,R30
                 ; 0000 0261         b = 0;
000311 83ee      	STD  Y+6,R30
                 ; 0000 0262         c = 0;
000312 83ed      	STD  Y+5,R30
                 ; 0000 0263         d = 0;
000313 c0a4      	RJMP _0x210
                 ; 0000 0264         e = 0;
                 ; 0000 0265         f = 0;
                 ; 0000 0266         g = 0;
                 ; 0000 0267         }
                 ; 0000 0268         else if(input=='S'){
                 _0xBE:
000314 81a8      	LD   R26,Y
000315 35a3      	CPI  R26,LOW(0x53)
000316 f461      	BRNE _0xC0
                 ; 0000 0269         a = 1;
000317 e0e1      	LDI  R30,LOW(1)
000318 83ef      	STD  Y+7,R30
                 ; 0000 026A         b = 0;
000319 e0e0      	LDI  R30,LOW(0)
00031a 83ee      	STD  Y+6,R30
                 ; 0000 026B         c = 1;
00031b e0e1      	LDI  R30,LOW(1)
00031c 83ed      	STD  Y+5,R30
                 ; 0000 026C         d = 1;
00031d 83ec      	STD  Y+4,R30
                 ; 0000 026D         e = 0;
00031e e0e0      	LDI  R30,LOW(0)
00031f 83eb      	STD  Y+3,R30
                 ; 0000 026E         f = 1;
000320 e0e1      	LDI  R30,LOW(1)
000321 83ea      	STD  Y+2,R30
                 ; 0000 026F         g = 1;
000322 c09b      	RJMP _0x211
                 ; 0000 0270         }
                 ; 0000 0271         else if(input=='t'){
                 _0xC0:
000323 81a8      	LD   R26,Y
000324 37a4      	CPI  R26,LOW(0x74)
000325 f449      	BRNE _0xC2
                 ; 0000 0272         a = 0;
000326 e0e0      	LDI  R30,LOW(0)
000327 83ef      	STD  Y+7,R30
                 ; 0000 0273         b = 0;
000328 83ee      	STD  Y+6,R30
                 ; 0000 0274         c = 0;
000329 83ed      	STD  Y+5,R30
                 ; 0000 0275         d = 1;
00032a e0e1      	LDI  R30,LOW(1)
00032b 83ec      	STD  Y+4,R30
                 ; 0000 0276         e = 1;
00032c 83eb      	STD  Y+3,R30
                 ; 0000 0277         f = 1;
00032d 83ea      	STD  Y+2,R30
                 ; 0000 0278         g = 1;
00032e c08f      	RJMP _0x211
                 ; 0000 0279         }
                 ; 0000 027A         else if(input=='T'){
                 _0xC2:
00032f 81a8      	LD   R26,Y
000330 35a4      	CPI  R26,LOW(0x54)
000331 f429      	BRNE _0xC4
                 ; 0000 027B         a = 0;
000332 e0e0      	LDI  R30,LOW(0)
000333 83ef      	STD  Y+7,R30
                 ; 0000 027C         b = 0;
000334 83ee      	STD  Y+6,R30
                 ; 0000 027D         c = 0;
000335 83ed      	STD  Y+5,R30
                 ; 0000 027E         d = 0;
000336 c081      	RJMP _0x210
                 ; 0000 027F         e = 0;
                 ; 0000 0280         f = 0;
                 ; 0000 0281         g = 0;
                 ; 0000 0282         }
                 ; 0000 0283         else if(input=='u'){
                 _0xC4:
000337 81a8      	LD   R26,Y
000338 37a5      	CPI  R26,LOW(0x75)
000339 f439      	BRNE _0xC6
                 ; 0000 0284         a = 0;
00033a e0e0      	LDI  R30,LOW(0)
00033b 83ef      	STD  Y+7,R30
                 ; 0000 0285         b = 0;
00033c 83ee      	STD  Y+6,R30
                 ; 0000 0286         c = 1;
00033d e0e1      	LDI  R30,LOW(1)
00033e 83ed      	STD  Y+5,R30
                 ; 0000 0287         d = 1;
00033f 83ec      	STD  Y+4,R30
                 ; 0000 0288         e = 1;
000340 c079      	RJMP _0x213
                 ; 0000 0289         f = 0;
                 ; 0000 028A         g = 0;
                 ; 0000 028B         }
                 ; 0000 028C         else if(input=='U'){
                 _0xC6:
000341 81a8      	LD   R26,Y
000342 35a5      	CPI  R26,LOW(0x55)
000343 f441      	BRNE _0xC8
                 ; 0000 028D         a = 0;
000344 e0e0      	LDI  R30,LOW(0)
000345 83ef      	STD  Y+7,R30
                 ; 0000 028E         b = 1;
000346 e0e1      	LDI  R30,LOW(1)
000347 83ee      	STD  Y+6,R30
                 ; 0000 028F         c = 1;
000348 83ed      	STD  Y+5,R30
                 ; 0000 0290         d = 1;
000349 83ec      	STD  Y+4,R30
                 ; 0000 0291         e = 1;
00034a 83eb      	STD  Y+3,R30
                 ; 0000 0292         f = 1;
00034b c070      	RJMP _0x20F
                 ; 0000 0293         g = 0;
                 ; 0000 0294         }
                 ; 0000 0295         else if(input=='v'){
                 _0xC8:
00034c 81a8      	LD   R26,Y
00034d 37a6      	CPI  R26,LOW(0x76)
00034e f429      	BRNE _0xCA
                 ; 0000 0296         a = 0;
00034f e0e0      	LDI  R30,LOW(0)
000350 83ef      	STD  Y+7,R30
                 ; 0000 0297         b = 0;
000351 83ee      	STD  Y+6,R30
                 ; 0000 0298         c = 0;
000352 83ed      	STD  Y+5,R30
                 ; 0000 0299         d = 0;
000353 c064      	RJMP _0x210
                 ; 0000 029A         e = 0;
                 ; 0000 029B         f = 0;
                 ; 0000 029C         g = 0;
                 ; 0000 029D         }
                 ; 0000 029E         else if(input=='V'){
                 _0xCA:
000354 81a8      	LD   R26,Y
000355 35a6      	CPI  R26,LOW(0x56)
000356 f429      	BRNE _0xCC
                 ; 0000 029F         a = 0;
000357 e0e0      	LDI  R30,LOW(0)
000358 83ef      	STD  Y+7,R30
                 ; 0000 02A0         b = 0;
000359 83ee      	STD  Y+6,R30
                 ; 0000 02A1         c = 0;
00035a 83ed      	STD  Y+5,R30
                 ; 0000 02A2         d = 0;
00035b c05c      	RJMP _0x210
                 ; 0000 02A3         e = 0;
                 ; 0000 02A4         f = 0;
                 ; 0000 02A5         g = 0;
                 ; 0000 02A6         }
                 ; 0000 02A7         else if(input=='w'){
                 _0xCC:
00035c 81a8      	LD   R26,Y
00035d 37a7      	CPI  R26,LOW(0x77)
00035e f429      	BRNE _0xCE
                 ; 0000 02A8         a = 0;
00035f e0e0      	LDI  R30,LOW(0)
000360 83ef      	STD  Y+7,R30
                 ; 0000 02A9         b = 0;
000361 83ee      	STD  Y+6,R30
                 ; 0000 02AA         c = 0;
000362 83ed      	STD  Y+5,R30
                 ; 0000 02AB         d = 0;
000363 c054      	RJMP _0x210
                 ; 0000 02AC         e = 0;
                 ; 0000 02AD         f = 0;
                 ; 0000 02AE         g = 0;
                 ; 0000 02AF         }
                 ; 0000 02B0         else if(input=='W'){
                 _0xCE:
000364 81a8      	LD   R26,Y
000365 35a7      	CPI  R26,LOW(0x57)
000366 f429      	BRNE _0xD0
                 ; 0000 02B1         a = 0;
000367 e0e0      	LDI  R30,LOW(0)
000368 83ef      	STD  Y+7,R30
                 ; 0000 02B2         b = 0;
000369 83ee      	STD  Y+6,R30
                 ; 0000 02B3         c = 0;
00036a 83ed      	STD  Y+5,R30
                 ; 0000 02B4         d = 0;
00036b c04c      	RJMP _0x210
                 ; 0000 02B5         e = 0;
                 ; 0000 02B6         f = 0;
                 ; 0000 02B7         g = 0;
                 ; 0000 02B8         }
                 ; 0000 02B9         else if(input=='x'){
                 _0xD0:
00036c 81a8      	LD   R26,Y
00036d 37a8      	CPI  R26,LOW(0x78)
00036e f429      	BRNE _0xD2
                 ; 0000 02BA         a = 0;
00036f e0e0      	LDI  R30,LOW(0)
000370 83ef      	STD  Y+7,R30
                 ; 0000 02BB         b = 0;
000371 83ee      	STD  Y+6,R30
                 ; 0000 02BC         c = 0;
000372 83ed      	STD  Y+5,R30
                 ; 0000 02BD         d = 0;
000373 c044      	RJMP _0x210
                 ; 0000 02BE         e = 0;
                 ; 0000 02BF         f = 0;
                 ; 0000 02C0         g = 0;
                 ; 0000 02C1         }
                 ; 0000 02C2         else if(input=='X'){
                 _0xD2:
000374 81a8      	LD   R26,Y
000375 35a8      	CPI  R26,LOW(0x58)
000376 f429      	BRNE _0xD4
                 ; 0000 02C3         a = 0;
000377 e0e0      	LDI  R30,LOW(0)
000378 83ef      	STD  Y+7,R30
                 ; 0000 02C4         b = 0;
000379 83ee      	STD  Y+6,R30
                 ; 0000 02C5         c = 0;
00037a 83ed      	STD  Y+5,R30
                 ; 0000 02C6         d = 0;
00037b c03c      	RJMP _0x210
                 ; 0000 02C7         e = 0;
                 ; 0000 02C8         f = 0;
                 ; 0000 02C9         g = 0;
                 ; 0000 02CA         }
                 ; 0000 02CB         else if(input=='y'){
                 _0xD4:
00037c 81a8      	LD   R26,Y
00037d 37a9      	CPI  R26,LOW(0x79)
00037e f429      	BRNE _0xD6
                 ; 0000 02CC         a = 0;
00037f e0e0      	LDI  R30,LOW(0)
000380 83ef      	STD  Y+7,R30
                 ; 0000 02CD         b = 0;
000381 83ee      	STD  Y+6,R30
                 ; 0000 02CE         c = 0;
000382 83ed      	STD  Y+5,R30
                 ; 0000 02CF         d = 0;
000383 c034      	RJMP _0x210
                 ; 0000 02D0         e = 0;
                 ; 0000 02D1         f = 0;
                 ; 0000 02D2         g = 0;
                 ; 0000 02D3         }
                 ; 0000 02D4         else if(input=='Y'){
                 _0xD6:
000384 81a8      	LD   R26,Y
000385 35a9      	CPI  R26,LOW(0x59)
000386 f459      	BRNE _0xD8
                 ; 0000 02D5         a = 0;
000387 e0e0      	LDI  R30,LOW(0)
000388 83ef      	STD  Y+7,R30
                 ; 0000 02D6         b = 1;
000389 e0e1      	LDI  R30,LOW(1)
00038a 83ee      	STD  Y+6,R30
                 ; 0000 02D7         c = 1;
00038b 83ed      	STD  Y+5,R30
                 ; 0000 02D8         d = 0;
00038c e0e0      	LDI  R30,LOW(0)
00038d 83ec      	STD  Y+4,R30
                 ; 0000 02D9         e = 0;
00038e 83eb      	STD  Y+3,R30
                 ; 0000 02DA         f = 1;
00038f e0e1      	LDI  R30,LOW(1)
000390 83ea      	STD  Y+2,R30
                 ; 0000 02DB         g = 1;
000391 c02c      	RJMP _0x211
                 ; 0000 02DC         }
                 ; 0000 02DD         else if(input=='z'){
                 _0xD8:
000392 81a8      	LD   R26,Y
000393 37aa      	CPI  R26,LOW(0x7A)
000394 f429      	BRNE _0xDA
                 ; 0000 02DE         a = 0;
000395 e0e0      	LDI  R30,LOW(0)
000396 83ef      	STD  Y+7,R30
                 ; 0000 02DF         b = 0;
000397 83ee      	STD  Y+6,R30
                 ; 0000 02E0         c = 0;
000398 83ed      	STD  Y+5,R30
                 ; 0000 02E1         d = 0;
000399 c01e      	RJMP _0x210
                 ; 0000 02E2         e = 0;
                 ; 0000 02E3         f = 0;
                 ; 0000 02E4         g = 0;
                 ; 0000 02E5         }
                 ; 0000 02E6         else if(input=='Z'){
                 _0xDA:
00039a 81a8      	LD   R26,Y
00039b 35aa      	CPI  R26,LOW(0x5A)
00039c f429      	BRNE _0xDC
                 ; 0000 02E7         a = 0;
00039d e0e0      	LDI  R30,LOW(0)
00039e 83ef      	STD  Y+7,R30
                 ; 0000 02E8         b = 0;
00039f 83ee      	STD  Y+6,R30
                 ; 0000 02E9         c = 0;
0003a0 83ed      	STD  Y+5,R30
                 ; 0000 02EA         d = 0;
0003a1 c016      	RJMP _0x210
                 ; 0000 02EB         e = 0;
                 ; 0000 02EC         f = 0;
                 ; 0000 02ED         g = 0;
                 ; 0000 02EE         }
                 ; 0000 02EF         else if(input=='='){
                 _0xDC:
0003a2 81a8      	LD   R26,Y
0003a3 33ad      	CPI  R26,LOW(0x3D)
0003a4 f459      	BRNE _0xDE
                 ; 0000 02F0         a = 0;
0003a5 e0e0      	LDI  R30,LOW(0)
0003a6 83ef      	STD  Y+7,R30
                 ; 0000 02F1         b = 0;
0003a7 83ee      	STD  Y+6,R30
                 ; 0000 02F2         c = 0;
0003a8 83ed      	STD  Y+5,R30
                 ; 0000 02F3         d = 1;
0003a9 e0e1      	LDI  R30,LOW(1)
0003aa 83ec      	STD  Y+4,R30
                 ; 0000 02F4         e = 0;
0003ab e0e0      	LDI  R30,LOW(0)
0003ac 83eb      	STD  Y+3,R30
                 ; 0000 02F5         f = 0;
0003ad 83ea      	STD  Y+2,R30
                 ; 0000 02F6         g = 1;
0003ae e0e1      	LDI  R30,LOW(1)
0003af c00e      	RJMP _0x211
                 ; 0000 02F7         }
                 ; 0000 02F8         else if(input=='_'){
                 _0xDE:
0003b0 81a8      	LD   R26,Y
0003b1 35af      	CPI  R26,LOW(0x5F)
0003b2 f461      	BRNE _0xE0
                 ; 0000 02F9         a = 0;
0003b3 e0e0      	LDI  R30,LOW(0)
0003b4 83ef      	STD  Y+7,R30
                 ; 0000 02FA         b = 0;
0003b5 83ee      	STD  Y+6,R30
                 ; 0000 02FB         c = 0;
                 _0x212:
0003b6 83ed      	STD  Y+5,R30
                 ; 0000 02FC         d = 1;
0003b7 e0e1      	LDI  R30,LOW(1)
                 _0x210:
0003b8 83ec      	STD  Y+4,R30
                 ; 0000 02FD         e = 0;
0003b9 e0e0      	LDI  R30,LOW(0)
                 _0x213:
0003ba 83eb      	STD  Y+3,R30
                 ; 0000 02FE         f = 0;
0003bb e0e0      	LDI  R30,LOW(0)
                 _0x20F:
0003bc 83ea      	STD  Y+2,R30
                 ; 0000 02FF         g = 0;
0003bd e0e0      	LDI  R30,LOW(0)
                 _0x211:
0003be 83e9      	STD  Y+1,R30
                 ; 0000 0300         }
                 ; 0000 0301         if(a==1){                    LED_SEGMENT_A = 0;}else{LED_SEGMENT_A = 1;}
                 _0xE0:
0003bf 81af      	LDD  R26,Y+7
0003c0 30a1      	CPI  R26,LOW(0x1)
0003c1 f411      	BRNE _0xE1
0003c2 98ae      	CBI  0x15,6
0003c3 c001      	RJMP _0xE4
                 _0xE1:
0003c4 9aae      	SBI  0x15,6
                 _0xE4:
                 ; 0000 0302         if(b==1){                    LED_SEGMENT_B = 0;}else{LED_SEGMENT_B = 1;}
0003c5 81ae      	LDD  R26,Y+6
0003c6 30a1      	CPI  R26,LOW(0x1)
0003c7 f411      	BRNE _0xE7
0003c8 98ac      	CBI  0x15,4
0003c9 c001      	RJMP _0xEA
                 _0xE7:
0003ca 9aac      	SBI  0x15,4
                 _0xEA:
                 ; 0000 0303         if(c==1){                    LED_SEGMENT_C = 0;}else{LED_SEGMENT_C = 1;}
0003cb 81ad      	LDD  R26,Y+5
0003cc 30a1      	CPI  R26,LOW(0x1)
0003cd f411      	BRNE _0xED
0003ce 98a9      	CBI  0x15,1
0003cf c001      	RJMP _0xF0
                 _0xED:
0003d0 9aa9      	SBI  0x15,1
                 _0xF0:
                 ; 0000 0304         if(d==1){                    LED_SEGMENT_D = 0;}else{LED_SEGMENT_D = 1;}
0003d1 81ac      	LDD  R26,Y+4
0003d2 30a1      	CPI  R26,LOW(0x1)
0003d3 f411      	BRNE _0xF3
0003d4 98ab      	CBI  0x15,3
0003d5 c001      	RJMP _0xF6
                 _0xF3:
0003d6 9aab      	SBI  0x15,3
                 _0xF6:
                 ; 0000 0305         if(e==1){                    LED_SEGMENT_E = 0;}else{LED_SEGMENT_E = 1;}
0003d7 81ab      	LDD  R26,Y+3
0003d8 30a1      	CPI  R26,LOW(0x1)
0003d9 f411      	BRNE _0xF9
0003da 9897      	CBI  0x12,7
0003db c001      	RJMP _0xFC
                 _0xF9:
0003dc 9a97      	SBI  0x12,7
                 _0xFC:
                 ; 0000 0306         if(f==1){                    LED_SEGMENT_F = 0;}else{LED_SEGMENT_F = 1;}
0003dd 81aa      	LDD  R26,Y+2
0003de 30a1      	CPI  R26,LOW(0x1)
0003df f411      	BRNE _0xFF
0003e0 98ad      	CBI  0x15,5
0003e1 c001      	RJMP _0x102
                 _0xFF:
0003e2 9aad      	SBI  0x15,5
                 _0x102:
                 ; 0000 0307         if(g==1){                    LED_SEGMENT_G = 0;}else{LED_SEGMENT_G = 1;}
0003e3 81a9      	LDD  R26,Y+1
0003e4 30a1      	CPI  R26,LOW(0x1)
0003e5 f411      	BRNE _0x105
0003e6 98a8      	CBI  0x15,0
0003e7 c001      	RJMP _0x108
                 _0x105:
0003e8 9aa8      	SBI  0x15,0
                 _0x108:
                 ; 0000 0308         if(LcdTaskas[LcdChannel]==1){LED_SEGMENT_H = 0;}else{LED_SEGMENT_H = 1;}
0003e9 2fe0      	MOV  R30,R16
0003ea e0f0      	LDI  R31,0
0003eb 59e8      	SUBI R30,LOW(-_LcdTaskas)
0003ec 4ffe      	SBCI R31,HIGH(-_LcdTaskas)
0003ed 81a0      	LD   R26,Z
0003ee 30a1      	CPI  R26,LOW(0x1)
0003ef f411      	BRNE _0x10B
0003f0 98aa      	CBI  0x15,2
0003f1 c001      	RJMP _0x10E
                 _0x10B:
0003f2 9aaa      	SBI  0x15,2
                 _0x10E:
                 ; 0000 0309     }
0003f3 9628      	ADIW R28,8
                 ; 0000 030A     else{
0003f4 c00c      	RJMP _0x111
                 _0x3A:
                 ; 0000 030B     LED_SEGMENT_A = 1;
0003f5 9aae      	SBI  0x15,6
                 ; 0000 030C     LED_SEGMENT_B = 1;
0003f6 9aac      	SBI  0x15,4
                 ; 0000 030D     LED_SEGMENT_C = 1;
0003f7 9aa9      	SBI  0x15,1
                 ; 0000 030E     LED_SEGMENT_D = 1;
0003f8 9aab      	SBI  0x15,3
                 ; 0000 030F     LED_SEGMENT_E = 1;
0003f9 9a97      	SBI  0x12,7
                 ; 0000 0310     LED_SEGMENT_F = 1;
0003fa 9aad      	SBI  0x15,5
                 ; 0000 0311     LED_SEGMENT_G = 1;
0003fb 9aa8      	SBI  0x15,0
                 ; 0000 0312     LED_SEGMENT_H = 1;
0003fc 9aaa      	SBI  0x15,2
                 ; 0000 0313 
                 ; 0000 0314     PORTC.7 = 0;    // 1
0003fd 98af      	CBI  0x15,7
                 ; 0000 0315     PORTA.6 = 0;    // 2
0003fe 98de      	CBI  0x1B,6
                 ; 0000 0316     PORTA.7 = 0;    // 3
0003ff 98df      	CBI  0x1B,7
                 ; 0000 0317     PORTA.4 = 0;    // 4
000400 98dc      	CBI  0x1B,4
                 ; 0000 0318     }
                 _0x111:
                 ; 0000 0319 
                 ; 0000 031A     for(i=0;i<4;i++){LcdText[i] = 0;LcdTaskas[i] = 0;}
000401 e010      	LDI  R17,LOW(0)
                 _0x12B:
000402 3014      	CPI  R17,4
000403 f468      	BRSH _0x12C
000404 2fe1      	MOV  R30,R17
000405 e0f0      	LDI  R31,0
000406 59ec      	SUBI R30,LOW(-_LcdText)
000407 4ffe      	SBCI R31,HIGH(-_LcdText)
000408 e0a0      	LDI  R26,LOW(0)
000409 83a0      	STD  Z+0,R26
00040a 2fe1      	MOV  R30,R17
00040b e0f0      	LDI  R31,0
00040c 59e8      	SUBI R30,LOW(-_LcdTaskas)
00040d 4ffe      	SBCI R31,HIGH(-_LcdTaskas)
00040e 83a0      	STD  Z+0,R26
00040f 5f1f      	SUBI R17,-1
000410 cff1      	RJMP _0x12B
                 _0x12C:
                 ; 0000 031B return 1;
000411 e0e1      	LDI  R30,LOW(1)
000412 9109      	LD   R16,Y+
000413 9119      	LD   R17,Y+
000414 9508      	RET
                 ; 0000 031C }
                 ;
                 ;char CheckButtons(){
                 ; 0000 031E char CheckButtons(){
                 _CheckButtons:
                 ; 0000 031F     if(PINA.0==0){BUTTON[0] = 1;}else{BUTTON[0] = 0;}
000415 99c8      	SBIC 0x19,0
000416 c002      	RJMP _0x12D
000417 e0e1      	LDI  R30,LOW(1)
000418 c001      	RJMP _0x214
                 _0x12D:
000419 e0e0      	LDI  R30,LOW(0)
                 _0x214:
00041a 93e0 0160 	STS  _BUTTON,R30
                 ; 0000 0320     if(PINA.1==0){BUTTON[1] = 1;}else{BUTTON[1] = 0;}
00041c 99c9      	SBIC 0x19,1
00041d c002      	RJMP _0x12F
00041e e0e1      	LDI  R30,LOW(1)
00041f c001      	RJMP _0x215
                 _0x12F:
000420 e0e0      	LDI  R30,LOW(0)
                 _0x215:
                +
000421 93e0 0161+STS _BUTTON + ( 1 ) , R30
                 	__PUTB1MN _BUTTON,1
                 ; 0000 0321     if(PINA.2==0){BUTTON[2] = 1;}else{BUTTON[2] = 0;}
000423 99ca      	SBIC 0x19,2
000424 c002      	RJMP _0x131
000425 e0e1      	LDI  R30,LOW(1)
000426 c001      	RJMP _0x216
                 _0x131:
000427 e0e0      	LDI  R30,LOW(0)
                 _0x216:
                +
000428 93e0 0162+STS _BUTTON + ( 2 ) , R30
                 	__PUTB1MN _BUTTON,2
                 ; 0000 0322     if(PINA.3==0){BUTTON[3] = 1;}else{BUTTON[3] = 0;}
00042a 99cb      	SBIC 0x19,3
00042b c002      	RJMP _0x133
00042c e0e1      	LDI  R30,LOW(1)
00042d c001      	RJMP _0x217
                 _0x133:
00042e e0e0      	LDI  R30,LOW(0)
                 _0x217:
                +
00042f 93e0 0163+STS _BUTTON + ( 3 ) , R30
                 	__PUTB1MN _BUTTON,3
                 ; 0000 0323 return 1;
000431 c07b      	RJMP _0x2020002
                 ; 0000 0324 }
                 ;
                 ;char CheckBattery(){
                 ; 0000 0326 char CheckBattery(){
                 _CheckBattery:
                 ; 0000 0327 static unsigned int Timer29;
                 ; 0000 0328 Timer29++;
000432 e9ab      	LDI  R26,LOW(_Timer29_S0000007000)
000433 e0b1      	LDI  R27,HIGH(_Timer29_S0000007000)
000434 91ed      	LD   R30,X+
000435 91fd      	LD   R31,X+
000436 9631      	ADIW R30,1
000437 93fe      	ST   -X,R31
000438 93ee      	ST   -X,R30
                 ; 0000 0329     if(Timer29>=250){
000439 91a0 019b 	LDS  R26,_Timer29_S0000007000
00043b 91b0 019c 	LDS  R27,_Timer29_S0000007000+1
00043d 3faa      	CPI  R26,LOW(0xFA)
00043e e0e0      	LDI  R30,HIGH(0xFA)
00043f 07be      	CPC  R27,R30
000440 f410      	BRSH PC+3
000441 940c 04ad 	JMP _0x135
                 ; 0000 032A     unsigned int Bits = read_adc(5);
                 ; 0000 032B     unsigned int MomentVoltage, VoltageSum = 0;
                 ; 0000 032C     char i;
                 ; 0000 032D 
                 ; 0000 032E     MomentVoltage = Bits/5 - Bits/90;
000443 9727      	SBIW R28,7
000444 e0e0      	LDI  R30,LOW(0)
000445 83e9      	STD  Y+1,R30
000446 83ea      	STD  Y+2,R30
                 ;	Bits -> Y+5
                 ;	MomentVoltage -> Y+3
                 ;	VoltageSum -> Y+1
                 ;	i -> Y+0
000447 e0e5      	LDI  R30,LOW(5)
000448 93ea      	ST   -Y,R30
000449 dc16      	RCALL _read_adc
00044a 83ed      	STD  Y+5,R30
00044b 83fe      	STD  Y+5+1,R31
00044c 81ad      	LDD  R26,Y+5
00044d 81be      	LDD  R27,Y+5+1
00044e e0e5      	LDI  R30,LOW(5)
00044f e0f0      	LDI  R31,HIGH(5)
000450 940e 0e97 	CALL __DIVW21U
000452 01bf      	MOVW R22,R30
000453 81ad      	LDD  R26,Y+5
000454 81be      	LDD  R27,Y+5+1
000455 e5ea      	LDI  R30,LOW(90)
000456 e0f0      	LDI  R31,HIGH(90)
000457 940e 0e97 	CALL __DIVW21U
000459 01db      	MOVW R26,R22
00045a 1bae      	SUB  R26,R30
00045b 0bbf      	SBC  R27,R31
00045c 83ab      	STD  Y+3,R26
00045d 83bc      	STD  Y+3+1,R27
                 ; 0000 032F 
                 ; 0000 0330         for(i=9;i>0;i--){
00045e e0e9      	LDI  R30,LOW(9)
00045f 83e8      	ST   Y,R30
                 _0x137:
000460 81a8      	LD   R26,Y
000461 30a1      	CPI  R26,LOW(0x1)
000462 f0d8      	BRLO _0x138
                 ; 0000 0331         BATTERY_VOLTAGE_ARCHIVE[i] = BATTERY_VOLTAGE_ARCHIVE[i-1];
000463 81e8      	LD   R30,Y
000464 e8a5      	LDI  R26,LOW(_BATTERY_VOLTAGE_ARCHIVE)
000465 e0b1      	LDI  R27,HIGH(_BATTERY_VOLTAGE_ARCHIVE)
000466 e0f0      	LDI  R31,0
000467 0fee      	LSL  R30
000468 1fff      	ROL  R31
000469 0fea      	ADD  R30,R26
00046a 1ffb      	ADC  R31,R27
00046b 010f      	MOVW R0,R30
00046c 81e8      	LD   R30,Y
00046d e0f0      	LDI  R31,0
00046e 9731      	SBIW R30,1
00046f e8a5      	LDI  R26,LOW(_BATTERY_VOLTAGE_ARCHIVE)
000470 e0b1      	LDI  R27,HIGH(_BATTERY_VOLTAGE_ARCHIVE)
000471 0fee      	LSL  R30
000472 1fff      	ROL  R31
000473 0fae      	ADD  R26,R30
000474 1fbf      	ADC  R27,R31
000475 940e 0eaa 	CALL __GETW1P
000477 01d0      	MOVW R26,R0
000478 93ed      	ST   X+,R30
000479 93fc      	ST   X,R31
                 ; 0000 0332         }
00047a 81e8      	LD   R30,Y
00047b 50e1      	SUBI R30,LOW(1)
00047c 83e8      	ST   Y,R30
00047d cfe2      	RJMP _0x137
                 _0x138:
                 ; 0000 0333     BATTERY_VOLTAGE_ARCHIVE[0] = MomentVoltage;
00047e 81eb      	LDD  R30,Y+3
00047f 81fc      	LDD  R31,Y+3+1
000480 93e0 0185 	STS  _BATTERY_VOLTAGE_ARCHIVE,R30
000482 93f0 0186 	STS  _BATTERY_VOLTAGE_ARCHIVE+1,R31
                 ; 0000 0334 
                 ; 0000 0335         for(i=0;i<10;i++){
000484 e0e0      	LDI  R30,LOW(0)
000485 83e8      	ST   Y,R30
                 _0x13A:
000486 81a8      	LD   R26,Y
000487 30aa      	CPI  R26,LOW(0xA)
000488 f4a0      	BRSH _0x13B
                 ; 0000 0336         VoltageSum = VoltageSum + BATTERY_VOLTAGE_ARCHIVE[i];
000489 81e8      	LD   R30,Y
00048a e8a5      	LDI  R26,LOW(_BATTERY_VOLTAGE_ARCHIVE)
00048b e0b1      	LDI  R27,HIGH(_BATTERY_VOLTAGE_ARCHIVE)
00048c e0f0      	LDI  R31,0
00048d 0fee      	LSL  R30
00048e 1fff      	ROL  R31
00048f 0fae      	ADD  R26,R30
000490 1fbf      	ADC  R27,R31
000491 940e 0eaa 	CALL __GETW1P
000493 81a9      	LDD  R26,Y+1
000494 81ba      	LDD  R27,Y+1+1
000495 0fea      	ADD  R30,R26
000496 1ffb      	ADC  R31,R27
000497 83e9      	STD  Y+1,R30
000498 83fa      	STD  Y+1+1,R31
                 ; 0000 0337         }
000499 81e8      	LD   R30,Y
00049a 5fef      	SUBI R30,-LOW(1)
00049b 83e8      	ST   Y,R30
00049c cfe9      	RJMP _0x13A
                 _0x13B:
                 ; 0000 0338     BATTERY_VOLTAGE = VoltageSum/10;
00049d 81a9      	LDD  R26,Y+1
00049e 81ba      	LDD  R27,Y+1+1
00049f e0ea      	LDI  R30,LOW(10)
0004a0 e0f0      	LDI  R31,HIGH(10)
0004a1 940e 0e97 	CALL __DIVW21U
0004a3 93e0 0183 	STS  _BATTERY_VOLTAGE,R30
0004a5 93f0 0184 	STS  _BATTERY_VOLTAGE+1,R31
                 ; 0000 0339 
                 ; 0000 033A     Timer29 = 0;
0004a7 e0e0      	LDI  R30,LOW(0)
0004a8 93e0 019b 	STS  _Timer29_S0000007000,R30
0004aa 93e0 019c 	STS  _Timer29_S0000007000+1,R30
                 ; 0000 033B     }
0004ac 9627      	ADIW R28,7
                 ; 0000 033C return 1;
                 _0x135:
                 _0x2020002:
0004ad e0e1      	LDI  R30,LOW(1)
0004ae 9508      	RET
                 ; 0000 033D }
                 ;
                 ;char led_put_runing_text(unsigned int Position,char flash *str){
                 ; 0000 033F char led_put_runing_text(unsigned int Position,char flash *str){
                 _led_put_runing_text:
                 ; 0000 0340 unsigned int StrLenght = strlenf(str);
                 ; 0000 0341 signed int i,a;
                 ; 0000 0342     for(i=0;i<4;i++){
0004af 940e 0edb 	CALL __SAVELOCR6
                 ;	Position -> Y+8
                 ;	*str -> Y+6
                 ;	StrLenght -> R16,R17
                 ;	i -> R18,R19
                 ;	a -> R20,R21
0004b1 81ee      	LDD  R30,Y+6
0004b2 81ff      	LDD  R31,Y+6+1
0004b3 93fa      	ST   -Y,R31
0004b4 93ea      	ST   -Y,R30
0004b5 940e 0e78 	CALL _strlenf
0004b7 018f      	MOVW R16,R30
                +
0004b8 e020     +LDI R18 , LOW ( 0 )
0004b9 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x13D:
                +
0004ba 3024     +CPI R18 , LOW ( 4 )
0004bb e0e0     +LDI R30 , HIGH ( 4 )
0004bc 073e     +CPC R19 , R30
                 	__CPWRN 18,19,4
0004bd f504      	BRGE _0x13E
                 ; 0000 0343     a = i + Position - 4;
0004be 85e8      	LDD  R30,Y+8
0004bf 85f9      	LDD  R31,Y+8+1
0004c0 0fe2      	ADD  R30,R18
0004c1 1ff3      	ADC  R31,R19
0004c2 9734      	SBIW R30,4
0004c3 01af      	MOVW R20,R30
                 ; 0000 0344         if(a>=0){
0004c4 2355      	TST  R21
0004c5 f0aa      	BRMI _0x13F
                 ; 0000 0345             if(a<StrLenght){
                +
0004c6 1740     +CP R20 , R16
0004c7 0751     +CPC R21 , R17
                 	__CPWRR 20,21,16,17
0004c8 f468      	BRSH _0x140
                 ; 0000 0346             //lcd_putchar(str[a]);
                 ; 0000 0347             LcdText[i] = str[a];
0004c9 01f9      	MOVW R30,R18
0004ca 59ec      	SUBI R30,LOW(-_LcdText)
0004cb 4ffe      	SBCI R31,HIGH(-_LcdText)
0004cc 010f      	MOVW R0,R30
0004cd 01fa      	MOVW R30,R20
0004ce 81ae      	LDD  R26,Y+6
0004cf 81bf      	LDD  R27,Y+6+1
0004d0 0fea      	ADD  R30,R26
0004d1 1ffb      	ADC  R31,R27
0004d2 91e4      	LPM  R30,Z
0004d3 01d0      	MOVW R26,R0
0004d4 93ec      	ST   X,R30
                 ; 0000 0348             }
                 ; 0000 0349             else{
0004d5 c005      	RJMP _0x141
                 _0x140:
                 ; 0000 034A                 if(i==0){
0004d6 2e02      	MOV  R0,R18
0004d7 2a03      	OR   R0,R19
0004d8 f411      	BRNE _0x142
                 ; 0000 034B                 return 1;
0004d9 e0e1      	LDI  R30,LOW(1)
0004da c004      	RJMP _0x2020001
                 ; 0000 034C                 }
                 ; 0000 034D             }
                 _0x142:
                 _0x141:
                 ; 0000 034E         }
                 ; 0000 034F     }
                 _0x13F:
                +
0004db 5f2f     +SUBI R18 , LOW ( - 1 )
0004dc 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
0004dd cfdc      	RJMP _0x13D
                 _0x13E:
                 ; 0000 0350 return 0;
0004de e0e0      	LDI  R30,LOW(0)
                 _0x2020001:
0004df 940e 0ee2 	CALL __LOADLOCR6
0004e1 962a      	ADIW R28,10
0004e2 9508      	RET
                 ; 0000 0351 }
                 ;
                 ;
                 ;signed int Timer16;// 1 savaites taimerio sekundziu skaicius
                 ;eeprom signed int Timer17;// 1 savaites taimerio minuciu skaicius
                 ;eeprom signed int Timer18;// 1 savaites taimerio valandu skaicius
                 ;char StartDischargeAfter(   unsigned char days,     unsigned char hours,
                 ; 0000 0358                             unsigned char minutes,  unsigned char seconds){
                 _StartDischargeAfter:
                 ; 0000 0359 Timer16 = seconds;
                 ;	days -> Y+3
                 ;	hours -> Y+2
                 ;	minutes -> Y+1
                 ;	seconds -> Y+0
0004e3 81e8      	LD   R30,Y
0004e4 e0f0      	LDI  R31,0
0004e5 93e0 019d 	STS  _Timer16,R30
0004e7 93f0 019e 	STS  _Timer16+1,R31
                 ; 0000 035A Timer17 = minutes;
0004e9 81e9      	LDD  R30,Y+1
0004ea e0a9      	LDI  R26,LOW(_Timer17)
0004eb e0b0      	LDI  R27,HIGH(_Timer17)
0004ec e0f0      	LDI  R31,0
0004ed 940e 0ebe 	CALL __EEPROMWRW
                 ; 0000 035B Timer18 = hours + days*24;
0004ef 816a      	LDD  R22,Y+2
0004f0 2777      	CLR  R23
0004f1 81ab      	LDD  R26,Y+3
0004f2 e1e8      	LDI  R30,LOW(24)
0004f3 02ea      	MULS R30,R26
0004f4 01f0      	MOVW R30,R0
0004f5 0fe6      	ADD  R30,R22
0004f6 1ff7      	ADC  R31,R23
0004f7 e0ab      	LDI  R26,LOW(_Timer18)
0004f8 e0b0      	LDI  R27,HIGH(_Timer18)
0004f9 940e 0ebe 	CALL __EEPROMWRW
                 ; 0000 035C return 1;
0004fb e0e1      	LDI  R30,LOW(1)
0004fc 9624      	ADIW R28,4
0004fd 9508      	RET
                 ; 0000 035D }
                 ;
                 ;
                 ;
                 ;
                 ;
                 ;// Timer 0 overflow interrupt service routine
                 ;unsigned int InteruptTimer;
                 ;interrupt [TIM0_OVF] void timer0_ovf_isr(void){
                 ; 0000 0365 interrupt [10] void timer0_ovf_isr(void){
                 _timer0_ovf_isr:
0004fe 93aa      	ST   -Y,R26
0004ff 93ba      	ST   -Y,R27
000500 93ea      	ST   -Y,R30
000501 93fa      	ST   -Y,R31
000502 b7ef      	IN   R30,SREG
000503 93ea      	ST   -Y,R30
                 ; 0000 0366 
                 ; 0000 0367 InteruptTimer++;
000504 e9af      	LDI  R26,LOW(_InteruptTimer)
000505 e0b1      	LDI  R27,HIGH(_InteruptTimer)
000506 91ed      	LD   R30,X+
000507 91fd      	LD   R31,X+
000508 9631      	ADIW R30,1
000509 93fe      	ST   -X,R31
00050a 93ee      	ST   -X,R30
                 ; 0000 0368 /////////////////////////// 1 Second Callback ///////////////////////////////////////
                 ; 0000 0369     if(InteruptTimer>=495){
00050b 91a0 019f 	LDS  R26,_InteruptTimer
00050d 91b0 01a0 	LDS  R27,_InteruptTimer+1
00050f 3eaf      	CPI  R26,LOW(0x1EF)
000510 e0e1      	LDI  R30,HIGH(0x1EF)
000511 07be      	CPC  R27,R30
000512 f038      	BRLO _0x143
                 ; 0000 036A     RealTime = 1;
000513 e0e1      	LDI  R30,LOW(1)
000514 2ede      	MOV  R13,R30
                 ; 0000 036B     InteruptTimer = 0;
000515 e0e0      	LDI  R30,LOW(0)
000516 93e0 019f 	STS  _InteruptTimer,R30
000518 93e0 01a0 	STS  _InteruptTimer+1,R30
                 ; 0000 036C     }
                 ; 0000 036D /////////////////////////////////////////////////////////////////////////////////////
                 ; 0000 036E }
                 _0x143:
00051a 91e9      	LD   R30,Y+
00051b bfef      	OUT  SREG,R30
00051c 91f9      	LD   R31,Y+
00051d 91e9      	LD   R30,Y+
00051e 91b9      	LD   R27,Y+
00051f 91a9      	LD   R26,Y+
000520 9518      	RETI
                 ;
                 ;
                 ;void main(void){
                 ; 0000 0371 void main(void){
                 _main:
                 ; 0000 0372 // Crystal Oscillator division factor: 1
                 ; 0000 0373 PORTA=0x00;
000521 e0e0      	LDI  R30,LOW(0)
000522 bbeb      	OUT  0x1B,R30
                 ; 0000 0374 DDRA=0b11010000;
000523 ede0      	LDI  R30,LOW(208)
000524 bbea      	OUT  0x1A,R30
                 ; 0000 0375 
                 ; 0000 0376 PORTB=0x00;
000525 e0e0      	LDI  R30,LOW(0)
000526 bbe8      	OUT  0x18,R30
                 ; 0000 0377 DDRB=0b00;
000527 bbe7      	OUT  0x17,R30
                 ; 0000 0378 
                 ; 0000 0379 PORTC=0x00;
000528 bbe5      	OUT  0x15,R30
                 ; 0000 037A DDRC=0b11111111;
000529 efef      	LDI  R30,LOW(255)
00052a bbe4      	OUT  0x14,R30
                 ; 0000 037B 
                 ; 0000 037C PORTD=0x00;
00052b e0e0      	LDI  R30,LOW(0)
00052c bbe2      	OUT  0x12,R30
                 ; 0000 037D DDRD=0b11111100;
00052d efec      	LDI  R30,LOW(252)
00052e bbe1      	OUT  0x11,R30
                 ; 0000 037E 
                 ; 0000 037F // Timer/Counter 0 initialization
                 ; 0000 0380 // Clock source: System Clock
                 ; 0000 0381 // Clock value: 125.000 kHz
                 ; 0000 0382 // Mode: Normal top=FFh
                 ; 0000 0383 // OC0 output: Disconnected
                 ; 0000 0384 TCCR0=0x03;
00052f e0e3      	LDI  R30,LOW(3)
000530 bfe3      	OUT  0x33,R30
                 ; 0000 0385 TCNT0=0x00;
000531 e0e0      	LDI  R30,LOW(0)
000532 bfe2      	OUT  0x32,R30
                 ; 0000 0386 OCR0=0x00;
000533 bfec      	OUT  0x3C,R30
                 ; 0000 0387 
                 ; 0000 0388 // Timer/Counter 1 initialization
                 ; 0000 0389 // Clock source: System Clock
                 ; 0000 038A // Clock value: Timer1 Stopped
                 ; 0000 038B // Mode: Normal top=FFFFh
                 ; 0000 038C // OC1A output: Discon.
                 ; 0000 038D // OC1B output: Discon.
                 ; 0000 038E // Noise Canceler: Off
                 ; 0000 038F // Input Capture on Falling Edge
                 ; 0000 0390 // Timer1 Overflow Interrupt: Off
                 ; 0000 0391 // Input Capture Interrupt: Off
                 ; 0000 0392 // Compare A Match Interrupt: Off
                 ; 0000 0393 // Compare B Match Interrupt: Off
                 ; 0000 0394 TCCR1A=0x00;
000534 bdef      	OUT  0x2F,R30
                 ; 0000 0395 TCCR1B=0x00;
000535 bdee      	OUT  0x2E,R30
                 ; 0000 0396 TCNT1H=0x00;
000536 bded      	OUT  0x2D,R30
                 ; 0000 0397 TCNT1L=0x00;
000537 bdec      	OUT  0x2C,R30
                 ; 0000 0398 ICR1H=0x00;
000538 bde7      	OUT  0x27,R30
                 ; 0000 0399 ICR1L=0x00;
000539 bde6      	OUT  0x26,R30
                 ; 0000 039A OCR1AH=0x00;
00053a bdeb      	OUT  0x2B,R30
                 ; 0000 039B OCR1AL=0x00;
00053b bdea      	OUT  0x2A,R30
                 ; 0000 039C OCR1BH=0x00;
00053c bde9      	OUT  0x29,R30
                 ; 0000 039D OCR1BL=0x00;
00053d bde8      	OUT  0x28,R30
                 ; 0000 039E 
                 ; 0000 039F // Timer/Counter 2 initialization
                 ; 0000 03A0 // Clock source: System Clock
                 ; 0000 03A1 // Clock value: Timer2 Stopped
                 ; 0000 03A2 // Mode: Normal top=FFh
                 ; 0000 03A3 // OC2 output: Disconnected
                 ; 0000 03A4 ASSR=0x00;
00053e bde2      	OUT  0x22,R30
                 ; 0000 03A5 //TCCR2=0x00;
                 ; 0000 03A6 TCNT2=0x00;
00053f bde4      	OUT  0x24,R30
                 ; 0000 03A7 OCR2=0x00;
000540 bde3      	OUT  0x23,R30
                 ; 0000 03A8 
                 ; 0000 03A9 // External Interrupt(s) initialization
                 ; 0000 03AA // INT0: Off
                 ; 0000 03AB // INT1: Off
                 ; 0000 03AC // INT2: Off
                 ; 0000 03AD MCUCR=0x00;
000541 bfe5      	OUT  0x35,R30
                 ; 0000 03AE MCUCSR=0x00;
000542 bfe4      	OUT  0x34,R30
                 ; 0000 03AF 
                 ; 0000 03B0 // Timer(s)/Counter(s) Interrupt(s) initialization
                 ; 0000 03B1 TIMSK=0x01;
000543 e0e1      	LDI  R30,LOW(1)
000544 bfe9      	OUT  0x39,R30
                 ; 0000 03B2 
                 ; 0000 03B3 // Analog Comparator initialization
                 ; 0000 03B4 // Analog Comparator: Off
                 ; 0000 03B5 // Analog Comparator Input Capture by Timer/Counter 1: Off
                 ; 0000 03B6 ACSR=0x80;
000545 e8e0      	LDI  R30,LOW(128)
000546 b9e8      	OUT  0x8,R30
                 ; 0000 03B7 SFIOR=0x00;
000547 e0e0      	LDI  R30,LOW(0)
000548 bfe0      	OUT  0x30,R30
                 ; 0000 03B8 
                 ; 0000 03B9 // ADC initialization
                 ; 0000 03BA // ADC Clock frequency: 62.500 kHz
                 ; 0000 03BB // ADC Voltage Reference: Int., cap. on AREF
                 ; 0000 03BC // ADC Auto Trigger Source: Free Running
                 ; 0000 03BD ADMUX=ADC_VREF_TYPE & 0xff;
000549 e4e0      	LDI  R30,LOW(64)
00054a b9e7      	OUT  0x7,R30
                 ; 0000 03BE ADCSRA=0xA7;
00054b eae7      	LDI  R30,LOW(167)
00054c b9e6      	OUT  0x6,R30
                 ; 0000 03BF SFIOR&=0x1F;
00054d b7e0      	IN   R30,0x30
00054e 71ef      	ANDI R30,LOW(0x1F)
00054f bfe0      	OUT  0x30,R30
                 ; 0000 03C0 
                 ; 0000 03C1 // Global enable interrupts
                 ; 0000 03C2 #asm("sei")
000550 9478      	sei
                 ; 0000 03C3 
                 ; 0000 03C4 
                 ; 0000 03C5 // Kai pasijungia ir buna nesamoningi skaiciai reikia nuresetint i default'us
                 ; 0000 03C6     if((Timer4==65535)||(Timer5==65535)){Timer4 = 0;Timer5 = 0;}
000551 e0a1      	LDI  R26,LOW(_Timer4)
000552 e0b0      	LDI  R27,HIGH(_Timer4)
000553 940e 0eae 	CALL __EEPROMRDW
000555 3fef      	CPI  R30,LOW(0xFFFF)
000556 efaf      	LDI  R26,HIGH(0xFFFF)
000557 07fa      	CPC  R31,R26
000558 f041      	BREQ _0x145
000559 e0a3      	LDI  R26,LOW(_Timer5)
00055a e0b0      	LDI  R27,HIGH(_Timer5)
00055b 940e 0eae 	CALL __EEPROMRDW
00055d 3fef      	CPI  R30,LOW(0xFFFF)
00055e efaf      	LDI  R26,HIGH(0xFFFF)
00055f 07fa      	CPC  R31,R26
000560 f451      	BRNE _0x144
                 _0x145:
000561 e0a1      	LDI  R26,LOW(_Timer4)
000562 e0b0      	LDI  R27,HIGH(_Timer4)
000563 e0e0      	LDI  R30,LOW(0)
000564 e0f0      	LDI  R31,HIGH(0)
000565 940e 0ebe 	CALL __EEPROMWRW
000567 e0a3      	LDI  R26,LOW(_Timer5)
000568 e0b0      	LDI  R27,HIGH(_Timer5)
000569 940e 0ebe 	CALL __EEPROMWRW
                 ; 0000 03C7 
                 ; 0000 03C8     if(BATTERY_FOULT==255){BATTERY_FOULT = 0;}
                 _0x144:
00056b e0a0      	LDI  R26,LOW(_BATTERY_FOULT)
00056c e0b0      	LDI  R27,HIGH(_BATTERY_FOULT)
00056d 940e 0eb2 	CALL __EEPROMRDB
00056f 3fef      	CPI  R30,LOW(0xFF)
000570 f429      	BRNE _0x147
000571 e0a0      	LDI  R26,LOW(_BATTERY_FOULT)
000572 e0b0      	LDI  R27,HIGH(_BATTERY_FOULT)
000573 e0e0      	LDI  R30,LOW(0)
000574 940e 0ec6 	CALL __EEPROMWRB
                 ; 0000 03C9 
                 ; 0000 03CA     if((Timer18>168)||(Timer18<0)){ StartDischargeAfter(7,0,0,0);}
                 _0x147:
000576 e0ab      	LDI  R26,LOW(_Timer18)
000577 e0b0      	LDI  R27,HIGH(_Timer18)
000578 940e 0eae 	CALL __EEPROMRDW
00057a 3ae9      	CPI  R30,LOW(0xA9)
00057b e0a0      	LDI  R26,HIGH(0xA9)
00057c 07fa      	CPC  R31,R26
00057d f434      	BRGE _0x149
00057e e0ac      	LDI  R26,LOW(_Timer18+1)
00057f e0b0      	LDI  R27,HIGH(_Timer18+1)
000580 940e 0eb2 	CALL __EEPROMRDB
000582 23ee      	TST  R30
000583 f43a      	BRPL _0x148
                 _0x149:
000584 e0e7      	LDI  R30,LOW(7)
000585 93ea      	ST   -Y,R30
000586 e0e0      	LDI  R30,LOW(0)
000587 93ea      	ST   -Y,R30
000588 93ea      	ST   -Y,R30
000589 93ea      	ST   -Y,R30
00058a df58      	RCALL _StartDischargeAfter
                 ; 0000 03CB 
                 ; 0000 03CC     if(MAX_BATTERY_VOLTAGE==65535){MAX_BATTERY_VOLTAGE = 146;}
                 _0x148:
00058b e0a5      	LDI  R26,LOW(_MAX_BATTERY_VOLTAGE)
00058c e0b0      	LDI  R27,HIGH(_MAX_BATTERY_VOLTAGE)
00058d 940e 0eae 	CALL __EEPROMRDW
00058f 3fef      	CPI  R30,LOW(0xFFFF)
000590 efaf      	LDI  R26,HIGH(0xFFFF)
000591 07fa      	CPC  R31,R26
000592 f431      	BRNE _0x14B
000593 e0a5      	LDI  R26,LOW(_MAX_BATTERY_VOLTAGE)
000594 e0b0      	LDI  R27,HIGH(_MAX_BATTERY_VOLTAGE)
000595 e9e2      	LDI  R30,LOW(146)
000596 e0f0      	LDI  R31,HIGH(146)
000597 940e 0ebe 	CALL __EEPROMWRW
                 ; 0000 03CD 
                 ; 0000 03CE     if(MIN_BATTERY_VOLTAGE==65535){MIN_BATTERY_VOLTAGE = 110;}
                 _0x14B:
000599 e0a7      	LDI  R26,LOW(_MIN_BATTERY_VOLTAGE)
00059a e0b0      	LDI  R27,HIGH(_MIN_BATTERY_VOLTAGE)
00059b 940e 0eae 	CALL __EEPROMRDW
00059d 3fef      	CPI  R30,LOW(0xFFFF)
00059e efaf      	LDI  R26,HIGH(0xFFFF)
00059f 07fa      	CPC  R31,R26
0005a0 f431      	BRNE _0x14C
0005a1 e0a7      	LDI  R26,LOW(_MIN_BATTERY_VOLTAGE)
0005a2 e0b0      	LDI  R27,HIGH(_MIN_BATTERY_VOLTAGE)
0005a3 e6ee      	LDI  R30,LOW(110)
0005a4 e0f0      	LDI  R31,HIGH(110)
0005a5 940e 0ebe 	CALL __EEPROMWRW
                 ; 0000 03CF /////////////////////////////////////////////////////////////////////////////
                 ; 0000 03D0 
                 ; 0000 03D1 UPS_STATE = 1;
                 _0x14C:
0005a7 e0e1      	LDI  R30,LOW(1)
0005a8 2e6e      	MOV  R6,R30
                 ; 0000 03D2 
                 ; 0000 03D3 // Ijungiant prabega uzrasas "HELLO"
                 ; 0000 03D4 static unsigned int Timer1;// "HELLO" Taimeris
                 ; 0000 03D5     while(Timer1<2000){
                 _0x14D:
0005a9 91a0 01a1 	LDS  R26,_Timer1_S000000B000
0005ab 91b0 01a2 	LDS  R27,_Timer1_S000000B000+1
0005ad 3da0      	CPI  R26,LOW(0x7D0)
0005ae e0e7      	LDI  R30,HIGH(0x7D0)
0005af 07be      	CPC  R27,R30
0005b0 f500      	BRSH _0x14F
                 ; 0000 03D6     char HelloPadetis = Timer1/200;
                 ; 0000 03D7     UpdateVariableOSC();
0005b1 9721      	SBIW R28,1
                 ;	HelloPadetis -> Y+0
0005b2 ece8      	LDI  R30,LOW(200)
0005b3 e0f0      	LDI  R31,HIGH(200)
0005b4 940e 0e97 	CALL __DIVW21U
0005b6 83e8      	ST   Y,R30
0005b7 daea      	RCALL _UpdateVariableOSC
                 ; 0000 03D8     Timer1++;
0005b8 eaa1      	LDI  R26,LOW(_Timer1_S000000B000)
0005b9 e0b1      	LDI  R27,HIGH(_Timer1_S000000B000)
0005ba 91ed      	LD   R30,X+
0005bb 91fd      	LD   R31,X+
0005bc 9631      	ADIW R30,1
0005bd 93fe      	ST   -X,R31
0005be 93ee      	ST   -X,R30
                 ; 0000 03D9     led_put_runing_text(HelloPadetis,"HELLO");
0005bf 81e8      	LD   R30,Y
0005c0 e0f0      	LDI  R31,0
0005c1 93fa      	ST   -Y,R31
0005c2 93ea      	ST   -Y,R30
                +
0005c3 e5e4     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
0005c4 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
0005c5 93fa      	ST   -Y,R31
0005c6 93ea      	ST   -Y,R30
0005c7 dee7      	RCALL _led_put_runing_text
                 ; 0000 03DA     UpdateLcd();
0005c8 db1b      	RCALL _UpdateLcd
                 ; 0000 03DB     delay_ms(1);
0005c9 e0e1      	LDI  R30,LOW(1)
0005ca e0f0      	LDI  R31,HIGH(1)
0005cb 93fa      	ST   -Y,R31
0005cc 93ea      	ST   -Y,R30
0005cd 940e 0e83 	CALL _delay_ms
                 ; 0000 03DC     }
0005cf 9621      	ADIW R28,1
0005d0 cfd8      	RJMP _0x14D
                 _0x14F:
                 ; 0000 03DD 
                 ; 0000 03DE // Programos kodas
                 ; 0000 03DF     while(1){
                 _0x150:
                 ; 0000 03E0     UpdateVariableOSC();
0005d1 dad0      	RCALL _UpdateVariableOSC
                 ; 0000 03E1     CheckBattery();
0005d2 de5f      	RCALL _CheckBattery
                 ; 0000 03E2 
                 ; 0000 03E3 
                 ; 0000 03E4 
                 ; 0000 03E5 
                 ; 0000 03E6 
                 ; 0000 03E7 
                 ; 0000 03E8 
                 ; 0000 03E9 
                 ; 0000 03EA 
                 ; 0000 03EB 
                 ; 0000 03EC //////////////////////////// 1 sec callback ////////////////////////////////////////
                 ; 0000 03ED         if(RealTime==1){
0005d3 e0e1      	LDI  R30,LOW(1)
0005d4 15ed      	CP   R30,R13
0005d5 f011      	BREQ PC+3
0005d6 940c 066d 	JMP _0x153
                 ; 0000 03EE         //////////// 1 SAVAITES TIMERIS /////////////
                 ; 0000 03EF             if(UPS_STATE!=2){
0005d8 e0e2      	LDI  R30,LOW(2)
0005d9 15e6      	CP   R30,R6
0005da f411      	BRNE PC+3
0005db 940c 063a 	JMP _0x154
                 ; 0000 03F0                 if((Timer16>0)||(Timer17>0)||(Timer18>0)){
0005dd 91a0 019d 	LDS  R26,_Timer16
0005df 91b0 019e 	LDS  R27,_Timer16+1
0005e1 940e 0ed7 	CALL __CPW02
0005e3 f084      	BRLT _0x156
0005e4 e0a9      	LDI  R26,LOW(_Timer17)
0005e5 e0b0      	LDI  R27,HIGH(_Timer17)
0005e6 940e 0eae 	CALL __EEPROMRDW
0005e8 01df      	MOVW R26,R30
0005e9 940e 0ed7 	CALL __CPW02
0005eb f044      	BRLT _0x156
0005ec e0ab      	LDI  R26,LOW(_Timer18)
0005ed e0b0      	LDI  R27,HIGH(_Timer18)
0005ee 940e 0eae 	CALL __EEPROMRDW
0005f0 01df      	MOVW R26,R30
0005f1 940e 0ed7 	CALL __CPW02
0005f3 f574      	BRGE _0x155
                 _0x156:
                 ; 0000 03F1                 // Taimeris skaiciuoja tik tada kai neissikraudinejama
                 ; 0000 03F2                 Timer16--;//s
0005f4 e9ad      	LDI  R26,LOW(_Timer16)
0005f5 e0b1      	LDI  R27,HIGH(_Timer16)
0005f6 91ed      	LD   R30,X+
0005f7 91fd      	LD   R31,X+
0005f8 9731      	SBIW R30,1
0005f9 93fe      	ST   -X,R31
0005fa 93ee      	ST   -X,R30
                 ; 0000 03F3                     if(Timer16<0){
0005fb 91a0 019e 	LDS  R26,_Timer16+1
0005fd 23aa      	TST  R26
0005fe f512      	BRPL _0x158
                 ; 0000 03F4                     Timer16 = 59;//m
0005ff e3eb      	LDI  R30,LOW(59)
000600 e0f0      	LDI  R31,HIGH(59)
000601 93e0 019d 	STS  _Timer16,R30
000603 93f0 019e 	STS  _Timer16+1,R31
                 ; 0000 03F5                     Timer17--;
000605 e0a9      	LDI  R26,LOW(_Timer17)
000606 e0b0      	LDI  R27,HIGH(_Timer17)
000607 940e 0eae 	CALL __EEPROMRDW
000609 9731      	SBIW R30,1
00060a 940e 0ebe 	CALL __EEPROMWRW
00060c 9631      	ADIW R30,1
                 ; 0000 03F6                         if(Timer17<0){
00060d e0aa      	LDI  R26,LOW(_Timer17+1)
00060e e0b0      	LDI  R27,HIGH(_Timer17+1)
00060f 940e 0eb2 	CALL __EEPROMRDB
000611 23ee      	TST  R30
000612 f472      	BRPL _0x159
                 ; 0000 03F7                         Timer17 = 59;
000613 e0a9      	LDI  R26,LOW(_Timer17)
000614 e0b0      	LDI  R27,HIGH(_Timer17)
000615 e3eb      	LDI  R30,LOW(59)
000616 e0f0      	LDI  R31,HIGH(59)
000617 940e 0ebe 	CALL __EEPROMWRW
                 ; 0000 03F8                         Timer18--;//h
000619 e0ab      	LDI  R26,LOW(_Timer18)
00061a e0b0      	LDI  R27,HIGH(_Timer18)
00061b 940e 0eae 	CALL __EEPROMRDW
00061d 9731      	SBIW R30,1
00061e 940e 0ebe 	CALL __EEPROMWRW
000620 9631      	ADIW R30,1
                 ; 0000 03F9                         }
                 ; 0000 03FA                     }
                 _0x159:
                 ; 0000 03FB                 }
                 _0x158:
                 ; 0000 03FC                 else{
000621 c018      	RJMP _0x15A
                 _0x155:
                 ; 0000 03FD                     if(UPS_STATE==0){
000622 2066      	TST  R6
000623 f471      	BRNE _0x15B
                 ; 0000 03FE                         if(SKIP==0){
000624 2077      	TST  R7
000625 f419      	BRNE _0x15C
                 ; 0000 03FF                         // Jei UPS neuzsiemes ir nera SKIP'o - issikraudineti
                 ; 0000 0400                         UPS_STATE = 2;
000626 e0e2      	LDI  R30,LOW(2)
000627 2e6e      	MOV  R6,R30
                 ; 0000 0401                         }
                 ; 0000 0402                         else{
000628 c008      	RJMP _0x15D
                 _0x15C:
                 ; 0000 0403                         // Jei UPS uzimtas pratesti
                 ; 0000 0404                         // savaitini taimeri pusvalandziu
                 ; 0000 0405                         StartDischargeAfter(0,0,30,0);
000629 e0e0      	LDI  R30,LOW(0)
00062a 93ea      	ST   -Y,R30
00062b 93ea      	ST   -Y,R30
00062c e1ee      	LDI  R30,LOW(30)
00062d 93ea      	ST   -Y,R30
00062e e0e0      	LDI  R30,LOW(0)
00062f 93ea      	ST   -Y,R30
000630 deb2      	RCALL _StartDischargeAfter
                 ; 0000 0406                         }
                 _0x15D:
                 ; 0000 0407                     }
                 ; 0000 0408                     else{
000631 c008      	RJMP _0x15E
                 _0x15B:
                 ; 0000 0409                     // Jei UPS uzimtas pratesti
                 ; 0000 040A                     // savaitini taimeri pusvalandziu
                 ; 0000 040B                     StartDischargeAfter(0,0,30,0);
000632 e0e0      	LDI  R30,LOW(0)
000633 93ea      	ST   -Y,R30
000634 93ea      	ST   -Y,R30
000635 e1ee      	LDI  R30,LOW(30)
000636 93ea      	ST   -Y,R30
000637 e0e0      	LDI  R30,LOW(0)
000638 93ea      	ST   -Y,R30
000639 dea9      	RCALL _StartDischargeAfter
                 ; 0000 040C                     }
                 _0x15E:
                 ; 0000 040D                 }
                 _0x15A:
                 ; 0000 040E             }
                 ; 0000 040F     /////////////////////////////////////////////
                 ; 0000 0410     ////////// Discharge Time Counter ///////////
                 ; 0000 0411             if(UPS_STATE==2){
                 _0x154:
00063a e0e2      	LDI  R30,LOW(2)
00063b 15e6      	CP   R30,R6
00063c f579      	BRNE _0x15F
                 ; 0000 0412             // Iskrovimo laikas skaiciuojamas tik tada kai issikraudinejama
                 ; 0000 0413             Timer7++;//s
00063d e6ae      	LDI  R26,LOW(_Timer7)
00063e e0b1      	LDI  R27,HIGH(_Timer7)
00063f 91ed      	LD   R30,X+
000640 91fd      	LD   R31,X+
000641 9631      	ADIW R30,1
000642 93fe      	ST   -X,R31
000643 93ee      	ST   -X,R30
                 ; 0000 0414             Timer24 = 0;
000644 e0e0      	LDI  R30,LOW(0)
000645 93e0 0180 	STS  _Timer24,R30
000647 93e0 0181 	STS  _Timer24+1,R30
                 ; 0000 0415                 if(Timer7>=60){
000649 91a0 016e 	LDS  R26,_Timer7
00064b 91b0 016f 	LDS  R27,_Timer7+1
00064d 97dc      	SBIW R26,60
00064e f0e8      	BRLO _0x160
                 ; 0000 0416                 Timer7 = 0;
00064f 93e0 016e 	STS  _Timer7,R30
000651 93e0 016f 	STS  _Timer7+1,R30
                 ; 0000 0417                 Timer8++;//m
000653 e7a0      	LDI  R26,LOW(_Timer8)
000654 e0b1      	LDI  R27,HIGH(_Timer8)
000655 91ed      	LD   R30,X+
000656 91fd      	LD   R31,X+
000657 9631      	ADIW R30,1
000658 93fe      	ST   -X,R31
000659 93ee      	ST   -X,R30
                 ; 0000 0418                     if(Timer8>=60){
00065a 91a0 0170 	LDS  R26,_Timer8
00065c 91b0 0171 	LDS  R27,_Timer8+1
00065e 97dc      	SBIW R26,60
00065f f060      	BRLO _0x161
                 ; 0000 0419                     Timer8 = 0;
000660 e0e0      	LDI  R30,LOW(0)
000661 93e0 0170 	STS  _Timer8,R30
000663 93e0 0171 	STS  _Timer8+1,R30
                 ; 0000 041A                     Timer9++;//h
000665 e7a2      	LDI  R26,LOW(_Timer9)
000666 e0b1      	LDI  R27,HIGH(_Timer9)
000667 91ed      	LD   R30,X+
000668 91fd      	LD   R31,X+
000669 9631      	ADIW R30,1
00066a 93fe      	ST   -X,R31
00066b 93ee      	ST   -X,R30
                 ; 0000 041B                     }
                 ; 0000 041C                 }
                 _0x161:
                 ; 0000 041D             }
                 _0x160:
                 ; 0000 041E     /////////////////////////////////////////////
                 ; 0000 041F         RealTime = 0;
                 _0x15F:
00066c 24dd      	CLR  R13
                 ; 0000 0420         }
                 ; 0000 0421 ////////////////////////////////////////////////////////////////////////////////////
                 ; 0000 0422 
                 ; 0000 0423 
                 ; 0000 0424 
                 ; 0000 0425 
                 ; 0000 0426 
                 ; 0000 0427 
                 ; 0000 0428 
                 ; 0000 0429 
                 ; 0000 042A 
                 ; 0000 042B 
                 ; 0000 042C 
                 ; 0000 042D 
                 ; 0000 042E 
                 ; 0000 042F //////////////////////////// SKIPER ////////////////////////////////////////////////
                 ; 0000 0430         if(PIND.2==1){
                 _0x153:
00066d 9b82      	SBIS 0x10,2
00066e c006      	RJMP _0x162
                 ; 0000 0431             if(SKIP==0){
00066f 2077      	TST  R7
000670 f419      	BRNE _0x163
                 ; 0000 0432             // Isijungiant SKIP'o kontaktui - nutraukti viska ir ikrauti
                 ; 0000 0433             SKIP = 1;
000671 e0e1      	LDI  R30,LOW(1)
000672 2e7e      	MOV  R7,R30
                 ; 0000 0434             UPS_STATE = 1;
000673 2e6e      	MOV  R6,R30
                 ; 0000 0435             }
                 ; 0000 0436         }
                 _0x163:
                 ; 0000 0437         else{
000674 c001      	RJMP _0x164
                 _0x162:
                 ; 0000 0438         SKIP = 0;
000675 2477      	CLR  R7
                 ; 0000 0439         }
                 _0x164:
                 ; 0000 043A ////////////////////////////////////////////////////////////////////////////////////
                 ; 0000 043B 
                 ; 0000 043C 
                 ; 0000 043D 
                 ; 0000 043E 
                 ; 0000 043F 
                 ; 0000 0440 
                 ; 0000 0441 
                 ; 0000 0442 
                 ; 0000 0443 
                 ; 0000 0444 
                 ; 0000 0445 
                 ; 0000 0446 
                 ; 0000 0447 
                 ; 0000 0448 /////////////////////// UPS STATUSAS ///////////////////////////////////////////////
                 ; 0000 0449         if(UPS_STATE==0){
000676 2066      	TST  R6
000677 f011      	BREQ PC+3
000678 940c 06ca 	JMP _0x165
                 ; 0000 044A         // Nulinis statusas
                 ; 0000 044B         char NulinioStatusoPadetis;
                 ; 0000 044C         Timer3++;// Begancio taskelio taimeris
00067a 9721      	SBIW R28,1
                 ;	NulinioStatusoPadetis -> Y+0
00067b e6ac      	LDI  R26,LOW(_Timer3)
00067c e0b1      	LDI  R27,HIGH(_Timer3)
00067d 91ed      	LD   R30,X+
00067e 91fd      	LD   R31,X+
00067f 9631      	ADIW R30,1
000680 93fe      	ST   -X,R31
000681 93ee      	ST   -X,R30
000682 9731      	SBIW R30,1
                 ; 0000 044D 
                 ; 0000 044E             if(Timer3>=3000){// Begancio taskelio taimerio resetas
000683 91a0 016c 	LDS  R26,_Timer3
000685 91b0 016d 	LDS  R27,_Timer3+1
000687 3ba8      	CPI  R26,LOW(0xBB8)
000688 e0eb      	LDI  R30,HIGH(0xBB8)
000689 07be      	CPC  R27,R30
00068a f028      	BRLO _0x166
                 ; 0000 044F             Timer3 = 0;
00068b e0e0      	LDI  R30,LOW(0)
00068c 93e0 016c 	STS  _Timer3,R30
00068e 93e0 016d 	STS  _Timer3+1,R30
                 ; 0000 0450             }
                 ; 0000 0451         NulinioStatusoPadetis = Timer3/500;
                 _0x166:
000690 91a0 016c 	LDS  R26,_Timer3
000692 91b0 016d 	LDS  R27,_Timer3+1
000694 efe4      	LDI  R30,LOW(500)
000695 e0f1      	LDI  R31,HIGH(500)
000696 940e 0e97 	CALL __DIVW21U
000698 83e8      	ST   Y,R30
                 ; 0000 0452             if(NulinioStatusoPadetis==0){     LcdTaskas[0] = 1;}
000699 30e0      	CPI  R30,0
00069a f421      	BRNE _0x167
00069b e0e1      	LDI  R30,LOW(1)
00069c 93e0 0168 	STS  _LcdTaskas,R30
                 ; 0000 0453             else if(NulinioStatusoPadetis==1){LcdTaskas[1] = 1;}
00069e c01d      	RJMP _0x168
                 _0x167:
00069f 81a8      	LD   R26,Y
0006a0 30a1      	CPI  R26,LOW(0x1)
0006a1 f0b9      	BREQ _0x218
                 ; 0000 0454             else if(NulinioStatusoPadetis==2){LcdTaskas[2] = 1;}
0006a2 30a2      	CPI  R26,LOW(0x2)
0006a3 f421      	BRNE _0x16B
0006a4 e0e1      	LDI  R30,LOW(1)
                +
0006a5 93e0 016a+STS _LcdTaskas + ( 2 ) , R30
                 	__PUTB1MN _LcdTaskas,2
                 ; 0000 0455             else if(NulinioStatusoPadetis==3){LcdTaskas[3] = 1;}
0006a7 c014      	RJMP _0x16C
                 _0x16B:
0006a8 81a8      	LD   R26,Y
0006a9 30a3      	CPI  R26,LOW(0x3)
0006aa f421      	BRNE _0x16D
0006ab e0e1      	LDI  R30,LOW(1)
                +
0006ac 93e0 016b+STS _LcdTaskas + ( 3 ) , R30
                 	__PUTB1MN _LcdTaskas,3
                 ; 0000 0456             else if(NulinioStatusoPadetis==4){LcdTaskas[2] = 1;}
0006ae c00d      	RJMP _0x16E
                 _0x16D:
0006af 81a8      	LD   R26,Y
0006b0 30a4      	CPI  R26,LOW(0x4)
0006b1 f421      	BRNE _0x16F
0006b2 e0e1      	LDI  R30,LOW(1)
                +
0006b3 93e0 016a+STS _LcdTaskas + ( 2 ) , R30
                 	__PUTB1MN _LcdTaskas,2
                 ; 0000 0457             else if(NulinioStatusoPadetis==5){LcdTaskas[1] = 1;}
0006b5 c006      	RJMP _0x170
                 _0x16F:
0006b6 81a8      	LD   R26,Y
0006b7 30a5      	CPI  R26,LOW(0x5)
0006b8 f419      	BRNE _0x171
                 _0x218:
0006b9 e0e1      	LDI  R30,LOW(1)
                +
0006ba 93e0 0169+STS _LcdTaskas + ( 1 ) , R30
                 	__PUTB1MN _LcdTaskas,1
                 ; 0000 0458 
                 ; 0000 0459 
                 ; 0000 045A         // Tikrinti baterijas del issikrovimo
                 ; 0000 045B             if(BATTERY_VOLTAGE<=MIN_BATTERY_VOLTAGE){
                 _0x171:
                 _0x170:
                 _0x16E:
                 _0x16C:
                 _0x168:
0006bc e0a7      	LDI  R26,LOW(_MIN_BATTERY_VOLTAGE)
0006bd e0b0      	LDI  R27,HIGH(_MIN_BATTERY_VOLTAGE)
0006be 940e 0eae 	CALL __EEPROMRDW
0006c0 91a0 0183 	LDS  R26,_BATTERY_VOLTAGE
0006c2 91b0 0184 	LDS  R27,_BATTERY_VOLTAGE+1
0006c4 17ea      	CP   R30,R26
0006c5 07fb      	CPC  R31,R27
0006c6 f010      	BRLO _0x172
                 ; 0000 045C             UPS_STATE = 1;
0006c7 e0e1      	LDI  R30,LOW(1)
0006c8 2e6e      	MOV  R6,R30
                 ; 0000 045D             }
                 ; 0000 045E 
                 ; 0000 045F 
                 ; 0000 0460         }
                 _0x172:
0006c9 c0f7      	RJMP _0x219
                 ; 0000 0461         else if(UPS_STATE==1){
                 _0x165:
0006ca e0e1      	LDI  R30,LOW(1)
0006cb 15e6      	CP   R30,R6
0006cc f011      	BREQ PC+3
0006cd 940c 0721 	JMP _0x174
                 ; 0000 0462         // Krovimo statusas
                 ; 0000 0463             if(OLD_UPS_STATE!=1){
0006cf 15e9      	CP   R30,R9
0006d0 f039      	BREQ _0x175
                 ; 0000 0464             Timer12 = 0;
0006d1 e0e0      	LDI  R30,LOW(0)
0006d2 93e0 0178 	STS  _Timer12,R30
0006d4 93e0 0179 	STS  _Timer12+1,R30
                 ; 0000 0465             KRAUTI = 0;
0006d6 2488      	CLR  R8
                 ; 0000 0466             LOAD = 0;
0006d7 24bb      	CLR  R11
                 ; 0000 0467             }
                 ; 0000 0468         // Charge State
                 ; 0000 0469         Timer12++;
                 _0x175:
0006d8 e7a8      	LDI  R26,LOW(_Timer12)
0006d9 e0b1      	LDI  R27,HIGH(_Timer12)
0006da 91ed      	LD   R30,X+
0006db 91fd      	LD   R31,X+
0006dc 9631      	ADIW R30,1
0006dd 93fe      	ST   -X,R31
0006de 93ee      	ST   -X,R30
                 ; 0000 046A             if(Timer12>=30000){
0006df 91a0 0178 	LDS  R26,_Timer12
0006e1 91b0 0179 	LDS  R27,_Timer12+1
0006e3 33a0      	CPI  R26,LOW(0x7530)
0006e4 e7e5      	LDI  R30,HIGH(0x7530)
0006e5 07be      	CPC  R27,R30
0006e6 f028      	BRLO _0x176
                 ; 0000 046B             Timer12 = 0;
0006e7 e0e0      	LDI  R30,LOW(0)
0006e8 93e0 0178 	STS  _Timer12,R30
0006ea 93e0 0179 	STS  _Timer12+1,R30
                 ; 0000 046C             }
                 ; 0000 046D 
                 ; 0000 046E             if((Timer12>=0)&&(Timer12<3000)){
                 _0x176:
0006ec 91a0 0178 	LDS  R26,_Timer12
0006ee 91b0 0179 	LDS  R27,_Timer12+1
0006f0 9710      	SBIW R26,0
0006f1 f020      	BRLO _0x178
0006f2 3ba8      	CPI  R26,LOW(0xBB8)
0006f3 e0eb      	LDI  R30,HIGH(0xBB8)
0006f4 07be      	CPC  R27,R30
0006f5 f008      	BRLO _0x179
                 _0x178:
0006f6 c00e      	RJMP _0x177
                 _0x179:
                 ; 0000 046F             LOAD = 1;
0006f7 e0e1      	LDI  R30,LOW(1)
0006f8 2ebe      	MOV  R11,R30
                 ; 0000 0470             KRAUTI = 0;
0006f9 2488      	CLR  R8
                 ; 0000 0471             LcdText[0] = 'L';LcdText[1] = 'o';LcdText[2] = 'A';LcdText[3] = 'd';
0006fa e4ec      	LDI  R30,LOW(76)
0006fb 93e0 0164 	STS  _LcdText,R30
0006fd e6ef      	LDI  R30,LOW(111)
                +
0006fe 93e0 0165+STS _LcdText + ( 1 ) , R30
                 	__PUTB1MN _LcdText,1
000700 e4e1      	LDI  R30,LOW(65)
                +
000701 93e0 0166+STS _LcdText + ( 2 ) , R30
                 	__PUTB1MN _LcdText,2
000703 e6e4      	LDI  R30,LOW(100)
000704 c00d      	RJMP _0x21A
                 ; 0000 0472             }
                 ; 0000 0473             else{
                 _0x177:
                 ; 0000 0474             LOAD = 0;
000705 24bb      	CLR  R11
                 ; 0000 0475             KRAUTI = 1;
000706 e0e1      	LDI  R30,LOW(1)
000707 2e8e      	MOV  R8,R30
                 ; 0000 0476             LcdText[0] = 'c';LcdText[1] = 'h';LcdText[2] = 'A';LcdText[3] = 'r';
000708 e6e3      	LDI  R30,LOW(99)
000709 93e0 0164 	STS  _LcdText,R30
00070b e6e8      	LDI  R30,LOW(104)
                +
00070c 93e0 0165+STS _LcdText + ( 1 ) , R30
                 	__PUTB1MN _LcdText,1
00070e e4e1      	LDI  R30,LOW(65)
                +
00070f 93e0 0166+STS _LcdText + ( 2 ) , R30
                 	__PUTB1MN _LcdText,2
000711 e7e2      	LDI  R30,LOW(114)
                 _0x21A:
                +
000712 93e0 0167+STS _LcdText + ( 3 ) , R30
                 	__PUTB1MN _LcdText,3
                 ; 0000 0477             }
                 ; 0000 0478 
                 ; 0000 0479             if(BATTERY_VOLTAGE>=MAX_BATTERY_VOLTAGE){
000714 e0a5      	LDI  R26,LOW(_MAX_BATTERY_VOLTAGE)
000715 e0b0      	LDI  R27,HIGH(_MAX_BATTERY_VOLTAGE)
000716 940e 0eae 	CALL __EEPROMRDW
000718 91a0 0183 	LDS  R26,_BATTERY_VOLTAGE
00071a 91b0 0184 	LDS  R27,_BATTERY_VOLTAGE+1
00071c 17ae      	CP   R26,R30
00071d 07bf      	CPC  R27,R31
00071e f008      	BRLO _0x17B
                 ; 0000 047A             // Jei baterija uzsikrovusi isjungti krovima
                 ; 0000 047B             UPS_STATE = 0;
00071f 2466      	CLR  R6
                 ; 0000 047C             }
                 ; 0000 047D         }
                 _0x17B:
                 ; 0000 047E         else if(UPS_STATE==2){
000720 c0a1      	RJMP _0x17C
                 _0x174:
000721 e0e2      	LDI  R30,LOW(2)
000722 15e6      	CP   R30,R6
000723 f011      	BREQ PC+3
000724 940c 07c2 	JMP _0x17D
                 ; 0000 047F         // Iskrovimo statusas
                 ; 0000 0480         char DchrPadetis;
                 ; 0000 0481         Timer24++;
000726 9721      	SBIW R28,1
                 ;	DchrPadetis -> Y+0
000727 e8a0      	LDI  R26,LOW(_Timer24)
000728 e0b1      	LDI  R27,HIGH(_Timer24)
000729 91ed      	LD   R30,X+
00072a 91fd      	LD   R31,X+
00072b 9631      	ADIW R30,1
00072c 93fe      	ST   -X,R31
00072d 93ee      	ST   -X,R30
                 ; 0000 0482 
                 ; 0000 0483             if(OLD_UPS_STATE!=2){
00072e e0e2      	LDI  R30,LOW(2)
00072f 15e9      	CP   R30,R9
000730 f069      	BREQ _0x17E
                 ; 0000 0484             // Jei katik isijunge iskrovimas
                 ; 0000 0485 
                 ; 0000 0486             // Nuresetint dabartinio iskrovimo laikmati
                 ; 0000 0487             Timer7 = 0;
000731 e0e0      	LDI  R30,LOW(0)
000732 93e0 016e 	STS  _Timer7,R30
000734 93e0 016f 	STS  _Timer7+1,R30
                 ; 0000 0488             Timer8 = 0;
000736 93e0 0170 	STS  _Timer8,R30
000738 93e0 0171 	STS  _Timer8+1,R30
                 ; 0000 0489             Timer9 = 0;
00073a 93e0 0172 	STS  _Timer9,R30
00073c 93e0 0173 	STS  _Timer9+1,R30
                 ; 0000 048A             }
                 ; 0000 048B 
                 ; 0000 048C         Timer20++;// Begancio uzrasio taimeris
                 _0x17E:
00073e e7ae      	LDI  R26,LOW(_Timer20)
00073f e0b1      	LDI  R27,HIGH(_Timer20)
000740 91ed      	LD   R30,X+
000741 91fd      	LD   R31,X+
000742 9631      	ADIW R30,1
000743 93fe      	ST   -X,R31
000744 93ee      	ST   -X,R30
                 ; 0000 048D             if(Timer20>=7500){
000745 91a0 017e 	LDS  R26,_Timer20
000747 91b0 017f 	LDS  R27,_Timer20+1
000749 34ac      	CPI  R26,LOW(0x1D4C)
00074a e1ed      	LDI  R30,HIGH(0x1D4C)
00074b 07be      	CPC  R27,R30
00074c f028      	BRLO _0x17F
                 ; 0000 048E             Timer20 = 0;
00074d e0e0      	LDI  R30,LOW(0)
00074e 93e0 017e 	STS  _Timer20,R30
000750 93e0 017f 	STS  _Timer20+1,R30
                 ; 0000 048F             }
                 ; 0000 0490         DchrPadetis = Timer20/500;
                 _0x17F:
000752 91a0 017e 	LDS  R26,_Timer20
000754 91b0 017f 	LDS  R27,_Timer20+1
000756 efe4      	LDI  R30,LOW(500)
000757 e0f1      	LDI  R31,HIGH(500)
000758 940e 0e97 	CALL __DIVW21U
00075a 83e8      	ST   Y,R30
                 ; 0000 0491         led_put_runing_text(DchrPadetis,"diSchArGinG");
00075b e0f0      	LDI  R31,0
00075c 93fa      	ST   -Y,R31
00075d 93ea      	ST   -Y,R30
                +
00075e e5ea     +LDI R30 , LOW ( 2 * _0x0 + ( 6 ) )
00075f e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 6 ) )
                 	__POINTW1FN _0x0,6
000760 93fa      	ST   -Y,R31
000761 93ea      	ST   -Y,R30
000762 dd4c      	RCALL _led_put_runing_text
                 ; 0000 0492 
                 ; 0000 0493 
                 ; 0000 0494         BEEPER_OFF = 0;
000763 24aa      	CLR  R10
                 ; 0000 0495         // Beeper off
                 ; 0000 0496             if(Timer7==10){
000764 91a0 016e 	LDS  R26,_Timer7
000766 91b0 016f 	LDS  R27,_Timer7+1
000768 971a      	SBIW R26,10
000769 f471      	BRNE _0x180
                 ; 0000 0497                 if(Timer8==0){
00076a 91e0 0170 	LDS  R30,_Timer8
00076c 91f0 0171 	LDS  R31,_Timer8+1
00076e 9730      	SBIW R30,0
00076f f441      	BRNE _0x181
                 ; 0000 0498                     if(Timer9==0){
000770 91e0 0172 	LDS  R30,_Timer9
000772 91f0 0173 	LDS  R31,_Timer9+1
000774 9730      	SBIW R30,0
000775 f411      	BRNE _0x182
                 ; 0000 0499                     BEEPER_OFF = 1;
000776 e0e1      	LDI  R30,LOW(1)
000777 2eae      	MOV  R10,R30
                 ; 0000 049A                     }
                 ; 0000 049B                 }
                 _0x182:
                 ; 0000 049C             }
                 _0x181:
                 ; 0000 049D 
                 ; 0000 049E         // Iskrovimo stabdymo blokas pagal itampos davikli:
                 ; 0000 049F             //if(BATTERY==0){
                 ; 0000 04A0             if(BATTERY_VOLTAGE<=MIN_BATTERY_VOLTAGE){
                 _0x180:
000778 e0a7      	LDI  R26,LOW(_MIN_BATTERY_VOLTAGE)
000779 e0b0      	LDI  R27,HIGH(_MIN_BATTERY_VOLTAGE)
00077a 940e 0eae 	CALL __EEPROMRDW
00077c 91a0 0183 	LDS  R26,_BATTERY_VOLTAGE
00077e 91b0 0184 	LDS  R27,_BATTERY_VOLTAGE+1
000780 17ea      	CP   R30,R26
000781 07fb      	CPC  R31,R27
000782 f1c8      	BRLO _0x183
                 ; 0000 04A1             // Skaiciuoti 5 sekundes kad isjungti iskrovima kai
                 ; 0000 04A2             // tik baterija tampa tuscia
                 ; 0000 04A3             Timer14++;
000783 e7aa      	LDI  R26,LOW(_Timer14)
000784 e0b1      	LDI  R27,HIGH(_Timer14)
000785 91ed      	LD   R30,X+
000786 91fd      	LD   R31,X+
000787 9631      	ADIW R30,1
000788 93fe      	ST   -X,R31
000789 93ee      	ST   -X,R30
                 ; 0000 04A4                 if(Timer14>=5000){
00078a 91a0 017a 	LDS  R26,_Timer14
00078c 91b0 017b 	LDS  R27,_Timer14+1
00078e 38a8      	CPI  R26,LOW(0x1388)
00078f e1e3      	LDI  R30,HIGH(0x1388)
000790 07be      	CPC  R27,R30
000791 f148      	BRLO _0x184
                 ; 0000 04A5                 UPS_STATE = 1;// Vietoj iskrovimo ijungti krovima
000792 e0e1      	LDI  R30,LOW(1)
000793 2e6e      	MOV  R6,R30
                 ; 0000 04A6                 Timer14 = 0;
000794 e0e0      	LDI  R30,LOW(0)
000795 93e0 017a 	STS  _Timer14,R30
000797 93e0 017b 	STS  _Timer14+1,R30
                 ; 0000 04A7 
                 ; 0000 04A8                 // Dabartinio iskrovimo laiko vertes
                 ; 0000 04A9                 // perkelti i paskutinio iskrovimo laika
                 ; 0000 04AA                 Timer4 = Timer8;
000799 91e0 0170 	LDS  R30,_Timer8
00079b 91f0 0171 	LDS  R31,_Timer8+1
00079d e0a1      	LDI  R26,LOW(_Timer4)
00079e e0b0      	LDI  R27,HIGH(_Timer4)
00079f 940e 0ebe 	CALL __EEPROMWRW
                 ; 0000 04AB                 Timer5 = Timer9;
0007a1 91e0 0172 	LDS  R30,_Timer9
0007a3 91f0 0173 	LDS  R31,_Timer9+1
0007a5 e0a3      	LDI  R26,LOW(_Timer5)
0007a6 e0b0      	LDI  R27,HIGH(_Timer5)
0007a7 940e 0ebe 	CALL __EEPROMWRW
                 ; 0000 04AC 
                 ; 0000 04AD                 // Iskrovimas sekmingas todel savaitini
                 ; 0000 04AE                 // taimeri graziname i pradines vertes
                 ; 0000 04AF                 StartDischargeAfter(7,0,0,0);
0007a9 e0e7      	LDI  R30,LOW(7)
0007aa 93ea      	ST   -Y,R30
0007ab e0e0      	LDI  R30,LOW(0)
0007ac 93ea      	ST   -Y,R30
0007ad 93ea      	ST   -Y,R30
0007ae 93ea      	ST   -Y,R30
0007af dd33      	RCALL _StartDischargeAfter
                 ; 0000 04B0 
                 ; 0000 04B1                 // Jei iskrovimo laikas nesiekia
                 ; 0000 04B2                 // 3 valandu rodyti baterijos klaida
                 ; 0000 04B3                     if(Timer5<3){
0007b0 e0a3      	LDI  R26,LOW(_Timer5)
0007b1 e0b0      	LDI  R27,HIGH(_Timer5)
0007b2 940e 0eae 	CALL __EEPROMRDW
0007b4 9733      	SBIW R30,3
0007b5 f428      	BRSH _0x185
                 ; 0000 04B4                     BATTERY_FOULT = 1;
0007b6 e0a0      	LDI  R26,LOW(_BATTERY_FOULT)
0007b7 e0b0      	LDI  R27,HIGH(_BATTERY_FOULT)
0007b8 e0e1      	LDI  R30,LOW(1)
0007b9 940e 0ec6 	CALL __EEPROMWRB
                 ; 0000 04B5                     }
                 ; 0000 04B6                 }
                 _0x185:
                 ; 0000 04B7             }
                 _0x184:
                 ; 0000 04B8             else{
0007bb c005      	RJMP _0x186
                 _0x183:
                 ; 0000 04B9             Timer14 = 0;
0007bc e0e0      	LDI  R30,LOW(0)
0007bd 93e0 017a 	STS  _Timer14,R30
0007bf 93e0 017b 	STS  _Timer14+1,R30
                 ; 0000 04BA             }
                 _0x186:
                 ; 0000 04BB         }
                 _0x219:
0007c1 9621      	ADIW R28,1
                 ; 0000 04BC 
                 ; 0000 04BD     // Kai baigiasi krovimas, nesvarbu kas leme jo baigti
                 ; 0000 04BE         if((OLD_UPS_STATE==1)&&(UPS_STATE!=1)){
                 _0x17D:
                 _0x17C:
0007c2 e0e1      	LDI  R30,LOW(1)
0007c3 15e9      	CP   R30,R9
0007c4 f411      	BRNE _0x188
0007c5 15e6      	CP   R30,R6
0007c6 f409      	BRNE _0x189
                 _0x188:
0007c7 c007      	RJMP _0x187
                 _0x189:
                 ; 0000 04BF         Timer12 = 0;
0007c8 e0e0      	LDI  R30,LOW(0)
0007c9 93e0 0178 	STS  _Timer12,R30
0007cb 93e0 0179 	STS  _Timer12+1,R30
                 ; 0000 04C0         KRAUTI = 0;
0007cd 2488      	CLR  R8
                 ; 0000 04C1         LOAD = 0;
0007ce 24bb      	CLR  R11
                 ; 0000 04C2         }
                 ; 0000 04C3 
                 ; 0000 04C4     // Kai pasibaigia iskrovimas, nesvarbu kas leme jo baigti
                 ; 0000 04C5         if((OLD_UPS_STATE==2)&&(UPS_STATE!=2)){
                 _0x187:
0007cf e0e2      	LDI  R30,LOW(2)
0007d0 15e9      	CP   R30,R9
0007d1 f411      	BRNE _0x18B
0007d2 15e6      	CP   R30,R6
0007d3 f409      	BRNE _0x18C
                 _0x18B:
0007d4 c012      	RJMP _0x18A
                 _0x18C:
                 ; 0000 04C6         BEEPER_OFF = 0;
0007d5 24aa      	CLR  R10
                 ; 0000 04C7         Timer7 = 0;
0007d6 e0e0      	LDI  R30,LOW(0)
0007d7 93e0 016e 	STS  _Timer7,R30
0007d9 93e0 016f 	STS  _Timer7+1,R30
                 ; 0000 04C8         Timer8 = 0;
0007db 93e0 0170 	STS  _Timer8,R30
0007dd 93e0 0171 	STS  _Timer8+1,R30
                 ; 0000 04C9         Timer9 = 0;
0007df 93e0 0172 	STS  _Timer9,R30
0007e1 93e0 0173 	STS  _Timer9+1,R30
                 ; 0000 04CA         Timer14 = 0;
0007e3 93e0 017a 	STS  _Timer14,R30
0007e5 93e0 017b 	STS  _Timer14+1,R30
                 ; 0000 04CB         }
                 ; 0000 04CC 
                 ; 0000 04CD     OLD_UPS_STATE = UPS_STATE;
                 _0x18A:
0007e7 2c96      	MOV  R9,R6
                 ; 0000 04CE ////////////////////////////////////////////////////////////////////////////////////
                 ; 0000 04CF 
                 ; 0000 04D0 
                 ; 0000 04D1 
                 ; 0000 04D2 
                 ; 0000 04D3 
                 ; 0000 04D4 
                 ; 0000 04D5 
                 ; 0000 04D6 
                 ; 0000 04D7 
                 ; 0000 04D8 
                 ; 0000 04D9 
                 ; 0000 04DA ///////////////////////// BATTERY_FOULT ////////////////////////////////////////////
                 ; 0000 04DB         if(BATTERY_FOULT==1){
0007e8 e0a0      	LDI  R26,LOW(_BATTERY_FOULT)
0007e9 e0b0      	LDI  R27,HIGH(_BATTERY_FOULT)
0007ea 940e 0eb2 	CALL __EEPROMRDB
0007ec 30e1      	CPI  R30,LOW(0x1)
0007ed f591      	BRNE _0x18D
                 ; 0000 04DC             if(UPS_STATE==0){
0007ee 2066      	TST  R6
0007ef f581      	BRNE _0x18E
                 ; 0000 04DD             char FoultPadetis;
                 ; 0000 04DE             static unsigned int Timer2;
                 ; 0000 04DF             Timer2++;
0007f0 9721      	SBIW R28,1
                 ;	FoultPadetis -> Y+0
0007f1 eaa3      	LDI  R26,LOW(_Timer2_S000000B003)
0007f2 e0b1      	LDI  R27,HIGH(_Timer2_S000000B003)
0007f3 91ed      	LD   R30,X+
0007f4 91fd      	LD   R31,X+
0007f5 9631      	ADIW R30,1
0007f6 93fe      	ST   -X,R31
0007f7 93ee      	ST   -X,R30
                 ; 0000 04E0                 if(Timer2>=3400){
0007f8 91a0 01a3 	LDS  R26,_Timer2_S000000B003
0007fa 91b0 01a4 	LDS  R27,_Timer2_S000000B003+1
0007fc 34a8      	CPI  R26,LOW(0xD48)
0007fd e0ed      	LDI  R30,HIGH(0xD48)
0007fe 07be      	CPC  R27,R30
0007ff f028      	BRLO _0x18F
                 ; 0000 04E1                 Timer2 = 0;
000800 e0e0      	LDI  R30,LOW(0)
000801 93e0 01a3 	STS  _Timer2_S000000B003,R30
000803 93e0 01a4 	STS  _Timer2_S000000B003+1,R30
                 ; 0000 04E2                 }
                 ; 0000 04E3             FoultPadetis = Timer2/200;
                 _0x18F:
000805 91a0 01a3 	LDS  R26,_Timer2_S000000B003
000807 91b0 01a4 	LDS  R27,_Timer2_S000000B003+1
000809 ece8      	LDI  R30,LOW(200)
00080a e0f0      	LDI  R31,HIGH(200)
00080b 940e 0e97 	CALL __DIVW21U
00080d 83e8      	ST   Y,R30
                 ; 0000 04E4             led_put_runing_text(FoultPadetis,"bAttErY FouLt");
00080e e0f0      	LDI  R31,0
00080f 93fa      	ST   -Y,R31
000810 93ea      	ST   -Y,R30
                +
000811 e6e6     +LDI R30 , LOW ( 2 * _0x0 + ( 18 ) )
000812 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 18 ) )
                 	__POINTW1FN _0x0,18
000813 93fa      	ST   -Y,R31
000814 93ea      	ST   -Y,R30
000815 dc99      	RCALL _led_put_runing_text
                 ; 0000 04E5 
                 ; 0000 04E6             LcdTaskas[0] = 0;
000816 e0e0      	LDI  R30,LOW(0)
000817 93e0 0168 	STS  _LcdTaskas,R30
                 ; 0000 04E7             LcdTaskas[1] = 0;
                +
000819 93e0 0169+STS _LcdTaskas + ( 1 ) , R30
                 	__PUTB1MN _LcdTaskas,1
                 ; 0000 04E8             LcdTaskas[2] = 0;
                +
00081b 93e0 016a+STS _LcdTaskas + ( 2 ) , R30
                 	__PUTB1MN _LcdTaskas,2
                 ; 0000 04E9             LcdTaskas[3] = 0;
                +
00081d 93e0 016b+STS _LcdTaskas + ( 3 ) , R30
                 	__PUTB1MN _LcdTaskas,3
                 ; 0000 04EA             }
00081f 9621      	ADIW R28,1
                 ; 0000 04EB         }
                 _0x18E:
                 ; 0000 04EC ////////////////////////////////////////////////////////////////////////////////////
                 ; 0000 04ED 
                 ; 0000 04EE 
                 ; 0000 04EF 
                 ; 0000 04F0 
                 ; 0000 04F1 
                 ; 0000 04F2 
                 ; 0000 04F3 
                 ; 0000 04F4 
                 ; 0000 04F5 
                 ; 0000 04F6 
                 ; 0000 04F7 
                 ; 0000 04F8 
                 ; 0000 04F9 
                 ; 0000 04FA ///////////////////////////// MYGTUKAI /////////////////////////////////////////////
                 ; 0000 04FB     // Kai nuspaustas tik 1 mygtukas
                 ; 0000 04FC         if((BUTTON[0]==1)&&(BUTTON[1]==0)&&(BUTTON[2]==0)&&(BUTTON[3]==0)){
                 _0x18D:
000820 91a0 0160 	LDS  R26,_BUTTON
000822 30a1      	CPI  R26,LOW(0x1)
000823 f461      	BRNE _0x191
                +
000824 91a0 0161+LDS R26 , _BUTTON + ( 1 )
                 	__GETB2MN _BUTTON,1
000826 30a0      	CPI  R26,LOW(0x0)
000827 f441      	BRNE _0x191
                +
000828 91a0 0162+LDS R26 , _BUTTON + ( 2 )
                 	__GETB2MN _BUTTON,2
00082a 30a0      	CPI  R26,LOW(0x0)
00082b f421      	BRNE _0x191
                +
00082c 91a0 0163+LDS R26 , _BUTTON + ( 3 )
                 	__GETB2MN _BUTTON,3
00082e 30a0      	CPI  R26,LOW(0x0)
00082f f009      	BREQ _0x192
                 _0x191:
000830 c004      	RJMP _0x190
                 _0x192:
                 ; 0000 04FD             if(UPS_STATE==0){
000831 2066      	TST  R6
000832 f411      	BRNE _0x193
                 ; 0000 04FE             UPS_STATE = 1;
000833 e0e1      	LDI  R30,LOW(1)
000834 2e6e      	MOV  R6,R30
                 ; 0000 04FF             }
                 ; 0000 0500         }
                 _0x193:
                 ; 0000 0501 
                 ; 0000 0502     // Kai nuspaustas tik 2 mygtukas:
                 ; 0000 0503     // Iskrovimo nutraukimas ir baterijos klaidos nuresetinimo:
                 ; 0000 0504         if((BUTTON[0]==0)&&(BUTTON[1]==1)&&(BUTTON[2]==0)&&(BUTTON[3]==0)){
                 _0x190:
000835 91a0 0160 	LDS  R26,_BUTTON
000837 30a0      	CPI  R26,LOW(0x0)
000838 f461      	BRNE _0x195
                +
000839 91a0 0161+LDS R26 , _BUTTON + ( 1 )
                 	__GETB2MN _BUTTON,1
00083b 30a1      	CPI  R26,LOW(0x1)
00083c f441      	BRNE _0x195
                +
00083d 91a0 0162+LDS R26 , _BUTTON + ( 2 )
                 	__GETB2MN _BUTTON,2
00083f 30a0      	CPI  R26,LOW(0x0)
000840 f421      	BRNE _0x195
                +
000841 91a0 0163+LDS R26 , _BUTTON + ( 3 )
                 	__GETB2MN _BUTTON,3
000843 30a0      	CPI  R26,LOW(0x0)
000844 f009      	BREQ _0x196
                 _0x195:
000845 c02b      	RJMP _0x194
                 _0x196:
                 ; 0000 0505             if(UPS_STATE==2){
000846 e0e2      	LDI  R30,LOW(2)
000847 15e6      	CP   R30,R6
000848 f449      	BRNE _0x197
                 ; 0000 0506             UPS_STATE = 1;// Vietoj iskrovimo ijungti krovima
000849 e0e1      	LDI  R30,LOW(1)
00084a 2e6e      	MOV  R6,R30
                 ; 0000 0507 
                 ; 0000 0508             // Iskrovimas nutrauktas samoningai todel savaitini
                 ; 0000 0509             // taimeri graziname i pradines vertes
                 ; 0000 050A             StartDischargeAfter(7,0,0,0);
00084b e0e7      	LDI  R30,LOW(7)
00084c 93ea      	ST   -Y,R30
00084d e0e0      	LDI  R30,LOW(0)
00084e 93ea      	ST   -Y,R30
00084f 93ea      	ST   -Y,R30
000850 93ea      	ST   -Y,R30
000851 dc91      	RCALL _StartDischargeAfter
                 ; 0000 050B             }
                 ; 0000 050C 
                 ; 0000 050D         // Jei buvo baterijos klaida laikant mygtuka ji nuresetinama
                 ; 0000 050E             if(BATTERY_FOULT==1){
                 _0x197:
000852 e0a0      	LDI  R26,LOW(_BATTERY_FOULT)
000853 e0b0      	LDI  R27,HIGH(_BATTERY_FOULT)
000854 940e 0eb2 	CALL __EEPROMRDB
000856 30e1      	CPI  R30,LOW(0x1)
000857 f4c1      	BRNE _0x198
                 ; 0000 050F             Timer10++;
000858 e7a4      	LDI  R26,LOW(_Timer10)
000859 e0b1      	LDI  R27,HIGH(_Timer10)
00085a 91ed      	LD   R30,X+
00085b 91fd      	LD   R31,X+
00085c 9631      	ADIW R30,1
00085d 93fe      	ST   -X,R31
00085e 93ee      	ST   -X,R30
                 ; 0000 0510                 if(Timer10>=2000){// ~ 2 sec
00085f 91a0 0174 	LDS  R26,_Timer10
000861 91b0 0175 	LDS  R27,_Timer10+1
000863 3da0      	CPI  R26,LOW(0x7D0)
000864 e0e7      	LDI  R30,HIGH(0x7D0)
000865 07be      	CPC  R27,R30
000866 f048      	BRLO _0x199
                 ; 0000 0511                 BATTERY_FOULT = 0;
000867 e0a0      	LDI  R26,LOW(_BATTERY_FOULT)
000868 e0b0      	LDI  R27,HIGH(_BATTERY_FOULT)
000869 e0e0      	LDI  R30,LOW(0)
00086a 940e 0ec6 	CALL __EEPROMWRB
                 ; 0000 0512                 Timer10 = 0;
00086c 93e0 0174 	STS  _Timer10,R30
00086e 93e0 0175 	STS  _Timer10+1,R30
                 ; 0000 0513                 }
                 ; 0000 0514             }
                 _0x199:
                 ; 0000 0515         }
                 _0x198:
                 ; 0000 0516         else{
000870 c005      	RJMP _0x19A
                 _0x194:
                 ; 0000 0517         Timer10 = 0;// Baterijos klaidos nuresetinimo taimeris
000871 e0e0      	LDI  R30,LOW(0)
000872 93e0 0174 	STS  _Timer10,R30
000874 93e0 0175 	STS  _Timer10+1,R30
                 ; 0000 0518         }
                 _0x19A:
                 ; 0000 0519 
                 ; 0000 051A     // Kai nuspaustas tik 3 mygtukas:
                 ; 0000 051B     // Iskrovimo ijungimas:
                 ; 0000 051C         if((BUTTON[0]==0)&&(BUTTON[1]==0)&&(BUTTON[2]==1)&&(BUTTON[3]==0)){
000876 91a0 0160 	LDS  R26,_BUTTON
000878 30a0      	CPI  R26,LOW(0x0)
000879 f461      	BRNE _0x19C
                +
00087a 91a0 0161+LDS R26 , _BUTTON + ( 1 )
                 	__GETB2MN _BUTTON,1
00087c 30a0      	CPI  R26,LOW(0x0)
00087d f441      	BRNE _0x19C
                +
00087e 91a0 0162+LDS R26 , _BUTTON + ( 2 )
                 	__GETB2MN _BUTTON,2
000880 30a1      	CPI  R26,LOW(0x1)
000881 f421      	BRNE _0x19C
                +
000882 91a0 0163+LDS R26 , _BUTTON + ( 3 )
                 	__GETB2MN _BUTTON,3
000884 30a0      	CPI  R26,LOW(0x0)
000885 f009      	BREQ _0x19D
                 _0x19C:
000886 c053      	RJMP _0x19B
                 _0x19D:
                 ; 0000 051D             if(UPS_STATE==0){
000887 2066      	TST  R6
000888 f011      	BREQ PC+3
000889 940c 08d9 	JMP _0x19E
                 ; 0000 051E                 if(SKIP==0){
00088b 2077      	TST  R7
00088c f4e1      	BRNE _0x19F
                 ; 0000 051F                 // Jei ups neuzimtas, SKIP'o nera, tai po ~2sec isijungs iskrovimas
                 ; 0000 0520                 Timer11++;
00088d e7a6      	LDI  R26,LOW(_Timer11)
00088e e0b1      	LDI  R27,HIGH(_Timer11)
00088f 91ed      	LD   R30,X+
000890 91fd      	LD   R31,X+
000891 9631      	ADIW R30,1
000892 93fe      	ST   -X,R31
000893 93ee      	ST   -X,R30
000894 9731      	SBIW R30,1
                 ; 0000 0521                     if(Timer11>2000){
000895 91a0 0176 	LDS  R26,_Timer11
000897 91b0 0177 	LDS  R27,_Timer11+1
000899 3da1      	CPI  R26,LOW(0x7D1)
00089a e0e7      	LDI  R30,HIGH(0x7D1)
00089b 07be      	CPC  R27,R30
00089c f058      	BRLO _0x1A0
                 ; 0000 0522                     UPS_STATE = 2;
00089d e0e2      	LDI  R30,LOW(2)
00089e 2e6e      	MOV  R6,R30
                 ; 0000 0523                     Timer11 = 0;
00089f e0e0      	LDI  R30,LOW(0)
0008a0 93e0 0176 	STS  _Timer11,R30
0008a2 93e0 0177 	STS  _Timer11+1,R30
                 ; 0000 0524                     BATTERY_FOULT = 0;
0008a4 e0a0      	LDI  R26,LOW(_BATTERY_FOULT)
0008a5 e0b0      	LDI  R27,HIGH(_BATTERY_FOULT)
0008a6 940e 0ec6 	CALL __EEPROMWRB
                 ; 0000 0525                     }
                 ; 0000 0526                 }
                 _0x1A0:
                 ; 0000 0527                 else{
0008a8 c030      	RJMP _0x1A1
                 _0x19F:
                 ; 0000 0528                 // Jei ups neuzimtas, SKIP'as yra rodyti, kad iskrovima ijungti neimanoma
                 ; 0000 0529                 int FoultPadetis;
                 ; 0000 052A                 Timer19++;
0008a9 9722      	SBIW R28,2
                 ;	FoultPadetis -> Y+0
0008aa e7ac      	LDI  R26,LOW(_Timer19)
0008ab e0b1      	LDI  R27,HIGH(_Timer19)
0008ac 91ed      	LD   R30,X+
0008ad 91fd      	LD   R31,X+
0008ae 9631      	ADIW R30,1
0008af 93fe      	ST   -X,R31
0008b0 93ee      	ST   -X,R30
                 ; 0000 052B                     if(Timer19>=3600){
0008b1 91a0 017c 	LDS  R26,_Timer19
0008b3 91b0 017d 	LDS  R27,_Timer19+1
0008b5 31a0      	CPI  R26,LOW(0xE10)
0008b6 e0ee      	LDI  R30,HIGH(0xE10)
0008b7 07be      	CPC  R27,R30
0008b8 f028      	BRLO _0x1A2
                 ; 0000 052C                     Timer19 = 0;
0008b9 e0e0      	LDI  R30,LOW(0)
0008ba 93e0 017c 	STS  _Timer19,R30
0008bc 93e0 017d 	STS  _Timer19+1,R30
                 ; 0000 052D                     }
                 ; 0000 052E                 FoultPadetis = Timer19/200;
                 _0x1A2:
0008be 91a0 017c 	LDS  R26,_Timer19
0008c0 91b0 017d 	LDS  R27,_Timer19+1
0008c2 ece8      	LDI  R30,LOW(200)
0008c3 e0f0      	LDI  R31,HIGH(200)
0008c4 940e 0e97 	CALL __DIVW21U
0008c6 83e8      	ST   Y,R30
0008c7 83f9      	STD  Y+1,R31
                 ; 0000 052F                 led_put_runing_text(FoultPadetis,"cAnt diSchArGE");
0008c8 93fa      	ST   -Y,R31
0008c9 93ea      	ST   -Y,R30
                +
0008ca e7e4     +LDI R30 , LOW ( 2 * _0x0 + ( 32 ) )
0008cb e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 32 ) )
                 	__POINTW1FN _0x0,32
0008cc 93fa      	ST   -Y,R31
0008cd 93ea      	ST   -Y,R30
0008ce dbe0      	RCALL _led_put_runing_text
                 ; 0000 0530                 LcdTaskas[0] = 0;
0008cf e0e0      	LDI  R30,LOW(0)
0008d0 93e0 0168 	STS  _LcdTaskas,R30
                 ; 0000 0531                 LcdTaskas[1] = 0;
                +
0008d2 93e0 0169+STS _LcdTaskas + ( 1 ) , R30
                 	__PUTB1MN _LcdTaskas,1
                 ; 0000 0532                 LcdTaskas[2] = 0;
                +
0008d4 93e0 016a+STS _LcdTaskas + ( 2 ) , R30
                 	__PUTB1MN _LcdTaskas,2
                 ; 0000 0533                 LcdTaskas[3] = 0;
                +
0008d6 93e0 016b+STS _LcdTaskas + ( 3 ) , R30
                 	__PUTB1MN _LcdTaskas,3
                 ; 0000 0534                 }
0008d8 9622      	ADIW R28,2
                 _0x1A1:
                 ; 0000 0535             }
                 ; 0000 0536         }
                 _0x19E:
                 ; 0000 0537         else{
0008d9 c009      	RJMP _0x1A3
                 _0x19B:
                 ; 0000 0538         Timer11 = 0;
0008da e0e0      	LDI  R30,LOW(0)
0008db 93e0 0176 	STS  _Timer11,R30
0008dd 93e0 0177 	STS  _Timer11+1,R30
                 ; 0000 0539         Timer19 = 0;
0008df 93e0 017c 	STS  _Timer19,R30
0008e1 93e0 017d 	STS  _Timer19+1,R30
                 ; 0000 053A         }
                 _0x1A3:
                 ; 0000 053B 
                 ; 0000 053C     // Kai nuspaustas 4 mygtukas, o su visais kitais valdoma
                 ; 0000 053D         if(BUTTON[3]==1){
                +
0008e3 91a0 0163+LDS R26 , _BUTTON + ( 3 )
                 	__GETB2MN _BUTTON,3
0008e5 30a1      	CPI  R26,LOW(0x1)
0008e6 f011      	BREQ PC+3
0008e7 940c 0e39 	JMP _0x1A4
                 ; 0000 053E 
                 ; 0000 053F             // Langu valdymas
                 ; 0000 0540             if(BUTTON[2]==1){
                +
0008e9 91a0 0162+LDS R26 , _BUTTON + ( 2 )
                 	__GETB2MN _BUTTON,2
0008eb 30a1      	CPI  R26,LOW(0x1)
0008ec f469      	BRNE _0x1A5
                 ; 0000 0541                 if(LanguTrigeris==0){
0008ed 91e0 0182 	LDS  R30,_LanguTrigeris
0008ef 30e0      	CPI  R30,0
0008f0 f441      	BRNE _0x1A6
                 ; 0000 0542                 LanguTrigeris = 1;
0008f1 e0e1      	LDI  R30,LOW(1)
0008f2 93e0 0182 	STS  _LanguTrigeris,R30
                 ; 0000 0543                 LangoAdresas++;
0008f4 94c3      	INC  R12
                 ; 0000 0544                     if(LangoAdresas>4){
0008f5 e0e4      	LDI  R30,LOW(4)
0008f6 15ec      	CP   R30,R12
0008f7 f408      	BRSH _0x1A7
                 ; 0000 0545                     LangoAdresas = 0;
0008f8 24cc      	CLR  R12
                 ; 0000 0546                     }
                 ; 0000 0547                 }
                 _0x1A7:
                 ; 0000 0548             }
                 _0x1A6:
                 ; 0000 0549             else{
0008f9 c003      	RJMP _0x1A8
                 _0x1A5:
                 ; 0000 054A             LanguTrigeris = 0;
0008fa e0e0      	LDI  R30,LOW(0)
0008fb 93e0 0182 	STS  _LanguTrigeris,R30
                 ; 0000 054B             }
                 _0x1A8:
                 ; 0000 054C 
                 ; 0000 054D             // Paskutinio iskrovimo langas
                 ; 0000 054E             if(LangoAdresas==0){
0008fd 20cc      	TST  R12
0008fe f011      	BREQ PC+3
0008ff 940c 0a7d 	JMP _0x1A9
                 ; 0000 054F                 if(UPS_STATE==2){
000901 e0e2      	LDI  R30,LOW(2)
000902 15e6      	CP   R30,R6
000903 f011      	BREQ PC+3
000904 940c 0a2a 	JMP _0x1AA
                 ; 0000 0550                     if(Timer9>=10){
000906 91a0 0172 	LDS  R26,_Timer9
000908 91b0 0173 	LDS  R27,_Timer9+1
00090a 971a      	SBIW R26,10
00090b f410      	BRSH PC+3
00090c 940c 095d 	JMP _0x1AB
                 ; 0000 0551                     LcdText[0] = NumToIndex(Timer9/10);
00090e 91a0 0172 	LDS  R26,_Timer9
000910 91b0 0173 	LDS  R27,_Timer9+1
000912 e0ea      	LDI  R30,LOW(10)
000913 e0f0      	LDI  R31,HIGH(10)
000914 940e 0e97 	CALL __DIVW21U
000916 93ea      	ST   -Y,R30
000917 940e 006d 	CALL _NumToIndex
000919 93e0 0164 	STS  _LcdText,R30
                 ; 0000 0552                     LcdText[1] = NumToIndex(Timer9 - (Timer9/10)*10);
00091b 91a0 0172 	LDS  R26,_Timer9
00091d 91b0 0173 	LDS  R27,_Timer9+1
00091f e0ea      	LDI  R30,LOW(10)
000920 e0f0      	LDI  R31,HIGH(10)
000921 940e 0e97 	CALL __DIVW21U
000923 e0aa      	LDI  R26,LOW(10)
000924 e0b0      	LDI  R27,HIGH(10)
000925 940e 0e8f 	CALL __MULW12U
000927 91a0 0172 	LDS  R26,_Timer9
000929 91b0 0173 	LDS  R27,_Timer9+1
00092b 1bae      	SUB  R26,R30
00092c 0bbf      	SBC  R27,R31
00092d 93aa      	ST   -Y,R26
00092e 940e 006d 	CALL _NumToIndex
                +
000930 93e0 0165+STS _LcdText + ( 1 ) , R30
                 	__PUTB1MN _LcdText,1
                 ; 0000 0553                     LcdText[2] = NumToIndex(Timer8/10);
000932 91a0 0170 	LDS  R26,_Timer8
000934 91b0 0171 	LDS  R27,_Timer8+1
000936 e0ea      	LDI  R30,LOW(10)
000937 e0f0      	LDI  R31,HIGH(10)
000938 940e 0e97 	CALL __DIVW21U
00093a 93ea      	ST   -Y,R30
00093b 940e 006d 	CALL _NumToIndex
                +
00093d 93e0 0166+STS _LcdText + ( 2 ) , R30
                 	__PUTB1MN _LcdText,2
                 ; 0000 0554                     LcdText[3] = NumToIndex(Timer8 - (Timer8/10)*10);
00093f 91a0 0170 	LDS  R26,_Timer8
000941 91b0 0171 	LDS  R27,_Timer8+1
000943 e0ea      	LDI  R30,LOW(10)
000944 e0f0      	LDI  R31,HIGH(10)
000945 940e 0e97 	CALL __DIVW21U
000947 e0aa      	LDI  R26,LOW(10)
000948 e0b0      	LDI  R27,HIGH(10)
000949 940e 0e8f 	CALL __MULW12U
00094b 91a0 0170 	LDS  R26,_Timer8
00094d 91b0 0171 	LDS  R27,_Timer8+1
00094f 1bae      	SUB  R26,R30
000950 0bbf      	SBC  R27,R31
000951 93aa      	ST   -Y,R26
000952 940e 006d 	CALL _NumToIndex
                +
000954 93e0 0167+STS _LcdText + ( 3 ) , R30
                 	__PUTB1MN _LcdText,3
                 ; 0000 0555 
                 ; 0000 0556                     LcdTaskas[0] = 0;
000956 e0e0      	LDI  R30,LOW(0)
000957 93e0 0168 	STS  _LcdTaskas,R30
                 ; 0000 0557                     LcdTaskas[1] = 1;
000959 e0e1      	LDI  R30,LOW(1)
                +
00095a 93e0 0169+STS _LcdTaskas + ( 1 ) , R30
                 	__PUTB1MN _LcdTaskas,1
                 ; 0000 0558                     LcdTaskas[2] = 0;
00095c c0c6      	RJMP _0x21B
                 ; 0000 0559                     LcdTaskas[3] = 0;
                 ; 0000 055A                     }
                 ; 0000 055B                     else if(Timer9==0){
                 _0x1AB:
00095d 91e0 0172 	LDS  R30,_Timer9
00095f 91f0 0173 	LDS  R31,_Timer9+1
000961 9730      	SBIW R30,0
000962 f011      	BREQ PC+3
000963 940c 09be 	JMP _0x1AD
                 ; 0000 055C                     LcdText[0] = NumToIndex(Timer8/10);
000965 91a0 0170 	LDS  R26,_Timer8
000967 91b0 0171 	LDS  R27,_Timer8+1
000969 e0ea      	LDI  R30,LOW(10)
00096a e0f0      	LDI  R31,HIGH(10)
00096b 940e 0e97 	CALL __DIVW21U
00096d 93ea      	ST   -Y,R30
00096e 940e 006d 	CALL _NumToIndex
000970 93e0 0164 	STS  _LcdText,R30
                 ; 0000 055D                     LcdText[1] = NumToIndex(Timer8 - (Timer8/10)*10);
000972 91a0 0170 	LDS  R26,_Timer8
000974 91b0 0171 	LDS  R27,_Timer8+1
000976 e0ea      	LDI  R30,LOW(10)
000977 e0f0      	LDI  R31,HIGH(10)
000978 940e 0e97 	CALL __DIVW21U
00097a e0aa      	LDI  R26,LOW(10)
00097b e0b0      	LDI  R27,HIGH(10)
00097c 940e 0e8f 	CALL __MULW12U
00097e 91a0 0170 	LDS  R26,_Timer8
000980 91b0 0171 	LDS  R27,_Timer8+1
000982 1bae      	SUB  R26,R30
000983 0bbf      	SBC  R27,R31
000984 93aa      	ST   -Y,R26
000985 940e 006d 	CALL _NumToIndex
                +
000987 93e0 0165+STS _LcdText + ( 1 ) , R30
                 	__PUTB1MN _LcdText,1
                 ; 0000 055E                     LcdText[2] = NumToIndex(Timer7/10);
000989 91a0 016e 	LDS  R26,_Timer7
00098b 91b0 016f 	LDS  R27,_Timer7+1
00098d e0ea      	LDI  R30,LOW(10)
00098e e0f0      	LDI  R31,HIGH(10)
00098f 940e 0e97 	CALL __DIVW21U
000991 93ea      	ST   -Y,R30
000992 940e 006d 	CALL _NumToIndex
                +
000994 93e0 0166+STS _LcdText + ( 2 ) , R30
                 	__PUTB1MN _LcdText,2
                 ; 0000 055F                     LcdText[3] = NumToIndex(Timer7 - (Timer7/10)*10);
000996 91a0 016e 	LDS  R26,_Timer7
000998 91b0 016f 	LDS  R27,_Timer7+1
00099a e0ea      	LDI  R30,LOW(10)
00099b e0f0      	LDI  R31,HIGH(10)
00099c 940e 0e97 	CALL __DIVW21U
00099e e0aa      	LDI  R26,LOW(10)
00099f e0b0      	LDI  R27,HIGH(10)
0009a0 940e 0e8f 	CALL __MULW12U
0009a2 91a0 016e 	LDS  R26,_Timer7
0009a4 91b0 016f 	LDS  R27,_Timer7+1
0009a6 1bae      	SUB  R26,R30
0009a7 0bbf      	SBC  R27,R31
0009a8 93aa      	ST   -Y,R26
0009a9 940e 006d 	CALL _NumToIndex
                +
0009ab 93e0 0167+STS _LcdText + ( 3 ) , R30
                 	__PUTB1MN _LcdText,3
                 ; 0000 0560 
                 ; 0000 0561                     LcdTaskas[0] = 0;
0009ad e0e0      	LDI  R30,LOW(0)
0009ae 93e0 0168 	STS  _LcdTaskas,R30
                 ; 0000 0562                         if(Timer24<=300){
0009b0 91a0 0180 	LDS  R26,_Timer24
0009b2 91b0 0181 	LDS  R27,_Timer24+1
0009b4 32ad      	CPI  R26,LOW(0x12D)
0009b5 e0e1      	LDI  R30,HIGH(0x12D)
0009b6 07be      	CPC  R27,R30
0009b7 f410      	BRSH _0x1AE
                 ; 0000 0563                         LcdTaskas[1] = 1;
0009b8 e0e1      	LDI  R30,LOW(1)
0009b9 c001      	RJMP _0x21C
                 ; 0000 0564                         }
                 ; 0000 0565                         else{
                 _0x1AE:
                 ; 0000 0566                         LcdTaskas[1] = 0;
0009ba e0e0      	LDI  R30,LOW(0)
                 _0x21C:
                +
0009bb 93e0 0169+STS _LcdTaskas + ( 1 ) , R30
                 	__PUTB1MN _LcdTaskas,1
                 ; 0000 0567                         }
                 ; 0000 0568                     LcdTaskas[2] = 0;
0009bd c065      	RJMP _0x21B
                 ; 0000 0569                     LcdTaskas[3] = 0;
                 ; 0000 056A                     }
                 ; 0000 056B                     else if((Timer9>=1)&&(Timer9<=9)){
                 _0x1AD:
0009be 91a0 0172 	LDS  R26,_Timer9
0009c0 91b0 0173 	LDS  R27,_Timer9+1
0009c2 9711      	SBIW R26,1
0009c3 f030      	BRLO _0x1B2
0009c4 91a0 0172 	LDS  R26,_Timer9
0009c6 91b0 0173 	LDS  R27,_Timer9+1
0009c8 971a      	SBIW R26,10
0009c9 f008      	BRLO _0x1B3
                 _0x1B2:
0009ca c05e      	RJMP _0x1B1
                 _0x1B3:
                 ; 0000 056C                     LcdText[0] = NumToIndex(Timer9 - (Timer9/10)*10);
0009cb 91a0 0172 	LDS  R26,_Timer9
0009cd 91b0 0173 	LDS  R27,_Timer9+1
0009cf e0ea      	LDI  R30,LOW(10)
0009d0 e0f0      	LDI  R31,HIGH(10)
0009d1 940e 0e97 	CALL __DIVW21U
0009d3 e0aa      	LDI  R26,LOW(10)
0009d4 e0b0      	LDI  R27,HIGH(10)
0009d5 940e 0e8f 	CALL __MULW12U
0009d7 91a0 0172 	LDS  R26,_Timer9
0009d9 91b0 0173 	LDS  R27,_Timer9+1
0009db 1bae      	SUB  R26,R30
0009dc 0bbf      	SBC  R27,R31
0009dd 93aa      	ST   -Y,R26
0009de 940e 006d 	CALL _NumToIndex
0009e0 93e0 0164 	STS  _LcdText,R30
                 ; 0000 056D                     LcdText[1] = NumToIndex(Timer8/10);
0009e2 91a0 0170 	LDS  R26,_Timer8
0009e4 91b0 0171 	LDS  R27,_Timer8+1
0009e6 e0ea      	LDI  R30,LOW(10)
0009e7 e0f0      	LDI  R31,HIGH(10)
0009e8 940e 0e97 	CALL __DIVW21U
0009ea 93ea      	ST   -Y,R30
0009eb 940e 006d 	CALL _NumToIndex
                +
0009ed 93e0 0165+STS _LcdText + ( 1 ) , R30
                 	__PUTB1MN _LcdText,1
                 ; 0000 056E                     LcdText[2] = NumToIndex(Timer8 - (Timer8/10)*10);
0009ef 91a0 0170 	LDS  R26,_Timer8
0009f1 91b0 0171 	LDS  R27,_Timer8+1
0009f3 e0ea      	LDI  R30,LOW(10)
0009f4 e0f0      	LDI  R31,HIGH(10)
0009f5 940e 0e97 	CALL __DIVW21U
0009f7 e0aa      	LDI  R26,LOW(10)
0009f8 e0b0      	LDI  R27,HIGH(10)
0009f9 940e 0e8f 	CALL __MULW12U
0009fb 91a0 0170 	LDS  R26,_Timer8
0009fd 91b0 0171 	LDS  R27,_Timer8+1
0009ff 1bae      	SUB  R26,R30
000a00 0bbf      	SBC  R27,R31
000a01 93aa      	ST   -Y,R26
000a02 940e 006d 	CALL _NumToIndex
                +
000a04 93e0 0166+STS _LcdText + ( 2 ) , R30
                 	__PUTB1MN _LcdText,2
                 ; 0000 056F                     LcdText[3] = NumToIndex(Timer7/10);
000a06 91a0 016e 	LDS  R26,_Timer7
000a08 91b0 016f 	LDS  R27,_Timer7+1
000a0a e0ea      	LDI  R30,LOW(10)
000a0b e0f0      	LDI  R31,HIGH(10)
000a0c 940e 0e97 	CALL __DIVW21U
000a0e 93ea      	ST   -Y,R30
000a0f 940e 006d 	CALL _NumToIndex
                +
000a11 93e0 0167+STS _LcdText + ( 3 ) , R30
                 	__PUTB1MN _LcdText,3
                 ; 0000 0570 
                 ; 0000 0571                     LcdTaskas[0] = 1;
000a13 e0e1      	LDI  R30,LOW(1)
000a14 93e0 0168 	STS  _LcdTaskas,R30
                 ; 0000 0572                     LcdTaskas[1] = 0;
000a16 e0e0      	LDI  R30,LOW(0)
                +
000a17 93e0 0169+STS _LcdTaskas + ( 1 ) , R30
                 	__PUTB1MN _LcdTaskas,1
                 ; 0000 0573                         if(Timer24<=300){
000a19 91a0 0180 	LDS  R26,_Timer24
000a1b 91b0 0181 	LDS  R27,_Timer24+1
000a1d 32ad      	CPI  R26,LOW(0x12D)
000a1e e0e1      	LDI  R30,HIGH(0x12D)
000a1f 07be      	CPC  R27,R30
000a20 f410      	BRSH _0x1B4
                 ; 0000 0574                         LcdTaskas[2] = 1;
000a21 e0e1      	LDI  R30,LOW(1)
000a22 c001      	RJMP _0x21D
                 ; 0000 0575                         }
                 ; 0000 0576                         else{
                 _0x1B4:
                 ; 0000 0577                         LcdTaskas[2] = 0;
                 _0x21B:
000a23 e0e0      	LDI  R30,LOW(0)
                 _0x21D:
                +
000a24 93e0 016a+STS _LcdTaskas + ( 2 ) , R30
                 	__PUTB1MN _LcdTaskas,2
                 ; 0000 0578                         }
                 ; 0000 0579                     LcdTaskas[3] = 0;
000a26 e0e0      	LDI  R30,LOW(0)
                +
000a27 93e0 016b+STS _LcdTaskas + ( 3 ) , R30
                 	__PUTB1MN _LcdTaskas,3
                 ; 0000 057A                     }
                 ; 0000 057B                 }
                 _0x1B1:
                 ; 0000 057C                 else{
000a29 c053      	RJMP _0x1B6
                 _0x1AA:
                 ; 0000 057D                 LcdText[0] = NumToIndex(Timer5/10);
000a2a e0a3      	LDI  R26,LOW(_Timer5)
000a2b e0b0      	LDI  R27,HIGH(_Timer5)
000a2c 940e 0eae 	CALL __EEPROMRDW
000a2e 01df      	MOVW R26,R30
000a2f e0ea      	LDI  R30,LOW(10)
000a30 e0f0      	LDI  R31,HIGH(10)
000a31 940e 0e97 	CALL __DIVW21U
000a33 93ea      	ST   -Y,R30
000a34 940e 006d 	CALL _NumToIndex
000a36 93e0 0164 	STS  _LcdText,R30
                 ; 0000 057E                 LcdText[1] = NumToIndex(Timer5 - (Timer5/10)*10);
000a38 e0a3      	LDI  R26,LOW(_Timer5)
000a39 e0b0      	LDI  R27,HIGH(_Timer5)
000a3a 940e 0eae 	CALL __EEPROMRDW
000a3c 01bf      	MOVW R22,R30
000a3d 01df      	MOVW R26,R30
000a3e e0ea      	LDI  R30,LOW(10)
000a3f e0f0      	LDI  R31,HIGH(10)
000a40 940e 0e97 	CALL __DIVW21U
000a42 e0aa      	LDI  R26,LOW(10)
000a43 e0b0      	LDI  R27,HIGH(10)
000a44 940e 0e8f 	CALL __MULW12U
000a46 01db      	MOVW R26,R22
000a47 1bae      	SUB  R26,R30
000a48 0bbf      	SBC  R27,R31
000a49 93aa      	ST   -Y,R26
000a4a 940e 006d 	CALL _NumToIndex
                +
000a4c 93e0 0165+STS _LcdText + ( 1 ) , R30
                 	__PUTB1MN _LcdText,1
                 ; 0000 057F                 LcdText[2] = NumToIndex(Timer4/10);
000a4e e0a1      	LDI  R26,LOW(_Timer4)
000a4f e0b0      	LDI  R27,HIGH(_Timer4)
000a50 940e 0eae 	CALL __EEPROMRDW
000a52 01df      	MOVW R26,R30
000a53 e0ea      	LDI  R30,LOW(10)
000a54 e0f0      	LDI  R31,HIGH(10)
000a55 940e 0e97 	CALL __DIVW21U
000a57 93ea      	ST   -Y,R30
000a58 940e 006d 	CALL _NumToIndex
                +
000a5a 93e0 0166+STS _LcdText + ( 2 ) , R30
                 	__PUTB1MN _LcdText,2
                 ; 0000 0580                 LcdText[3] = NumToIndex(Timer4 - (Timer4/10)*10);
000a5c e0a1      	LDI  R26,LOW(_Timer4)
000a5d e0b0      	LDI  R27,HIGH(_Timer4)
000a5e 940e 0eae 	CALL __EEPROMRDW
000a60 01bf      	MOVW R22,R30
000a61 01df      	MOVW R26,R30
000a62 e0ea      	LDI  R30,LOW(10)
000a63 e0f0      	LDI  R31,HIGH(10)
000a64 940e 0e97 	CALL __DIVW21U
000a66 e0aa      	LDI  R26,LOW(10)
000a67 e0b0      	LDI  R27,HIGH(10)
000a68 940e 0e8f 	CALL __MULW12U
000a6a 01db      	MOVW R26,R22
000a6b 1bae      	SUB  R26,R30
000a6c 0bbf      	SBC  R27,R31
000a6d 93aa      	ST   -Y,R26
000a6e 940e 006d 	CALL _NumToIndex
                +
000a70 93e0 0167+STS _LcdText + ( 3 ) , R30
                 	__PUTB1MN _LcdText,3
                 ; 0000 0581 
                 ; 0000 0582                 LcdTaskas[0] = 0;
000a72 e0e0      	LDI  R30,LOW(0)
000a73 93e0 0168 	STS  _LcdTaskas,R30
                 ; 0000 0583                 LcdTaskas[1] = 1;
000a75 e0e1      	LDI  R30,LOW(1)
                +
000a76 93e0 0169+STS _LcdTaskas + ( 1 ) , R30
                 	__PUTB1MN _LcdTaskas,1
                 ; 0000 0584                 LcdTaskas[2] = 0;
000a78 e0e0      	LDI  R30,LOW(0)
                +
000a79 93e0 016a+STS _LcdTaskas + ( 2 ) , R30
                 	__PUTB1MN _LcdTaskas,2
                 ; 0000 0585                 LcdTaskas[3] = 0;
                +
000a7b 93e0 016b+STS _LcdTaskas + ( 3 ) , R30
                 	__PUTB1MN _LcdTaskas,3
                 ; 0000 0586                 }
                 _0x1B6:
                 ; 0000 0587             }
                 ; 0000 0588 
                 ; 0000 0589             // Dabartine itampa
                 ; 0000 058A             if(LangoAdresas==1){
                 _0x1A9:
000a7d e0e1      	LDI  R30,LOW(1)
000a7e 15ec      	CP   R30,R12
000a7f f011      	BREQ PC+3
000a80 940c 0b60 	JMP _0x1B7
                 ; 0000 058B             char Padetis;
                 ; 0000 058C             static unsigned int Timer26;
                 ; 0000 058D                 if(Timer26<=1500){
000a82 9721      	SBIW R28,1
                 ;	Padetis -> Y+0
000a83 91a0 01a5 	LDS  R26,_Timer26_S000000B003
000a85 91b0 01a6 	LDS  R27,_Timer26_S000000B003+1
000a87 3dad      	CPI  R26,LOW(0x5DD)
000a88 e0e5      	LDI  R30,HIGH(0x5DD)
000a89 07be      	CPC  R27,R30
000a8a f438      	BRSH _0x1B8
                 ; 0000 058E                 Timer26++;
000a8b eaa5      	LDI  R26,LOW(_Timer26_S000000B003)
000a8c e0b1      	LDI  R27,HIGH(_Timer26_S000000B003)
000a8d 91ed      	LD   R30,X+
000a8e 91fd      	LD   R31,X+
000a8f 9631      	ADIW R30,1
000a90 93fe      	ST   -X,R31
000a91 93ee      	ST   -X,R30
                 ; 0000 058F                 }
                 ; 0000 0590             Padetis = Timer26/300;
                 _0x1B8:
000a92 91a0 01a5 	LDS  R26,_Timer26_S000000B003
000a94 91b0 01a6 	LDS  R27,_Timer26_S000000B003+1
000a96 e2ec      	LDI  R30,LOW(300)
000a97 e0f1      	LDI  R31,HIGH(300)
000a98 940e 0e97 	CALL __DIVW21U
000a9a 83e8      	ST   Y,R30
                 ; 0000 0591 
                 ; 0000 0592             LcdTaskas[0] = 0;
000a9b e0e0      	LDI  R30,LOW(0)
000a9c 93e0 0168 	STS  _LcdTaskas,R30
                 ; 0000 0593             LcdTaskas[1] = 0;
                +
000a9e 93e0 0169+STS _LcdTaskas + ( 1 ) , R30
                 	__PUTB1MN _LcdTaskas,1
                 ; 0000 0594             LcdTaskas[2] = 0;
                +
000aa0 93e0 016a+STS _LcdTaskas + ( 2 ) , R30
                 	__PUTB1MN _LcdTaskas,2
                 ; 0000 0595             LcdTaskas[3] = 0;
                +
000aa2 93e0 016b+STS _LcdTaskas + ( 3 ) , R30
                 	__PUTB1MN _LcdTaskas,3
                 ; 0000 0596                 if(Padetis==1){
000aa4 81a8      	LD   R26,Y
000aa5 30a1      	CPI  R26,LOW(0x1)
000aa6 f449      	BRNE _0x1B9
                 ; 0000 0597                 LcdText[0] = ' ';
000aa7 e2e0      	LDI  R30,LOW(32)
000aa8 93e0 0164 	STS  _LcdText,R30
                 ; 0000 0598                 LcdText[1] = ' ';
                +
000aaa 93e0 0165+STS _LcdText + ( 1 ) , R30
                 	__PUTB1MN _LcdText,1
                 ; 0000 0599                 LcdText[2] = ' ';
                +
000aac 93e0 0166+STS _LcdText + ( 2 ) , R30
                 	__PUTB1MN _LcdText,2
                 ; 0000 059A                 LcdText[3] = 'U';
000aae e5e5      	LDI  R30,LOW(85)
000aaf c0ac      	RJMP _0x21E
                 ; 0000 059B                 }
                 ; 0000 059C                 else if(Padetis==2){
                 _0x1B9:
000ab0 81a8      	LD   R26,Y
000ab1 30a2      	CPI  R26,LOW(0x2)
000ab2 f451      	BRNE _0x1BB
                 ; 0000 059D                 LcdText[0] = ' ';
000ab3 e2e0      	LDI  R30,LOW(32)
000ab4 93e0 0164 	STS  _LcdText,R30
                 ; 0000 059E                 LcdText[1] = ' ';
                +
000ab6 93e0 0165+STS _LcdText + ( 1 ) , R30
                 	__PUTB1MN _LcdText,1
                 ; 0000 059F                 LcdText[2] = 'U';
000ab8 e5e5      	LDI  R30,LOW(85)
                +
000ab9 93e0 0166+STS _LcdText + ( 2 ) , R30
                 	__PUTB1MN _LcdText,2
                 ; 0000 05A0                 LcdText[3] = '=';
000abb e3ed      	LDI  R30,LOW(61)
000abc c09f      	RJMP _0x21E
                 ; 0000 05A1                 }
                 ; 0000 05A2                 else if(Padetis==3){
                 _0x1BB:
000abd 81a8      	LD   R26,Y
000abe 30a3      	CPI  R26,LOW(0x3)
000abf f4a9      	BRNE _0x1BD
                 ; 0000 05A3                 LcdText[0] = ' ';
000ac0 e2e0      	LDI  R30,LOW(32)
000ac1 93e0 0164 	STS  _LcdText,R30
                 ; 0000 05A4                 LcdText[1] = 'U';
000ac3 e5e5      	LDI  R30,LOW(85)
                +
000ac4 93e0 0165+STS _LcdText + ( 1 ) , R30
                 	__PUTB1MN _LcdText,1
                 ; 0000 05A5                 LcdText[2] = '=';
000ac6 e3ed      	LDI  R30,LOW(61)
                +
000ac7 93e0 0166+STS _LcdText + ( 2 ) , R30
                 	__PUTB1MN _LcdText,2
                 ; 0000 05A6                 LcdText[3] = NumToIndex( BATTERY_VOLTAGE/100 );
000ac9 91a0 0183 	LDS  R26,_BATTERY_VOLTAGE
000acb 91b0 0184 	LDS  R27,_BATTERY_VOLTAGE+1
000acd e6e4      	LDI  R30,LOW(100)
000ace e0f0      	LDI  R31,HIGH(100)
000acf 940e 0e97 	CALL __DIVW21U
000ad1 93ea      	ST   -Y,R30
000ad2 940e 006d 	CALL _NumToIndex
000ad4 c087      	RJMP _0x21E
                 ; 0000 05A7                 }
                 ; 0000 05A8                 else if(Padetis==4){
                 _0x1BD:
000ad5 81a8      	LD   R26,Y
000ad6 30a4      	CPI  R26,LOW(0x4)
000ad7 f591      	BRNE _0x1BF
                 ; 0000 05A9                 LcdText[0] = 'U';
000ad8 e5e5      	LDI  R30,LOW(85)
000ad9 93e0 0164 	STS  _LcdText,R30
                 ; 0000 05AA                 LcdText[1] = '=';
000adb e3ed      	LDI  R30,LOW(61)
                +
000adc 93e0 0165+STS _LcdText + ( 1 ) , R30
                 	__PUTB1MN _LcdText,1
                 ; 0000 05AB                 LcdText[2] = NumToIndex( BATTERY_VOLTAGE/100 );
000ade 91a0 0183 	LDS  R26,_BATTERY_VOLTAGE
000ae0 91b0 0184 	LDS  R27,_BATTERY_VOLTAGE+1
000ae2 e6e4      	LDI  R30,LOW(100)
000ae3 e0f0      	LDI  R31,HIGH(100)
000ae4 940e 0e97 	CALL __DIVW21U
000ae6 93ea      	ST   -Y,R30
000ae7 940e 006d 	CALL _NumToIndex
                +
000ae9 93e0 0166+STS _LcdText + ( 2 ) , R30
                 	__PUTB1MN _LcdText,2
                 ; 0000 05AC                 LcdText[3] = NumToIndex( (BATTERY_VOLTAGE-(BATTERY_VOLTAGE/100)*100)/10);
000aeb 91a0 0183 	LDS  R26,_BATTERY_VOLTAGE
000aed 91b0 0184 	LDS  R27,_BATTERY_VOLTAGE+1
000aef e6e4      	LDI  R30,LOW(100)
000af0 e0f0      	LDI  R31,HIGH(100)
000af1 940e 0e97 	CALL __DIVW21U
000af3 e6a4      	LDI  R26,LOW(100)
000af4 e0b0      	LDI  R27,HIGH(100)
000af5 940e 0e8f 	CALL __MULW12U
000af7 91a0 0183 	LDS  R26,_BATTERY_VOLTAGE
000af9 91b0 0184 	LDS  R27,_BATTERY_VOLTAGE+1
000afb 1bae      	SUB  R26,R30
000afc 0bbf      	SBC  R27,R31
000afd e0ea      	LDI  R30,LOW(10)
000afe e0f0      	LDI  R31,HIGH(10)
000aff 940e 0e97 	CALL __DIVW21U
000b01 93ea      	ST   -Y,R30
000b02 940e 006d 	CALL _NumToIndex
                +
000b04 93e0 0167+STS _LcdText + ( 3 ) , R30
                 	__PUTB1MN _LcdText,3
                 ; 0000 05AD                 LcdTaskas[3] = 1;
000b06 e0e1      	LDI  R30,LOW(1)
                +
000b07 93e0 016b+STS _LcdTaskas + ( 3 ) , R30
                 	__PUTB1MN _LcdTaskas,3
                 ; 0000 05AE                 }
                 ; 0000 05AF                 else if(Padetis==5){
000b09 c054      	RJMP _0x1C0
                 _0x1BF:
000b0a 81a8      	LD   R26,Y
000b0b 30a5      	CPI  R26,LOW(0x5)
000b0c f011      	BREQ PC+3
000b0d 940c 0b55 	JMP _0x1C1
                 ; 0000 05B0                 LcdText[0] = '=';
000b0f e3ed      	LDI  R30,LOW(61)
000b10 93e0 0164 	STS  _LcdText,R30
                 ; 0000 05B1                 LcdText[1] = NumToIndex( BATTERY_VOLTAGE/100 );
000b12 91a0 0183 	LDS  R26,_BATTERY_VOLTAGE
000b14 91b0 0184 	LDS  R27,_BATTERY_VOLTAGE+1
000b16 e6e4      	LDI  R30,LOW(100)
000b17 e0f0      	LDI  R31,HIGH(100)
000b18 940e 0e97 	CALL __DIVW21U
000b1a 93ea      	ST   -Y,R30
000b1b 940e 006d 	CALL _NumToIndex
                +
000b1d 93e0 0165+STS _LcdText + ( 1 ) , R30
                 	__PUTB1MN _LcdText,1
                 ; 0000 05B2                 LcdText[2] = NumToIndex( (BATTERY_VOLTAGE-(BATTERY_VOLTAGE/100)*100)/10);
000b1f 91a0 0183 	LDS  R26,_BATTERY_VOLTAGE
000b21 91b0 0184 	LDS  R27,_BATTERY_VOLTAGE+1
000b23 e6e4      	LDI  R30,LOW(100)
000b24 e0f0      	LDI  R31,HIGH(100)
000b25 940e 0e97 	CALL __DIVW21U
000b27 e6a4      	LDI  R26,LOW(100)
000b28 e0b0      	LDI  R27,HIGH(100)
000b29 940e 0e8f 	CALL __MULW12U
000b2b 91a0 0183 	LDS  R26,_BATTERY_VOLTAGE
000b2d 91b0 0184 	LDS  R27,_BATTERY_VOLTAGE+1
000b2f 1bae      	SUB  R26,R30
000b30 0bbf      	SBC  R27,R31
000b31 e0ea      	LDI  R30,LOW(10)
000b32 e0f0      	LDI  R31,HIGH(10)
000b33 940e 0e97 	CALL __DIVW21U
000b35 93ea      	ST   -Y,R30
000b36 940e 006d 	CALL _NumToIndex
                +
000b38 93e0 0166+STS _LcdText + ( 2 ) , R30
                 	__PUTB1MN _LcdText,2
                 ; 0000 05B3                 LcdText[3] = NumToIndex(  BATTERY_VOLTAGE-(BATTERY_VOLTAGE/10)*10);
000b3a 91a0 0183 	LDS  R26,_BATTERY_VOLTAGE
000b3c 91b0 0184 	LDS  R27,_BATTERY_VOLTAGE+1
000b3e e0ea      	LDI  R30,LOW(10)
000b3f e0f0      	LDI  R31,HIGH(10)
000b40 940e 0e97 	CALL __DIVW21U
000b42 e0aa      	LDI  R26,LOW(10)
000b43 e0b0      	LDI  R27,HIGH(10)
000b44 940e 0e8f 	CALL __MULW12U
000b46 91a0 0183 	LDS  R26,_BATTERY_VOLTAGE
000b48 91b0 0184 	LDS  R27,_BATTERY_VOLTAGE+1
000b4a 1bae      	SUB  R26,R30
000b4b 0bbf      	SBC  R27,R31
000b4c 93aa      	ST   -Y,R26
000b4d 940e 006d 	CALL _NumToIndex
                +
000b4f 93e0 0167+STS _LcdText + ( 3 ) , R30
                 	__PUTB1MN _LcdText,3
                 ; 0000 05B4                 LcdTaskas[2] = 1;
000b51 e0e1      	LDI  R30,LOW(1)
                +
000b52 93e0 016a+STS _LcdTaskas + ( 2 ) , R30
                 	__PUTB1MN _LcdTaskas,2
                 ; 0000 05B5                 }
                 ; 0000 05B6                 else{
000b54 c009      	RJMP _0x1C2
                 _0x1C1:
                 ; 0000 05B7                 LcdText[0] = ' ';
000b55 e2e0      	LDI  R30,LOW(32)
000b56 93e0 0164 	STS  _LcdText,R30
                 ; 0000 05B8                 LcdText[1] = ' ';
                +
000b58 93e0 0165+STS _LcdText + ( 1 ) , R30
                 	__PUTB1MN _LcdText,1
                 ; 0000 05B9                 LcdText[2] = ' ';
                +
000b5a 93e0 0166+STS _LcdText + ( 2 ) , R30
                 	__PUTB1MN _LcdText,2
                 ; 0000 05BA                 LcdText[3] = ' ';
                 _0x21E:
                +
000b5c 93e0 0167+STS _LcdText + ( 3 ) , R30
                 	__PUTB1MN _LcdText,3
                 ; 0000 05BB                 }
                 _0x1C2:
                 _0x1C0:
                 ; 0000 05BC             }
000b5e 9621      	ADIW R28,1
                 ; 0000 05BD             else{
000b5f c005      	RJMP _0x1C3
                 _0x1B7:
                 ; 0000 05BE             Timer26 = 0;
000b60 e0e0      	LDI  R30,LOW(0)
000b61 93e0 01a5 	STS  _Timer26_S000000B003,R30
000b63 93e0 01a6 	STS  _Timer26_S000000B003+1,R30
                 ; 0000 05BF             }
                 _0x1C3:
                 ; 0000 05C0 
                 ; 0000 05C1             // Minimali itampa
                 ; 0000 05C2             if(LangoAdresas==2){
000b65 e0e2      	LDI  R30,LOW(2)
000b66 15ec      	CP   R30,R12
000b67 f011      	BREQ PC+3
000b68 940c 0cd6 	JMP _0x1C4
                 ; 0000 05C3             char Padetis;
                 ; 0000 05C4             static unsigned int Timer27;
                 ; 0000 05C5                 if(Timer27<=3300){
000b6a 9721      	SBIW R28,1
                 ;	Padetis -> Y+0
000b6b 91a0 01a7 	LDS  R26,_Timer27_S000000B003
000b6d 91b0 01a8 	LDS  R27,_Timer27_S000000B003+1
000b6f 3ea5      	CPI  R26,LOW(0xCE5)
000b70 e0ec      	LDI  R30,HIGH(0xCE5)
000b71 07be      	CPC  R27,R30
000b72 f438      	BRSH _0x1C5
                 ; 0000 05C6                 Timer27++;
000b73 eaa7      	LDI  R26,LOW(_Timer27_S000000B003)
000b74 e0b1      	LDI  R27,HIGH(_Timer27_S000000B003)
000b75 91ed      	LD   R30,X+
000b76 91fd      	LD   R31,X+
000b77 9631      	ADIW R30,1
000b78 93fe      	ST   -X,R31
000b79 93ee      	ST   -X,R30
                 ; 0000 05C7                 }
                 ; 0000 05C8             Padetis = Timer27/300;
                 _0x1C5:
000b7a 91a0 01a7 	LDS  R26,_Timer27_S000000B003
000b7c 91b0 01a8 	LDS  R27,_Timer27_S000000B003+1
000b7e e2ec      	LDI  R30,LOW(300)
000b7f e0f1      	LDI  R31,HIGH(300)
000b80 940e 0e97 	CALL __DIVW21U
000b82 83e8      	ST   Y,R30
                 ; 0000 05C9 
                 ; 0000 05CA             LcdTaskas[0] = 0;
000b83 e0e0      	LDI  R30,LOW(0)
000b84 93e0 0168 	STS  _LcdTaskas,R30
                 ; 0000 05CB             LcdTaskas[1] = 0;
                +
000b86 93e0 0169+STS _LcdTaskas + ( 1 ) , R30
                 	__PUTB1MN _LcdTaskas,1
                 ; 0000 05CC             LcdTaskas[2] = 0;
                +
000b88 93e0 016a+STS _LcdTaskas + ( 2 ) , R30
                 	__PUTB1MN _LcdTaskas,2
                 ; 0000 05CD             LcdTaskas[3] = 0;
                +
000b8a 93e0 016b+STS _LcdTaskas + ( 3 ) , R30
                 	__PUTB1MN _LcdTaskas,3
                 ; 0000 05CE                 if(Padetis==1){
000b8c 81a8      	LD   R26,Y
000b8d 30a1      	CPI  R26,LOW(0x1)
000b8e f449      	BRNE _0x1C6
                 ; 0000 05CF                 LcdText[0] = ' ';
000b8f e2e0      	LDI  R30,LOW(32)
000b90 93e0 0164 	STS  _LcdText,R30
                 ; 0000 05D0                 LcdText[1] = ' ';
                +
000b92 93e0 0165+STS _LcdText + ( 1 ) , R30
                 	__PUTB1MN _LcdText,1
                 ; 0000 05D1                 LcdText[2] = ' ';
                +
000b94 93e0 0166+STS _LcdText + ( 2 ) , R30
                 	__PUTB1MN _LcdText,2
                 ; 0000 05D2                 LcdText[3] = 'F';
000b96 e4e6      	LDI  R30,LOW(70)
000b97 c0fd      	RJMP _0x21F
                 ; 0000 05D3                 }
                 ; 0000 05D4                 else if(Padetis==2){
                 _0x1C6:
000b98 81a8      	LD   R26,Y
000b99 30a2      	CPI  R26,LOW(0x2)
000b9a f451      	BRNE _0x1C8
                 ; 0000 05D5                 LcdText[0] = ' ';
000b9b e2e0      	LDI  R30,LOW(32)
000b9c 93e0 0164 	STS  _LcdText,R30
                 ; 0000 05D6                 LcdText[1] = ' ';
                +
000b9e 93e0 0165+STS _LcdText + ( 1 ) , R30
                 	__PUTB1MN _LcdText,1
                 ; 0000 05D7                 LcdText[2] = 'F';
000ba0 e4e6      	LDI  R30,LOW(70)
                +
000ba1 93e0 0166+STS _LcdText + ( 2 ) , R30
                 	__PUTB1MN _LcdText,2
                 ; 0000 05D8                 LcdText[3] = 'L';
000ba3 e4ec      	LDI  R30,LOW(76)
000ba4 c0f0      	RJMP _0x21F
                 ; 0000 05D9                 }
                 ; 0000 05DA                 else if(Padetis==3){
                 _0x1C8:
000ba5 81a8      	LD   R26,Y
000ba6 30a3      	CPI  R26,LOW(0x3)
000ba7 f459      	BRNE _0x1CA
                 ; 0000 05DB                 LcdText[0] = ' ';
000ba8 e2e0      	LDI  R30,LOW(32)
000ba9 93e0 0164 	STS  _LcdText,R30
                 ; 0000 05DC                 LcdText[1] = 'F';
000bab e4e6      	LDI  R30,LOW(70)
                +
000bac 93e0 0165+STS _LcdText + ( 1 ) , R30
                 	__PUTB1MN _LcdText,1
                 ; 0000 05DD                 LcdText[2] = 'L';
000bae e4ec      	LDI  R30,LOW(76)
                +
000baf 93e0 0166+STS _LcdText + ( 2 ) , R30
                 	__PUTB1MN _LcdText,2
                 ; 0000 05DE                 LcdText[3] = 'o';
000bb1 e6ef      	LDI  R30,LOW(111)
000bb2 c0e2      	RJMP _0x21F
                 ; 0000 05DF                 }
                 ; 0000 05E0                 else if(Padetis==4){
                 _0x1CA:
000bb3 81a8      	LD   R26,Y
000bb4 30a4      	CPI  R26,LOW(0x4)
000bb5 f451      	BRNE _0x1CC
                 ; 0000 05E1                 LcdText[0] = 'F';
000bb6 e4e6      	LDI  R30,LOW(70)
000bb7 93e0 0164 	STS  _LcdText,R30
                 ; 0000 05E2                 LcdText[1] = 'L';
000bb9 e4ec      	LDI  R30,LOW(76)
                +
000bba 93e0 0165+STS _LcdText + ( 1 ) , R30
                 	__PUTB1MN _LcdText,1
                 ; 0000 05E3                 LcdText[2] = 'o';
000bbc e6ef      	LDI  R30,LOW(111)
                +
000bbd 93e0 0166+STS _LcdText + ( 2 ) , R30
                 	__PUTB1MN _LcdText,2
                 ; 0000 05E4                 LcdText[3] = 'o';
000bbf c0d5      	RJMP _0x21F
                 ; 0000 05E5                 }
                 ; 0000 05E6                 else if(Padetis==5){
                 _0x1CC:
000bc0 81a8      	LD   R26,Y
000bc1 30a5      	CPI  R26,LOW(0x5)
000bc2 f451      	BRNE _0x1CE
                 ; 0000 05E7                 LcdText[0] = 'L';
000bc3 e4ec      	LDI  R30,LOW(76)
000bc4 93e0 0164 	STS  _LcdText,R30
                 ; 0000 05E8                 LcdText[1] = 'o';
000bc6 e6ef      	LDI  R30,LOW(111)
                +
000bc7 93e0 0165+STS _LcdText + ( 1 ) , R30
                 	__PUTB1MN _LcdText,1
                 ; 0000 05E9                 LcdText[2] = 'o';
                +
000bc9 93e0 0166+STS _LcdText + ( 2 ) , R30
                 	__PUTB1MN _LcdText,2
                 ; 0000 05EA                 LcdText[3] = 'r';
000bcb e7e2      	LDI  R30,LOW(114)
000bcc c0c8      	RJMP _0x21F
                 ; 0000 05EB                 }
                 ; 0000 05EC                 else if(Padetis==6){
                 _0x1CE:
000bcd 81a8      	LD   R26,Y
000bce 30a6      	CPI  R26,LOW(0x6)
000bcf f451      	BRNE _0x1D0
                 ; 0000 05ED                 LcdText[0] = 'o';
000bd0 e6ef      	LDI  R30,LOW(111)
000bd1 93e0 0164 	STS  _LcdText,R30
                 ; 0000 05EE                 LcdText[1] = 'o';
                +
000bd3 93e0 0165+STS _LcdText + ( 1 ) , R30
                 	__PUTB1MN _LcdText,1
                 ; 0000 05EF                 LcdText[2] = 'r';
000bd5 e7e2      	LDI  R30,LOW(114)
                +
000bd6 93e0 0166+STS _LcdText + ( 2 ) , R30
                 	__PUTB1MN _LcdText,2
                 ; 0000 05F0                 LcdText[3] = '_';
000bd8 e5ef      	LDI  R30,LOW(95)
000bd9 c0bb      	RJMP _0x21F
                 ; 0000 05F1                 }
                 ; 0000 05F2                 else if(Padetis==7){
                 _0x1D0:
000bda 81a8      	LD   R26,Y
000bdb 30a7      	CPI  R26,LOW(0x7)
000bdc f459      	BRNE _0x1D2
                 ; 0000 05F3                 LcdText[0] = 'o';
000bdd e6ef      	LDI  R30,LOW(111)
000bde 93e0 0164 	STS  _LcdText,R30
                 ; 0000 05F4                 LcdText[1] = 'r';
000be0 e7e2      	LDI  R30,LOW(114)
                +
000be1 93e0 0165+STS _LcdText + ( 1 ) , R30
                 	__PUTB1MN _LcdText,1
                 ; 0000 05F5                 LcdText[2] = '_';
000be3 e5ef      	LDI  R30,LOW(95)
                +
000be4 93e0 0166+STS _LcdText + ( 2 ) , R30
                 	__PUTB1MN _LcdText,2
                 ; 0000 05F6                 LcdText[3] = 'U';
000be6 e5e5      	LDI  R30,LOW(85)
000be7 c0ad      	RJMP _0x21F
                 ; 0000 05F7                 }
                 ; 0000 05F8                 else if(Padetis==8){
                 _0x1D2:
000be8 81a8      	LD   R26,Y
000be9 30a8      	CPI  R26,LOW(0x8)
000bea f459      	BRNE _0x1D4
                 ; 0000 05F9                 LcdText[0] = 'r';
000beb e7e2      	LDI  R30,LOW(114)
000bec 93e0 0164 	STS  _LcdText,R30
                 ; 0000 05FA                 LcdText[1] = '_';
000bee e5ef      	LDI  R30,LOW(95)
                +
000bef 93e0 0165+STS _LcdText + ( 1 ) , R30
                 	__PUTB1MN _LcdText,1
                 ; 0000 05FB                 LcdText[2] = 'U';
000bf1 e5e5      	LDI  R30,LOW(85)
                +
000bf2 93e0 0166+STS _LcdText + ( 2 ) , R30
                 	__PUTB1MN _LcdText,2
                 ; 0000 05FC                 LcdText[3] = '=';
000bf4 e3ed      	LDI  R30,LOW(61)
000bf5 c09f      	RJMP _0x21F
                 ; 0000 05FD                 }
                 ; 0000 05FE                 else if(Padetis==9){
                 _0x1D4:
000bf6 81a8      	LD   R26,Y
000bf7 30a9      	CPI  R26,LOW(0x9)
000bf8 f4b1      	BRNE _0x1D6
                 ; 0000 05FF                 LcdText[0] = '_';
000bf9 e5ef      	LDI  R30,LOW(95)
000bfa 93e0 0164 	STS  _LcdText,R30
                 ; 0000 0600                 LcdText[1] = 'U';
000bfc e5e5      	LDI  R30,LOW(85)
                +
000bfd 93e0 0165+STS _LcdText + ( 1 ) , R30
                 	__PUTB1MN _LcdText,1
                 ; 0000 0601                 LcdText[2] = '=';
000bff e3ed      	LDI  R30,LOW(61)
                +
000c00 93e0 0166+STS _LcdText + ( 2 ) , R30
                 	__PUTB1MN _LcdText,2
                 ; 0000 0602                 LcdText[3] = NumToIndex( MIN_BATTERY_VOLTAGE/100 );
000c02 e0a7      	LDI  R26,LOW(_MIN_BATTERY_VOLTAGE)
000c03 e0b0      	LDI  R27,HIGH(_MIN_BATTERY_VOLTAGE)
000c04 940e 0eae 	CALL __EEPROMRDW
000c06 01df      	MOVW R26,R30
000c07 e6e4      	LDI  R30,LOW(100)
000c08 e0f0      	LDI  R31,HIGH(100)
000c09 940e 0e97 	CALL __DIVW21U
000c0b 93ea      	ST   -Y,R30
000c0c 940e 006d 	CALL _NumToIndex
000c0e c086      	RJMP _0x21F
                 ; 0000 0603                 }
                 ; 0000 0604                 else if(Padetis==10){
                 _0x1D6:
000c0f 81a8      	LD   R26,Y
000c10 30aa      	CPI  R26,LOW(0xA)
000c11 f591      	BRNE _0x1D8
                 ; 0000 0605                 LcdText[0] = 'U';
000c12 e5e5      	LDI  R30,LOW(85)
000c13 93e0 0164 	STS  _LcdText,R30
                 ; 0000 0606                 LcdText[1] = '=';
000c15 e3ed      	LDI  R30,LOW(61)
                +
000c16 93e0 0165+STS _LcdText + ( 1 ) , R30
                 	__PUTB1MN _LcdText,1
                 ; 0000 0607                 LcdText[2] = NumToIndex( MIN_BATTERY_VOLTAGE/100 );
000c18 e0a7      	LDI  R26,LOW(_MIN_BATTERY_VOLTAGE)
000c19 e0b0      	LDI  R27,HIGH(_MIN_BATTERY_VOLTAGE)
000c1a 940e 0eae 	CALL __EEPROMRDW
000c1c 01df      	MOVW R26,R30
000c1d e6e4      	LDI  R30,LOW(100)
000c1e e0f0      	LDI  R31,HIGH(100)
000c1f 940e 0e97 	CALL __DIVW21U
000c21 93ea      	ST   -Y,R30
000c22 940e 006d 	CALL _NumToIndex
                +
000c24 93e0 0166+STS _LcdText + ( 2 ) , R30
                 	__PUTB1MN _LcdText,2
                 ; 0000 0608                 LcdText[3] = NumToIndex( (MIN_BATTERY_VOLTAGE-(MIN_BATTERY_VOLTAGE/100)*100)/10);
000c26 e0a7      	LDI  R26,LOW(_MIN_BATTERY_VOLTAGE)
000c27 e0b0      	LDI  R27,HIGH(_MIN_BATTERY_VOLTAGE)
000c28 940e 0eae 	CALL __EEPROMRDW
000c2a 01bf      	MOVW R22,R30
000c2b 01df      	MOVW R26,R30
000c2c e6e4      	LDI  R30,LOW(100)
000c2d e0f0      	LDI  R31,HIGH(100)
000c2e 940e 0e97 	CALL __DIVW21U
000c30 e6a4      	LDI  R26,LOW(100)
000c31 e0b0      	LDI  R27,HIGH(100)
000c32 940e 0e8f 	CALL __MULW12U
000c34 01db      	MOVW R26,R22
000c35 1bae      	SUB  R26,R30
000c36 0bbf      	SBC  R27,R31
000c37 e0ea      	LDI  R30,LOW(10)
000c38 e0f0      	LDI  R31,HIGH(10)
000c39 940e 0e97 	CALL __DIVW21U
000c3b 93ea      	ST   -Y,R30
000c3c 940e 006d 	CALL _NumToIndex
                +
000c3e 93e0 0167+STS _LcdText + ( 3 ) , R30
                 	__PUTB1MN _LcdText,3
                 ; 0000 0609                 LcdTaskas[3] = 1;
000c40 e0e1      	LDI  R30,LOW(1)
                +
000c41 93e0 016b+STS _LcdTaskas + ( 3 ) , R30
                 	__PUTB1MN _LcdTaskas,3
                 ; 0000 060A                 }
                 ; 0000 060B                 else if(Padetis==11){
000c43 c053      	RJMP _0x1D9
                 _0x1D8:
000c44 81a8      	LD   R26,Y
000c45 30ab      	CPI  R26,LOW(0xB)
000c46 f011      	BREQ PC+3
000c47 940c 0c8e 	JMP _0x1DA
                 ; 0000 060C                 LcdText[0] = '=';
000c49 e3ed      	LDI  R30,LOW(61)
000c4a 93e0 0164 	STS  _LcdText,R30
                 ; 0000 060D                 LcdText[1] = NumToIndex( MIN_BATTERY_VOLTAGE/100 );
000c4c e0a7      	LDI  R26,LOW(_MIN_BATTERY_VOLTAGE)
000c4d e0b0      	LDI  R27,HIGH(_MIN_BATTERY_VOLTAGE)
000c4e 940e 0eae 	CALL __EEPROMRDW
000c50 01df      	MOVW R26,R30
000c51 e6e4      	LDI  R30,LOW(100)
000c52 e0f0      	LDI  R31,HIGH(100)
000c53 940e 0e97 	CALL __DIVW21U
000c55 93ea      	ST   -Y,R30
000c56 940e 006d 	CALL _NumToIndex
                +
000c58 93e0 0165+STS _LcdText + ( 1 ) , R30
                 	__PUTB1MN _LcdText,1
                 ; 0000 060E                 LcdText[2] = NumToIndex( (MIN_BATTERY_VOLTAGE-(MIN_BATTERY_VOLTAGE/100)*100)/10);
000c5a e0a7      	LDI  R26,LOW(_MIN_BATTERY_VOLTAGE)
000c5b e0b0      	LDI  R27,HIGH(_MIN_BATTERY_VOLTAGE)
000c5c 940e 0eae 	CALL __EEPROMRDW
000c5e 01bf      	MOVW R22,R30
000c5f 01df      	MOVW R26,R30
000c60 e6e4      	LDI  R30,LOW(100)
000c61 e0f0      	LDI  R31,HIGH(100)
000c62 940e 0e97 	CALL __DIVW21U
000c64 e6a4      	LDI  R26,LOW(100)
000c65 e0b0      	LDI  R27,HIGH(100)
000c66 940e 0e8f 	CALL __MULW12U
000c68 01db      	MOVW R26,R22
000c69 1bae      	SUB  R26,R30
000c6a 0bbf      	SBC  R27,R31
000c6b e0ea      	LDI  R30,LOW(10)
000c6c e0f0      	LDI  R31,HIGH(10)
000c6d 940e 0e97 	CALL __DIVW21U
000c6f 93ea      	ST   -Y,R30
000c70 940e 006d 	CALL _NumToIndex
                +
000c72 93e0 0166+STS _LcdText + ( 2 ) , R30
                 	__PUTB1MN _LcdText,2
                 ; 0000 060F                 LcdText[3] = NumToIndex(  MIN_BATTERY_VOLTAGE-(MIN_BATTERY_VOLTAGE/10)*10);
000c74 e0a7      	LDI  R26,LOW(_MIN_BATTERY_VOLTAGE)
000c75 e0b0      	LDI  R27,HIGH(_MIN_BATTERY_VOLTAGE)
000c76 940e 0eae 	CALL __EEPROMRDW
000c78 01bf      	MOVW R22,R30
000c79 01df      	MOVW R26,R30
000c7a e0ea      	LDI  R30,LOW(10)
000c7b e0f0      	LDI  R31,HIGH(10)
000c7c 940e 0e97 	CALL __DIVW21U
000c7e e0aa      	LDI  R26,LOW(10)
000c7f e0b0      	LDI  R27,HIGH(10)
000c80 940e 0e8f 	CALL __MULW12U
000c82 01db      	MOVW R26,R22
000c83 1bae      	SUB  R26,R30
000c84 0bbf      	SBC  R27,R31
000c85 93aa      	ST   -Y,R26
000c86 940e 006d 	CALL _NumToIndex
                +
000c88 93e0 0167+STS _LcdText + ( 3 ) , R30
                 	__PUTB1MN _LcdText,3
                 ; 0000 0610                 LcdTaskas[2] = 1;
000c8a e0e1      	LDI  R30,LOW(1)
                +
000c8b 93e0 016a+STS _LcdTaskas + ( 2 ) , R30
                 	__PUTB1MN _LcdTaskas,2
                 ; 0000 0611                 }
                 ; 0000 0612                 else{
000c8d c009      	RJMP _0x1DB
                 _0x1DA:
                 ; 0000 0613                 LcdText[0] = ' ';
000c8e e2e0      	LDI  R30,LOW(32)
000c8f 93e0 0164 	STS  _LcdText,R30
                 ; 0000 0614                 LcdText[1] = ' ';
                +
000c91 93e0 0165+STS _LcdText + ( 1 ) , R30
                 	__PUTB1MN _LcdText,1
                 ; 0000 0615                 LcdText[2] = ' ';
                +
000c93 93e0 0166+STS _LcdText + ( 2 ) , R30
                 	__PUTB1MN _LcdText,2
                 ; 0000 0616                 LcdText[3] = ' ';
                 _0x21F:
                +
000c95 93e0 0167+STS _LcdText + ( 3 ) , R30
                 	__PUTB1MN _LcdText,3
                 ; 0000 0617                 }
                 _0x1DB:
                 _0x1D9:
                 ; 0000 0618 
                 ; 0000 0619                 if((BUTTON[0]==0)&&(BUTTON[1]==1)&&(BUTTON[2]==0)){
000c97 91a0 0160 	LDS  R26,_BUTTON
000c99 30a0      	CPI  R26,LOW(0x0)
000c9a f441      	BRNE _0x1DD
                +
000c9b 91a0 0161+LDS R26 , _BUTTON + ( 1 )
                 	__GETB2MN _BUTTON,1
000c9d 30a1      	CPI  R26,LOW(0x1)
000c9e f421      	BRNE _0x1DD
                +
000c9f 91a0 0162+LDS R26 , _BUTTON + ( 2 )
                 	__GETB2MN _BUTTON,2
000ca1 30a0      	CPI  R26,LOW(0x0)
000ca2 f009      	BREQ _0x1DE
                 _0x1DD:
000ca3 c010      	RJMP _0x1DC
                 _0x1DE:
                 ; 0000 061A                     if(ItamposTrigeris1==0){
000ca4 91e0 0199 	LDS  R30,_ItamposTrigeris1
000ca6 30e0      	CPI  R30,0
000ca7 f459      	BRNE _0x1DF
                 ; 0000 061B                     MIN_BATTERY_VOLTAGE++;
000ca8 e0a7      	LDI  R26,LOW(_MIN_BATTERY_VOLTAGE)
000ca9 e0b0      	LDI  R27,HIGH(_MIN_BATTERY_VOLTAGE)
000caa 940e 0eae 	CALL __EEPROMRDW
000cac 9631      	ADIW R30,1
000cad 940e 0ebe 	CALL __EEPROMWRW
000caf 9731      	SBIW R30,1
                 ; 0000 061C                     ItamposTrigeris1 = 1;
000cb0 e0e1      	LDI  R30,LOW(1)
000cb1 93e0 0199 	STS  _ItamposTrigeris1,R30
                 ; 0000 061D                     }
                 ; 0000 061E                 }
                 _0x1DF:
                 ; 0000 061F                 else if((BUTTON[0]==1)&&(BUTTON[1]==0)&&(BUTTON[2]==0)){
000cb3 c020      	RJMP _0x1E0
                 _0x1DC:
000cb4 91a0 0160 	LDS  R26,_BUTTON
000cb6 30a1      	CPI  R26,LOW(0x1)
000cb7 f441      	BRNE _0x1E2
                +
000cb8 91a0 0161+LDS R26 , _BUTTON + ( 1 )
                 	__GETB2MN _BUTTON,1
000cba 30a0      	CPI  R26,LOW(0x0)
000cbb f421      	BRNE _0x1E2
                +
000cbc 91a0 0162+LDS R26 , _BUTTON + ( 2 )
                 	__GETB2MN _BUTTON,2
000cbe 30a0      	CPI  R26,LOW(0x0)
000cbf f009      	BREQ _0x1E3
                 _0x1E2:
000cc0 c010      	RJMP _0x1E1
                 _0x1E3:
                 ; 0000 0620                     if(ItamposTrigeris1==0){
000cc1 91e0 0199 	LDS  R30,_ItamposTrigeris1
000cc3 30e0      	CPI  R30,0
000cc4 f459      	BRNE _0x1E4
                 ; 0000 0621                     MIN_BATTERY_VOLTAGE--;
000cc5 e0a7      	LDI  R26,LOW(_MIN_BATTERY_VOLTAGE)
000cc6 e0b0      	LDI  R27,HIGH(_MIN_BATTERY_VOLTAGE)
000cc7 940e 0eae 	CALL __EEPROMRDW
000cc9 9731      	SBIW R30,1
000cca 940e 0ebe 	CALL __EEPROMWRW
000ccc 9631      	ADIW R30,1
                 ; 0000 0622                     ItamposTrigeris1 = 1;
000ccd e0e1      	LDI  R30,LOW(1)
000cce 93e0 0199 	STS  _ItamposTrigeris1,R30
                 ; 0000 0623                     }
                 ; 0000 0624                 }
                 _0x1E4:
                 ; 0000 0625                 else{
000cd0 c003      	RJMP _0x1E5
                 _0x1E1:
                 ; 0000 0626                 ItamposTrigeris1 = 0;
000cd1 e0e0      	LDI  R30,LOW(0)
000cd2 93e0 0199 	STS  _ItamposTrigeris1,R30
                 ; 0000 0627                 }
                 _0x1E5:
                 _0x1E0:
                 ; 0000 0628             }
000cd4 9621      	ADIW R28,1
                 ; 0000 0629             else{
000cd5 c005      	RJMP _0x1E6
                 _0x1C4:
                 ; 0000 062A             Timer27 = 0;
000cd6 e0e0      	LDI  R30,LOW(0)
000cd7 93e0 01a7 	STS  _Timer27_S000000B003,R30
000cd9 93e0 01a8 	STS  _Timer27_S000000B003+1,R30
                 ; 0000 062B             }
                 _0x1E6:
                 ; 0000 062C 
                 ; 0000 062D             // Maksimali itampa
                 ; 0000 062E             if(LangoAdresas==3){
000cdb e0e3      	LDI  R30,LOW(3)
000cdc 15ec      	CP   R30,R12
000cdd f011      	BREQ PC+3
000cde 940c 0e33 	JMP _0x1E7
                 ; 0000 062F             char Padetis;
                 ; 0000 0630             static unsigned int Timer28;
                 ; 0000 0631                 if(Timer28<=2700){
000ce0 9721      	SBIW R28,1
                 ;	Padetis -> Y+0
000ce1 91a0 01a9 	LDS  R26,_Timer28_S000000B003
000ce3 91b0 01aa 	LDS  R27,_Timer28_S000000B003+1
000ce5 38ad      	CPI  R26,LOW(0xA8D)
000ce6 e0ea      	LDI  R30,HIGH(0xA8D)
000ce7 07be      	CPC  R27,R30
000ce8 f438      	BRSH _0x1E8
                 ; 0000 0632                 Timer28++;
000ce9 eaa9      	LDI  R26,LOW(_Timer28_S000000B003)
000cea e0b1      	LDI  R27,HIGH(_Timer28_S000000B003)
000ceb 91ed      	LD   R30,X+
000cec 91fd      	LD   R31,X+
000ced 9631      	ADIW R30,1
000cee 93fe      	ST   -X,R31
000cef 93ee      	ST   -X,R30
                 ; 0000 0633                 }
                 ; 0000 0634             Padetis = Timer28/300;
                 _0x1E8:
000cf0 91a0 01a9 	LDS  R26,_Timer28_S000000B003
000cf2 91b0 01aa 	LDS  R27,_Timer28_S000000B003+1
000cf4 e2ec      	LDI  R30,LOW(300)
000cf5 e0f1      	LDI  R31,HIGH(300)
000cf6 940e 0e97 	CALL __DIVW21U
000cf8 83e8      	ST   Y,R30
                 ; 0000 0635 
                 ; 0000 0636             LcdTaskas[0] = 0;
000cf9 e0e0      	LDI  R30,LOW(0)
000cfa 93e0 0168 	STS  _LcdTaskas,R30
                 ; 0000 0637             LcdTaskas[1] = 0;
                +
000cfc 93e0 0169+STS _LcdTaskas + ( 1 ) , R30
                 	__PUTB1MN _LcdTaskas,1
                 ; 0000 0638             LcdTaskas[2] = 0;
                +
000cfe 93e0 016a+STS _LcdTaskas + ( 2 ) , R30
                 	__PUTB1MN _LcdTaskas,2
                 ; 0000 0639             LcdTaskas[3] = 0;
                +
000d00 93e0 016b+STS _LcdTaskas + ( 3 ) , R30
                 	__PUTB1MN _LcdTaskas,3
                 ; 0000 063A                 if(Padetis==1){
000d02 81a8      	LD   R26,Y
000d03 30a1      	CPI  R26,LOW(0x1)
000d04 f449      	BRNE _0x1E9
                 ; 0000 063B                 LcdText[0] = ' ';
000d05 e2e0      	LDI  R30,LOW(32)
000d06 93e0 0164 	STS  _LcdText,R30
                 ; 0000 063C                 LcdText[1] = ' ';
                +
000d08 93e0 0165+STS _LcdText + ( 1 ) , R30
                 	__PUTB1MN _LcdText,1
                 ; 0000 063D                 LcdText[2] = ' ';
                +
000d0a 93e0 0166+STS _LcdText + ( 2 ) , R30
                 	__PUTB1MN _LcdText,2
                 ; 0000 063E                 LcdText[3] = 't';
000d0c e7e4      	LDI  R30,LOW(116)
000d0d c0e4      	RJMP _0x220
                 ; 0000 063F                 }
                 ; 0000 0640                 else if(Padetis==2){
                 _0x1E9:
000d0e 81a8      	LD   R26,Y
000d0f 30a2      	CPI  R26,LOW(0x2)
000d10 f451      	BRNE _0x1EB
                 ; 0000 0641                 LcdText[0] = ' ';
000d11 e2e0      	LDI  R30,LOW(32)
000d12 93e0 0164 	STS  _LcdText,R30
                 ; 0000 0642                 LcdText[1] = ' ';
                +
000d14 93e0 0165+STS _LcdText + ( 1 ) , R30
                 	__PUTB1MN _LcdText,1
                 ; 0000 0643                 LcdText[2] = 't';
000d16 e7e4      	LDI  R30,LOW(116)
                +
000d17 93e0 0166+STS _LcdText + ( 2 ) , R30
                 	__PUTB1MN _LcdText,2
                 ; 0000 0644                 LcdText[3] = 'o';
000d19 e6ef      	LDI  R30,LOW(111)
000d1a c0d7      	RJMP _0x220
                 ; 0000 0645                 }
                 ; 0000 0646                 else if(Padetis==3){
                 _0x1EB:
000d1b 81a8      	LD   R26,Y
000d1c 30a3      	CPI  R26,LOW(0x3)
000d1d f459      	BRNE _0x1ED
                 ; 0000 0647                 LcdText[0] = ' ';
000d1e e2e0      	LDI  R30,LOW(32)
000d1f 93e0 0164 	STS  _LcdText,R30
                 ; 0000 0648                 LcdText[1] = 't';
000d21 e7e4      	LDI  R30,LOW(116)
                +
000d22 93e0 0165+STS _LcdText + ( 1 ) , R30
                 	__PUTB1MN _LcdText,1
                 ; 0000 0649                 LcdText[2] = 'o';
000d24 e6ef      	LDI  R30,LOW(111)
                +
000d25 93e0 0166+STS _LcdText + ( 2 ) , R30
                 	__PUTB1MN _LcdText,2
                 ; 0000 064A                 LcdText[3] = 'P';
000d27 e5e0      	LDI  R30,LOW(80)
000d28 c0c9      	RJMP _0x220
                 ; 0000 064B                 }
                 ; 0000 064C                 else if(Padetis==4){
                 _0x1ED:
000d29 81a8      	LD   R26,Y
000d2a 30a4      	CPI  R26,LOW(0x4)
000d2b f459      	BRNE _0x1EF
                 ; 0000 064D                 LcdText[0] = 't';
000d2c e7e4      	LDI  R30,LOW(116)
000d2d 93e0 0164 	STS  _LcdText,R30
                 ; 0000 064E                 LcdText[1] = 'o';
000d2f e6ef      	LDI  R30,LOW(111)
                +
000d30 93e0 0165+STS _LcdText + ( 1 ) , R30
                 	__PUTB1MN _LcdText,1
                 ; 0000 064F                 LcdText[2] = 'P';
000d32 e5e0      	LDI  R30,LOW(80)
                +
000d33 93e0 0166+STS _LcdText + ( 2 ) , R30
                 	__PUTB1MN _LcdText,2
                 ; 0000 0650                 LcdText[3] = '_';
000d35 e5ef      	LDI  R30,LOW(95)
000d36 c0bb      	RJMP _0x220
                 ; 0000 0651                 }
                 ; 0000 0652                 else if(Padetis==5){
                 _0x1EF:
000d37 81a8      	LD   R26,Y
000d38 30a5      	CPI  R26,LOW(0x5)
000d39 f459      	BRNE _0x1F1
                 ; 0000 0653                 LcdText[0] = 'o';
000d3a e6ef      	LDI  R30,LOW(111)
000d3b 93e0 0164 	STS  _LcdText,R30
                 ; 0000 0654                 LcdText[1] = 'P';
000d3d e5e0      	LDI  R30,LOW(80)
                +
000d3e 93e0 0165+STS _LcdText + ( 1 ) , R30
                 	__PUTB1MN _LcdText,1
                 ; 0000 0655                 LcdText[2] = '_';
000d40 e5ef      	LDI  R30,LOW(95)
                +
000d41 93e0 0166+STS _LcdText + ( 2 ) , R30
                 	__PUTB1MN _LcdText,2
                 ; 0000 0656                 LcdText[3] = 'U';
000d43 e5e5      	LDI  R30,LOW(85)
000d44 c0ad      	RJMP _0x220
                 ; 0000 0657                 }
                 ; 0000 0658                 else if(Padetis==6){
                 _0x1F1:
000d45 81a8      	LD   R26,Y
000d46 30a6      	CPI  R26,LOW(0x6)
000d47 f459      	BRNE _0x1F3
                 ; 0000 0659                 LcdText[0] = 'P';
000d48 e5e0      	LDI  R30,LOW(80)
000d49 93e0 0164 	STS  _LcdText,R30
                 ; 0000 065A                 LcdText[1] = '_';
000d4b e5ef      	LDI  R30,LOW(95)
                +
000d4c 93e0 0165+STS _LcdText + ( 1 ) , R30
                 	__PUTB1MN _LcdText,1
                 ; 0000 065B                 LcdText[2] = 'U';
000d4e e5e5      	LDI  R30,LOW(85)
                +
000d4f 93e0 0166+STS _LcdText + ( 2 ) , R30
                 	__PUTB1MN _LcdText,2
                 ; 0000 065C                 LcdText[3] = '=';
000d51 e3ed      	LDI  R30,LOW(61)
000d52 c09f      	RJMP _0x220
                 ; 0000 065D                 }
                 ; 0000 065E                 else if(Padetis==7){
                 _0x1F3:
000d53 81a8      	LD   R26,Y
000d54 30a7      	CPI  R26,LOW(0x7)
000d55 f4b1      	BRNE _0x1F5
                 ; 0000 065F                 LcdText[0] = '_';
000d56 e5ef      	LDI  R30,LOW(95)
000d57 93e0 0164 	STS  _LcdText,R30
                 ; 0000 0660                 LcdText[1] = 'U';
000d59 e5e5      	LDI  R30,LOW(85)
                +
000d5a 93e0 0165+STS _LcdText + ( 1 ) , R30
                 	__PUTB1MN _LcdText,1
                 ; 0000 0661                 LcdText[2] = '=';
000d5c e3ed      	LDI  R30,LOW(61)
                +
000d5d 93e0 0166+STS _LcdText + ( 2 ) , R30
                 	__PUTB1MN _LcdText,2
                 ; 0000 0662                 LcdText[3] = NumToIndex( MAX_BATTERY_VOLTAGE/100 );
000d5f e0a5      	LDI  R26,LOW(_MAX_BATTERY_VOLTAGE)
000d60 e0b0      	LDI  R27,HIGH(_MAX_BATTERY_VOLTAGE)
000d61 940e 0eae 	CALL __EEPROMRDW
000d63 01df      	MOVW R26,R30
000d64 e6e4      	LDI  R30,LOW(100)
000d65 e0f0      	LDI  R31,HIGH(100)
000d66 940e 0e97 	CALL __DIVW21U
000d68 93ea      	ST   -Y,R30
000d69 940e 006d 	CALL _NumToIndex
000d6b c086      	RJMP _0x220
                 ; 0000 0663                 }
                 ; 0000 0664                 else if(Padetis==8){
                 _0x1F5:
000d6c 81a8      	LD   R26,Y
000d6d 30a8      	CPI  R26,LOW(0x8)
000d6e f591      	BRNE _0x1F7
                 ; 0000 0665                 LcdText[0] = 'U';
000d6f e5e5      	LDI  R30,LOW(85)
000d70 93e0 0164 	STS  _LcdText,R30
                 ; 0000 0666                 LcdText[1] = '=';
000d72 e3ed      	LDI  R30,LOW(61)
                +
000d73 93e0 0165+STS _LcdText + ( 1 ) , R30
                 	__PUTB1MN _LcdText,1
                 ; 0000 0667                 LcdText[2] = NumToIndex( MAX_BATTERY_VOLTAGE/100 );
000d75 e0a5      	LDI  R26,LOW(_MAX_BATTERY_VOLTAGE)
000d76 e0b0      	LDI  R27,HIGH(_MAX_BATTERY_VOLTAGE)
000d77 940e 0eae 	CALL __EEPROMRDW
000d79 01df      	MOVW R26,R30
000d7a e6e4      	LDI  R30,LOW(100)
000d7b e0f0      	LDI  R31,HIGH(100)
000d7c 940e 0e97 	CALL __DIVW21U
000d7e 93ea      	ST   -Y,R30
000d7f 940e 006d 	CALL _NumToIndex
                +
000d81 93e0 0166+STS _LcdText + ( 2 ) , R30
                 	__PUTB1MN _LcdText,2
                 ; 0000 0668                 LcdText[3] = NumToIndex( (MAX_BATTERY_VOLTAGE-(MAX_BATTERY_VOLTAGE/100)*100)/10);
000d83 e0a5      	LDI  R26,LOW(_MAX_BATTERY_VOLTAGE)
000d84 e0b0      	LDI  R27,HIGH(_MAX_BATTERY_VOLTAGE)
000d85 940e 0eae 	CALL __EEPROMRDW
000d87 01bf      	MOVW R22,R30
000d88 01df      	MOVW R26,R30
000d89 e6e4      	LDI  R30,LOW(100)
000d8a e0f0      	LDI  R31,HIGH(100)
000d8b 940e 0e97 	CALL __DIVW21U
000d8d e6a4      	LDI  R26,LOW(100)
000d8e e0b0      	LDI  R27,HIGH(100)
000d8f 940e 0e8f 	CALL __MULW12U
000d91 01db      	MOVW R26,R22
000d92 1bae      	SUB  R26,R30
000d93 0bbf      	SBC  R27,R31
000d94 e0ea      	LDI  R30,LOW(10)
000d95 e0f0      	LDI  R31,HIGH(10)
000d96 940e 0e97 	CALL __DIVW21U
000d98 93ea      	ST   -Y,R30
000d99 940e 006d 	CALL _NumToIndex
                +
000d9b 93e0 0167+STS _LcdText + ( 3 ) , R30
                 	__PUTB1MN _LcdText,3
                 ; 0000 0669                 LcdTaskas[3] = 1;
000d9d e0e1      	LDI  R30,LOW(1)
                +
000d9e 93e0 016b+STS _LcdTaskas + ( 3 ) , R30
                 	__PUTB1MN _LcdTaskas,3
                 ; 0000 066A                 }
                 ; 0000 066B                 else if(Padetis==9){
000da0 c053      	RJMP _0x1F8
                 _0x1F7:
000da1 81a8      	LD   R26,Y
000da2 30a9      	CPI  R26,LOW(0x9)
000da3 f011      	BREQ PC+3
000da4 940c 0deb 	JMP _0x1F9
                 ; 0000 066C                 LcdText[0] = '=';
000da6 e3ed      	LDI  R30,LOW(61)
000da7 93e0 0164 	STS  _LcdText,R30
                 ; 0000 066D                 LcdText[1] = NumToIndex( MAX_BATTERY_VOLTAGE/100 );
000da9 e0a5      	LDI  R26,LOW(_MAX_BATTERY_VOLTAGE)
000daa e0b0      	LDI  R27,HIGH(_MAX_BATTERY_VOLTAGE)
000dab 940e 0eae 	CALL __EEPROMRDW
000dad 01df      	MOVW R26,R30
000dae e6e4      	LDI  R30,LOW(100)
000daf e0f0      	LDI  R31,HIGH(100)
000db0 940e 0e97 	CALL __DIVW21U
000db2 93ea      	ST   -Y,R30
000db3 940e 006d 	CALL _NumToIndex
                +
000db5 93e0 0165+STS _LcdText + ( 1 ) , R30
                 	__PUTB1MN _LcdText,1
                 ; 0000 066E                 LcdText[2] = NumToIndex( (MAX_BATTERY_VOLTAGE-(MAX_BATTERY_VOLTAGE/100)*100)/10);
000db7 e0a5      	LDI  R26,LOW(_MAX_BATTERY_VOLTAGE)
000db8 e0b0      	LDI  R27,HIGH(_MAX_BATTERY_VOLTAGE)
000db9 940e 0eae 	CALL __EEPROMRDW
000dbb 01bf      	MOVW R22,R30
000dbc 01df      	MOVW R26,R30
000dbd e6e4      	LDI  R30,LOW(100)
000dbe e0f0      	LDI  R31,HIGH(100)
000dbf 940e 0e97 	CALL __DIVW21U
000dc1 e6a4      	LDI  R26,LOW(100)
000dc2 e0b0      	LDI  R27,HIGH(100)
000dc3 940e 0e8f 	CALL __MULW12U
000dc5 01db      	MOVW R26,R22
000dc6 1bae      	SUB  R26,R30
000dc7 0bbf      	SBC  R27,R31
000dc8 e0ea      	LDI  R30,LOW(10)
000dc9 e0f0      	LDI  R31,HIGH(10)
000dca 940e 0e97 	CALL __DIVW21U
000dcc 93ea      	ST   -Y,R30
000dcd 940e 006d 	CALL _NumToIndex
                +
000dcf 93e0 0166+STS _LcdText + ( 2 ) , R30
                 	__PUTB1MN _LcdText,2
                 ; 0000 066F                 LcdText[3] = NumToIndex(  MAX_BATTERY_VOLTAGE-(MAX_BATTERY_VOLTAGE/10)*10);
000dd1 e0a5      	LDI  R26,LOW(_MAX_BATTERY_VOLTAGE)
000dd2 e0b0      	LDI  R27,HIGH(_MAX_BATTERY_VOLTAGE)
000dd3 940e 0eae 	CALL __EEPROMRDW
000dd5 01bf      	MOVW R22,R30
000dd6 01df      	MOVW R26,R30
000dd7 e0ea      	LDI  R30,LOW(10)
000dd8 e0f0      	LDI  R31,HIGH(10)
000dd9 940e 0e97 	CALL __DIVW21U
000ddb e0aa      	LDI  R26,LOW(10)
000ddc e0b0      	LDI  R27,HIGH(10)
000ddd 940e 0e8f 	CALL __MULW12U
000ddf 01db      	MOVW R26,R22
000de0 1bae      	SUB  R26,R30
000de1 0bbf      	SBC  R27,R31
000de2 93aa      	ST   -Y,R26
000de3 940e 006d 	CALL _NumToIndex
                +
000de5 93e0 0167+STS _LcdText + ( 3 ) , R30
                 	__PUTB1MN _LcdText,3
                 ; 0000 0670                 LcdTaskas[2] = 1;
000de7 e0e1      	LDI  R30,LOW(1)
                +
000de8 93e0 016a+STS _LcdTaskas + ( 2 ) , R30
                 	__PUTB1MN _LcdTaskas,2
                 ; 0000 0671                 }
                 ; 0000 0672                 else{
000dea c009      	RJMP _0x1FA
                 _0x1F9:
                 ; 0000 0673                 LcdText[0] = ' ';
000deb e2e0      	LDI  R30,LOW(32)
000dec 93e0 0164 	STS  _LcdText,R30
                 ; 0000 0674                 LcdText[1] = ' ';
                +
000dee 93e0 0165+STS _LcdText + ( 1 ) , R30
                 	__PUTB1MN _LcdText,1
                 ; 0000 0675                 LcdText[2] = ' ';
                +
000df0 93e0 0166+STS _LcdText + ( 2 ) , R30
                 	__PUTB1MN _LcdText,2
                 ; 0000 0676                 LcdText[3] = ' ';
                 _0x220:
                +
000df2 93e0 0167+STS _LcdText + ( 3 ) , R30
                 	__PUTB1MN _LcdText,3
                 ; 0000 0677                 }
                 _0x1FA:
                 _0x1F8:
                 ; 0000 0678 
                 ; 0000 0679                 if((BUTTON[0]==0)&&(BUTTON[1]==1)&&(BUTTON[2]==0)){
000df4 91a0 0160 	LDS  R26,_BUTTON
000df6 30a0      	CPI  R26,LOW(0x0)
000df7 f441      	BRNE _0x1FC
                +
000df8 91a0 0161+LDS R26 , _BUTTON + ( 1 )
                 	__GETB2MN _BUTTON,1
000dfa 30a1      	CPI  R26,LOW(0x1)
000dfb f421      	BRNE _0x1FC
                +
000dfc 91a0 0162+LDS R26 , _BUTTON + ( 2 )
                 	__GETB2MN _BUTTON,2
000dfe 30a0      	CPI  R26,LOW(0x0)
000dff f009      	BREQ _0x1FD
                 _0x1FC:
000e00 c010      	RJMP _0x1FB
                 _0x1FD:
                 ; 0000 067A                     if(ItamposTrigeris2==0){
000e01 91e0 019a 	LDS  R30,_ItamposTrigeris2
000e03 30e0      	CPI  R30,0
000e04 f459      	BRNE _0x1FE
                 ; 0000 067B                     MAX_BATTERY_VOLTAGE++;
000e05 e0a5      	LDI  R26,LOW(_MAX_BATTERY_VOLTAGE)
000e06 e0b0      	LDI  R27,HIGH(_MAX_BATTERY_VOLTAGE)
000e07 940e 0eae 	CALL __EEPROMRDW
000e09 9631      	ADIW R30,1
000e0a 940e 0ebe 	CALL __EEPROMWRW
000e0c 9731      	SBIW R30,1
                 ; 0000 067C                     ItamposTrigeris2 = 1;
000e0d e0e1      	LDI  R30,LOW(1)
000e0e 93e0 019a 	STS  _ItamposTrigeris2,R30
                 ; 0000 067D                     }
                 ; 0000 067E                 }
                 _0x1FE:
                 ; 0000 067F                 else if((BUTTON[0]==1)&&(BUTTON[1]==0)&&(BUTTON[2]==0)){
000e10 c020      	RJMP _0x1FF
                 _0x1FB:
000e11 91a0 0160 	LDS  R26,_BUTTON
000e13 30a1      	CPI  R26,LOW(0x1)
000e14 f441      	BRNE _0x201
                +
000e15 91a0 0161+LDS R26 , _BUTTON + ( 1 )
                 	__GETB2MN _BUTTON,1
000e17 30a0      	CPI  R26,LOW(0x0)
000e18 f421      	BRNE _0x201
                +
000e19 91a0 0162+LDS R26 , _BUTTON + ( 2 )
                 	__GETB2MN _BUTTON,2
000e1b 30a0      	CPI  R26,LOW(0x0)
000e1c f009      	BREQ _0x202
                 _0x201:
000e1d c010      	RJMP _0x200
                 _0x202:
                 ; 0000 0680                     if(ItamposTrigeris2==0){
000e1e 91e0 019a 	LDS  R30,_ItamposTrigeris2
000e20 30e0      	CPI  R30,0
000e21 f459      	BRNE _0x203
                 ; 0000 0681                     MAX_BATTERY_VOLTAGE--;
000e22 e0a5      	LDI  R26,LOW(_MAX_BATTERY_VOLTAGE)
000e23 e0b0      	LDI  R27,HIGH(_MAX_BATTERY_VOLTAGE)
000e24 940e 0eae 	CALL __EEPROMRDW
000e26 9731      	SBIW R30,1
000e27 940e 0ebe 	CALL __EEPROMWRW
000e29 9631      	ADIW R30,1
                 ; 0000 0682                     ItamposTrigeris2 = 1;
000e2a e0e1      	LDI  R30,LOW(1)
000e2b 93e0 019a 	STS  _ItamposTrigeris2,R30
                 ; 0000 0683                     }
                 ; 0000 0684                 }
                 _0x203:
                 ; 0000 0685                 else{
000e2d c003      	RJMP _0x204
                 _0x200:
                 ; 0000 0686                 ItamposTrigeris2 = 0;
000e2e e0e0      	LDI  R30,LOW(0)
000e2f 93e0 019a 	STS  _ItamposTrigeris2,R30
                 ; 0000 0687                 }
                 _0x204:
                 _0x1FF:
                 ; 0000 0688             }
000e31 9621      	ADIW R28,1
                 ; 0000 0689             else{
000e32 c005      	RJMP _0x205
                 _0x1E7:
                 ; 0000 068A             Timer28 = 0;
000e33 e0e0      	LDI  R30,LOW(0)
000e34 93e0 01a9 	STS  _Timer28_S000000B003,R30
000e36 93e0 01aa 	STS  _Timer28_S000000B003+1,R30
                 ; 0000 068B             }
                 _0x205:
                 ; 0000 068C         }
                 ; 0000 068D         else{
000e38 c001      	RJMP _0x206
                 _0x1A4:
                 ; 0000 068E         LangoAdresas = 0;
000e39 24cc      	CLR  R12
                 ; 0000 068F         }
                 _0x206:
                 ; 0000 0690 
                 ; 0000 0691     // Kai nuspaustas tik 1 ir 4 mygtukas:
                 ; 0000 0692     // Krovimo nutraukimo funkcija:
                 ; 0000 0693         if((BUTTON[0]==1)&&(BUTTON[1]==0)&&(BUTTON[2]==0)&&(BUTTON[3]==1)){
000e3a 91a0 0160 	LDS  R26,_BUTTON
000e3c 30a1      	CPI  R26,LOW(0x1)
000e3d f461      	BRNE _0x208
                +
000e3e 91a0 0161+LDS R26 , _BUTTON + ( 1 )
                 	__GETB2MN _BUTTON,1
000e40 30a0      	CPI  R26,LOW(0x0)
000e41 f441      	BRNE _0x208
                +
000e42 91a0 0162+LDS R26 , _BUTTON + ( 2 )
                 	__GETB2MN _BUTTON,2
000e44 30a0      	CPI  R26,LOW(0x0)
000e45 f421      	BRNE _0x208
                +
000e46 91a0 0163+LDS R26 , _BUTTON + ( 3 )
                 	__GETB2MN _BUTTON,3
000e48 30a1      	CPI  R26,LOW(0x1)
000e49 f009      	BREQ _0x209
                 _0x208:
000e4a c01b      	RJMP _0x207
                 _0x209:
                 ; 0000 0694         // Charge Off
                 ; 0000 0695         static unsigned int Timer21;
                 ; 0000 0696             if(UPS_STATE==1){
000e4b e0e1      	LDI  R30,LOW(1)
000e4c 15e6      	CP   R30,R6
000e4d f491      	BRNE _0x20A
                 ; 0000 0697             Timer21++;
000e4e eaab      	LDI  R26,LOW(_Timer21_S000000B002)
000e4f e0b1      	LDI  R27,HIGH(_Timer21_S000000B002)
000e50 91ed      	LD   R30,X+
000e51 91fd      	LD   R31,X+
000e52 9631      	ADIW R30,1
000e53 93fe      	ST   -X,R31
000e54 93ee      	ST   -X,R30
000e55 9731      	SBIW R30,1
                 ; 0000 0698                 if(Timer21>=5000){
000e56 91a0 01ab 	LDS  R26,_Timer21_S000000B002
000e58 91b0 01ac 	LDS  R27,_Timer21_S000000B002+1
000e5a 38a8      	CPI  R26,LOW(0x1388)
000e5b e1e3      	LDI  R30,HIGH(0x1388)
000e5c 07be      	CPC  R27,R30
000e5d f008      	BRLO _0x20B
                 ; 0000 0699                 UPS_STATE = 0;
000e5e 2466      	CLR  R6
                 ; 0000 069A                 }
                 ; 0000 069B             }
                 _0x20B:
                 ; 0000 069C             else{
000e5f c005      	RJMP _0x20C
                 _0x20A:
                 ; 0000 069D             Timer21 = 0;
000e60 e0e0      	LDI  R30,LOW(0)
000e61 93e0 01ab 	STS  _Timer21_S000000B002,R30
000e63 93e0 01ac 	STS  _Timer21_S000000B002+1,R30
                 ; 0000 069E             }
                 _0x20C:
                 ; 0000 069F         }
                 ; 0000 06A0         else{
000e65 c005      	RJMP _0x20D
                 _0x207:
                 ; 0000 06A1         Timer21 = 0;
000e66 e0e0      	LDI  R30,LOW(0)
000e67 93e0 01ab 	STS  _Timer21_S000000B002,R30
000e69 93e0 01ac 	STS  _Timer21_S000000B002+1,R30
                 ; 0000 06A2         }
                 _0x20D:
                 ; 0000 06A3 
                 ; 0000 06A4 ////////////////////////////////////////////////////////////////////////////////////
                 ; 0000 06A5 
                 ; 0000 06A6 
                 ; 0000 06A7 
                 ; 0000 06A8 
                 ; 0000 06A9 
                 ; 0000 06AA 
                 ; 0000 06AB 
                 ; 0000 06AC 
                 ; 0000 06AD 
                 ; 0000 06AE     RelayOutputs();
000e6b 940e 00c8 	CALL _RelayOutputs
                 ; 0000 06AF     CheckButtons();
000e6d 940e 0415 	CALL _CheckButtons
                 ; 0000 06B0     UpdateLcd();
000e6f 940e 00e4 	CALL _UpdateLcd
                 ; 0000 06B1 
                 ; 0000 06B2     delay_us(900);
                +
000e71 e088     +LDI R24 , LOW ( 1800 )
000e72 e097     +LDI R25 , HIGH ( 1800 )
                +__DELAY_USW_LOOP :
000e73 9701     +SBIW R24 , 1
000e74 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 1800
                 ; 0000 06B3     }
000e75 940c 05d1 	JMP  _0x150
                 ; 0000 06B4 }
                 _0x20E:
000e77 cfff      	RJMP _0x20E
                 
                 	.CSEG
                 _strlenf:
000e78 27aa          clr  r26
000e79 27bb          clr  r27
000e7a 91e9          ld   r30,y+
000e7b 91f9          ld   r31,y+
                 strlenf0:
000e7c 9005      	lpm  r0,z+
000e7d 2000          tst  r0
000e7e f011          breq strlenf1
000e7f 9611          adiw r26,1
000e80 cffb          rjmp strlenf0
                 strlenf1:
000e81 01fd          movw r30,r26
000e82 9508          ret
                 
                 	.DSEG
                 _BUTTON:
000160           	.BYTE 0x4
                 
                 	.ESEG
                 _BATTERY_FOULT:
000000           	.BYTE 0x1
                 
                 	.DSEG
                 _LcdText:
000164           	.BYTE 0x4
                 _LcdTaskas:
000168           	.BYTE 0x4
                 _Timer3:
00016c           	.BYTE 0x2
                 
                 	.ESEG
                 _Timer4:
000001           	.BYTE 0x2
                 _Timer5:
000003           	.BYTE 0x2
                 
                 	.DSEG
                 _Timer7:
00016e           	.BYTE 0x2
                 _Timer8:
000170           	.BYTE 0x2
                 _Timer9:
000172           	.BYTE 0x2
                 _Timer10:
000174           	.BYTE 0x2
                 _Timer11:
000176           	.BYTE 0x2
                 _Timer12:
000178           	.BYTE 0x2
                 _Timer14:
00017a           	.BYTE 0x2
                 _Timer19:
00017c           	.BYTE 0x2
                 _Timer20:
00017e           	.BYTE 0x2
                 _Timer24:
000180           	.BYTE 0x2
                 _LanguTrigeris:
000182           	.BYTE 0x1
                 _BATTERY_VOLTAGE:
000183           	.BYTE 0x2
                 _BATTERY_VOLTAGE_ARCHIVE:
000185           	.BYTE 0x14
                 
                 	.ESEG
                 _MAX_BATTERY_VOLTAGE:
000005           	.BYTE 0x2
                 _MIN_BATTERY_VOLTAGE:
000007           	.BYTE 0x2
                 
                 	.DSEG
                 _ItamposTrigeris1:
000199           	.BYTE 0x1
                 _ItamposTrigeris2:
00019a           	.BYTE 0x1
                 _Timer29_S0000007000:
00019b           	.BYTE 0x2
                 _Timer16:
00019d           	.BYTE 0x2
                 
                 	.ESEG
                 _Timer17:
000009           	.BYTE 0x2
                 _Timer18:
00000b           	.BYTE 0x2
                 
                 	.DSEG
                 _InteruptTimer:
00019f           	.BYTE 0x2
                 _Timer1_S000000B000:
0001a1           	.BYTE 0x2
                 _Timer2_S000000B003:
0001a3           	.BYTE 0x2
                 _Timer26_S000000B003:
0001a5           	.BYTE 0x2
                 _Timer27_S000000B003:
0001a7           	.BYTE 0x2
                 _Timer28_S000000B003:
0001a9           	.BYTE 0x2
                 _Timer21_S000000B002:
0001ab           	.BYTE 0x2
                 
                 	.CSEG
                 
                 	.CSEG
                 _delay_ms:
000e83 91e9      	ld   r30,y+
000e84 91f9      	ld   r31,y+
000e85 9630      	adiw r30,0
000e86 f039      	breq __delay_ms1
                 __delay_ms0:
                +
000e87 ed80     +LDI R24 , LOW ( 0x7D0 )
000e88 e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
000e89 9701     +SBIW R24 , 1
000e8a f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
000e8b 95a8      	wdr
000e8c 9731      	sbiw r30,1
000e8d f7c9      	brne __delay_ms0
                 __delay_ms1:
000e8e 9508      	ret
                 
                 __MULW12U:
000e8f 9ffa      	MUL  R31,R26
000e90 2df0      	MOV  R31,R0
000e91 9feb      	MUL  R30,R27
000e92 0df0      	ADD  R31,R0
000e93 9fea      	MUL  R30,R26
000e94 2de0      	MOV  R30,R0
000e95 0df1      	ADD  R31,R1
000e96 9508      	RET
                 
                 __DIVW21U:
000e97 2400      	CLR  R0
000e98 2411      	CLR  R1
000e99 e190      	LDI  R25,16
                 __DIVW21U1:
000e9a 0faa      	LSL  R26
000e9b 1fbb      	ROL  R27
000e9c 1c00      	ROL  R0
000e9d 1c11      	ROL  R1
000e9e 1a0e      	SUB  R0,R30
000e9f 0a1f      	SBC  R1,R31
000ea0 f418      	BRCC __DIVW21U2
000ea1 0e0e      	ADD  R0,R30
000ea2 1e1f      	ADC  R1,R31
000ea3 c001      	RJMP __DIVW21U3
                 __DIVW21U2:
000ea4 60a1      	SBR  R26,1
                 __DIVW21U3:
000ea5 959a      	DEC  R25
000ea6 f799      	BRNE __DIVW21U1
000ea7 01fd      	MOVW R30,R26
000ea8 01d0      	MOVW R26,R0
000ea9 9508      	RET
                 
                 __GETW1P:
000eaa 91ed      	LD   R30,X+
000eab 91fc      	LD   R31,X
000eac 9711      	SBIW R26,1
000ead 9508      	RET
                 
                 __EEPROMRDW:
000eae 9611      	ADIW R26,1
000eaf d002      	RCALL __EEPROMRDB
000eb0 2ffe      	MOV  R31,R30
000eb1 9711      	SBIW R26,1
                 
                 __EEPROMRDB:
000eb2 99e1      	SBIC EECR,EEWE
000eb3 cffe      	RJMP __EEPROMRDB
000eb4 93ff      	PUSH R31
000eb5 b7ff      	IN   R31,SREG
000eb6 94f8      	CLI
000eb7 bbae      	OUT  EEARL,R26
000eb8 bbbf      	OUT  EEARH,R27
000eb9 9ae0      	SBI  EECR,EERE
000eba b3ed      	IN   R30,EEDR
000ebb bfff      	OUT  SREG,R31
000ebc 91ff      	POP  R31
000ebd 9508      	RET
                 
                 __EEPROMWRW:
000ebe d007      	RCALL __EEPROMWRB
000ebf 9611      	ADIW R26,1
000ec0 93ef      	PUSH R30
000ec1 2fef      	MOV  R30,R31
000ec2 d003      	RCALL __EEPROMWRB
000ec3 91ef      	POP  R30
000ec4 9711      	SBIW R26,1
000ec5 9508      	RET
                 
                 __EEPROMWRB:
000ec6 9be1      	SBIS EECR,EEWE
000ec7 c002      	RJMP __EEPROMWRB1
000ec8 95a8      	WDR
000ec9 cffc      	RJMP __EEPROMWRB
                 __EEPROMWRB1:
000eca b79f      	IN   R25,SREG
000ecb 94f8      	CLI
000ecc bbae      	OUT  EEARL,R26
000ecd bbbf      	OUT  EEARH,R27
000ece 9ae0      	SBI  EECR,EERE
000ecf b38d      	IN   R24,EEDR
000ed0 17e8      	CP   R30,R24
000ed1 f019      	BREQ __EEPROMWRB0
000ed2 bbed      	OUT  EEDR,R30
000ed3 9ae2      	SBI  EECR,EEMWE
000ed4 9ae1      	SBI  EECR,EEWE
                 __EEPROMWRB0:
000ed5 bf9f      	OUT  SREG,R25
000ed6 9508      	RET
                 
                 __CPW02:
000ed7 2400      	CLR  R0
000ed8 160a      	CP   R0,R26
000ed9 060b      	CPC  R0,R27
000eda 9508      	RET
                 
                 __SAVELOCR6:
000edb 935a      	ST   -Y,R21
                 __SAVELOCR5:
000edc 934a      	ST   -Y,R20
                 __SAVELOCR4:
000edd 933a      	ST   -Y,R19
                 __SAVELOCR3:
000ede 932a      	ST   -Y,R18
                 __SAVELOCR2:
000edf 931a      	ST   -Y,R17
000ee0 930a      	ST   -Y,R16
000ee1 9508      	RET
                 
                 __LOADLOCR6:
000ee2 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
000ee3 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
000ee4 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
000ee5 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
000ee6 8119      	LDD  R17,Y+1
000ee7 8108      	LD   R16,Y
000ee8 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega16 register use summary:
r0 :  22 r1 :   5 r2 :   0 r3 :   0 r4 :   8 r5 :   6 r6 :  26 r7 :   5 
r8 :   6 r9 :   5 r10:   5 r11:   6 r12:   8 r13:   3 r14:   0 r15:   0 
r16:  14 r17:  10 r18:   8 r19:   7 r20:   5 r21:   4 r22:  20 r23:   2 
r24:  12 r25:   7 r26: 575 r27: 214 r28:  23 r29:   1 r30:1393 r31: 212 
x  :  87 y  : 551 z  :   6 
Registers used: 31 out of 35 (88.6%)

ATmega16 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   8 add   :  10 
adiw  :  42 and   :   0 andi  :   1 asr   :   0 bclr  :   0 bld   :   0 
brbc  :   0 brbs  :   0 brcc  :   1 brcs  :   0 break :   0 breq  :  30 
brge  :   3 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :  20 
brlt  :   3 brmi  :   1 brne  : 179 brpl  :   3 brsh  :  13 brtc  :   0 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 call  : 171 
cbi   :  28 cbr   :   0 clc   :   0 clh   :   0 cli   :   3 cln   :   0 
clr   :  27 cls   :   0 clt   :   0 clv   :   0 clz   :   0 com   :   0 
cp    :  33 cpc   :  34 cpi   : 182 cpse  :   0 dec   :   3 des   :   0 
eor   :   0 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   0 ijmp  :   0 
in    :   8 inc   :   1 jmp   :  42 ld    : 169 ldd   :  31 ldi   : 748 
lds   : 170 lpm   :   3 lsl   :   4 lsr   :   0 mov   :  26 movw  :  50 
mul   :   3 muls  :   1 mulsu :   0 neg   :   0 nop   :   0 or    :   2 
ori   :   1 out   :  49 pop   :   2 push  :   2 rcall :  18 ret   :  20 
reti  :   1 rjmp  : 185 rol   :   6 ror   :   0 sbc   :  19 sbci  :   6 
sbi   :  30 sbic  :   5 sbis  :   3 sbiw  :  40 sbr   :   1 sbrc  :   0 
sbrs  :   0 sec   :   0 seh   :   0 sei   :   1 sen   :   0 ser   :   1 
ses   :   0 set   :   0 sev   :   0 sez   :   0 sleep :   0 spm   :   0 
st    : 146 std   : 296 sts   : 241 sub   :  19 subi  :   9 swap  :   0 
tst   :  14 wdr   :   2 
Instructions used: 60 out of 116 (51.7%)

ATmega16 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x001dd2   7586     48   7634   16384  46.6%
[.dseg] 0x000060 0x0001ad      0     77     77    1024   7.5%
[.eseg] 0x000000 0x00000d      0     13     13     512   2.5%

Assembly complete, 0 errors, 10 warnings
