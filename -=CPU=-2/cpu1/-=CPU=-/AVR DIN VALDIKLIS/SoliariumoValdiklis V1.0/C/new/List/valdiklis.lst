
AVRASM ver. 2.1.30  D:\TOMOSIUKS\-=CPU=-\AVR DIN VALDIKLIS\SoliariumoValdiklis V1.0\C\new\List\valdiklis.asm Sat Nov 03 17:01:24 2012

D:\TOMOSIUKS\-=CPU=-\AVR DIN VALDIKLIS\SoliariumoValdiklis V1.0\C\new\List\valdiklis.asm(1053): warning: Register r4 already defined by the .DEF directive
D:\TOMOSIUKS\-=CPU=-\AVR DIN VALDIKLIS\SoliariumoValdiklis V1.0\C\new\List\valdiklis.asm(1054): warning: Register r7 already defined by the .DEF directive
D:\TOMOSIUKS\-=CPU=-\AVR DIN VALDIKLIS\SoliariumoValdiklis V1.0\C\new\List\valdiklis.asm(1055): warning: Register r6 already defined by the .DEF directive
D:\TOMOSIUKS\-=CPU=-\AVR DIN VALDIKLIS\SoliariumoValdiklis V1.0\C\new\List\valdiklis.asm(1056): warning: Register r9 already defined by the .DEF directive
D:\TOMOSIUKS\-=CPU=-\AVR DIN VALDIKLIS\SoliariumoValdiklis V1.0\C\new\List\valdiklis.asm(1057): warning: Register r8 already defined by the .DEF directive
D:\TOMOSIUKS\-=CPU=-\AVR DIN VALDIKLIS\SoliariumoValdiklis V1.0\C\new\List\valdiklis.asm(1058): warning: Register r11 already defined by the .DEF directive
D:\TOMOSIUKS\-=CPU=-\AVR DIN VALDIKLIS\SoliariumoValdiklis V1.0\C\new\List\valdiklis.asm(1059): warning: Register r10 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V2.04.4a Advanced
                 ;(C) Copyright 1998-2009 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Chip type                : ATmega128
                 ;Program type             : Application
                 ;Clock frequency          : 8.000000 MHz
                 ;Memory model             : Small
                 ;Optimize for             : Size
                 ;(s)printf features       : float, width, precision
                 ;(s)scanf features        : int, width
                 ;External RAM size        : 0
                 ;Data Stack size          : 1024 byte(s)
                 ;Heap size                : 0 byte(s)
                 ;Promote 'char' to 'int'  : Yes
                 ;'char' is unsigned       : Yes
                 ;8 bit enums              : Yes
                 ;global 'const' stored in FLASH: No
                 ;Enhanced core instructions    : On
                 ;Smart register allocation     : On
                 ;Automatic register allocation : On
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega128
                 	#pragma AVRPART MEMORY PROG_FLASH 131072
                 	#pragma AVRPART MEMORY EEPROM 4096
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 4096
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x100
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU RAMPZ=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 	.EQU XMCRA=0x6D
                 	.EQU XMCRB=0x6C
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X+
                 	LD   R22,X
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _STAND_BY_TIMER=R4
                 	.DEF _MAIN_MENU_TIMER=R7
                 	.DEF _LCD_LED_TIMER=R6
                 	.DEF _RefreshTime=R9
                 	.DEF __lcd_x=R8
                 	.DEF __lcd_y=R11
                 	.DEF __lcd_maxx=R10
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;INTERRUPT VECTORS
000000 940c 01d2 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
00002a 940c 0000 	JMP  0x00
00002c 940c 0000 	JMP  0x00
00002e 940c 0000 	JMP  0x00
000030 940c 0000 	JMP  0x00
000032 940c 0000 	JMP  0x00
000034 940c 0000 	JMP  0x00
000036 940c 0000 	JMP  0x00
000038 940c 0000 	JMP  0x00
00003a 940c 0000 	JMP  0x00
00003c 940c 0000 	JMP  0x00
00003e 940c 0000 	JMP  0x00
000040 940c 0000 	JMP  0x00
000042 940c 0000 	JMP  0x00
000044 940c 0000 	JMP  0x00
                 
                 _conv_delay_G102:
000046 0064
000047 00c8
000048 0190
000049 0320      	.DB  0x64,0x0,0xC8,0x0,0x90,0x1,0x20,0x3
                 _bit_mask_G102:
00004a fff8
00004b fffc
00004c fffe
00004d ffff      	.DB  0xF8,0xFF,0xFC,0xFF,0xFE,0xFF,0xFF,0xFF
                 
                 _0x6C:
D:\TOMOSIUKS\-=CPU=-\AVR DIN VALDIKLIS\SoliariumoValdiklis V1.0\C\new\List\valdiklis.asm(1107): warning: .cseg .db misalignment - padding zero byte
00004e 0001      	.DB  0x1
                 _0x90:
D:\TOMOSIUKS\-=CPU=-\AVR DIN VALDIKLIS\SoliariumoValdiklis V1.0\C\new\List\valdiklis.asm(1109): warning: .cseg .db misalignment - padding zero byte
00004f 0004      	.DB  0x4
                 _0xB1:
D:\TOMOSIUKS\-=CPU=-\AVR DIN VALDIKLIS\SoliariumoValdiklis V1.0\C\new\List\valdiklis.asm(1111): warning: .cseg .db misalignment - padding zero byte
000050 003c      	.DB  0x3C
                 _0xB2:
000051 0000
000052 40a0      	.DB  0x0,0x0,0xA0,0x40
                 _0xB3:
000053 0000
000054 4020      	.DB  0x0,0x0,0x20,0x40
                 _0x0:
000055 2d2b
000056 2d2d
000057 2d2d
000058 2d2d      	.DB  0x2B,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D
000059 2d2d
00005a 2d2d
00005b 2d2d
00005c 2d2d      	.DB  0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D
00005d 2d2d
00005e 2b2d
00005f 2f00
000060 5320      	.DB  0x2D,0x2D,0x2D,0x2B,0x0,0x2F,0x20,0x53
000061 4c4f
000062 4149
000063 2e52
000064 4120      	.DB  0x4F,0x4C,0x49,0x41,0x52,0x2E,0x20,0x41
000065 5355
000066 4e49
000067 4d49
000068 204f      	.DB  0x55,0x53,0x49,0x4E,0x49,0x4D,0x4F,0x20
000069 002f
00006a 202f
00006b 4156
00006c 444c      	.DB  0x2F,0x0,0x2F,0x20,0x56,0x41,0x4C,0x44
00006d 4b49
00006e 494c
00006f 2053
000070 3156      	.DB  0x49,0x4B,0x4C,0x49,0x53,0x20,0x56,0x31
000071 002e
000072 2f20
000073 2d2b
000074 2d2d      	.DB  0x2E,0x0,0x20,0x2F,0x2B,0x2D,0x2D,0x2D
000075 2d2d
000076 2d2d
000077 2d2d
000078 2d2d      	.DB  0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D
000079 2d2d
00007a 2d2d
00007b 2d2d
00007c 2b2d      	.DB  0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x2B
00007d 5200
00007e 5341
00007f 4154
000080 4420      	.DB  0x0,0x52,0x41,0x53,0x54,0x41,0x20,0x44
000081 3153
000082 4238
000083 3032
000084 540a      	.DB  0x53,0x31,0x38,0x42,0x32,0x30,0xA,0x54
000085 5245
000086 4f4d
000087 4144
000088 4956      	.DB  0x45,0x52,0x4D,0x4F,0x44,0x41,0x56,0x49
000089 4c4b
00008a 5549
00008b 203a
00008c 5300      	.DB  0x4B,0x4C,0x49,0x55,0x3A,0x20,0x0,0x53
00008d 4154
00008e 5452
00008f 5641
000090 4d49      	.DB  0x54,0x41,0x52,0x54,0x41,0x56,0x49,0x4D
000091 204f
000092 4c4b
000093 4941
000094 4144      	.DB  0x4F,0x20,0x4B,0x4C,0x41,0x49,0x44,0x41
000095 0a3a
000096 4554
000097 504d
000098 202e      	.DB  0x3A,0xA,0x54,0x45,0x4D,0x50,0x2E,0x20
000099 4144
00009a 4956
00009b 4c4b
00009c 5349      	.DB  0x44,0x41,0x56,0x49,0x4B,0x4C,0x49,0x53
00009d 2b00
00009e 003e
00009f 2d2d
0000a0 003e      	.DB  0x0,0x2B,0x3E,0x0,0x2D,0x2D,0x3E,0x0
0000a1 2b3c
0000a2 3c00
0000a3 2d2d
0000a4 2b00      	.DB  0x3C,0x2B,0x0,0x3C,0x2D,0x2D,0x0,0x2B
0000a5 002d
0000a6 2020
0000a7 2020
0000a8 4f53      	.DB  0x2D,0x0,0x20,0x20,0x20,0x20,0x53,0x4F
0000a9 494c
0000aa 5241
0000ab 5549
0000ac 4f4d      	.DB  0x4C,0x49,0x41,0x52,0x49,0x55,0x4D,0x4F
0000ad 2020
0000ae 2020
0000af 2000
0000b0 2020      	.DB  0x20,0x20,0x20,0x20,0x0,0x20,0x20,0x20
0000b1 5620
0000b2 4c41
0000b3 4944
0000b4 4c4b      	.DB  0x20,0x56,0x41,0x4C,0x44,0x49,0x4B,0x4C
0000b5 5349
0000b6 2020
0000b7 2020
0000b8 0020      	.DB  0x49,0x53,0x20,0x20,0x20,0x20,0x20,0x0
0000b9 2020
0000ba 3d2d
0000bb 4150
0000bc 5247      	.DB  0x20,0x20,0x2D,0x3D,0x50,0x41,0x47,0x52
0000bd 202e
0000be 454d
0000bf 494e
0000c0 3d55      	.DB  0x2E,0x20,0x4D,0x45,0x4E,0x49,0x55,0x3D
0000c1 002d
0000c2 2e31
0000c3 414b
0000c4 424d      	.DB  0x2D,0x0,0x31,0x2E,0x4B,0x41,0x4D,0x42
0000c5 5241
0000c6 4f49
0000c7 203a
0000c8 2500      	.DB  0x41,0x52,0x49,0x4F,0x3A,0x20,0x0,0x25
0000c9 322b
0000ca 312e
0000cb df66
0000cc 0043      	.DB  0x2B,0x32,0x2E,0x31,0x66,0xDF,0x43,0x0
0000cd 464f
0000ce 0046
0000cf 2d2d
0000d0 2d2d      	.DB  0x4F,0x46,0x46,0x0,0x2D,0x2D,0x2D,0x2D
0000d1 3200
0000d2 4c2e
0000d3 5541
0000d4 4f4b      	.DB  0x0,0x32,0x2E,0x4C,0x41,0x55,0x4B,0x4F
0000d5 203a
0000d6 2020
0000d7 0020
0000d8 2e33      	.DB  0x3A,0x20,0x20,0x20,0x20,0x0,0x33,0x2E
0000d9 4b53
0000da 454c
0000db 444e
0000dc 5345      	.DB  0x53,0x4B,0x4C,0x45,0x4E,0x44,0x45,0x53
0000dd 203a
0000de 0020
0000df 2e34
0000e0 4f53      	.DB  0x3A,0x20,0x20,0x0,0x34,0x2E,0x53,0x4F
0000e1 494c
0000e2 5241
0000e3 312e
0000e4 203a      	.DB  0x4C,0x49,0x41,0x52,0x2E,0x31,0x3A,0x20
0000e5 3500
0000e6 532e
0000e7 4c4f
0000e8 4149      	.DB  0x0,0x35,0x2E,0x53,0x4F,0x4C,0x49,0x41
0000e9 2e52
0000ea 3a32
0000eb 0020
0000ec 2e36      	.DB  0x52,0x2E,0x32,0x3A,0x20,0x0,0x36,0x2E
0000ed 4f53
0000ee 494c
0000ef 5241
0000f0 332e      	.DB  0x53,0x4F,0x4C,0x49,0x41,0x52,0x2E,0x33
0000f1 203a
0000f2 3700
0000f3 4e2e
0000f4 5355      	.DB  0x3A,0x20,0x0,0x37,0x2E,0x4E,0x55,0x53
0000f5 4154
0000f6 5954
0000f7 414d
0000f8 0049      	.DB  0x54,0x41,0x54,0x59,0x4D,0x41,0x49,0x0
0000f9 4120
0000fa 4b55
0000fb 5453
0000fc 5345      	.DB  0x20,0x41,0x55,0x4B,0x53,0x54,0x45,0x53
0000fd 494e
0000fe 204f
0000ff 554e
000100 454d      	.DB  0x4E,0x49,0x4F,0x20,0x4E,0x55,0x4D,0x45
000101 4952
000102 204f
000103 2000
000104 414c      	.DB  0x52,0x49,0x4F,0x20,0x0,0x20,0x4C,0x41
000105 5349
000106 4f56
000107 5420
000108 5245      	.DB  0x49,0x53,0x56,0x4F,0x20,0x54,0x45,0x52
000109 4f4d
00010a 454d
00010b 5254
00010c 204f      	.DB  0x4D,0x4F,0x4D,0x45,0x54,0x52,0x4F,0x20
00010d 0020
00010e 2020
00010f 2020
000110 2020      	.DB  0x20,0x0,0x20,0x20,0x20,0x20,0x20,0x20
000111 2020
000112 454e
000113 4152
000114 2020      	.DB  0x20,0x20,0x4E,0x45,0x52,0x41,0x20,0x20
000115 2020
000116 2020
000117 2020
000118 2000      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x0,0x20
000119 3d2d
00011a 414b
00011b 424d
00011c 5241      	.DB  0x2D,0x3D,0x4B,0x41,0x4D,0x42,0x41,0x52
00011d 4f49
00011e 5420
00011f 5245
000120 2e4d      	.DB  0x49,0x4F,0x20,0x54,0x45,0x52,0x4D,0x2E
000121 2d3d
000122 0020
000123 2e31
000124 5a55      	.DB  0x3D,0x2D,0x20,0x0,0x31,0x2E,0x55,0x5A
000125 5453
000126 5441
000127 5459
000128 3a41      	.DB  0x53,0x54,0x41,0x54,0x59,0x54,0x41,0x3A
000129 3200
00012a 542e
00012b 4d45
00012c 4550      	.DB  0x0,0x32,0x2E,0x54,0x45,0x4D,0x50,0x45
00012d 4152
00012e 2e54
00012f 003a
000130 2020      	.DB  0x52,0x41,0x54,0x2E,0x3A,0x0,0x20,0x20
000131 2020
000132 464f
000133 0046
000134 2020      	.DB  0x20,0x20,0x4F,0x46,0x46,0x0,0x20,0x20
000135 2d20
000136 2d2d
000137 002d
000138 2e33      	.DB  0x20,0x2D,0x2D,0x2D,0x2D,0x0,0x33,0x2E
000139 4554
00013a 4d52
00013b 4d4f
00013c 5445      	.DB  0x54,0x45,0x52,0x4D,0x4F,0x4D,0x45,0x54
00013d 4f52
00013e 4e20
00013f 3a52
000140 2d00      	.DB  0x52,0x4F,0x20,0x4E,0x52,0x3A,0x0,0x2D
000141 002f
000142 2020
000143 3d2d
000144 414c      	.DB  0x2F,0x0,0x20,0x20,0x2D,0x3D,0x4C,0x41
000145 4b55
000146 204f
000147 4554
000148 4d52      	.DB  0x55,0x4B,0x4F,0x20,0x54,0x45,0x52,0x4D
000149 3d2e
00014a 202d
00014b 0020
00014c 2e31      	.DB  0x2E,0x3D,0x2D,0x20,0x20,0x0,0x31,0x2E
00014d 4554
00014e 504d
00014f 5245
000150 5441      	.DB  0x54,0x45,0x4D,0x50,0x45,0x52,0x41,0x54
000151 3a2e
000152 3200
000153 542e
000154 5245      	.DB  0x2E,0x3A,0x0,0x32,0x2E,0x54,0x45,0x52
000155 4f4d
000156 454d
000157 5254
000158 204f      	.DB  0x4D,0x4F,0x4D,0x45,0x54,0x52,0x4F,0x20
000159 524e
00015a 003a
00015b 2020
00015c 2020      	.DB  0x4E,0x52,0x3A,0x0,0x20,0x20,0x20,0x20
00015d 3d2d
00015e 4b53
00015f 454c
000160 444e      	.DB  0x2D,0x3D,0x53,0x4B,0x4C,0x45,0x4E,0x44
000161 5345
000162 2d3d
000163 5200
000164 5a45      	.DB  0x45,0x53,0x3D,0x2D,0x0,0x52,0x45,0x5A
000165 4d49
000166 5341
000167 003a
000168 5220      	.DB  0x49,0x4D,0x41,0x53,0x3A,0x0,0x20,0x52
000169 4e41
00016a 494b
00016b 494e
00016c 0053      	.DB  0x41,0x4E,0x4B,0x49,0x4E,0x49,0x53,0x0
00016d 4120
00016e 5455
00016f 4d4f
000170 5441      	.DB  0x20,0x41,0x55,0x54,0x4F,0x4D,0x41,0x54
000171 002e
000172 322f
000173 3535
000174 2d00      	.DB  0x2E,0x0,0x2F,0x32,0x35,0x35,0x0,0x2D
000175 533d
000176 4c4f
000177 4149
000178 2e52      	.DB  0x3D,0x53,0x4F,0x4C,0x49,0x41,0x52,0x2E
000179 3120
00017a 5420
00017b 5245
00017c 2e4d      	.DB  0x20,0x31,0x20,0x54,0x45,0x52,0x4D,0x2E
00017d 2d3d
00017e 0020
00017f 3d2d
000180 4f53      	.DB  0x3D,0x2D,0x20,0x0,0x2D,0x3D,0x53,0x4F
000181 494c
000182 5241
000183 202e
000184 2032      	.DB  0x4C,0x49,0x41,0x52,0x2E,0x20,0x32,0x20
000185 4554
000186 4d52
000187 3d2e
000188 202d      	.DB  0x54,0x45,0x52,0x4D,0x2E,0x3D,0x2D,0x20
000189 2d00
00018a 533d
00018b 4c4f
00018c 4149      	.DB  0x0,0x2D,0x3D,0x53,0x4F,0x4C,0x49,0x41
00018d 2e52
00018e 3320
00018f 5420
000190 5245      	.DB  0x52,0x2E,0x20,0x33,0x20,0x54,0x45,0x52
000191 2e4d
000192 2d3d
000193 0020
000194 2020      	.DB  0x4D,0x2E,0x3D,0x2D,0x20,0x0,0x20,0x20
000195 2d20
000196 4e3d
000197 5355
000198 4154      	.DB  0x20,0x2D,0x3D,0x4E,0x55,0x53,0x54,0x41
000199 5954
00019a 414d
00019b 3d49
00019c 202d      	.DB  0x54,0x59,0x4D,0x41,0x49,0x3D,0x2D,0x20
00019d 2020
00019e 4e00
00019f 4245
0001a0 4941      	.DB  0x20,0x20,0x0,0x4E,0x45,0x42,0x41,0x49
0001a1 5447
0001a2 0041
0001a3 3d2d
0001a4 4b45      	.DB  0x47,0x54,0x41,0x0,0x2D,0x3D,0x45,0x4B
0001a5 4152
0001a6 4f4e
0001a7 4120
0001a8 5350      	.DB  0x52,0x41,0x4E,0x4F,0x20,0x41,0x50,0x53
0001a9 4956
0001aa 5445
0001ab 3d2e
0001ac 202d      	.DB  0x56,0x49,0x45,0x54,0x2E,0x3D,0x2D,0x20
0001ad 4100
0001ae 5350
0001af 4956
0001b0 5445      	.DB  0x0,0x41,0x50,0x53,0x56,0x49,0x45,0x54
0001b1 4d49
0001b2 5341
0001b3 003a      	.DB  0x49,0x4D,0x41,0x53,0x3A,0x0
                 _0x2020000:
0001b4 4e2d
0001b5 4e41
D:\TOMOSIUKS\-=CPU=-\AVR DIN VALDIKLIS\SoliariumoValdiklis V1.0\C\new\List\valdiklis.asm(1206): warning: .cseg .db misalignment - padding zero byte
0001b6 0000      	.DB  0x2D,0x4E,0x41,0x4E,0x0
                 _0x2060003:
0001b7 c080      	.DB  0x80,0xC0
                 _0x208005F:
D:\TOMOSIUKS\-=CPU=-\AVR DIN VALDIKLIS\SoliariumoValdiklis V1.0\C\new\List\valdiklis.asm(1210): warning: .cseg .db misalignment - padding zero byte
0001b8 0001      	.DB  0x1
                 _0x2080000:
0001b9 4e2d
0001ba 4e41
D:\TOMOSIUKS\-=CPU=-\AVR DIN VALDIKLIS\SoliariumoValdiklis V1.0\C\new\List\valdiklis.asm(1212): warning: .cseg .db misalignment - padding zero byte
0001bb 0000      	.DB  0x2D,0x4E,0x41,0x4E,0x0
                 
                 __GLOBAL_INI_TBL:
0001bc 0001      	.DW  0x01
0001bd 0589      	.DW  _STAND_BY_S0000006000
0001be 009c      	.DW  _0x6C*2
                 
0001bf 0001      	.DW  0x01
0001c0 05a1      	.DW  _ADC_CHANNEL_S0000006001
0001c1 009e      	.DW  _0x90*2
                 
0001c2 0001      	.DW  0x01
0001c3 05a3      	.DW  _ALGORYTHM_REFRESH_TIME_S0000006001
0001c4 00a0      	.DW  _0xB1*2
                 
0001c5 0004      	.DW  0x04
0001c6 05e7      	.DW  _SOLARIUM_OUTSIDE_OFFSET_S0000006001
0001c7 00a2      	.DW  _0xB2*2
                 
0001c8 0004      	.DW  0x04
0001c9 05eb      	.DW  _SOLARIUM_INSIDE_OFFSET_S0000006001
0001ca 00a6      	.DW  _0xB3*2
                 
0001cb 0002      	.DW  0x02
0001cc 05f2      	.DW  __base_y_G103
0001cd 036e      	.DW  _0x2060003*2
                 
0001ce 0001      	.DW  0x01
0001cf 05f6      	.DW  __seed_G104
0001d0 0370      	.DW  _0x208005F*2
                 
                 _0xFFFFFFFF:
0001d1 0000      	.DW  0
                 
                 __RESET:
0001d2 94f8      	CLI
0001d3 27ee      	CLR  R30
0001d4 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
0001d5 e0f1      	LDI  R31,1
0001d6 bff5      	OUT  MCUCR,R31
0001d7 bfe5      	OUT  MCUCR,R30
0001d8 93e0 006c 	STS  XMCRB,R30
                 
                 ;DISABLE WATCHDOG
0001da e1f8      	LDI  R31,0x18
0001db bdf1      	OUT  WDTCR,R31
0001dc bde1      	OUT  WDTCR,R30
                 
                 ;CLEAR R2-R14
0001dd e08d      	LDI  R24,(14-2)+1
0001de e0a2      	LDI  R26,2
0001df 27bb      	CLR  R27
                 __CLEAR_REG:
0001e0 93ed      	ST   X+,R30
0001e1 958a      	DEC  R24
0001e2 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
0001e3 e080      	LDI  R24,LOW(0x1000)
0001e4 e190      	LDI  R25,HIGH(0x1000)
0001e5 e0a0      	LDI  R26,LOW(0x100)
0001e6 e0b1      	LDI  R27,HIGH(0x100)
                 __CLEAR_SRAM:
0001e7 93ed      	ST   X+,R30
0001e8 9701      	SBIW R24,1
0001e9 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
0001ea e7e8      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
0001eb e0f3      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
0001ec 9185      	LPM  R24,Z+
0001ed 9195      	LPM  R25,Z+
0001ee 9700      	SBIW R24,0
0001ef f061      	BREQ __GLOBAL_INI_END
0001f0 91a5      	LPM  R26,Z+
0001f1 91b5      	LPM  R27,Z+
0001f2 9005      	LPM  R0,Z+
0001f3 9015      	LPM  R1,Z+
0001f4 01bf      	MOVW R22,R30
0001f5 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
0001f6 9005      	LPM  R0,Z+
0001f7 920d      	ST   X+,R0
0001f8 9701      	SBIW R24,1
0001f9 f7e1      	BRNE __GLOBAL_INI_LOOP
0001fa 01fb      	MOVW R30,R22
0001fb cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
0001fc bf8b      	OUT  RAMPZ,R24
                 
                 ;STACK POINTER INITIALIZATION
0001fd efef      	LDI  R30,LOW(0x10FF)
0001fe bfed      	OUT  SPL,R30
0001ff e1e0      	LDI  R30,HIGH(0x10FF)
000200 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000201 e0c0      	LDI  R28,LOW(0x500)
000202 e0d5      	LDI  R29,HIGH(0x500)
                 
000203 940c 0375 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x500
                 
                 	.CSEG
                 ;/*******************************
                 ;Project   : Soliariumo Valdiklis
                 ;Version   : V1.0
                 ;Date      : 2012.09.10
                 ;Author    : Tomas
                 ;Chip type : ATmega128
                 ;*******************************/
                 ;#include <mega128.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x20
                 	.EQU __sm_mask=0x1C
                 	.EQU __sm_powerdown=0x10
                 	.EQU __sm_powersave=0x18
                 	.EQU __sm_standby=0x14
                 	.EQU __sm_ext_standby=0x1C
                 	.EQU __sm_adc_noise_red=0x08
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <delay.h>
                 ;#include <math.h>
                 ;#include <stdio.h>
                 ;/*
                 ;unsigned char PORTF_data[8];
                 ;unsigned char PORTFEx(unsigned char adress_bit, unsigned char value){
                 ;unsigned char data, i, a;
                 ;data = 0;
                 ;PORTF_data[adress_bit] = value;
                 ;
                 ;a = 1;
                 ;    for(i=0;i<8;i++){
                 ;    data += PORTF_data[adress_bit]*a;
                 ;    a = a*2;
                 ;    }
                 ;
                 ;PORTF = data;
                 ;return 0;
                 ;}
                 ;unsigned char PINFEx(char adress_bit){
                 ;unsigned char data, bits[8], a, b;
                 ;signed char i;
                 ;data = PINF;
                 ;
                 ;    for(i=7;i>=0;i--){
                 ;    b = 1;
                 ;        for(a=0;a<7;a++){
                 ;        b = b*2;
                 ;        }
                 ;
                 ;        if(data>=b){
                 ;        bits[i] = 1;
                 ;        data -= b;
                 ;        }
                 ;        else{
                 ;        bits[i] = 0;
                 ;        }
                 ;    }
                 ;return bits[adress_bit];
                 ;}
                 ;*/
                 ;
                 ;/*unsigned char PORTG_data[5];
                 ;unsigned char PORTGEx(unsigned char adress_bit, unsigned char value){
                 ;unsigned char data, i, a;
                 ;data = 0;
                 ;PORTG_data[adress_bit] = value;
                 ;
                 ;a = 1;
                 ;    for(i=0;i<5;i++){
                 ;    data += PORTG_data[adress_bit]*a;
                 ;    a = a*2;
                 ;    }
                 ;
                 ;PORTG = data;
                 ;return 0;
                 ;}*/
                 ;
                 ;unsigned char PINGEx(char adress_bit){
                 ; 0000 0043 unsigned char PINGEx(char adress_bit){
                 
                 	.CSEG
                 _PINGEx:
                 ; 0000 0044 unsigned char data, bits[5], a, b;
                 ; 0000 0045 signed char i;
                 ; 0000 0046 data = PING;
000205 9725      	SBIW R28,5
000206 940e 209b 	CALL __SAVELOCR4
                 ;	adress_bit -> Y+9
                 ;	data -> R17
                 ;	bits -> Y+4
                 ;	a -> R16
                 ;	b -> R19
                 ;	i -> R18
000208 9110 0063 	LDS  R17,99
                 ; 0000 0047 
                 ; 0000 0048     for(i=4;i>=0;i--){
00020a e024      	LDI  R18,LOW(4)
                 _0x4:
00020b 3020      	CPI  R18,0
00020c f104      	BRLT _0x5
                 ; 0000 0049     b = 1;
00020d e031      	LDI  R19,LOW(1)
                 ; 0000 004A         for(a=0;a<i;a++){
00020e e000      	LDI  R16,LOW(0)
                 _0x7:
00020f 2fe2      	MOV  R30,R18
000210 2fa0      	MOV  R26,R16
000211 940e 1912 	CALL SUBOPT_0x0
000213 17ae      	CP   R26,R30
000214 07bf      	CPC  R27,R31
000215 f41c      	BRGE _0x8
                 ; 0000 004B         b = b*2;
000216 0f33      	LSL  R19
                 ; 0000 004C         }
000217 5f0f      	SUBI R16,-1
000218 cff6      	RJMP _0x7
                 _0x8:
                 ; 0000 004D 
                 ; 0000 004E         if(data>=b){
000219 1713      	CP   R17,R19
00021a f060      	BRLO _0x9
                 ; 0000 004F         bits[i] = 1;
00021b 940e 1917 	CALL SUBOPT_0x1
00021d e0e1      	LDI  R30,LOW(1)
00021e 93ec      	ST   X,R30
                 ; 0000 0050         data -= b;
00021f 2fa1      	MOV  R26,R17
000220 27bb      	CLR  R27
000221 2fe3      	MOV  R30,R19
000222 e0f0      	LDI  R31,0
000223 940e 191e 	CALL SUBOPT_0x2
000225 2f1e      	MOV  R17,R30
                 ; 0000 0051         }
                 ; 0000 0052         else{
000226 c004      	RJMP _0xA
                 _0x9:
                 ; 0000 0053         bits[i] = 0;
000227 940e 1917 	CALL SUBOPT_0x1
000229 e0e0      	LDI  R30,LOW(0)
00022a 93ec      	ST   X,R30
                 ; 0000 0054         }
                 _0xA:
                 ; 0000 0055     }
00022b 5021      	SUBI R18,1
00022c cfde      	RJMP _0x4
                 _0x5:
                 ; 0000 0056 return bits[adress_bit];
00022d 85e9      	LDD  R30,Y+9
00022e e0f0      	LDI  R31,0
00022f 01de      	MOVW R26,R28
000230 9614      	ADIW R26,4
000231 0fae      	ADD  R26,R30
000232 1fbf      	ADC  R27,R31
000233 91ec      	LD   R30,X
000234 940e 20a2 	CALL __LOADLOCR4
000236 962a      	ADIW R28,10
000237 9508      	RET
                 ; 0000 0057 }
                 ;
                 ;
                 ;
                 ;
                 ;
                 ;
                 ;
                 ;
                 ;
                 ;// Temperature sensors
                 ;#asm
                    .equ __w1_port=0x12 //PORTD
                    .equ __w1_bit=0
                 ; 0000 0065 #endasm
                 ;#include <ds18b20.h>
                 ;
                 ;#define MAX_DS18B20_DEVICES 8
                 ;
                 ;eeprom unsigned char DS18B20_IS_ASSIGNED[MAX_DS18B20_DEVICES];
                 ;// 1. Assigned and turned on
                 ;// 2. Assigned but turned off
                 ;// X. Not assigned
                 ;
                 ;eeprom unsigned char DS18B20_ADDRESSES[MAX_DS18B20_DEVICES][9];
                 ;// 0. Kambario temperaturos daviklis
                 ;// 1. Lauko temperaturos daviklis
                 ;// 2. Pirmojo soliariumo temperaturos daviklis
                 ;// 3. Antrojo soliariumo temperaturos daviklis
                 ;// 4. Treciojo soliariumo temperaturos daviklis
                 ;// 5. Papildomas kambario temperaturos daviklis
                 ;
                 ;float TEMPERATURES[MAX_DS18B20_DEVICES];
                 ;eeprom float ROOM_TEMPERATURE;
                 ;///////////////////////////////////
                 ;
                 ;
                 ;
                 ;
                 ;
                 ;
                 ;
                 ;
                 ;///////////// BUTTONS /////////////
                 ;// PINS
                 ;#define BUTTON_UP 0
                 ;#define BUTTON_LEFT 1
                 ;#define BUTTON_ENTER 2
                 ;#define BUTTON_RIGHT 3
                 ;#define BUTTON_DOWN 4
                 ;///////////////////////////////////
                 ;
                 ;
                 ;
                 ;
                 ;
                 ;/*
                 ;unsigned char OUTPUT(unsigned char address, unsigned char value){
                 ;    if(address==3){
                 ;    PORTB.4 = value;
                 ;    return 1;
                 ;    }
                 ;    else if(address==4){
                 ;    PORTB.5 = value;
                 ;    return 1;
                 ;    }
                 ;    else if(address==5){
                 ;    PORTB.6 = value;
                 ;    return 1;
                 ;    }
                 ;    else if(address==6){
                 ;    PORTB.7 = value;
                 ;    return 1;
                 ;    }
                 ;    else if(address==7){
                 ;//    PORTGEx(4,value);
                 ;    return 1;
                 ;    }
                 ;    else if(address==8){
                 ;//    PORTGEx(3,value);
                 ;    return 1;
                 ;    }
                 ;    else if(address==9){
                 ;    PORTA.0 = value;
                 ;    return 1;
                 ;    }
                 ;    else if(address==10){
                 ;    PORTA.1 = value;
                 ;    return 1;
                 ;    }
                 ;    else if(address==11){
                 ;    PORTA.2 = value;
                 ;    return 1;
                 ;    }
                 ;    else if(address==12){
                 ;    PORTA.7 = value;
                 ;    return 1;
                 ;    }
                 ;    else if(address==13){
                 ;    PORTA.5 = value;
                 ;    return 1;
                 ;    }
                 ;    else if(address==14){
                 ;    PORTA.3 = value;
                 ;    return 1;
                 ;    }
                 ;    else if(address==15){
                 ;    PORTA.4 = value;
                 ;    return 1;
                 ;    }
                 ;    else if(address==16){
                 ;    PORTA.6 = value;
                 ;    return 1;
                 ;    }
                 ;return 0;
                 ;}
                 ;*/
                 ;
                 ;
                 ;
                 ;
                 ;unsigned char BUTTON_INPUT(unsigned char input){
                 ; 0000 00D0 unsigned char BUTTON_INPUT(unsigned char input){
                 _BUTTON_INPUT:
                 ; 0000 00D1     if(input==0){   return PINGEx(1);  }
                 ;	input -> Y+0
000238 81e8      	LD   R30,Y
000239 30e0      	CPI  R30,0
00023a f421      	BRNE _0xB
00023b e0e1      	LDI  R30,LOW(1)
00023c 93ea      	ST   -Y,R30
00023d dfc7      	RCALL _PINGEx
00023e c094      	RJMP _0x20E000B
                 ; 0000 00D2     if(input==1){   return PINGEx(0);  }
                 _0xB:
00023f 81a8      	LD   R26,Y
000240 30a1      	CPI  R26,LOW(0x1)
000241 f421      	BRNE _0xC
000242 e0e0      	LDI  R30,LOW(0)
000243 93ea      	ST   -Y,R30
000244 dfc0      	RCALL _PINGEx
000245 c08d      	RJMP _0x20E000B
                 ; 0000 00D3     if(input==2){   return PINC.0;  }
                 _0xC:
000246 81a8      	LD   R26,Y
000247 30a2      	CPI  R26,LOW(0x2)
000248 f421      	BRNE _0xD
000249 e0e0      	LDI  R30,0
00024a 9998      	SBIC 0x13,0
00024b e0e1      	LDI  R30,1
00024c c086      	RJMP _0x20E000B
                 ; 0000 00D4     if(input==3){   return PINC.2;  }
                 _0xD:
00024d 81a8      	LD   R26,Y
00024e 30a3      	CPI  R26,LOW(0x3)
00024f f421      	BRNE _0xE
000250 e0e0      	LDI  R30,0
000251 999a      	SBIC 0x13,2
000252 e0e1      	LDI  R30,1
000253 c07f      	RJMP _0x20E000B
                 ; 0000 00D5     if(input==4){   return PINC.1;  }
                 _0xE:
000254 81a8      	LD   R26,Y
000255 30a4      	CPI  R26,LOW(0x4)
000256 f421      	BRNE _0xF
000257 e0e0      	LDI  R30,0
000258 9999      	SBIC 0x13,1
000259 e0e1      	LDI  R30,1
00025a c078      	RJMP _0x20E000B
                 ; 0000 00D6 return 0;
                 _0xF:
00025b c076      	RJMP _0x20E000C
                 ; 0000 00D7 }
                 ;
                 ;
                 ;
                 ;#define SOLARIUM1_AT_WORK PORTD.1
                 ;#define SOLARIUM2_AT_WORK PORTD.2
                 ;#define SOLARIUM3_AT_WORK PORTD.3
                 ;
                 ;
                 ;
                 ;
                 ;// Neveiklumo taimeriai
                 ;unsigned int STAND_BY_TIMER;
                 ;unsigned char MAIN_MENU_TIMER,LCD_LED_TIMER;
                 ;
                 ;eeprom unsigned char MANUAL_CONTROLLER;
                 ;//eeprom unsigned char VALVES[4];
                 ;unsigned char dac_data[4];
                 ;#define ADC_VREF_TYPE 0x20
                 ;
                 ;// Read the 8 most significant bits
                 ;// of the AD conversion result
                 ;unsigned char read_adc(unsigned char adc_input){
                 ; 0000 00ED unsigned char read_adc(unsigned char adc_input){
                 _read_adc:
                 ; 0000 00EE ADMUX=adc_input | (ADC_VREF_TYPE & 0xff);
                 ;	adc_input -> Y+0
00025c 81e8      	LD   R30,Y
00025d 62e0      	ORI  R30,0x20
00025e b9e7      	OUT  0x7,R30
                 ; 0000 00EF // Delay needed for the stabilization of the ADC input voltage
                 ; 0000 00F0 delay_us(10);
                +
00025f e18b     +LDI R24 , LOW ( 27 )
                +__DELAY_USB_LOOP :
000260 958a     +DEC R24
000261 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 27
                 ; 0000 00F1 // Start the AD conversion
                 ; 0000 00F2 ADCSRA|=0x40;
000262 9a36      	SBI  0x6,6
                 ; 0000 00F3 // Wait for the AD conversion to complete
                 ; 0000 00F4 while ((ADCSRA & 0x10)==0);
                 _0x10:
000263 9b34      	SBIS 0x6,4
000264 cffe      	RJMP _0x10
                 ; 0000 00F5 ADCSRA|=0x10;
000265 9a34      	SBI  0x6,4
                 ; 0000 00F6 return ADCH;
000266 b1e5      	IN   R30,0x5
000267 c06b      	RJMP _0x20E000B
                 ; 0000 00F7 }
                 ;
                 ;
                 ;
                 ;
                 ;// Other
                 ;char RefreshTime;
                 ;
                 ;//////////// Mygtukai /////////////
                 ;#define ButtonFiltrationTimer 10 // x*cycle (cycle~1ms)
                 ;///////////////////////////////////
                 ;
                 ;
                 ;
                 ;//-----------------------------------------------------------------------------------//
                 ;//--------------------------------- Lcd System --------------------------------------//
                 ;//-----------------------------------------------------------------------------------//
                 ;#define LCD_LED PORTB.0
                 ;
                 ;static unsigned char RowsOnWindow;
                 ;static unsigned char Address[6];
                 ;static unsigned char SelectedRow;
                 ;static unsigned char RefreshLcd;
                 ;static unsigned char lcd_light_osc;
                 ;static unsigned char lcd_light_now;
                 ;eeprom unsigned char lcd_light;
                 ;
                 ;#asm
                    .equ __lcd_port=0x03 ;PORTE
                 ; 0000 0114 #endasm
                 ;#include <lcd.h>
                 ;
                 ;/*// Ekrano apsvietimas
                 ;//interrupt [TIM0_OVF] void timer0_ovf_isr(void){
                 ;lcd_light_osc += 1;
                 ;    if(lcd_light_osc>=100){
                 ;    lcd_light_osc = 0;
                 ;    }
                 ;
                 ;    if(lcd_light_now>lcd_light_osc){
                 ;    LCD_LED = 1;
                 ;    }
                 ;    else{
                 ;    LCD_LED = 0;
                 ;    }
                 ;//}*/
                 ;
                 ;/*
                 ;unsigned char lcd_cursor(unsigned char x, unsigned char y){
                 ;lcd_gotoxy(x,y);
                 ;_lcd_ready();
                 ;_lcd_write_data(0xe);
                 ;return 1;
                 ;}
                 ;*/
                 ;
                 ;unsigned char SelectAnotherRow(char up_down){
                 ; 0000 012F unsigned char SelectAnotherRow(char up_down){
                 _SelectAnotherRow:
                 ; 0000 0130 // 0 - down
                 ; 0000 0131 // 1 - up
                 ; 0000 0132     if(up_down==0){
                 ;	up_down -> Y+0
000268 81e8      	LD   R30,Y
000269 30e0      	CPI  R30,0
00026a f509      	BRNE _0x13
                 ; 0000 0133         if(SelectedRow<RowsOnWindow-1){
00026b 91e0 052d 	LDS  R30,_RowsOnWindow_G000
00026d 940e 1923 	CALL SUBOPT_0x3
00026f 91a0 0534 	LDS  R26,_SelectedRow_G000
000271 940e 1926 	CALL SUBOPT_0x4
000273 f4bc      	BRGE _0x14
                 ; 0000 0134         SelectedRow++;
000274 91e0 0534 	LDS  R30,_SelectedRow_G000
000276 5fef      	SUBI R30,-LOW(1)
000277 93e0 0534 	STS  _SelectedRow_G000,R30
                 ; 0000 0135             if(Address[5]+3<SelectedRow){
000279 940e 192a 	CALL SUBOPT_0x5
00027b 9633      	ADIW R30,3
00027c 01df      	MOVW R26,R30
00027d 91e0 0534 	LDS  R30,_SelectedRow_G000
00027f e0f0      	LDI  R31,0
000280 17ae      	CP   R26,R30
000281 07bf      	CPC  R27,R31
000282 f434      	BRGE _0x15
                 ; 0000 0136             Address[5] = SelectedRow - 3;
000283 91e0 0534 	LDS  R30,_SelectedRow_G000
000285 e0f0      	LDI  R31,0
000286 9733      	SBIW R30,3
                +
000287 93e0 0533+STS _Address_G000 + ( 5 ) , R30
                 	__PUTB1MN _Address_G000,5
                 ; 0000 0137             }
                 ; 0000 0138         return 1;
                 _0x15:
000289 e0e1      	LDI  R30,LOW(1)
00028a c048      	RJMP _0x20E000B
                 ; 0000 0139         }
                 ; 0000 013A     }
                 _0x14:
                 ; 0000 013B     else{
00028b c011      	RJMP _0x16
                 _0x13:
                 ; 0000 013C         if(SelectedRow>0){
00028c 91a0 0534 	LDS  R26,_SelectedRow_G000
00028e 30a1      	CPI  R26,LOW(0x1)
00028f f068      	BRLO _0x17
                 ; 0000 013D         SelectedRow--;
000290 91e0 0534 	LDS  R30,_SelectedRow_G000
000292 50e1      	SUBI R30,LOW(1)
000293 93e0 0534 	STS  _SelectedRow_G000,R30
                 ; 0000 013E             if(Address[5]>SelectedRow){
                +
000295 91a0 0533+LDS R26 , _Address_G000 + ( 5 )
                 	__GETB2MN _Address_G000,5
000297 17ea      	CP   R30,R26
000298 f410      	BRSH _0x18
                 ; 0000 013F             Address[5] = SelectedRow;
                +
000299 93e0 0533+STS _Address_G000 + ( 5 ) , R30
                 	__PUTB1MN _Address_G000,5
                 ; 0000 0140             }
                 ; 0000 0141         return 1;
                 _0x18:
00029b e0e1      	LDI  R30,LOW(1)
00029c c036      	RJMP _0x20E000B
                 ; 0000 0142         }
                 ; 0000 0143     }
                 _0x17:
                 _0x16:
                 ; 0000 0144 return 0;
00029d c034      	RJMP _0x20E000C
                 ; 0000 0145 }
                 ;
                 ;unsigned char NumToIndex(char Num){
                 ; 0000 0147 unsigned char NumToIndex(char Num){
                 _NumToIndex:
                 ; 0000 0148     if(Num==0){     return '0';}
                 ;	Num -> Y+0
00029e 81e8      	LD   R30,Y
00029f 30e0      	CPI  R30,0
0002a0 f411      	BRNE _0x19
0002a1 e3e0      	LDI  R30,LOW(48)
0002a2 c030      	RJMP _0x20E000B
                 ; 0000 0149     else if(Num==1){return '1';}
                 _0x19:
0002a3 81a8      	LD   R26,Y
0002a4 30a1      	CPI  R26,LOW(0x1)
0002a5 f411      	BRNE _0x1B
0002a6 e3e1      	LDI  R30,LOW(49)
0002a7 c02b      	RJMP _0x20E000B
                 ; 0000 014A     else if(Num==2){return '2';}
                 _0x1B:
0002a8 81a8      	LD   R26,Y
0002a9 30a2      	CPI  R26,LOW(0x2)
0002aa f411      	BRNE _0x1D
0002ab e3e2      	LDI  R30,LOW(50)
0002ac c026      	RJMP _0x20E000B
                 ; 0000 014B     else if(Num==3){return '3';}
                 _0x1D:
0002ad 81a8      	LD   R26,Y
0002ae 30a3      	CPI  R26,LOW(0x3)
0002af f411      	BRNE _0x1F
0002b0 e3e3      	LDI  R30,LOW(51)
0002b1 c021      	RJMP _0x20E000B
                 ; 0000 014C     else if(Num==4){return '4';}
                 _0x1F:
0002b2 81a8      	LD   R26,Y
0002b3 30a4      	CPI  R26,LOW(0x4)
0002b4 f411      	BRNE _0x21
0002b5 e3e4      	LDI  R30,LOW(52)
0002b6 c01c      	RJMP _0x20E000B
                 ; 0000 014D     else if(Num==5){return '5';}
                 _0x21:
0002b7 81a8      	LD   R26,Y
0002b8 30a5      	CPI  R26,LOW(0x5)
0002b9 f411      	BRNE _0x23
0002ba e3e5      	LDI  R30,LOW(53)
0002bb c017      	RJMP _0x20E000B
                 ; 0000 014E     else if(Num==6){return '6';}
                 _0x23:
0002bc 81a8      	LD   R26,Y
0002bd 30a6      	CPI  R26,LOW(0x6)
0002be f411      	BRNE _0x25
0002bf e3e6      	LDI  R30,LOW(54)
0002c0 c012      	RJMP _0x20E000B
                 ; 0000 014F     else if(Num==7){return '7';}
                 _0x25:
0002c1 81a8      	LD   R26,Y
0002c2 30a7      	CPI  R26,LOW(0x7)
0002c3 f411      	BRNE _0x27
0002c4 e3e7      	LDI  R30,LOW(55)
0002c5 c00d      	RJMP _0x20E000B
                 ; 0000 0150     else if(Num==8){return '8';}
                 _0x27:
0002c6 81a8      	LD   R26,Y
0002c7 30a8      	CPI  R26,LOW(0x8)
0002c8 f411      	BRNE _0x29
0002c9 e3e8      	LDI  R30,LOW(56)
0002ca c008      	RJMP _0x20E000B
                 ; 0000 0151     else if(Num==9){return '9';}
                 _0x29:
0002cb 81a8      	LD   R26,Y
0002cc 30a9      	CPI  R26,LOW(0x9)
0002cd f411      	BRNE _0x2B
0002ce e3e9      	LDI  R30,LOW(57)
0002cf c003      	RJMP _0x20E000B
                 ; 0000 0152     else{           return '-';}
                 _0x2B:
0002d0 e2ed      	LDI  R30,LOW(45)
0002d1 c001      	RJMP _0x20E000B
                 ; 0000 0153 return 0;
                 _0x20E000C:
0002d2 e0e0      	LDI  R30,LOW(0)
                 _0x20E000B:
0002d3 9621      	ADIW R28,1
0002d4 9508      	RET
                 ; 0000 0154 }
                 ;
                 ;unsigned char lcd_put_number(char Type, char Lenght, char IsSign,
                 ; 0000 0157 
                 ; 0000 0158                     char NumbersAfterDot,
                 ; 0000 0159 
                 ; 0000 015A                     unsigned long int Number0,
                 ; 0000 015B                     signed long int Number1){
                 _lcd_put_number:
                 ; 0000 015C     if(Lenght>0){
                 ;	Type -> Y+11
                 ;	Lenght -> Y+10
                 ;	IsSign -> Y+9
                 ;	NumbersAfterDot -> Y+8
                 ;	Number0 -> Y+4
                 ;	Number1 -> Y+0
0002d5 85aa      	LDD  R26,Y+10
0002d6 30a1      	CPI  R26,LOW(0x1)
0002d7 f410      	BRSH PC+3
0002d8 940c 0372 	JMP _0x2D
                 ; 0000 015D     unsigned long int k = 1;
                 ; 0000 015E     unsigned char i;
                 ; 0000 015F         for(i=0;i<Lenght-1;i++) k = k*10;
0002da 9725      	SBIW R28,5
0002db e0e1      	LDI  R30,LOW(1)
0002dc 83e9      	STD  Y+1,R30
0002dd e0e0      	LDI  R30,LOW(0)
0002de 83ea      	STD  Y+2,R30
0002df 83eb      	STD  Y+3,R30
0002e0 83ec      	STD  Y+4,R30
                 ;	Type -> Y+16
                 ;	Lenght -> Y+15
                 ;	IsSign -> Y+14
                 ;	NumbersAfterDot -> Y+13
                 ;	Number0 -> Y+9
                 ;	Number1 -> Y+5
                 ;	k -> Y+1
                 ;	i -> Y+0
0002e1 83e8      	ST   Y,R30
                 _0x2F:
0002e2 85ef      	LDD  R30,Y+15
0002e3 940e 1923 	CALL SUBOPT_0x3
0002e5 81a8      	LD   R26,Y
0002e6 940e 1926 	CALL SUBOPT_0x4
0002e8 f454      	BRGE _0x30
0002e9 940e 192e 	CALL SUBOPT_0x6
0002eb 940e 1933 	CALL SUBOPT_0x7
0002ed 940e 193a 	CALL SUBOPT_0x8
0002ef 81e8      	LD   R30,Y
0002f0 5fef      	SUBI R30,-LOW(1)
0002f1 83e8      	ST   Y,R30
0002f2 cfef      	RJMP _0x2F
                 _0x30:
                 ; 0000 0161 if(Type==0){
0002f3 89e8      	LDD  R30,Y+16
0002f4 30e0      	CPI  R30,0
0002f5 f5a1      	BRNE _0x31
                 ; 0000 0162         unsigned long int a;
                 ; 0000 0163         unsigned char b;
                 ; 0000 0164         a = Number0;
0002f6 9725      	SBIW R28,5
                 ;	Type -> Y+21
                 ;	Lenght -> Y+20
                 ;	IsSign -> Y+19
                 ;	NumbersAfterDot -> Y+18
                 ;	Number0 -> Y+14
                 ;	Number1 -> Y+10
                 ;	k -> Y+6
                 ;	i -> Y+5
                 ;	a -> Y+1
                 ;	b -> Y+0
                +
0002f7 85ee     +LDD R30 , Y + 14
0002f8 85ff     +LDD R31 , Y + 14 + 1
0002f9 8968     +LDD R22 , Y + 14 + 2
0002fa 8979     +LDD R23 , Y + 14 + 3
                 	__GETD1S 14
0002fb 940e 193a 	CALL SUBOPT_0x8
                 ; 0000 0165 
                 ; 0000 0166             if(IsSign==1){
0002fd 89ab      	LDD  R26,Y+19
0002fe 30a1      	CPI  R26,LOW(0x1)
0002ff f421      	BRNE _0x32
                 ; 0000 0167             lcd_putchar('+');
000300 e2eb      	LDI  R30,LOW(43)
000301 93ea      	ST   -Y,R30
000302 940e 17b9 	CALL _lcd_putchar
                 ; 0000 0168             }
                 ; 0000 0169 
                 ; 0000 016A             if(a<0){
                 _0x32:
000304 940e 193f 	CALL SUBOPT_0x9
                 ; 0000 016B             a = a*(-1);
                 ; 0000 016C             }
                 ; 0000 016D 
                 ; 0000 016E             if(k*10<a){
000306 940e 1944 	CALL SUBOPT_0xA
000308 940e 1949 	CALL SUBOPT_0xB
00030a f420      	BRSH _0x34
                 ; 0000 016F             a = k*10 - 1;
00030b 940e 1944 	CALL SUBOPT_0xA
00030d 940e 194f 	CALL SUBOPT_0xC
                 ; 0000 0170             }
                 ; 0000 0171 
                 ; 0000 0172             for(i=0;i<Lenght;i++){
                 _0x34:
00030f e0e0      	LDI  R30,LOW(0)
000310 83ed      	STD  Y+5,R30
                 _0x36:
000311 89ec      	LDD  R30,Y+20
000312 81ad      	LDD  R26,Y+5
000313 17ae      	CP   R26,R30
000314 f490      	BRSH _0x37
                 ; 0000 0173                 if(NumbersAfterDot!=0){
000315 89ea      	LDD  R30,Y+18
000316 30e0      	CPI  R30,0
000317 f039      	BREQ _0x38
                 ; 0000 0174                     if(Lenght-NumbersAfterDot==i){
000318 940e 1954 	CALL SUBOPT_0xD
00031a f421      	BRNE _0x39
                 ; 0000 0175                     lcd_putchar('.');
00031b e2ee      	LDI  R30,LOW(46)
00031c 93ea      	ST   -Y,R30
00031d 940e 17b9 	CALL _lcd_putchar
                 ; 0000 0176                     }
                 ; 0000 0177                 }
                 _0x39:
                 ; 0000 0178             b = a/k;
                 _0x38:
00031f 940e 195f 	CALL SUBOPT_0xE
000321 940e 1964 	CALL SUBOPT_0xF
                 ; 0000 0179             lcd_putchar( NumToIndex( b ) );
                 ; 0000 017A             a = a - b*k;
                 ; 0000 017B             k = k/10;
                 ; 0000 017C             }
000323 81ed      	LDD  R30,Y+5
000324 5fef      	SUBI R30,-LOW(1)
000325 83ed      	STD  Y+5,R30
000326 cfea      	RJMP _0x36
                 _0x37:
                 ; 0000 017D         return 1;
000327 e0e1      	LDI  R30,LOW(1)
000328 962a      	ADIW R28,10
000329 c049      	RJMP _0x20E000A
                 ; 0000 017E         }
                 ; 0000 017F 
                 ; 0000 0180         else if(Type==1){
                 _0x31:
00032a 89a8      	LDD  R26,Y+16
00032b 30a1      	CPI  R26,LOW(0x1)
00032c f011      	BREQ PC+3
00032d 940c 0371 	JMP _0x3B
                 ; 0000 0181         signed long int a;
                 ; 0000 0182         unsigned char b;
                 ; 0000 0183         a = Number1;
00032f 9725      	SBIW R28,5
                 ;	Type -> Y+21
                 ;	Lenght -> Y+20
                 ;	IsSign -> Y+19
                 ;	NumbersAfterDot -> Y+18
                 ;	Number0 -> Y+14
                 ;	Number1 -> Y+10
                 ;	k -> Y+6
                 ;	i -> Y+5
                 ;	a -> Y+1
                 ;	b -> Y+0
000330 940e 198b 	CALL SUBOPT_0x10
000332 940e 193a 	CALL SUBOPT_0x8
                 ; 0000 0184 
                 ; 0000 0185             if(IsSign==1){
000334 89ab      	LDD  R26,Y+19
000335 30a1      	CPI  R26,LOW(0x1)
000336 f449      	BRNE _0x3C
                 ; 0000 0186                 if(a>=0){
000337 81ac      	LDD  R26,Y+4
000338 23aa      	TST  R26
000339 f012      	BRMI _0x3D
                 ; 0000 0187                 lcd_putchar('+');
00033a e2eb      	LDI  R30,LOW(43)
00033b c001      	RJMP _0x2E4
                 ; 0000 0188                 }
                 ; 0000 0189                 else{
                 _0x3D:
                 ; 0000 018A                 lcd_putchar('-');
00033c e2ed      	LDI  R30,LOW(45)
                 _0x2E4:
00033d 93ea      	ST   -Y,R30
00033e 940e 17b9 	CALL _lcd_putchar
                 ; 0000 018B                 }
                 ; 0000 018C             }
                 ; 0000 018D 
                 ; 0000 018E             if(a<0){
                 _0x3C:
000340 81ac      	LDD  R26,Y+4
000341 23aa      	TST  R26
000342 f452      	BRPL _0x3F
                 ; 0000 018F             a = a*(-1);
000343 940e 192e 	CALL SUBOPT_0x6
                +
000345 efaf     +LDI R26 , LOW ( 0xFFFFFFFF )
000346 efbf     +LDI R27 , HIGH ( 0xFFFFFFFF )
000347 ef8f     +LDI R24 , BYTE3 ( 0xFFFFFFFF )
000348 ef9f     +LDI R25 , BYTE4 ( 0xFFFFFFFF )
                 	__GETD2N 0xFFFFFFFF
000349 940e 1fb6 	CALL __MULD12
00034b 940e 193a 	CALL SUBOPT_0x8
                 ; 0000 0190             }
                 ; 0000 0191 
                 ; 0000 0192             if(k*10<a){
                 _0x3F:
00034d 940e 1944 	CALL SUBOPT_0xA
00034f 940e 1949 	CALL SUBOPT_0xB
000351 f420      	BRSH _0x40
                 ; 0000 0193             a = k*10 - 1;
000352 940e 1944 	CALL SUBOPT_0xA
000354 940e 194f 	CALL SUBOPT_0xC
                 ; 0000 0194             }
                 ; 0000 0195 
                 ; 0000 0196             for(i=0;i<Lenght;i++){
                 _0x40:
000356 e0e0      	LDI  R30,LOW(0)
000357 83ed      	STD  Y+5,R30
                 _0x42:
000358 89ec      	LDD  R30,Y+20
000359 81ad      	LDD  R26,Y+5
00035a 17ae      	CP   R26,R30
00035b f490      	BRSH _0x43
                 ; 0000 0197                 if(NumbersAfterDot!=0){
00035c 89ea      	LDD  R30,Y+18
00035d 30e0      	CPI  R30,0
00035e f039      	BREQ _0x44
                 ; 0000 0198                     if(Lenght-NumbersAfterDot==i){
00035f 940e 1954 	CALL SUBOPT_0xD
000361 f421      	BRNE _0x45
                 ; 0000 0199                     lcd_putchar('.');
000362 e2ee      	LDI  R30,LOW(46)
000363 93ea      	ST   -Y,R30
000364 940e 17b9 	CALL _lcd_putchar
                 ; 0000 019A                     }
                 ; 0000 019B                 }
                 _0x45:
                 ; 0000 019C             b = a/k;
                 _0x44:
000366 940e 195f 	CALL SUBOPT_0xE
000368 940e 1964 	CALL SUBOPT_0xF
                 ; 0000 019D             lcd_putchar( NumToIndex( b ) );
                 ; 0000 019E             a = a - b*k;
                 ; 0000 019F             k = k/10;
                 ; 0000 01A0             }
00036a 81ed      	LDD  R30,Y+5
00036b 5fef      	SUBI R30,-LOW(1)
00036c 83ed      	STD  Y+5,R30
00036d cfea      	RJMP _0x42
                 _0x43:
                 ; 0000 01A1         return 1;
00036e e0e1      	LDI  R30,LOW(1)
00036f 962a      	ADIW R28,10
000370 c002      	RJMP _0x20E000A
                 ; 0000 01A2         }
                 ; 0000 01A3     }
                 _0x3B:
000371 9625      	ADIW R28,5
                 ; 0000 01A4 return 0;
                 _0x2D:
000372 e0e0      	LDI  R30,LOW(0)
                 _0x20E000A:
000373 962c      	ADIW R28,12
000374 9508      	RET
                 ; 0000 01A5 }
                 ;
                 ;/*
                 ;unsigned char lcd_put_runing_text(   unsigned char Start_x,
                 ;                            unsigned char Start_y,
                 ;
                 ;                            unsigned int Lenght,
                 ;                            unsigned int Position,
                 ;
                 ;                            char flash *str,
                 ;                            unsigned int StrLenght){
                 ;signed int i,a;
                 ;lcd_gotoxy(Start_x,Start_y);
                 ;
                 ;    for(i=0;i<Lenght;i++){
                 ;    a = i + Position - Lenght;
                 ;        if(a>=0){
                 ;            if(a<StrLenght){
                 ;            lcd_putchar(str[a]);
                 ;            }
                 ;            else{
                 ;                if(i==0){
                 ;                return 1;
                 ;                }
                 ;            }
                 ;        }
                 ;        else{
                 ;        lcd_putchar(' ');
                 ;        }
                 ;    }
                 ;return 0;
                 ;}
                 ;*/
                 ;
                 ;//-----------------------------------------------------------------------------------//
                 ;//-----------------------------------------------------------------------------------//
                 ;//-----------------------------------------------------------------------------------//
                 ;
                 ;void main(void){
                 ; 0000 01CB void main(void){
                 _main:
                 ; 0000 01CC // Declare your local variables here
                 ; 0000 01CD 
                 ; 0000 01CE // Input/Output Ports initialization
                 ; 0000 01CF // Port A initialization
                 ; 0000 01D0 // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
                 ; 0000 01D1 // State7=0 State6=0 State5=0 State4=0 State3=0 State2=0 State1=0 State0=0
                 ; 0000 01D2 PORTA=0x00;
000375 e0e0      	LDI  R30,LOW(0)
000376 bbeb      	OUT  0x1B,R30
                 ; 0000 01D3 DDRA=0x00;
000377 bbea      	OUT  0x1A,R30
                 ; 0000 01D4 
                 ; 0000 01D5 // Port B initialization
                 ; 0000 01D6 // Func7=Out Func6=Out Func5=Out Func4=Out Func3=In Func2=In Func1=In Func0=Out
                 ; 0000 01D7 // State7=0 State6=0 State5=0 State4=0 State3=T State2=T State1=T State0=0
                 ; 0000 01D8 PORTB=0x00;
000378 bbe8      	OUT  0x18,R30
                 ; 0000 01D9 DDRB=0xF1;
000379 efe1      	LDI  R30,LOW(241)
00037a bbe7      	OUT  0x17,R30
                 ; 0000 01DA 
                 ; 0000 01DB // Port C initialization
                 ; 0000 01DC // Func7=In Func6=Out Func5=Out Func4=Out Func3=Out Func2=In Func1=In Func0=In
                 ; 0000 01DD // State7=T State6=0 State5=0 State4=0 State3=0 State2=T State1=T State0=T
                 ; 0000 01DE PORTC=0x00;
00037b e0e0      	LDI  R30,LOW(0)
00037c bbe5      	OUT  0x15,R30
                 ; 0000 01DF DDRC=0b01111000;
00037d e7e8      	LDI  R30,LOW(120)
00037e bbe4      	OUT  0x14,R30
                 ; 0000 01E0 
                 ; 0000 01E1 // Port D initialization
                 ; 0000 01E2 // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
                 ; 0000 01E3 // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
                 ; 0000 01E4 PORTD=0b00000000;
00037f e0e0      	LDI  R30,LOW(0)
000380 bbe2      	OUT  0x12,R30
                 ; 0000 01E5 DDRD=0b00000000;
000381 bbe1      	OUT  0x11,R30
                 ; 0000 01E6 
                 ; 0000 01E7 // Port E initialization
                 ; 0000 01E8 // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
                 ; 0000 01E9 // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
                 ; 0000 01EA PORTE=0x00;
000382 b9e3      	OUT  0x3,R30
                 ; 0000 01EB DDRE=0x00;
000383 b9e2      	OUT  0x2,R30
                 ; 0000 01EC 
                 ; 0000 01ED // Port F initialization
                 ; 0000 01EE // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
                 ; 0000 01EF // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
                 ; 0000 01F0 PORTF=0x00;
000384 93e0 0062 	STS  98,R30
                 ; 0000 01F1 DDRF=0x00;
000386 93e0 0061 	STS  97,R30
                 ; 0000 01F2 
                 ; 0000 01F3 // Port G initialization
                 ; 0000 01F4 // Func4=Out Func3=Out Func2=In Func1=In Func0=In
                 ; 0000 01F5 // State4=0 State3=0 State2=T State1=T State0=T
                 ; 0000 01F6 PORTG=0x00;
000388 93e0 0065 	STS  101,R30
                 ; 0000 01F7 //DDRG=0x18;
                 ; 0000 01F8 DDRG=0x00;
00038a 93e0 0064 	STS  100,R30
                 ; 0000 01F9 
                 ; 0000 01FA // Timer/Counter 0 initialization
                 ; 0000 01FB // Clock source: System Clock
                 ; 0000 01FC // Clock value: Timer 0 Stopped
                 ; 0000 01FD // Mode: Normal top=FFh
                 ; 0000 01FE // OC0 output: Disconnected
                 ; 0000 01FF ASSR=0x00;
00038c bfe0      	OUT  0x30,R30
                 ; 0000 0200 TCCR0=0x00;
00038d bfe3      	OUT  0x33,R30
                 ; 0000 0201 TCNT0=0x00;
00038e bfe2      	OUT  0x32,R30
                 ; 0000 0202 OCR0=0x00;
00038f bfe1      	OUT  0x31,R30
                 ; 0000 0203 
                 ; 0000 0204 /// Timer/Counter 0 initialization
                 ; 0000 0205 // Clock source: System Clock
                 ; 0000 0206 // Clock value: 1000.000 kHz
                 ; 0000 0207 // Mode: Normal top=FFh
                 ; 0000 0208 // OC0 output: Disconnected
                 ; 0000 0209 //TCCR0=0x02;
                 ; 0000 020A //TCNT0=0x00;
                 ; 0000 020B //OCR0=0x00;
                 ; 0000 020C 
                 ; 0000 020D 
                 ; 0000 020E 
                 ; 0000 020F // Timer/Counter 1 initialization
                 ; 0000 0210 // Clock source: System Clock
                 ; 0000 0211 // Clock value: Timer1 Stopped
                 ; 0000 0212 // Mode: Normal top=FFFFh
                 ; 0000 0213 // OC1A output: Discon.
                 ; 0000 0214 // OC1B output: Discon.
                 ; 0000 0215 // OC1C output: Discon.
                 ; 0000 0216 // Noise Canceler: Off
                 ; 0000 0217 // Input Capture on Falling Edge
                 ; 0000 0218 // Timer1 Overflow Interrupt: Off
                 ; 0000 0219 // Input Capture Interrupt: Off
                 ; 0000 021A // Compare A Match Interrupt: Off
                 ; 0000 021B // Compare B Match Interrupt: Off
                 ; 0000 021C // Compare C Match Interrupt: Off
                 ; 0000 021D TCCR1A=0x00;
000390 bdef      	OUT  0x2F,R30
                 ; 0000 021E TCCR1B=0x00;
000391 bdee      	OUT  0x2E,R30
                 ; 0000 021F TCNT1H=0x00;
000392 bded      	OUT  0x2D,R30
                 ; 0000 0220 TCNT1L=0x00;
000393 bdec      	OUT  0x2C,R30
                 ; 0000 0221 ICR1H=0x00;
000394 bde7      	OUT  0x27,R30
                 ; 0000 0222 ICR1L=0x00;
000395 bde6      	OUT  0x26,R30
                 ; 0000 0223 OCR1AH=0x00;
000396 bdeb      	OUT  0x2B,R30
                 ; 0000 0224 OCR1AL=0x00;
000397 bdea      	OUT  0x2A,R30
                 ; 0000 0225 OCR1BH=0x00;
000398 bde9      	OUT  0x29,R30
                 ; 0000 0226 OCR1BL=0x00;
000399 bde8      	OUT  0x28,R30
                 ; 0000 0227 OCR1CH=0x00;
00039a 93e0 0079 	STS  121,R30
                 ; 0000 0228 OCR1CL=0x00;
00039c 93e0 0078 	STS  120,R30
                 ; 0000 0229 
                 ; 0000 022A // Timer/Counter 2 initialization
                 ; 0000 022B // Clock source: System Clock
                 ; 0000 022C // Clock value: Timer2 Stopped
                 ; 0000 022D // Mode: Normal top=FFh
                 ; 0000 022E // OC2 output: Disconnected
                 ; 0000 022F TCCR2=0x00;
00039e bde5      	OUT  0x25,R30
                 ; 0000 0230 TCNT2=0x00;
00039f bde4      	OUT  0x24,R30
                 ; 0000 0231 OCR2=0x00;
0003a0 bde3      	OUT  0x23,R30
                 ; 0000 0232 
                 ; 0000 0233 // Timer/Counter 3 initialization
                 ; 0000 0234 // Clock source: System Clock
                 ; 0000 0235 // Clock value: Timer3 Stopped
                 ; 0000 0236 // Mode: Normal top=FFFFh
                 ; 0000 0237 // OC3A output: Discon.
                 ; 0000 0238 // OC3B output: Discon.
                 ; 0000 0239 // OC3C output: Discon.
                 ; 0000 023A // Noise Canceler: Off
                 ; 0000 023B // Input Capture on Falling Edge
                 ; 0000 023C // Timer3 Overflow Interrupt: Off
                 ; 0000 023D // Input Capture Interrupt: Off
                 ; 0000 023E // Compare A Match Interrupt: Off
                 ; 0000 023F // Compare B Match Interrupt: Off
                 ; 0000 0240 // Compare C Match Interrupt: Off
                 ; 0000 0241 TCCR3A=0x00;
0003a1 93e0 008b 	STS  139,R30
                 ; 0000 0242 TCCR3B=0x00;
0003a3 93e0 008a 	STS  138,R30
                 ; 0000 0243 TCNT3H=0x00;
0003a5 93e0 0089 	STS  137,R30
                 ; 0000 0244 TCNT3L=0x00;
0003a7 93e0 0088 	STS  136,R30
                 ; 0000 0245 ICR3H=0x00;
0003a9 93e0 0081 	STS  129,R30
                 ; 0000 0246 ICR3L=0x00;
0003ab 93e0 0080 	STS  128,R30
                 ; 0000 0247 OCR3AH=0x00;
0003ad 93e0 0087 	STS  135,R30
                 ; 0000 0248 OCR3AL=0x00;
0003af 93e0 0086 	STS  134,R30
                 ; 0000 0249 OCR3BH=0x00;
0003b1 93e0 0085 	STS  133,R30
                 ; 0000 024A OCR3BL=0x00;
0003b3 93e0 0084 	STS  132,R30
                 ; 0000 024B OCR3CH=0x00;
0003b5 93e0 0083 	STS  131,R30
                 ; 0000 024C OCR3CL=0x00;
0003b7 93e0 0082 	STS  130,R30
                 ; 0000 024D 
                 ; 0000 024E // External Interrupt(s) initialization
                 ; 0000 024F // INT0: Off
                 ; 0000 0250 // INT1: Off
                 ; 0000 0251 // INT2: Off
                 ; 0000 0252 // INT3: Off
                 ; 0000 0253 // INT4: Off
                 ; 0000 0254 // INT5: Off
                 ; 0000 0255 // INT6: Off
                 ; 0000 0256 // INT7: Off
                 ; 0000 0257 EICRA=0x00;
0003b9 93e0 006a 	STS  106,R30
                 ; 0000 0258 EICRB=0x00;
0003bb bfea      	OUT  0x3A,R30
                 ; 0000 0259 EIMSK=0x00;
0003bc bfe9      	OUT  0x39,R30
                 ; 0000 025A 
                 ; 0000 025B // Timer(s)/Counter(s) Interrupt(s) initialization
                 ; 0000 025C TIMSK=0x00;
0003bd bfe7      	OUT  0x37,R30
                 ; 0000 025D ETIMSK=0x00;
0003be 93e0 007d 	STS  125,R30
                 ; 0000 025E 
                 ; 0000 025F // Analog Comparator initialization
                 ; 0000 0260 // Analog Comparator: Off
                 ; 0000 0261 // Analog Comparator Input Capture by Timer/Counter 1: Off
                 ; 0000 0262 ACSR=0x80;
0003c0 e8e0      	LDI  R30,LOW(128)
0003c1 b9e8      	OUT  0x8,R30
                 ; 0000 0263 SFIOR=0x00;
0003c2 e0e0      	LDI  R30,LOW(0)
0003c3 bde0      	OUT  0x20,R30
                 ; 0000 0264 
                 ; 0000 0265 // ADC initialization
                 ; 0000 0266 // ADC Clock frequency: 1000.000 kHz
                 ; 0000 0267 // ADC Voltage Reference: AVCC pin
                 ; 0000 0268 // Only the 8 most significant bits of
                 ; 0000 0269 // the AD conversion result are used
                 ; 0000 026A ADMUX=ADC_VREF_TYPE & 0xff;
0003c4 e2e0      	LDI  R30,LOW(32)
0003c5 b9e7      	OUT  0x7,R30
                 ; 0000 026B ADCSRA=0x83;
0003c6 e8e3      	LDI  R30,LOW(131)
0003c7 b9e6      	OUT  0x6,R30
                 ; 0000 026C 
                 ; 0000 026D // Watchdog Timer initialization
                 ; 0000 026E // Watchdog Timer Prescaler: OSC/128k
                 ; 0000 026F //#pragma optsize-
                 ; 0000 0270 //WDTCR=0x1B;
                 ; 0000 0271 //WDTCR=0x0B;
                 ; 0000 0272 //#ifdef _OPTIMIZE_SIZE_
                 ; 0000 0273 //#pragma optsize+
                 ; 0000 0274 //#endif
                 ; 0000 0275 
                 ; 0000 0276 // Global enable interrupts
                 ; 0000 0277 //#asm("sei")                // del ds18b20 isjungtas
                 ; 0000 0278 
                 ; 0000 0279 delay_ms(1000);
0003c8 940e 1990 	CALL SUBOPT_0x11
                 ; 0000 027A LCD_LED = 1;
0003ca 9ac0      	SBI  0x18,0
                 ; 0000 027B 
                 ; 0000 027C // LCD module initialization
                 ; 0000 027D lcd_init(20);
0003cb e1e4      	LDI  R30,LOW(20)
0003cc 93ea      	ST   -Y,R30
0003cd 940e 1800 	CALL _lcd_init
                 ; 0000 027E //LCD_LED_TIMER = 30; lcd_light_now = lcd_light;
                 ; 0000 027F lcd_putsf("+------------------+");
                +
0003cf eaea     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
0003d0 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
0003d1 940e 1996 	CALL SUBOPT_0x12
                 ; 0000 0280 lcd_putsf("/ SOLIAR. AUSINIMO /");
                +
0003d3 ebef     +LDI R30 , LOW ( 2 * _0x0 + ( 21 ) )
0003d4 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 21 ) )
                 	__POINTW1FN _0x0,21
0003d5 940e 1996 	CALL SUBOPT_0x12
                 ; 0000 0281 lcd_putsf("/ VALDIKLIS V1.");
                +
0003d7 ede4     +LDI R30 , LOW ( 2 * _0x0 + ( 42 ) )
0003d8 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 42 ) )
                 	__POINTW1FN _0x0,42
0003d9 940e 1996 	CALL SUBOPT_0x12
                 ; 0000 0282 lcd_put_number(0,3,0,0,__BUILD__,0);
0003db 940e 199a 	CALL SUBOPT_0x13
0003dd 940e 199f 	CALL SUBOPT_0x14
                +
0003df e4e4     +LDI R30 , LOW ( 0x144 )
0003e0 e0f1     +LDI R31 , HIGH ( 0x144 )
0003e1 e060     +LDI R22 , BYTE3 ( 0x144 )
0003e2 e070     +LDI R23 , BYTE4 ( 0x144 )
                 	__GETD1N 0x144
0003e3 940e 19a3 	CALL SUBOPT_0x15
                 ; 0000 0283 lcd_putsf(" /+------------------+");
                +
0003e5 eee4     +LDI R30 , LOW ( 2 * _0x0 + ( 58 ) )
0003e6 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 58 ) )
                 	__POINTW1FN _0x0,58
0003e7 940e 1996 	CALL SUBOPT_0x12
                 ; 0000 0284 delay_ms(1000);
0003e9 940e 1990 	CALL SUBOPT_0x11
                 ; 0000 0285 lcd_light_now = 20;
0003eb e1e4      	LDI  R30,LOW(20)
0003ec 93e0 0537 	STS  _lcd_light_now_G000,R30
                 ; 0000 0286 
                 ; 0000 0287 //dac_data[0] = VALVES[0];
                 ; 0000 0288 //dac_data[1] = VALVES[1];
                 ; 0000 0289 //dac_data[2] = VALVES[2];
                 ; 0000 028A //dac_data[3] = VALVES[3];
                 ; 0000 028B 
                 ; 0000 028C dac_data[0] = 0;
0003ee 940e 19ad 	CALL SUBOPT_0x16
                 ; 0000 028D dac_data[1] = 255;
                 ; 0000 028E dac_data[2] = 255;
                 ; 0000 028F dac_data[3] = 255;
                 ; 0000 0290 
                 ; 0000 0291 // Default values
                 ; 0000 0292     if(1){
                 ; 0000 0293     unsigned char i;
                 ; 0000 0294         for(i=0;i<MAX_DS18B20_DEVICES;i++){if(DS18B20_IS_ASSIGNED[i]>2){DS18B20_IS_ASSIGNED[i] = 0;}}
0003f0 9721      	SBIW R28,1
                 ;	i -> Y+0
0003f1 e0e0      	LDI  R30,LOW(0)
0003f2 83e8      	ST   Y,R30
                 _0x4A:
0003f3 81a8      	LD   R26,Y
0003f4 30a8      	CPI  R26,LOW(0x8)
0003f5 f478      	BRSH _0x4B
0003f6 940e 19b8 	CALL SUBOPT_0x17
0003f8 940e 2063 	CALL __EEPROMRDB
0003fa 30e3      	CPI  R30,LOW(0x3)
0003fb f028      	BRLO _0x4C
0003fc 940e 19b8 	CALL SUBOPT_0x17
0003fe e0e0      	LDI  R30,LOW(0)
0003ff 940e 207f 	CALL __EEPROMWRB
                 _0x4C:
000401 81e8      	LD   R30,Y
000402 5fef      	SUBI R30,-LOW(1)
000403 83e8      	ST   Y,R30
000404 cfee      	RJMP _0x4A
                 _0x4B:
                 ; 0000 0295         if(lcd_light>100){lcd_light = 100;}
000405 940e 19bd 	CALL SUBOPT_0x18
000407 36e5      	CPI  R30,LOW(0x65)
000408 f028      	BRLO _0x4D
000409 e5a5      	LDI  R26,LOW(_lcd_light)
00040a e0b0      	LDI  R27,HIGH(_lcd_light)
00040b e6e4      	LDI  R30,LOW(100)
00040c 940e 207f 	CALL __EEPROMWRB
                 ; 0000 0296         if((ROOM_TEMPERATURE<10.0)||(ROOM_TEMPERATURE>30.0)){ROOM_TEMPERATURE = 20.0;}
                 _0x4D:
00040e 940e 19c2 	CALL SUBOPT_0x19
000410 940e 19c9 	CALL SUBOPT_0x1A
000412 f048      	BRLO _0x4F
000413 940e 19c2 	CALL SUBOPT_0x19
000415 940e 19d0 	CALL SUBOPT_0x1B
000417 f019      	BREQ PC+4
000418 f010      	BRCS PC+3
000419 940c 041c 	JMP  _0x4F
00041b c008      	RJMP _0x4E
                 _0x4F:
00041c e5a0      	LDI  R26,LOW(_ROOM_TEMPERATURE)
00041d e0b0      	LDI  R27,HIGH(_ROOM_TEMPERATURE)
                +
00041e e0e0     +LDI R30 , LOW ( 0x41A00000 )
00041f e0f0     +LDI R31 , HIGH ( 0x41A00000 )
000420 ea60     +LDI R22 , BYTE3 ( 0x41A00000 )
000421 e471     +LDI R23 , BYTE4 ( 0x41A00000 )
                 	__GETD1N 0x41A00000
000422 940e 206f 	CALL __EEPROMWRD
                 ; 0000 0297     }
                 _0x4E:
000424 9621      	ADIW R28,1
                 ; 0000 0298 
                 ; 0000 0299 // DS18B20 temperature sensors
                 ; 0000 029A static unsigned char ds18b20_devices;
                 ; 0000 029B static unsigned char rom_code[MAX_DS18B20_DEVICES][9];
                 ; 0000 029C static unsigned char ds18b20_sensor_assignation[MAX_DS18B20_DEVICES];
                 ; 0000 029D     if(1){
                 ; 0000 029E     unsigned char i, j;
                 ; 0000 029F         for(i=0;i<MAX_DS18B20_DEVICES;i++){ds18b20_sensor_assignation[i] = 255;}
000425 9722      	SBIW R28,2
                 ;	i -> Y+1
                 ;	j -> Y+0
000426 e0e0      	LDI  R30,LOW(0)
000427 83e9      	STD  Y+1,R30
                 _0x53:
000428 81a9      	LDD  R26,Y+1
000429 30a8      	CPI  R26,LOW(0x8)
00042a f430      	BRSH _0x54
00042b 940e 19d7 	CALL SUBOPT_0x1C
00042d 81e9      	LDD  R30,Y+1
00042e 5fef      	SUBI R30,-LOW(1)
00042f 83e9      	STD  Y+1,R30
000430 cff7      	RJMP _0x53
                 _0x54:
                 ; 0000 02A0 
                 ; 0000 02A1     ds18b20_devices = w1_search(0xf0,rom_code);
000431 efe0      	LDI  R30,LOW(240)
000432 93ea      	ST   -Y,R30
000433 e3e9      	LDI  R30,LOW(_rom_code_S0000006000)
000434 e0f5      	LDI  R31,HIGH(_rom_code_S0000006000)
000435 93fa      	ST   -Y,R31
000436 93ea      	ST   -Y,R30
000437 940e 1d33 	CALL _w1_search
000439 93e0 0538 	STS  _ds18b20_devices_S0000006000,R30
                 ; 0000 02A2 
                 ; 0000 02A3 
                 ; 0000 02A4         if(ds18b20_devices>=1){
00043b 91a0 0538 	LDS  R26,_ds18b20_devices_S0000006000
00043d 30a1      	CPI  R26,LOW(0x1)
00043e f070      	BRLO _0x55
                 ; 0000 02A5         lcd_clear();
00043f 940e 17a3 	CALL _lcd_clear
                 ; 0000 02A6         lcd_gotoxy(0,1);
000441 940e 19de 	CALL SUBOPT_0x1D
                 ; 0000 02A7         lcd_putsf("RASTA DS18B20\nTERMODAVIKLIU: ");
                +
000443 efeb     +LDI R30 , LOW ( 2 * _0x0 + ( 81 ) )
000444 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 81 ) )
                 	__POINTW1FN _0x0,81
000445 940e 1996 	CALL SUBOPT_0x12
                 ; 0000 02A8         lcd_putchar(NumToIndex(ds18b20_devices));
000447 91e0 0538 	LDS  R30,_ds18b20_devices_S0000006000
000449 940e 19e4 	CALL SUBOPT_0x1E
                 ; 0000 02A9         delay_ms(1000);
00044b 940e 1990 	CALL SUBOPT_0x11
                 ; 0000 02AA         }
                 ; 0000 02AB 
                 ; 0000 02AC         for(i=0;i<MAX_DS18B20_DEVICES;i++){
                 _0x55:
00044d e0e0      	LDI  R30,LOW(0)
00044e 83e9      	STD  Y+1,R30
                 _0x57:
00044f 81a9      	LDD  R26,Y+1
000450 30a8      	CPI  R26,LOW(0x8)
000451 f488      	BRSH _0x58
                 ; 0000 02AD             if(DS18B20_IS_ASSIGNED[i]==1){
000452 940e 19ea 	CALL SUBOPT_0x1F
000454 940e 2063 	CALL __EEPROMRDB
000456 30e1      	CPI  R30,LOW(0x1)
000457 f439      	BRNE _0x59
                 ; 0000 02AE             DS18B20_IS_ASSIGNED[i] = 2;
000458 940e 19ea 	CALL SUBOPT_0x1F
00045a e0e2      	LDI  R30,LOW(2)
00045b 940e 207f 	CALL __EEPROMWRB
                 ; 0000 02AF             ds18b20_sensor_assignation[i] = 255;
00045d 940e 19d7 	CALL SUBOPT_0x1C
                 ; 0000 02B0             }
                 ; 0000 02B1         }
                 _0x59:
00045f 81e9      	LDD  R30,Y+1
000460 5fef      	SUBI R30,-LOW(1)
000461 83e9      	STD  Y+1,R30
000462 cfec      	RJMP _0x57
                 _0x58:
                 ; 0000 02B2 
                 ; 0000 02B3         for(i=0;i<ds18b20_devices;i++){
000463 e0e0      	LDI  R30,LOW(0)
000464 83e9      	STD  Y+1,R30
                 _0x5B:
000465 940e 19ef 	CALL SUBOPT_0x20
000467 f010      	BRLO PC+3
000468 940c 04d2 	JMP _0x5C
                 ; 0000 02B4         unsigned char Found = 0;
                 ; 0000 02B5 
                 ; 0000 02B6             if(!ds18b20_init(&rom_code[i][0],-55,128,DS18B20_12BIT_RES)){
00046a 9721      	SBIW R28,1
00046b e0e0      	LDI  R30,LOW(0)
00046c 83e8      	ST   Y,R30
                 ;	i -> Y+2
                 ;	j -> Y+1
                 ;	Found -> Y+0
00046d 81ea      	LDD  R30,Y+2
00046e 940e 19f4 	CALL SUBOPT_0x21
000470 93fa      	ST   -Y,R31
000471 93ea      	ST   -Y,R30
000472 ece9      	LDI  R30,LOW(201)
000473 93ea      	ST   -Y,R30
000474 e8e0      	LDI  R30,LOW(128)
000475 93ea      	ST   -Y,R30
000476 e0e3      	LDI  R30,LOW(3)
000477 93ea      	ST   -Y,R30
000478 940e 170a 	CALL _ds18b20_init
00047a 30e0      	CPI  R30,0
00047b f459      	BRNE _0x5D
                 ; 0000 02B7             lcd_clear();
00047c 940e 17a3 	CALL _lcd_clear
                 ; 0000 02B8             lcd_putsf("STARTAVIMO KLAIDA:\nTEMP. DAVIKLIS");
                +
00047e e1e9     +LDI R30 , LOW ( 2 * _0x0 + ( 111 ) )
00047f e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 111 ) )
                 	__POINTW1FN _0x0,111
000480 940e 1996 	CALL SUBOPT_0x12
                 ; 0000 02B9                 while(1){
                 _0x5E:
                 ; 0000 02BA                 delay_ms(100);
000482 e6e4      	LDI  R30,LOW(100)
000483 e0f0      	LDI  R31,HIGH(100)
000484 940e 19fa 	CALL SUBOPT_0x22
                 ; 0000 02BB                 }
000486 cffb      	RJMP _0x5E
                 ; 0000 02BC             }
                 ; 0000 02BD 
                 ; 0000 02BE             for(j=0;j<MAX_DS18B20_DEVICES;j++){
                 _0x5D:
000487 e0e0      	LDI  R30,LOW(0)
000488 83e9      	STD  Y+1,R30
                 _0x62:
000489 81a9      	LDD  R26,Y+1
00048a 30a8      	CPI  R26,LOW(0x8)
00048b f010      	BRLO PC+3
00048c 940c 04cd 	JMP _0x63
                 ; 0000 02BF                 if(DS18B20_IS_ASSIGNED[j]==2){
00048e 940e 19ea 	CALL SUBOPT_0x1F
000490 940e 2063 	CALL __EEPROMRDB
000492 30e2      	CPI  R30,LOW(0x2)
000493 f5a9      	BRNE _0x64
                 ; 0000 02C0                 unsigned char a, Match = 1;
                 ; 0000 02C1 
                 ; 0000 02C2                     for(a=0;a<9;a++){
000494 9722      	SBIW R28,2
000495 e0e1      	LDI  R30,LOW(1)
000496 83e8      	ST   Y,R30
                 ;	i -> Y+4
                 ;	j -> Y+3
                 ;	Found -> Y+2
                 ;	a -> Y+1
                 ;	Match -> Y+0
000497 e0e0      	LDI  R30,LOW(0)
000498 83e9      	STD  Y+1,R30
                 _0x66:
000499 81a9      	LDD  R26,Y+1
00049a 30a9      	CPI  R26,LOW(0x9)
00049b f4b0      	BRSH _0x67
                 ; 0000 02C3                         if(rom_code[i][a]!=DS18B20_ADDRESSES[j][a]){
00049c 81ec      	LDD  R30,Y+4
00049d 940e 19f4 	CALL SUBOPT_0x21
00049f 940e 19fe 	CALL SUBOPT_0x23
0004a1 916c      	LD   R22,X
0004a2 81eb      	LDD  R30,Y+3
0004a3 940e 1a04 	CALL SUBOPT_0x24
0004a5 940e 19fe 	CALL SUBOPT_0x23
0004a7 940e 2063 	CALL __EEPROMRDB
0004a9 17e6      	CP   R30,R22
0004aa f019      	BREQ _0x68
                 ; 0000 02C4                         Match = 0;
0004ab e0e0      	LDI  R30,LOW(0)
0004ac 83e8      	ST   Y,R30
                 ; 0000 02C5                         break;
0004ad c004      	RJMP _0x67
                 ; 0000 02C6                         }
                 ; 0000 02C7                     }
                 _0x68:
0004ae 81e9      	LDD  R30,Y+1
0004af 5fef      	SUBI R30,-LOW(1)
0004b0 83e9      	STD  Y+1,R30
0004b1 cfe7      	RJMP _0x66
                 _0x67:
                 ; 0000 02C8 
                 ; 0000 02C9                     if(Match==1){
0004b2 81a8      	LD   R26,Y
0004b3 30a1      	CPI  R26,LOW(0x1)
0004b4 f499      	BRNE _0x69
                 ; 0000 02CA                         if(Found==0){
0004b5 81ea      	LDD  R30,Y+2
0004b6 30e0      	CPI  R30,0
0004b7 f459      	BRNE _0x6A
                 ; 0000 02CB                         ds18b20_sensor_assignation[j] = i;
0004b8 81eb      	LDD  R30,Y+3
0004b9 940e 1a0a 	CALL SUBOPT_0x25
0004bb 81ac      	LDD  R26,Y+4
0004bc 83a0      	STD  Z+0,R26
                 ; 0000 02CC                         DS18B20_IS_ASSIGNED[j] = 1;
0004bd 940e 1a0e 	CALL SUBOPT_0x26
0004bf 940e 1a13 	CALL SUBOPT_0x27
                 ; 0000 02CD                         Found = 1;
0004c1 83ea      	STD  Y+2,R30
                 ; 0000 02CE                         }
                 ; 0000 02CF                         else{
0004c2 c005      	RJMP _0x6B
                 _0x6A:
                 ; 0000 02D0                         DS18B20_IS_ASSIGNED[j] = 255;
0004c3 940e 1a0e 	CALL SUBOPT_0x26
0004c5 efef      	LDI  R30,LOW(255)
0004c6 940e 207f 	CALL __EEPROMWRB
                 ; 0000 02D1                         }
                 _0x6B:
                 ; 0000 02D2                     }
                 ; 0000 02D3                 }
                 _0x69:
0004c8 9622      	ADIW R28,2
                 ; 0000 02D4             }
                 _0x64:
0004c9 81e9      	LDD  R30,Y+1
0004ca 5fef      	SUBI R30,-LOW(1)
0004cb 83e9      	STD  Y+1,R30
0004cc cfbc      	RJMP _0x62
                 _0x63:
                 ; 0000 02D5         }
0004cd 9621      	ADIW R28,1
0004ce 81e9      	LDD  R30,Y+1
0004cf 5fef      	SUBI R30,-LOW(1)
0004d0 83e9      	STD  Y+1,R30
0004d1 cf93      	RJMP _0x5B
                 _0x5C:
                 ; 0000 02D6     }
0004d2 9622      	ADIW R28,2
                 ; 0000 02D7 ///////////////////////////////
                 ; 0000 02D8 
                 ; 0000 02D9 
                 ; 0000 02DA 
                 ; 0000 02DB static unsigned char STAND_BY = 1;
                 
                 	.DSEG
                 
                 	.CSEG
                 ; 0000 02DC 
                 ; 0000 02DD     while (1){
                 _0x6D:
                 ; 0000 02DE 
                 ; 0000 02DF     //////////////////////////////////////////////////////////////////////////////////
                 ; 0000 02E0     //////////////////////////// Funkcija kas 1 secunde //////////////////////////////
                 ; 0000 02E1     //////////////////////////////////////////////////////////////////////////////////
                 ; 0000 02E2     static unsigned int SecondCounter;
                 ; 0000 02E3     SecondCounter++;
0004d3 e8aa      	LDI  R26,LOW(_SecondCounter_S0000006001)
0004d4 e0b5      	LDI  R27,HIGH(_SecondCounter_S0000006001)
0004d5 940e 1a17 	CALL SUBOPT_0x28
                 ; 0000 02E4         if(SecondCounter>=500){
0004d7 91a0 058a 	LDS  R26,_SecondCounter_S0000006001
0004d9 91b0 058b 	LDS  R27,_SecondCounter_S0000006001+1
0004db 3fa4      	CPI  R26,LOW(0x1F4)
0004dc e0e1      	LDI  R30,HIGH(0x1F4)
0004dd 07be      	CPC  R27,R30
0004de f030      	BRLO _0x70
                 ; 0000 02E5         SecondCounter = 0;
0004df e0e0      	LDI  R30,LOW(0)
0004e0 93e0 058a 	STS  _SecondCounter_S0000006001,R30
0004e2 93e0 058b 	STS  _SecondCounter_S0000006001+1,R30
                 ; 0000 02E6         RefreshTime++;
0004e4 9493      	INC  R9
                 ; 0000 02E7         }
                 ; 0000 02E8 
                 ; 0000 02E9     static unsigned char TimeRefreshed;
                 _0x70:
                 ; 0000 02EA         if(RefreshTime>=1){
0004e5 e0e1      	LDI  R30,LOW(1)
0004e6 169e      	CP   R9,R30
0004e7 f120      	BRLO _0x71
                 ; 0000 02EB         TimeRefreshed = 1;
0004e8 93e0 058c 	STS  _TimeRefreshed_S0000006001,R30
                 ; 0000 02EC         RefreshTime--;
0004ea 949a      	DEC  R9
                 ; 0000 02ED 
                 ; 0000 02EE             if(1){
                 ; 0000 02EF             RefreshLcd++;
0004eb 91e0 0535 	LDS  R30,_RefreshLcd_G000
0004ed 5fef      	SUBI R30,-LOW(1)
0004ee 93e0 0535 	STS  _RefreshLcd_G000,R30
                 ; 0000 02F0 
                 ; 0000 02F1                 if(STAND_BY_TIMER>0){
0004f0 2400      	CLR  R0
0004f1 1404      	CP   R0,R4
0004f2 0405      	CPC  R0,R5
0004f3 f458      	BRSH _0x73
                 ; 0000 02F2                 STAND_BY_TIMER--;
0004f4 01f2      	MOVW R30,R4
0004f5 9731      	SBIW R30,1
0004f6 012f      	MOVW R4,R30
                 ; 0000 02F3                     if(STAND_BY_TIMER==0){
0004f7 2c04      	MOV  R0,R4
0004f8 2805      	OR   R0,R5
0004f9 f429      	BRNE _0x74
                 ; 0000 02F4                     STAND_BY = 1;
0004fa e0e1      	LDI  R30,LOW(1)
0004fb 93e0 0589 	STS  _STAND_BY_S0000006000,R30
                 ; 0000 02F5                     Address[0] = 0;
0004fd 940e 1a1d 	CALL SUBOPT_0x29
                 ; 0000 02F6                     Address[1] = 0;
                 ; 0000 02F7                     Address[2] = 0;
                 ; 0000 02F8                     Address[3] = 0;
                 ; 0000 02F9                     Address[4] = 0;
                 ; 0000 02FA                     Address[5] = 0;
                 ; 0000 02FB                     SelectedRow = 0;
                 ; 0000 02FC                     }
                 ; 0000 02FD                 }
                 _0x74:
                 ; 0000 02FE 
                 ; 0000 02FF                 if(MAIN_MENU_TIMER>0){
                 _0x73:
0004ff e0e0      	LDI  R30,LOW(0)
000500 15e7      	CP   R30,R7
000501 f428      	BRSH _0x75
                 ; 0000 0300                 MAIN_MENU_TIMER--;
000502 947a      	DEC  R7
                 ; 0000 0301                     if(MAIN_MENU_TIMER==0){
000503 2077      	TST  R7
000504 f411      	BRNE _0x76
                 ; 0000 0302                     Address[0] = 0;
000505 940e 1a1d 	CALL SUBOPT_0x29
                 ; 0000 0303                     Address[1] = 0;
                 ; 0000 0304                     Address[2] = 0;
                 ; 0000 0305                     Address[3] = 0;
                 ; 0000 0306                     Address[4] = 0;
                 ; 0000 0307                     Address[5] = 0;
                 ; 0000 0308                     SelectedRow = 0;
                 ; 0000 0309                     }
                 ; 0000 030A                 }
                 _0x76:
                 ; 0000 030B 
                 ; 0000 030C                 if(LCD_LED_TIMER>0){
                 _0x75:
000507 e0e0      	LDI  R30,LOW(0)
000508 15e6      	CP   R30,R6
000509 f408      	BRSH _0x77
                 ; 0000 030D                 LCD_LED_TIMER--;
00050a 946a      	DEC  R6
                 ; 0000 030E                 }
                 ; 0000 030F 
                 ; 0000 0310             }
                 _0x77:
                 ; 0000 0311         }
                 ; 0000 0312         else{
00050b c003      	RJMP _0x78
                 _0x71:
                 ; 0000 0313         TimeRefreshed = 0;
00050c e0e0      	LDI  R30,LOW(0)
00050d 93e0 058c 	STS  _TimeRefreshed_S0000006001,R30
                 ; 0000 0314         }
                 _0x78:
                 ; 0000 0315     //////////////////////////////////////////////////////////////////////////////////
                 ; 0000 0316     //////////////////////////////////////////////////////////////////////////////////
                 ; 0000 0317     //////////////////////////////////////////////////////////////////////////////////
                 ; 0000 0318 
                 ; 0000 0319 
                 ; 0000 031A 
                 ; 0000 031B 
                 ; 0000 031C 
                 ; 0000 031D 
                 ; 0000 031E 
                 ; 0000 031F 
                 ; 0000 0320 
                 ; 0000 0321 
                 ; 0000 0322 
                 ; 0000 0323 
                 ; 0000 0324     //////////////////////////////////////////////////////////////////////////////////
                 ; 0000 0325     /////////////////////////////////////// Mygtukai /////////////////////////////////
                 ; 0000 0326     //////////////////////////////////////////////////////////////////////////////////
                 ; 0000 0327     static unsigned char BUTTON[5], ButtonFilter[5];
                 ; 0000 0328         if(1){
                 ; 0000 0329         unsigned char i;
                 ; 0000 032A             for(i=0;i<5;i++){
00050f 9721      	SBIW R28,1
                 ;	i -> Y+0
000510 e0e0      	LDI  R30,LOW(0)
000511 83e8      	ST   Y,R30
                 _0x7B:
000512 81a8      	LD   R26,Y
000513 30a5      	CPI  R26,LOW(0x5)
000514 f5b0      	BRSH _0x7C
                 ; 0000 032B                 if(BUTTON_INPUT(i)==1){
000515 81e8      	LD   R30,Y
000516 93ea      	ST   -Y,R30
000517 dd20      	RCALL _BUTTON_INPUT
000518 30e1      	CPI  R30,LOW(0x1)
000519 f459      	BRNE _0x7D
                 ; 0000 032C                     if(ButtonFilter[i]<ButtonFiltrationTimer){
00051a 940e 1a2d 	CALL SUBOPT_0x2A
00051c f438      	BRSH _0x7E
                 ; 0000 032D                     ButtonFilter[i]++;
00051d 81a8      	LD   R26,Y
00051e e0b0      	LDI  R27,0
00051f 56ae      	SUBI R26,LOW(-_ButtonFilter_S0000006001)
000520 4fba      	SBCI R27,HIGH(-_ButtonFilter_S0000006001)
000521 91ec      	LD   R30,X
000522 5fef      	SUBI R30,-LOW(1)
000523 93ec      	ST   X,R30
                 ; 0000 032E                     }
                 ; 0000 032F                 }
                 _0x7E:
                 ; 0000 0330                 else{
000524 c022      	RJMP _0x7F
                 _0x7D:
                 ; 0000 0331                     if(ButtonFilter[i]>=ButtonFiltrationTimer){
000525 940e 1a2d 	CALL SUBOPT_0x2A
000527 f0a8      	BRLO _0x80
                 ; 0000 0332                     BUTTON[i] = 1;
000528 940e 1a34 	CALL SUBOPT_0x2B
00052a e0a1      	LDI  R26,LOW(1)
00052b 83a0      	STD  Z+0,R26
                 ; 0000 0333                     RefreshLcd = RefreshLcd + 2;
00052c 91e0 0535 	LDS  R30,_RefreshLcd_G000
00052e 5fee      	SUBI R30,-LOW(2)
00052f 93e0 0535 	STS  _RefreshLcd_G000,R30
                 ; 0000 0334                     STAND_BY_TIMER = 45;
000531 e2ed      	LDI  R30,LOW(45)
000532 e0f0      	LDI  R31,HIGH(45)
000533 012f      	MOVW R4,R30
                 ; 0000 0335                     MAIN_MENU_TIMER = 30;
000534 e1ee      	LDI  R30,LOW(30)
000535 2e7e      	MOV  R7,R30
                 ; 0000 0336                     LCD_LED_TIMER = 15; lcd_light_now = lcd_light;
000536 e0ef      	LDI  R30,LOW(15)
000537 2e6e      	MOV  R6,R30
000538 940e 19bd 	CALL SUBOPT_0x18
00053a 93e0 0537 	STS  _lcd_light_now_G000,R30
                 ; 0000 0337                     }
                 ; 0000 0338                     else{
00053c c004      	RJMP _0x81
                 _0x80:
                 ; 0000 0339                     BUTTON[i] = 0;
00053d 940e 1a34 	CALL SUBOPT_0x2B
00053f e0a0      	LDI  R26,LOW(0)
000540 83a0      	STD  Z+0,R26
                 ; 0000 033A                     }
                 _0x81:
                 ; 0000 033B                 ButtonFilter[i] = 0;
000541 940e 1a39 	CALL SUBOPT_0x2C
000543 56ee      	SUBI R30,LOW(-_ButtonFilter_S0000006001)
000544 4ffa      	SBCI R31,HIGH(-_ButtonFilter_S0000006001)
000545 e0a0      	LDI  R26,LOW(0)
000546 83a0      	STD  Z+0,R26
                 ; 0000 033C                 }
                 _0x7F:
                 ; 0000 033D             }
000547 81e8      	LD   R30,Y
000548 5fef      	SUBI R30,-LOW(1)
000549 83e8      	ST   Y,R30
00054a cfc7      	RJMP _0x7B
                 _0x7C:
                 ; 0000 033E         }
00054b 9621      	ADIW R28,1
                 ; 0000 033F     //////////////////////////////////////////////////////////////////////////////////
                 ; 0000 0340     //////////////////////////////////////////////////////////////////////////////////
                 ; 0000 0341     //////////////////////////////////////////////////////////////////////////////////
                 ; 0000 0342 
                 ; 0000 0343 
                 ; 0000 0344 
                 ; 0000 0345 
                 ; 0000 0346 
                 ; 0000 0347 
                 ; 0000 0348 
                 ; 0000 0349 
                 ; 0000 034A 
                 ; 0000 034B 
                 ; 0000 034C 
                 ; 0000 034D 
                 ; 0000 034E     //////////////////////////////////////////////////////////////////////////////////
                 ; 0000 034F     ///////////////////////////// DS18B20 ////////////////////////////////////////////
                 ; 0000 0350     //////////////////////////////////////////////////////////////////////////////////
                 ; 0000 0351     static unsigned char ds18b20_wait_time;
                 ; 0000 0352     static unsigned char ds18b20_scanning_device;
                 ; 0000 0353     static unsigned char error_temperature[MAX_DS18B20_DEVICES];
                 ; 0000 0354         if((TimeRefreshed>=1)||(ds18b20_scanning_device>=1)){
00054c 91a0 058c 	LDS  R26,_TimeRefreshed_S0000006001
00054e 30a1      	CPI  R26,LOW(0x1)
00054f f428      	BRSH _0x83
000550 91a0 0598 	LDS  R26,_ds18b20_scanning_device_S0000006001
000552 30a1      	CPI  R26,LOW(0x1)
000553 f408      	BRSH _0x83
000554 c06b      	RJMP _0x82
                 _0x83:
                 ; 0000 0355         ds18b20_wait_time++;
000555 91e0 0597 	LDS  R30,_ds18b20_wait_time_S0000006001
000557 5fef      	SUBI R30,-LOW(1)
000558 93e0 0597 	STS  _ds18b20_wait_time_S0000006001,R30
                 ; 0000 0356             if(ds18b20_wait_time>=3){
00055a 91a0 0597 	LDS  R26,_ds18b20_wait_time_S0000006001
00055c 30a3      	CPI  R26,LOW(0x3)
00055d f410      	BRSH PC+3
00055e 940c 05c0 	JMP _0x85
                 ; 0000 0357                 if(DS18B20_IS_ASSIGNED[ds18b20_scanning_device]==1){
000560 91a0 0598 	LDS  R26,_ds18b20_scanning_device_S0000006001
000562 940e 1a3c 	CALL SUBOPT_0x2D
000564 940e 2063 	CALL __EEPROMRDB
000566 30e1      	CPI  R30,LOW(0x1)
000567 f011      	BREQ PC+3
000568 940c 05ab 	JMP _0x86
                 ; 0000 0358                 float i;
                 ; 0000 0359                 i = ds18b20_temperature(&rom_code[ds18b20_sensor_assignation[ds18b20_scanning_device]][0]);
00056a 9724      	SBIW R28,4
                 ;	i -> Y+0
00056b 91e0 0598 	LDS  R30,_ds18b20_scanning_device_S0000006001
00056d 940e 1a0a 	CALL SUBOPT_0x25
00056f 81e0      	LD   R30,Z
000570 940e 19f4 	CALL SUBOPT_0x21
000572 93fa      	ST   -Y,R31
000573 93ea      	ST   -Y,R30
000574 940e 16c8 	CALL _ds18b20_temperature
000576 940e 203f 	CALL __PUTD1S0
                 ; 0000 035A                     if((i>-100.0)&&(i<200.0)){
000578 940e 1a40 	CALL SUBOPT_0x2E
                +
00057a e0e0     +LDI R30 , LOW ( 0xC2C80000 )
00057b e0f0     +LDI R31 , HIGH ( 0xC2C80000 )
00057c ec68     +LDI R22 , BYTE3 ( 0xC2C80000 )
00057d ec72     +LDI R23 , BYTE4 ( 0xC2C80000 )
                 	__GETD1N 0xC2C80000
00057e 940e 1f42 	CALL __CMPF12
000580 f009      	BREQ PC+2
000581 f410      	BRCC PC+3
000582 940c 058d 	JMP  _0x88
000584 940e 1a40 	CALL SUBOPT_0x2E
                +
000586 e0e0     +LDI R30 , LOW ( 0x43480000 )
000587 e0f0     +LDI R31 , HIGH ( 0x43480000 )
000588 e468     +LDI R22 , BYTE3 ( 0x43480000 )
000589 e473     +LDI R23 , BYTE4 ( 0x43480000 )
                 	__GETD1N 0x43480000
00058a 940e 1f42 	CALL __CMPF12
00058c f008      	BRLO _0x89
                 _0x88:
00058d c00f      	RJMP _0x87
                 _0x89:
                 ; 0000 035B                     TEMPERATURES[ds18b20_scanning_device] = i;
00058e 91e0 0598 	LDS  R30,_ds18b20_scanning_device_S0000006001
000590 940e 1a43 	CALL SUBOPT_0x2F
000592 0fea      	ADD  R30,R26
000593 1ffb      	ADC  R31,R27
000594 940e 1a40 	CALL SUBOPT_0x2E
000596 940e 2044 	CALL __PUTDZ20
                 ; 0000 035C                     error_temperature[ds18b20_scanning_device] = 0;
000598 940e 1a49 	CALL SUBOPT_0x30
00059a e0a0      	LDI  R26,LOW(0)
00059b 83a0      	STD  Z+0,R26
                 ; 0000 035D                     }
                 ; 0000 035E                     else{
00059c c00d      	RJMP _0x8A
                 _0x87:
                 ; 0000 035F                         if(error_temperature[ds18b20_scanning_device]<10){
00059d 940e 1a49 	CALL SUBOPT_0x30
00059f 81a0      	LD   R26,Z
0005a0 30aa      	CPI  R26,LOW(0xA)
0005a1 f440      	BRSH _0x8B
                 ; 0000 0360                         error_temperature[ds18b20_scanning_device]++;
0005a2 91a0 0598 	LDS  R26,_ds18b20_scanning_device_S0000006001
0005a4 e0b0      	LDI  R27,0
0005a5 56a7      	SUBI R26,LOW(-_error_temperature_S0000006001)
0005a6 4fba      	SBCI R27,HIGH(-_error_temperature_S0000006001)
0005a7 91ec      	LD   R30,X
0005a8 5fef      	SUBI R30,-LOW(1)
0005a9 93ec      	ST   X,R30
                 ; 0000 0361                         }
                 ; 0000 0362                     }
                 _0x8B:
                 _0x8A:
                 ; 0000 0363                 }
0005aa 9624      	ADIW R28,4
                 ; 0000 0364 
                 ; 0000 0365                 if((error_temperature[ds18b20_scanning_device]==0)||(error_temperature[ds18b20_scanning_device]==10)){
                 _0x86:
0005ab 940e 1a49 	CALL SUBOPT_0x30
0005ad 81a0      	LD   R26,Z
0005ae 30a0      	CPI  R26,LOW(0x0)
0005af f011      	BREQ _0x8D
0005b0 30aa      	CPI  R26,LOW(0xA)
0005b1 f429      	BRNE _0x8C
                 _0x8D:
                 ; 0000 0366                 ds18b20_scanning_device++;
0005b2 91e0 0598 	LDS  R30,_ds18b20_scanning_device_S0000006001
0005b4 5fef      	SUBI R30,-LOW(1)
0005b5 93e0 0598 	STS  _ds18b20_scanning_device_S0000006001,R30
                 ; 0000 0367                 }
                 ; 0000 0368 
                 ; 0000 0369                 if(ds18b20_scanning_device>=MAX_DS18B20_DEVICES){
                 _0x8C:
0005b7 91a0 0598 	LDS  R26,_ds18b20_scanning_device_S0000006001
0005b9 30a8      	CPI  R26,LOW(0x8)
0005ba f028      	BRLO _0x8F
                 ; 0000 036A                 ds18b20_wait_time = 0;
0005bb e0e0      	LDI  R30,LOW(0)
0005bc 93e0 0597 	STS  _ds18b20_wait_time_S0000006001,R30
                 ; 0000 036B                 ds18b20_scanning_device = 0;
0005be 93e0 0598 	STS  _ds18b20_scanning_device_S0000006001,R30
                 ; 0000 036C                 }
                 ; 0000 036D 
                 ; 0000 036E             }
                 _0x8F:
                 ; 0000 036F         }
                 _0x85:
                 ; 0000 0370     //////////////////////////////////////////////////////////////////////////////////
                 ; 0000 0371     //////////////////////////////////////////////////////////////////////////////////
                 ; 0000 0372     //////////////////////////////////////////////////////////////////////////////////
                 ; 0000 0373 
                 ; 0000 0374 
                 ; 0000 0375 
                 ; 0000 0376 
                 ; 0000 0377 
                 ; 0000 0378 
                 ; 0000 0379 
                 ; 0000 037A 
                 ; 0000 037B 
                 ; 0000 037C     //////////////////////////////////////////////////////////////////////////////////
                 ; 0000 037D     //////////////////////////////// DAC /////////////////////////////////////////////
                 ; 0000 037E     //////////////////////////////////////////////////////////////////////////////////
                 ; 0000 037F     static unsigned char ADC_CHANNEL=4;
                 _0x82:
                 
                 	.DSEG
                 
                 	.CSEG
                 ; 0000 0380         if(ADC_CHANNEL>7){
0005c0 91a0 05a1 	LDS  R26,_ADC_CHANNEL_S0000006001
0005c2 30a8      	CPI  R26,LOW(0x8)
0005c3 f018      	BRLO _0x91
                 ; 0000 0381         ADC_CHANNEL = 4;
0005c4 e0e4      	LDI  R30,LOW(4)
0005c5 93e0 05a1 	STS  _ADC_CHANNEL_S0000006001,R30
                 ; 0000 0382         }
                 ; 0000 0383 
                 ; 0000 0384         if(ADC_CHANNEL==4){
                 _0x91:
0005c7 91a0 05a1 	LDS  R26,_ADC_CHANNEL_S0000006001
0005c9 30a4      	CPI  R26,LOW(0x4)
0005ca f451      	BRNE _0x92
                 ; 0000 0385             if(dac_data[3]>read_adc(ADC_CHANNEL)){
0005cb 940e 1a4f 	CALL SUBOPT_0x31
                +
0005cd 91a0 052c+LDS R26 , _dac_data + ( 3 )
                 	__GETB2MN _dac_data,3
0005cf 17ea      	CP   R30,R26
0005d0 f410      	BRSH _0x93
                 ; 0000 0386             PORTC.4 = 1;
0005d1 9aac      	SBI  0x15,4
                 ; 0000 0387             }
                 ; 0000 0388             else{
0005d2 c001      	RJMP _0x96
                 _0x93:
                 ; 0000 0389             PORTC.4 = 0;
0005d3 98ac      	CBI  0x15,4
                 ; 0000 038A             }
                 _0x96:
                 ; 0000 038B         }
                 ; 0000 038C         else if(ADC_CHANNEL==5){
0005d4 c029      	RJMP _0x99
                 _0x92:
0005d5 91a0 05a1 	LDS  R26,_ADC_CHANNEL_S0000006001
0005d7 30a5      	CPI  R26,LOW(0x5)
0005d8 f451      	BRNE _0x9A
                 ; 0000 038D             if(dac_data[2]>read_adc(ADC_CHANNEL)){
0005d9 940e 1a4f 	CALL SUBOPT_0x31
                +
0005db 91a0 052b+LDS R26 , _dac_data + ( 2 )
                 	__GETB2MN _dac_data,2
0005dd 17ea      	CP   R30,R26
0005de f410      	BRSH _0x9B
                 ; 0000 038E             PORTC.3 = 1;
0005df 9aab      	SBI  0x15,3
                 ; 0000 038F             }
                 ; 0000 0390             else{
0005e0 c001      	RJMP _0x9E
                 _0x9B:
                 ; 0000 0391             PORTC.3 = 0;
0005e1 98ab      	CBI  0x15,3
                 ; 0000 0392             }
                 _0x9E:
                 ; 0000 0393         }
                 ; 0000 0394         else if(ADC_CHANNEL==6){
0005e2 c01b      	RJMP _0xA1
                 _0x9A:
0005e3 91a0 05a1 	LDS  R26,_ADC_CHANNEL_S0000006001
0005e5 30a6      	CPI  R26,LOW(0x6)
0005e6 f451      	BRNE _0xA2
                 ; 0000 0395             if(dac_data[1]>read_adc(ADC_CHANNEL)){
0005e7 940e 1a4f 	CALL SUBOPT_0x31
                +
0005e9 91a0 052a+LDS R26 , _dac_data + ( 1 )
                 	__GETB2MN _dac_data,1
0005eb 17ea      	CP   R30,R26
0005ec f410      	BRSH _0xA3
                 ; 0000 0396             PORTC.6 = 1;
0005ed 9aae      	SBI  0x15,6
                 ; 0000 0397             }
                 ; 0000 0398             else{
0005ee c001      	RJMP _0xA6
                 _0xA3:
                 ; 0000 0399             PORTC.6 = 0;
0005ef 98ae      	CBI  0x15,6
                 ; 0000 039A             }
                 _0xA6:
                 ; 0000 039B         }
                 ; 0000 039C         else if(ADC_CHANNEL==7){
0005f0 c00d      	RJMP _0xA9
                 _0xA2:
0005f1 91a0 05a1 	LDS  R26,_ADC_CHANNEL_S0000006001
0005f3 30a7      	CPI  R26,LOW(0x7)
0005f4 f449      	BRNE _0xAA
                 ; 0000 039D             if(dac_data[0]>read_adc(ADC_CHANNEL)){
0005f5 940e 1a4f 	CALL SUBOPT_0x31
0005f7 91a0 0529 	LDS  R26,_dac_data
0005f9 17ea      	CP   R30,R26
0005fa f410      	BRSH _0xAB
                 ; 0000 039E             PORTC.5 = 1;
0005fb 9aad      	SBI  0x15,5
                 ; 0000 039F             }
                 ; 0000 03A0             else{
0005fc c001      	RJMP _0xAE
                 _0xAB:
                 ; 0000 03A1             PORTC.5 = 0;
0005fd 98ad      	CBI  0x15,5
                 ; 0000 03A2             }
                 _0xAE:
                 ; 0000 03A3         }
                 ; 0000 03A4     ADC_CHANNEL++;
                 _0xAA:
                 _0xA9:
                 _0xA1:
                 _0x99:
0005fe 91e0 05a1 	LDS  R30,_ADC_CHANNEL_S0000006001
000600 5fef      	SUBI R30,-LOW(1)
000601 93e0 05a1 	STS  _ADC_CHANNEL_S0000006001,R30
                 ; 0000 03A5     //////////////////////////////////////////////////////////////////////////////////
                 ; 0000 03A6     //////////////////////////////////////////////////////////////////////////////////
                 ; 0000 03A7     //////////////////////////////////////////////////////////////////////////////////
                 ; 0000 03A8 
                 ; 0000 03A9 
                 ; 0000 03AA 
                 ; 0000 03AB 
                 ; 0000 03AC 
                 ; 0000 03AD 
                 ; 0000 03AE 
                 ; 0000 03AF 
                 ; 0000 03B0 
                 ; 0000 03B1 
                 ; 0000 03B2     //////////////////////////////////////////////////////////////////////////////////
                 ; 0000 03B3     ///////////////////////// VALDYMO ALGORITMAS /////////////////////////////////////
                 ; 0000 03B4     //////////////////////////////////////////////////////////////////////////////////
                 ; 0000 03B5     static unsigned char AlgorythmSecondTimer=0;
                 ; 0000 03B6     static unsigned char ALGORYTHM_REFRESH_TIME=60;
                 
                 	.DSEG
                 
                 	.CSEG
                 ; 0000 03B7 
                 ; 0000 03B8     static float VERY_LAST_TEMPERATURES[MAX_DS18B20_DEVICES];
                 ; 0000 03B9 //    static unsigned char VERY_LAST_SOLARIUM_STATE[3];
                 ; 0000 03BA //    static unsigned char VERY_LAST_DACS[4];
                 ; 0000 03BB 
                 ; 0000 03BC     static float LAST_TEMPERATURES[MAX_DS18B20_DEVICES];
                 ; 0000 03BD     static unsigned char LAST_SOLARIUM_STATE[3];
                 ; 0000 03BE //    static unsigned char LAST_DACS[4];
                 ; 0000 03BF 
                 ; 0000 03C0     static float SOLARIUM_OUTSIDE_OFFSET = 5.0;
                 
                 	.DSEG
                 
                 	.CSEG
                 ; 0000 03C1     static float SOLARIUM_INSIDE_OFFSET = 2.5;
                 
                 	.DSEG
                 
                 	.CSEG
                 ; 0000 03C2 
                 ; 0000 03C3     // 0. Kambario temperaturos daviklis
                 ; 0000 03C4     // 1. Lauko temperaturos daviklis
                 ; 0000 03C5     // 2. Pirmojo soliariumo temperaturos daviklis
                 ; 0000 03C6     // 3. Antrojo soliariumo temperaturos daviklis
                 ; 0000 03C7     // 4. Treciojo soliariumo temperaturos daviklis
                 ; 0000 03C8     // 5. Papildomas kambario temperaturos daviklis
                 ; 0000 03C9 
                 ; 0000 03CA         if(TimeRefreshed>=1){
000603 91a0 058c 	LDS  R26,_TimeRefreshed_S0000006001
000605 30a1      	CPI  R26,LOW(0x1)
000606 f410      	BRSH PC+3
000607 940c 0720 	JMP _0xB4
                 ; 0000 03CB         AlgorythmSecondTimer++;
000609 91e0 05a2 	LDS  R30,_AlgorythmSecondTimer_S0000006001
00060b 5fef      	SUBI R30,-LOW(1)
00060c 93e0 05a2 	STS  _AlgorythmSecondTimer_S0000006001,R30
                 ; 0000 03CC             if(AlgorythmSecondTimer>ALGORYTHM_REFRESH_TIME){
00060e 91e0 05a3 	LDS  R30,_ALGORYTHM_REFRESH_TIME_S0000006001
000610 91a0 05a2 	LDS  R26,_AlgorythmSecondTimer_S0000006001
000612 17ea      	CP   R30,R26
000613 f010      	BRLO PC+3
000614 940c 0720 	JMP _0xB5
                 ; 0000 03CD             AlgorythmSecondTimer = 0;
000616 e0e0      	LDI  R30,LOW(0)
000617 93e0 05a2 	STS  _AlgorythmSecondTimer_S0000006001,R30
                 ; 0000 03CE                 if(MANUAL_CONTROLLER==0){
000619 940e 1a54 	CALL SUBOPT_0x32
00061b 30e0      	CPI  R30,0
00061c f011      	BREQ PC+3
00061d 940c 0720 	JMP _0xB6
                 ; 0000 03CF 
                 ; 0000 03D0                     if(TEMPERATURES[1]+SOLARIUM_OUTSIDE_OFFSET<ROOM_TEMPERATURE){// Jei lauke yra salta
00061f 940e 1a59 	CALL SUBOPT_0x33
000621 91a0 05e7 	LDS  R26,_SOLARIUM_OUTSIDE_OFFSET_S0000006001
000623 91b0 05e8 	LDS  R27,_SOLARIUM_OUTSIDE_OFFSET_S0000006001+1
000625 9180 05e9 	LDS  R24,_SOLARIUM_OUTSIDE_OFFSET_S0000006001+2
000627 9190 05ea 	LDS  R25,_SOLARIUM_OUTSIDE_OFFSET_S0000006001+3
000629 940e 1e5f 	CALL __ADDF12
00062b 937f      	PUSH R23
00062c 936f      	PUSH R22
00062d 93ff      	PUSH R31
00062e 93ef      	PUSH R30
00062f 940e 1a62 	CALL SUBOPT_0x34
000631 91af      	POP  R26
000632 91bf      	POP  R27
000633 918f      	POP  R24
000634 919f      	POP  R25
000635 940e 1f42 	CALL __CMPF12
000637 f010      	BRLO PC+3
000638 940c 06dd 	JMP _0xB7
                 ; 0000 03D1 
                 ; 0000 03D2                         // Jeigu atsalo
                 ; 0000 03D3                         if( ROOM_TEMPERATURE-TEMPERATURES[0]>SOLARIUM_INSIDE_OFFSET ){// jei zemiau uzstatytos ribos
00063a 940e 1a62 	CALL SUBOPT_0x34
00063c 940e 1a67 	CALL SUBOPT_0x35
00063e 940e 1a72 	CALL SUBOPT_0x36
000640 f009      	BREQ PC+2
000641 f410      	BRCC PC+3
000642 940c 066a 	JMP  _0xB8
                 ; 0000 03D4                             if( ROOM_TEMPERATURE-TEMPERATURES[0]<(SOLARIUM_INSIDE_OFFSET*2) ){// jei nezemiau uzstatytos ribos dvigubai
000644 940e 1a62 	CALL SUBOPT_0x34
000646 940e 1a67 	CALL SUBOPT_0x35
000648 937f      	PUSH R23
000649 936f      	PUSH R22
00064a 93ff      	PUSH R31
00064b 93ef      	PUSH R30
00064c 940e 1a7f 	CALL SUBOPT_0x37
00064e 91af      	POP  R26
00064f 91bf      	POP  R27
000650 918f      	POP  R24
000651 919f      	POP  R25
000652 940e 1f42 	CALL __CMPF12
000654 f490      	BRSH _0xB9
                 ; 0000 03D5                                 if(LAST_TEMPERATURES[0]>=TEMPERATURES[0]){// jei paskutine temperatura yra mazesne arba tokia pati
000655 940e 1a8e 	CALL SUBOPT_0x38
000657 f070      	BRLO _0xBA
                 ; 0000 03D6                                     if(dac_data[1]<=245){
                +
000658 91a0 052a+LDS R26 , _dac_data + ( 1 )
                 	__GETB2MN _dac_data,1
00065a 3fa6      	CPI  R26,LOW(0xF6)
00065b f430      	BRSH _0xBB
                 ; 0000 03D7                                     dac_data[1] += 10;
                +
00065c 91e0 052a+LDS R30 , _dac_data + ( 1 )
                 	__GETB1MN _dac_data,1
00065e 5fe6      	SUBI R30,-LOW(10)
00065f 940e 1aa1 	CALL SUBOPT_0x39
                 ; 0000 03D8                                     dac_data[2] = dac_data[1];
                 ; 0000 03D9                                     dac_data[3] = dac_data[1];
000661 c002      	RJMP _0x2E5
                 ; 0000 03DA                                     }
                 ; 0000 03DB                                     else{
                 _0xBB:
                 ; 0000 03DC                                     dac_data[1] = 255;
000662 940e 1aaa 	CALL SUBOPT_0x3A
                 ; 0000 03DD                                     dac_data[2] = 255;
                 ; 0000 03DE                                     dac_data[3] = 255;
                 _0x2E5:
                +
000664 93e0 052c+STS _dac_data + ( 3 ) , R30
                 	__PUTB1MN _dac_data,3
                 ; 0000 03DF                                     }
                 ; 0000 03E0                                 }
                 ; 0000 03E1                                 else{
                 _0xBA:
                 ; 0000 03E2                                 // Temperatura eina gera linkme
                 ; 0000 03E3                                 }
                 ; 0000 03E4                             }
                 ; 0000 03E5                             else{
000666 c002      	RJMP _0xBE
                 _0xB9:
                 ; 0000 03E6                             dac_data[0] = 0;
000667 940e 19ad 	CALL SUBOPT_0x16
                 ; 0000 03E7                             dac_data[1] = 255;
                 ; 0000 03E8                             dac_data[2] = 255;
                 ; 0000 03E9                             dac_data[3] = 255;
                 ; 0000 03EA                             }
                 _0xBE:
                 ; 0000 03EB                         }
                 ; 0000 03EC 
                 ; 0000 03ED                         // Jeigu perkaito
                 ; 0000 03EE                         else if( TEMPERATURES[0]-ROOM_TEMPERATURE>SOLARIUM_INSIDE_OFFSET ){// jei daugiau uzstatytos ribos
000669 c069      	RJMP _0xBF
                 _0xB8:
00066a 940e 1a62 	CALL SUBOPT_0x34
00066c 940e 1ab0 	CALL SUBOPT_0x3B
00066e 940e 1a72 	CALL SUBOPT_0x36
000670 f009      	BREQ PC+2
000671 f410      	BRCC PC+3
000672 940c 069d 	JMP  _0xC0
                 ; 0000 03EF                             if( TEMPERATURES[0]-ROOM_TEMPERATURE<(SOLARIUM_INSIDE_OFFSET*2) ){// jei nedaugiau uzstatytos ribos dvigubai
000674 940e 1a62 	CALL SUBOPT_0x34
000676 940e 1ab0 	CALL SUBOPT_0x3B
000678 937f      	PUSH R23
000679 936f      	PUSH R22
00067a 93ff      	PUSH R31
00067b 93ef      	PUSH R30
00067c 940e 1a7f 	CALL SUBOPT_0x37
00067e 91af      	POP  R26
00067f 91bf      	POP  R27
000680 918f      	POP  R24
000681 919f      	POP  R25
000682 940e 1f42 	CALL __CMPF12
000684 f4a8      	BRSH _0xC1
                 ; 0000 03F0                                 if(LAST_TEMPERATURES[0]<=TEMPERATURES[0]){// jei paskutine temperatura yra mazesne arba tokia pati
000685 940e 1a8e 	CALL SUBOPT_0x38
000687 f019      	BREQ PC+4
000688 f010      	BRCS PC+3
000689 940c 0699 	JMP  _0xC2
                 ; 0000 03F1                                     if(dac_data[1]>=10){
                +
00068b 91a0 052a+LDS R26 , _dac_data + ( 1 )
                 	__GETB2MN _dac_data,1
00068d 30aa      	CPI  R26,LOW(0xA)
00068e f030      	BRLO _0xC3
                 ; 0000 03F2                                     dac_data[1] -= 10;
00068f 940e 1abd 	CALL SUBOPT_0x3C
000691 973a      	SBIW R30,10
000692 940e 1ac2 	CALL SUBOPT_0x3D
                 ; 0000 03F3                                     dac_data[2] = dac_data[1];
                 ; 0000 03F4                                     dac_data[3] = dac_data[1];
000694 c002      	RJMP _0x2E6
                 ; 0000 03F5                                     }
                 ; 0000 03F6                                     else{
                 _0xC3:
                 ; 0000 03F7                                     dac_data[1] = 255;
000695 940e 1aaa 	CALL SUBOPT_0x3A
                 ; 0000 03F8                                     dac_data[2] = 255;
                 ; 0000 03F9                                     dac_data[3] = 255;
                 _0x2E6:
                +
000697 93e0 052c+STS _dac_data + ( 3 ) , R30
                 	__PUTB1MN _dac_data,3
                 ; 0000 03FA                                     }
                 ; 0000 03FB                                 }
                 ; 0000 03FC                                 else{
                 _0xC2:
                 ; 0000 03FD                                 // Temperatura eina gera linkme
                 ; 0000 03FE                                 }
                 ; 0000 03FF                             }
                 ; 0000 0400                             else{
000699 c002      	RJMP _0xC6
                 _0xC1:
                 ; 0000 0401                             dac_data[0] = 255;
00069a 940e 1aca 	CALL SUBOPT_0x3E
                 ; 0000 0402                             dac_data[1] = 0;
                 ; 0000 0403                             dac_data[2] = 0;
                 ; 0000 0404                             dac_data[3] = 0;
                 ; 0000 0405                             }
                 _0xC6:
                 ; 0000 0406                         }
                 ; 0000 0407 
                 ; 0000 0408                         // jei siek tiek daugiau
                 ; 0000 0409                         else if(TEMPERATURES[0]>ROOM_TEMPERATURE){ // jeigu temperatura ribose bet siek tiek didesne
00069c c036      	RJMP _0xC7
                 _0xC0:
00069d 940e 1a62 	CALL SUBOPT_0x34
00069f 940e 1ad5 	CALL SUBOPT_0x3F
0006a1 f009      	BREQ PC+2
0006a2 f410      	BRCC PC+3
0006a3 940c 06ba 	JMP  _0xC8
                 ; 0000 040A                             if(LAST_TEMPERATURES[0]<TEMPERATURES[0]){// jei temperatura padidejo
0006a5 940e 1a8e 	CALL SUBOPT_0x38
0006a7 f488      	BRSH _0xC9
                 ; 0000 040B                                 if(dac_data[1]>=2){
                +
0006a8 91a0 052a+LDS R26 , _dac_data + ( 1 )
                 	__GETB2MN _dac_data,1
0006aa 30a2      	CPI  R26,LOW(0x2)
0006ab f030      	BRLO _0xCA
                 ; 0000 040C                                 dac_data[1] -= 2;
0006ac 940e 1abd 	CALL SUBOPT_0x3C
0006ae 9732      	SBIW R30,2
0006af 940e 1ac2 	CALL SUBOPT_0x3D
                 ; 0000 040D                                 dac_data[2] = dac_data[1];
                 ; 0000 040E                                 dac_data[3] = dac_data[1];
0006b1 c005      	RJMP _0x2E7
                 ; 0000 040F                                 }
                 ; 0000 0410                                 else{
                 _0xCA:
                 ; 0000 0411                                 dac_data[1] = 0;
0006b2 e0e0      	LDI  R30,LOW(0)
                +
0006b3 93e0 052a+STS _dac_data + ( 1 ) , R30
                 	__PUTB1MN _dac_data,1
                 ; 0000 0412                                 dac_data[2] = 0;
                +
0006b5 93e0 052b+STS _dac_data + ( 2 ) , R30
                 	__PUTB1MN _dac_data,2
                 ; 0000 0413                                 dac_data[3] = 0;
                 _0x2E7:
                +
0006b7 93e0 052c+STS _dac_data + ( 3 ) , R30
                 	__PUTB1MN _dac_data,3
                 ; 0000 0414                                 }
                 ; 0000 0415                             }
                 ; 0000 0416                             else{
                 _0xC9:
                 ; 0000 0417                             // Gerai
                 ; 0000 0418                             }
                 ; 0000 0419                         }
                 ; 0000 041A 
                 ; 0000 041B                         // jei siek tiek maziau
                 ; 0000 041C                         else if(TEMPERATURES[0]<ROOM_TEMPERATURE){ // jeigu temperatura ribose bet siek tiek mazesne
0006b9 c019      	RJMP _0xCD
                 _0xC8:
0006ba 940e 1a62 	CALL SUBOPT_0x34
0006bc 940e 1ad5 	CALL SUBOPT_0x3F
0006be f4a0      	BRSH _0xCE
                 ; 0000 041D                             if(LAST_TEMPERATURES[0]>TEMPERATURES[0]){// jei temperatura sumazejo
0006bf 940e 1a8e 	CALL SUBOPT_0x38
0006c1 f009      	BREQ PC+2
0006c2 f410      	BRCC PC+3
0006c3 940c 06d3 	JMP  _0xCF
                 ; 0000 041E                                 if(dac_data[1]<=253){
                +
0006c5 91a0 052a+LDS R26 , _dac_data + ( 1 )
                 	__GETB2MN _dac_data,1
0006c7 3fae      	CPI  R26,LOW(0xFE)
0006c8 f430      	BRSH _0xD0
                 ; 0000 041F                                 dac_data[1] += 2;
                +
0006c9 91e0 052a+LDS R30 , _dac_data + ( 1 )
                 	__GETB1MN _dac_data,1
0006cb 5fee      	SUBI R30,-LOW(2)
0006cc 940e 1aa1 	CALL SUBOPT_0x39
                 ; 0000 0420                                 dac_data[2] = dac_data[1];
                 ; 0000 0421                                 dac_data[3] = dac_data[1];
0006ce c002      	RJMP _0x2E8
                 ; 0000 0422                                 }
                 ; 0000 0423                                 else{
                 _0xD0:
                 ; 0000 0424                                 dac_data[1] = 255;
0006cf 940e 1aaa 	CALL SUBOPT_0x3A
                 ; 0000 0425                                 dac_data[2] = 255;
                 ; 0000 0426                                 dac_data[3] = 255;
                 _0x2E8:
                +
0006d1 93e0 052c+STS _dac_data + ( 3 ) , R30
                 	__PUTB1MN _dac_data,3
                 ; 0000 0427                                 }
                 ; 0000 0428                             }
                 ; 0000 0429                             else{
                 _0xCF:
                 ; 0000 042A                             // Gerai
                 ; 0000 042B                             }
                 ; 0000 042C                         }
                 ; 0000 042D 
                 ; 0000 042E 
                 ; 0000 042F                     dac_data[0] = 255 - dac_data[1];
                 _0xCE:
                 _0xCD:
                 _0xC7:
                 _0xBF:
                +
0006d3 91e0 052a+LDS R30 , _dac_data + ( 1 )
                 	__GETB1MN _dac_data,1
0006d5 e0f0      	LDI  R31,0
0006d6 efaf      	LDI  R26,LOW(255)
0006d7 e0b0      	LDI  R27,HIGH(255)
0006d8 940e 191e 	CALL SUBOPT_0x2
0006da 93e0 0529 	STS  _dac_data,R30
                 ; 0000 0430 
                 ; 0000 0431 
                 ; 0000 0432                     /*unsigned int solariums_opens=0, count=0;
                 ; 0000 0433 
                 ; 0000 0434                         if((SOLARIUM1_AT_WORK==1)|| (TEMPERATURES[2]>TEMPERATURES[0]+5.0) ){
                 ; 0000 0435                             if(DS18B20_IS_ASSIGNED[2]==1){
                 ; 0000 0436                                 if(LAST_SOLARIUM_STATE[0]==1){// Turi buti pradirbes bent 1 cikla
                 ; 0000 0437                                     if(TEMPERATURES[2] > (ROOM_TEMPERATURE+SOLARIUM_INSIDE_OFFSET) ){// Jei is soliariumo iseinantis oras aukstesnes temp negu uzstatyta
                 ; 0000 0438                                         if(TEMPERATURES[0] < (ROOM_TEMPERATURE+SOLARIUM_INSIDE_OFFSET) ){// Jei kambario temperatura zemesne
                 ; 0000 0439                                             if(TEMPERATURES[0]<LAST_TEMPERATURES[0]<VERY_LAST_TEMPERATURES[0]){
                 ; 0000 043A                                                 if(dac_data[1]<=235){
                 ; 0000 043B                                                 dac_data[1] = dac_data[1] + 20;
                 ; 0000 043C                                                 }
                 ; 0000 043D                                                 else{
                 ; 0000 043E                                                 dac_data[1] = 255;
                 ; 0000 043F                                                 }
                 ; 0000 0440                                             }
                 ; 0000 0441                                         }
                 ; 0000 0442                                         else if( (ROOM_TEMPERATURE-SOLARIUM_INSIDE_OFFSET) < TEMPERATURES[0] ){// Jei kambario temperatura aukstesne
                 ; 0000 0443                                             if(TEMPERATURES[0]>LAST_TEMPERATURES[0]>VERY_LAST_TEMPERATURES[0]){
                 ; 0000 0444                                                 if(dac_data[1]>=20){
                 ; 0000 0445                                                 dac_data[1] = dac_data[1] - 20;
                 ; 0000 0446                                                 }
                 ; 0000 0447                                                 else{
                 ; 0000 0448                                                 dac_data[1] = 0;
                 ; 0000 0449                                                 }
                 ; 0000 044A                                             }
                 ; 0000 044B                                         }
                 ; 0000 044C                                         else{// Jei kambario temperatura ribose
                 ; 0000 044D                                             if(TEMPERATURES[0]>ROOM_TEMPERATURE){// Jei aukstesne
                 ; 0000 044E                                                 if(dac_data[1]<=250){
                 ; 0000 044F                                                 dac_data[1] = dac_data[1] + 5;
                 ; 0000 0450                                                 }
                 ; 0000 0451                                             }
                 ; 0000 0452                                             else if(TEMPERATURES[0]<ROOM_TEMPERATURE){// Jei zemesne
                 ; 0000 0453                                                 if(dac_data[1]>=5){
                 ; 0000 0454                                                 dac_data[1] = dac_data[1] - 5;
                 ; 0000 0455                                                 }
                 ; 0000 0456                                             }
                 ; 0000 0457                                         }
                 ; 0000 0458                                     }
                 ; 0000 0459                                     else{
                 ; 0000 045A                                     dac_data[1] = 255;
                 ; 0000 045B                                     }
                 ; 0000 045C                                 }
                 ; 0000 045D                                 else{
                 ; 0000 045E                                 dac_data[1] = 255;
                 ; 0000 045F                                 LAST_SOLARIUM_STATE[0] = 1;
                 ; 0000 0460                                 }
                 ; 0000 0461                             }
                 ; 0000 0462                             else{
                 ; 0000 0463                             dac_data[1] = 255;
                 ; 0000 0464                             }
                 ; 0000 0465                         solariums_opens = dac_data[1];
                 ; 0000 0466                         count = 1;
                 ; 0000 0467                         }
                 ; 0000 0468                         else{
                 ; 0000 0469                         dac_data[1] = 0;
                 ; 0000 046A                         LAST_SOLARIUM_STATE[0] = 0;
                 ; 0000 046B                         }
                 ; 0000 046C 
                 ; 0000 046D 
                 ; 0000 046E                         if((SOLARIUM2_AT_WORK==1)|| (TEMPERATURES[3]>TEMPERATURES[0]+5.0) ){
                 ; 0000 046F                             if(DS18B20_IS_ASSIGNED[3]==1){
                 ; 0000 0470                                 if(LAST_SOLARIUM_STATE[1]==1){// Turi buti pradirbes bent 1 cikla
                 ; 0000 0471                                     if(TEMPERATURES[3] > (ROOM_TEMPERATURE+SOLARIUM_INSIDE_OFFSET) ){// Jei is soliariumo iseinantis oras aukstesnes temp negu uzstatyta
                 ; 0000 0472                                         if(TEMPERATURES[0] < (ROOM_TEMPERATURE+SOLARIUM_INSIDE_OFFSET) ){// Jei kambario temperatura zemesne
                 ; 0000 0473                                             if(TEMPERATURES[0]<LAST_TEMPERATURES[0]<VERY_LAST_TEMPERATURES[0]){
                 ; 0000 0474                                                 if(dac_data[2]<=235){
                 ; 0000 0475                                                 dac_data[2] = dac_data[2] + 20;
                 ; 0000 0476                                                 }
                 ; 0000 0477                                                 else{
                 ; 0000 0478                                                 dac_data[2] = 255;
                 ; 0000 0479                                                 }
                 ; 0000 047A                                             }
                 ; 0000 047B                                         }
                 ; 0000 047C                                         else if( (ROOM_TEMPERATURE-SOLARIUM_INSIDE_OFFSET) < TEMPERATURES[0] ){// Jei kambario temperatura aukstesne
                 ; 0000 047D                                             if(TEMPERATURES[0]>LAST_TEMPERATURES[0]>VERY_LAST_TEMPERATURES[0]){
                 ; 0000 047E                                                 if(dac_data[2]>=20){
                 ; 0000 047F                                                 dac_data[2] = dac_data[2] - 20;
                 ; 0000 0480                                                 }
                 ; 0000 0481                                                 else{
                 ; 0000 0482                                                 dac_data[2] = 0;
                 ; 0000 0483                                                 }
                 ; 0000 0484                                             }
                 ; 0000 0485                                         }
                 ; 0000 0486                                         else{// Jei kambario temperatura ribose
                 ; 0000 0487                                             if(TEMPERATURES[0]>ROOM_TEMPERATURE){// Jei aukstesne
                 ; 0000 0488                                                 if(dac_data[2]<=250){
                 ; 0000 0489                                                 dac_data[2] = dac_data[2] + 5;
                 ; 0000 048A                                                 }
                 ; 0000 048B                                             }
                 ; 0000 048C                                             else if(TEMPERATURES[0]<ROOM_TEMPERATURE){// Jei zemesne
                 ; 0000 048D                                                 if(dac_data[2]>=5){
                 ; 0000 048E                                                 dac_data[2] = dac_data[2] - 5;
                 ; 0000 048F                                                 }
                 ; 0000 0490                                             }
                 ; 0000 0491                                         }
                 ; 0000 0492                                     }
                 ; 0000 0493                                     else{
                 ; 0000 0494                                     dac_data[2] = 255;
                 ; 0000 0495                                     }
                 ; 0000 0496                                 }
                 ; 0000 0497                                 else{
                 ; 0000 0498                                 dac_data[2] = 255;
                 ; 0000 0499                                 LAST_SOLARIUM_STATE[1] = 1;
                 ; 0000 049A                                 }
                 ; 0000 049B                             }
                 ; 0000 049C                             else{
                 ; 0000 049D                             dac_data[2] = 255;
                 ; 0000 049E                             }
                 ; 0000 049F                         solariums_opens = dac_data[2];
                 ; 0000 04A0                         count = 1;
                 ; 0000 04A1                         }
                 ; 0000 04A2                         else{
                 ; 0000 04A3                         dac_data[2] = 0;
                 ; 0000 04A4                         LAST_SOLARIUM_STATE[1] = 0;
                 ; 0000 04A5                         }
                 ; 0000 04A6 
                 ; 0000 04A7 
                 ; 0000 04A8                         if((SOLARIUM3_AT_WORK==1)|| (TEMPERATURES[4]>TEMPERATURES[0]+5.0) ){
                 ; 0000 04A9                             if(DS18B20_IS_ASSIGNED[4]==1){
                 ; 0000 04AA                                 if(LAST_SOLARIUM_STATE[2]==1){// Turi buti pradirbes bent 1 cikla
                 ; 0000 04AB                                     if(TEMPERATURES[4] > (ROOM_TEMPERATURE+SOLARIUM_INSIDE_OFFSET) ){// Jei is soliariumo iseinantis oras aukstesnes temp negu uzstatyta
                 ; 0000 04AC                                         if(TEMPERATURES[0] < (ROOM_TEMPERATURE+SOLARIUM_INSIDE_OFFSET) ){// Jei kambario temperatura zemesne
                 ; 0000 04AD                                             if(TEMPERATURES[0]<LAST_TEMPERATURES[0]<VERY_LAST_TEMPERATURES[0]){
                 ; 0000 04AE                                                 if(dac_data[3]<=235){
                 ; 0000 04AF                                                 dac_data[3] = dac_data[3] + 20;
                 ; 0000 04B0                                                 }
                 ; 0000 04B1                                                 else{
                 ; 0000 04B2                                                 dac_data[3] = 255;
                 ; 0000 04B3                                                 }
                 ; 0000 04B4                                             }
                 ; 0000 04B5                                         }
                 ; 0000 04B6                                         else if( (ROOM_TEMPERATURE-SOLARIUM_INSIDE_OFFSET) < TEMPERATURES[0] ){// Jei kambario temperatura aukstesne
                 ; 0000 04B7                                             if(TEMPERATURES[0]>LAST_TEMPERATURES[0]>VERY_LAST_TEMPERATURES[0]){
                 ; 0000 04B8                                                 if(dac_data[3]>=20){
                 ; 0000 04B9                                                 dac_data[3] = dac_data[3] - 20;
                 ; 0000 04BA                                                 }
                 ; 0000 04BB                                                 else{
                 ; 0000 04BC                                                 dac_data[3] = 0;
                 ; 0000 04BD                                                 }
                 ; 0000 04BE                                             }
                 ; 0000 04BF                                         }
                 ; 0000 04C0                                         else{// Jei kambario temperatura ribose
                 ; 0000 04C1                                             if(TEMPERATURES[0]>ROOM_TEMPERATURE){// Jei aukstesne
                 ; 0000 04C2                                                 if(dac_data[3]<=250){
                 ; 0000 04C3                                                 dac_data[3] = dac_data[3] + 5;
                 ; 0000 04C4                                                 }
                 ; 0000 04C5                                             }
                 ; 0000 04C6                                             else if(TEMPERATURES[0]<ROOM_TEMPERATURE){// Jei zemesne
                 ; 0000 04C7                                                 if(dac_data[3]>=5){
                 ; 0000 04C8                                                 dac_data[3] = dac_data[3] - 5;
                 ; 0000 04C9                                                 }
                 ; 0000 04CA                                             }
                 ; 0000 04CB                                         }
                 ; 0000 04CC                                     }
                 ; 0000 04CD                                     else{
                 ; 0000 04CE                                     dac_data[3] = 255;
                 ; 0000 04CF                                     }
                 ; 0000 04D0                                 }
                 ; 0000 04D1                                 else{
                 ; 0000 04D2                                 dac_data[3] = 255;
                 ; 0000 04D3                                 LAST_SOLARIUM_STATE[2] = 1;
                 ; 0000 04D4                                 }
                 ; 0000 04D5                             }
                 ; 0000 04D6                             else{
                 ; 0000 04D7                             dac_data[3] = 255;
                 ; 0000 04D8                             }
                 ; 0000 04D9                         solariums_opens = dac_data[3];
                 ; 0000 04DA                         count = 1;
                 ; 0000 04DB                         }
                 ; 0000 04DC                         else{
                 ; 0000 04DD                         dac_data[3] = 0;
                 ; 0000 04DE                         LAST_SOLARIUM_STATE[2] = 0;
                 ; 0000 04DF                         }
                 ; 0000 04E0 
                 ; 0000 04E1 
                 ; 0000 04E2 
                 ; 0000 04E3 
                 ; 0000 04E4                         if(count>0){
                 ; 0000 04E5                         dac_data[0] = 255 - (solariums_opens/count);
                 ; 0000 04E6                         }
                 ; 0000 04E7                         else{
                 ; 0000 04E8                         dac_data[0] = 255;
                 ; 0000 04E9                         }*/
                 ; 0000 04EA 
                 ; 0000 04EB                     }
                 ; 0000 04EC                     else{
0006dc c002      	RJMP _0xD3
                 _0xB7:
                 ; 0000 04ED                     dac_data[0] = 255;
0006dd 940e 1aca 	CALL SUBOPT_0x3E
                 ; 0000 04EE                     dac_data[1] = 0;
                 ; 0000 04EF                     dac_data[2] = 0;
                 ; 0000 04F0                     dac_data[3] = 0;
                 ; 0000 04F1                     }
                 _0xD3:
                 ; 0000 04F2 
                 ; 0000 04F3 
                 ; 0000 04F4 
                 ; 0000 04F5 
                 ; 0000 04F6                 // VERY LAST
                 ; 0000 04F7                     if(1){
                 ; 0000 04F8                     unsigned char i;
                 ; 0000 04F9                         for(i=0;i<MAX_DS18B20_DEVICES;i++){
0006df 9721      	SBIW R28,1
                 ;	i -> Y+0
0006e0 e0e0      	LDI  R30,LOW(0)
0006e1 83e8      	ST   Y,R30
                 _0xD6:
0006e2 81a8      	LD   R26,Y
0006e3 30a8      	CPI  R26,LOW(0x8)
0006e4 f498      	BRSH _0xD7
                 ; 0000 04FA                         VERY_LAST_TEMPERATURES[i] = LAST_TEMPERATURES[i];
0006e5 81e8      	LD   R30,Y
0006e6 eaa4      	LDI  R26,LOW(_VERY_LAST_TEMPERATURES_S0000006001)
0006e7 e0b5      	LDI  R27,HIGH(_VERY_LAST_TEMPERATURES_S0000006001)
0006e8 940e 1ae0 	CALL SUBOPT_0x40
0006ea 0fea      	ADD  R30,R26
0006eb 1ffb      	ADC  R31,R27
0006ec 010f      	MOVW R0,R30
0006ed 81e8      	LD   R30,Y
0006ee eca4      	LDI  R26,LOW(_LAST_TEMPERATURES_S0000006001)
0006ef e0b5      	LDI  R27,HIGH(_LAST_TEMPERATURES_S0000006001)
0006f0 940e 1ae0 	CALL SUBOPT_0x40
0006f2 940e 1ae4 	CALL SUBOPT_0x41
                 ; 0000 04FB                         }
0006f4 81e8      	LD   R30,Y
0006f5 5fef      	SUBI R30,-LOW(1)
0006f6 83e8      	ST   Y,R30
0006f7 cfea      	RJMP _0xD6
                 _0xD7:
                 ; 0000 04FC 
                 ; 0000 04FD                     //VERY_LAST_SOLARIUM_STATE[0] = LAST_SOLARIUM_STATE[0];
                 ; 0000 04FE                     //VERY_LAST_SOLARIUM_STATE[1] = LAST_SOLARIUM_STATE[1];
                 ; 0000 04FF                     //VERY_LAST_SOLARIUM_STATE[2] = LAST_SOLARIUM_STATE[2];
                 ; 0000 0500 
                 ; 0000 0501                     //    for(i=0;i<MAX_DS18B20_DEVICES;i++){
                 ; 0000 0502                     //    VERY_LAST_DACS[i] = LAST_DACS[i];
                 ; 0000 0503                     //    }
                 ; 0000 0504                     }
0006f8 9621      	ADIW R28,1
                 ; 0000 0505 
                 ; 0000 0506 
                 ; 0000 0507                 // LAST
                 ; 0000 0508                     if(1){
                 ; 0000 0509                     unsigned char i;
                 ; 0000 050A                         for(i=0;i<MAX_DS18B20_DEVICES;i++){
0006f9 9721      	SBIW R28,1
                 ;	i -> Y+0
0006fa e0e0      	LDI  R30,LOW(0)
0006fb 83e8      	ST   Y,R30
                 _0xDA:
0006fc 81a8      	LD   R26,Y
0006fd 30a8      	CPI  R26,LOW(0x8)
0006fe f488      	BRSH _0xDB
                 ; 0000 050B                         LAST_TEMPERATURES[i] = TEMPERATURES[i];
0006ff 81e8      	LD   R30,Y
000700 eca4      	LDI  R26,LOW(_LAST_TEMPERATURES_S0000006001)
000701 e0b5      	LDI  R27,HIGH(_LAST_TEMPERATURES_S0000006001)
000702 940e 1ae0 	CALL SUBOPT_0x40
000704 0fea      	ADD  R30,R26
000705 1ffb      	ADC  R31,R27
000706 010f      	MOVW R0,R30
000707 81e8      	LD   R30,Y
000708 940e 1a43 	CALL SUBOPT_0x2F
00070a 940e 1ae4 	CALL SUBOPT_0x41
                 ; 0000 050C                         }
00070c 81e8      	LD   R30,Y
00070d 5fef      	SUBI R30,-LOW(1)
00070e 83e8      	ST   Y,R30
00070f cfec      	RJMP _0xDA
                 _0xDB:
                 ; 0000 050D 
                 ; 0000 050E                     LAST_SOLARIUM_STATE[0] = SOLARIUM1_AT_WORK;
000710 e0e0      	LDI  R30,0
000711 9991      	SBIC 0x12,1
000712 e0e1      	LDI  R30,1
000713 93e0 05e4 	STS  _LAST_SOLARIUM_STATE_S0000006001,R30
                 ; 0000 050F                     LAST_SOLARIUM_STATE[1] = SOLARIUM2_AT_WORK;
000715 e0e0      	LDI  R30,0
000716 9992      	SBIC 0x12,2
000717 e0e1      	LDI  R30,1
                +
000718 93e0 05e5+STS _LAST_SOLARIUM_STATE_S0000006001 + ( 1 ) , R30
                 	__PUTB1MN _LAST_SOLARIUM_STATE_S0000006001,1
                 ; 0000 0510                     LAST_SOLARIUM_STATE[2] = SOLARIUM3_AT_WORK;
00071a e0e0      	LDI  R30,0
00071b 9993      	SBIC 0x12,3
00071c e0e1      	LDI  R30,1
                +
00071d 93e0 05e6+STS _LAST_SOLARIUM_STATE_S0000006001 + ( 2 ) , R30
                 	__PUTB1MN _LAST_SOLARIUM_STATE_S0000006001,2
                 ; 0000 0511 
                 ; 0000 0512                     //    for(i=0;i<MAX_DS18B20_DEVICES;i++){
                 ; 0000 0513                     //    LAST_DACS[i] = dac_data[i];
                 ; 0000 0514                     //    }
                 ; 0000 0515                     }
00071f 9621      	ADIW R28,1
                 ; 0000 0516 
                 ; 0000 0517                 }
                 ; 0000 0518             }
                 _0xB6:
                 ; 0000 0519         }
                 _0xB5:
                 ; 0000 051A     //////////////////////////////////////////////////////////////////////////////////
                 ; 0000 051B     //////////////////////////////////////////////////////////////////////////////////
                 ; 0000 051C     //////////////////////////////////////////////////////////////////////////////////
                 ; 0000 051D 
                 ; 0000 051E 
                 ; 0000 051F 
                 ; 0000 0520 
                 ; 0000 0521 
                 ; 0000 0522 
                 ; 0000 0523 
                 ; 0000 0524 
                 ; 0000 0525 
                 ; 0000 0526 
                 ; 0000 0527 
                 ; 0000 0528     //////////////////////////////////////////////////////////////////////////////////
                 ; 0000 0529     ///////////////////////////// LCD ////////////////////////////////////////////////
                 ; 0000 052A     //////////////////////////////////////////////////////////////////////////////////
                 ; 0000 052B     // Lcd led pwm
                 ; 0000 052C     lcd_light_osc += 1;
                 _0xB4:
000720 91e0 0536 	LDS  R30,_lcd_light_osc_G000
000722 5fef      	SUBI R30,-LOW(1)
000723 93e0 0536 	STS  _lcd_light_osc_G000,R30
                 ; 0000 052D         if(lcd_light_osc>=20){
000725 91a0 0536 	LDS  R26,_lcd_light_osc_G000
000727 31a4      	CPI  R26,LOW(0x14)
000728 f018      	BRLO _0xDC
                 ; 0000 052E         lcd_light_osc = 0;
000729 e0e0      	LDI  R30,LOW(0)
00072a 93e0 0536 	STS  _lcd_light_osc_G000,R30
                 ; 0000 052F         }
                 ; 0000 0530 
                 ; 0000 0531         if(lcd_light_now>lcd_light_osc){
                 _0xDC:
00072c 91e0 0536 	LDS  R30,_lcd_light_osc_G000
00072e 91a0 0537 	LDS  R26,_lcd_light_now_G000
000730 17ea      	CP   R30,R26
000731 f410      	BRSH _0xDD
                 ; 0000 0532         LCD_LED = 1;
000732 9ac0      	SBI  0x18,0
                 ; 0000 0533         }
                 ; 0000 0534         else{
000733 c001      	RJMP _0xE0
                 _0xDD:
                 ; 0000 0535         LCD_LED = 0;
000734 98c0      	CBI  0x18,0
                 ; 0000 0536         }
                 _0xE0:
                 ; 0000 0537 
                 ; 0000 0538 
                 ; 0000 0539 
                 ; 0000 053A     // Lcd led antibrighter
                 ; 0000 053B     static unsigned char lcd_led_counter;
                 ; 0000 053C         if(LCD_LED_TIMER==0){
000735 2066      	TST  R6
000736 f4a9      	BRNE _0xE3
                 ; 0000 053D             if(lcd_light_now>0){
000737 91a0 0537 	LDS  R26,_lcd_light_now_G000
000739 30a1      	CPI  R26,LOW(0x1)
00073a f088      	BRLO _0xE4
                 ; 0000 053E             lcd_led_counter++;
00073b 91e0 05ef 	LDS  R30,_lcd_led_counter_S0000006001
00073d 5fef      	SUBI R30,-LOW(1)
00073e 93e0 05ef 	STS  _lcd_led_counter_S0000006001,R30
                 ; 0000 053F                 if(lcd_led_counter>=25){
000740 91a0 05ef 	LDS  R26,_lcd_led_counter_S0000006001
000742 31a9      	CPI  R26,LOW(0x19)
000743 f040      	BRLO _0xE5
                 ; 0000 0540                 lcd_led_counter = 0;
000744 e0e0      	LDI  R30,LOW(0)
000745 93e0 05ef 	STS  _lcd_led_counter_S0000006001,R30
                 ; 0000 0541                 lcd_light_now--;
000747 91e0 0537 	LDS  R30,_lcd_light_now_G000
000749 50e1      	SUBI R30,LOW(1)
00074a 93e0 0537 	STS  _lcd_light_now_G000,R30
                 ; 0000 0542                 }
                 ; 0000 0543             }
                 _0xE5:
                 ; 0000 0544         }
                 _0xE4:
                 ; 0000 0545 
                 ; 0000 0546 
                 ; 0000 0547 
                 ; 0000 0548 
                 ; 0000 0549         if(STAND_BY==1){
                 _0xE3:
00074c 91a0 0589 	LDS  R26,_STAND_BY_S0000006000
00074e 30a1      	CPI  R26,LOW(0x1)
00074f f011      	BREQ PC+3
000750 940c 0858 	JMP _0xE6
                 ; 0000 054A         static unsigned char stand_by_pos[2];
                 ; 0000 054B         stand_by_pos[0]++;
000752 91e0 05f0 	LDS  R30,_stand_by_pos_S0000006002
000754 5fef      	SUBI R30,-LOW(1)
000755 93e0 05f0 	STS  _stand_by_pos_S0000006002,R30
                 ; 0000 054C 
                 ; 0000 054D             if(stand_by_pos[0]>=225){
000757 91a0 05f0 	LDS  R26,_stand_by_pos_S0000006002
000759 3ea1      	CPI  R26,LOW(0xE1)
00075a f410      	BRSH PC+3
00075b 940c 083f 	JMP _0xE7
                 ; 0000 054E             stand_by_pos[0] = 0;
00075d e0e0      	LDI  R30,LOW(0)
00075e 93e0 05f0 	STS  _stand_by_pos_S0000006002,R30
                 ; 0000 054F             stand_by_pos[1]++;
                +
000760 91e0 05f1+LDS R30 , _stand_by_pos_S0000006002 + ( 1 )
                 	__GETB1MN _stand_by_pos_S0000006002,1
000762 5fef      	SUBI R30,-LOW(1)
                +
000763 93e0 05f1+STS _stand_by_pos_S0000006002 + ( 1 ) , R30
                 	__PUTB1MN _stand_by_pos_S0000006002,1
                 ; 0000 0550                 if(stand_by_pos[1]>=44){
                +
000765 91a0 05f1+LDS R26 , _stand_by_pos_S0000006002 + ( 1 )
                 	__GETB2MN _stand_by_pos_S0000006002,1
000767 32ac      	CPI  R26,LOW(0x2C)
000768 f018      	BRLO _0xE8
                 ; 0000 0551                 stand_by_pos[1] = 0;
000769 e0e0      	LDI  R30,LOW(0)
                +
00076a 93e0 05f1+STS _stand_by_pos_S0000006002 + ( 1 ) , R30
                 	__PUTB1MN _stand_by_pos_S0000006002,1
                 ; 0000 0552                 }
                 ; 0000 0553 
                 ; 0000 0554             lcd_clear();
                 _0xE8:
00076c 940e 17a3 	CALL _lcd_clear
                 ; 0000 0555                 if(stand_by_pos[1]==0){lcd_gotoxy(0,2);lcd_putchar('/');lcd_gotoxy(0,1);lcd_putchar('/');lcd_gotoxy(0,0);lcd_putchar('^');}
                +
00076e 91e0 05f1+LDS R30 , _stand_by_pos_S0000006002 + ( 1 )
                 	__GETB1MN _stand_by_pos_S0000006002,1
000770 30e0      	CPI  R30,0
000771 f471      	BRNE _0xE9
000772 940e 1aec 	CALL SUBOPT_0x42
000774 940e 1af2 	CALL SUBOPT_0x43
000776 940e 19de 	CALL SUBOPT_0x1D
000778 940e 1af2 	CALL SUBOPT_0x43
00077a 940e 199f 	CALL SUBOPT_0x14
00077c 940e 1793 	CALL _lcd_gotoxy
00077e e5ee      	LDI  R30,LOW(94)
00077f c0a9      	RJMP _0x2E9
                 ; 0000 0556                 else if(stand_by_pos[1]==1){lcd_gotoxy(0,1);lcd_putchar('/');lcd_gotoxy(0,0);lcd_putsf("+>");}
                 _0xE9:
                +
000780 91a0 05f1+LDS R26 , _stand_by_pos_S0000006002 + ( 1 )
                 	__GETB2MN _stand_by_pos_S0000006002,1
000782 30a1      	CPI  R26,LOW(0x1)
000783 f469      	BRNE _0xEB
000784 940e 19de 	CALL SUBOPT_0x1D
000786 940e 1af2 	CALL SUBOPT_0x43
000788 940e 199f 	CALL SUBOPT_0x14
00078a 940e 1793 	CALL _lcd_gotoxy
                +
00078c e3eb     +LDI R30 , LOW ( 2 * _0x0 + ( 145 ) )
00078d e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 145 ) )
                 	__POINTW1FN _0x0,145
00078e 940e 1996 	CALL SUBOPT_0x12
                 ; 0000 0557                 else if((stand_by_pos[1]>=2)&&(stand_by_pos[1]<=19)){lcd_gotoxy(stand_by_pos[1]-2,0);lcd_putsf("-->");}
000790 c09b      	RJMP _0xEC
                 _0xEB:
                +
000791 91a0 05f1+LDS R26 , _stand_by_pos_S0000006002 + ( 1 )
                 	__GETB2MN _stand_by_pos_S0000006002,1
000793 30a2      	CPI  R26,LOW(0x2)
000794 f020      	BRLO _0xEE
                +
000795 91a0 05f1+LDS R26 , _stand_by_pos_S0000006002 + ( 1 )
                 	__GETB2MN _stand_by_pos_S0000006002,1
000797 31a4      	CPI  R26,LOW(0x14)
000798 f008      	BRLO _0xEF
                 _0xEE:
000799 c00b      	RJMP _0xED
                 _0xEF:
                +
00079a 91e0 05f1+LDS R30 , _stand_by_pos_S0000006002 + ( 1 )
                 	__GETB1MN _stand_by_pos_S0000006002,1
00079c e0f0      	LDI  R31,0
00079d 9732      	SBIW R30,2
00079e 940e 1af6 	CALL SUBOPT_0x44
                +
0007a0 e3ee     +LDI R30 , LOW ( 2 * _0x0 + ( 148 ) )
0007a1 e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 148 ) )
                 	__POINTW1FN _0x0,148
0007a2 940e 1996 	CALL SUBOPT_0x12
                 ; 0000 0558                 else if(stand_by_pos[1]==20){lcd_gotoxy(18,0);lcd_putsf("-+");lcd_gotoxy(19,1);lcd_putchar('v');}
0007a4 c087      	RJMP _0xF0
                 _0xED:
                +
0007a5 91a0 05f1+LDS R26 , _stand_by_pos_S0000006002 + ( 1 )
                 	__GETB2MN _stand_by_pos_S0000006002,1
0007a7 31a4      	CPI  R26,LOW(0x14)
0007a8 f459      	BRNE _0xF1
0007a9 e1e2      	LDI  R30,LOW(18)
0007aa 940e 1af6 	CALL SUBOPT_0x44
                +
0007ac ebec     +LDI R30 , LOW ( 2 * _0x0 + ( 18 ) )
0007ad e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 18 ) )
                 	__POINTW1FN _0x0,18
0007ae 940e 1996 	CALL SUBOPT_0x12
0007b0 940e 1afb 	CALL SUBOPT_0x45
0007b2 e7e6      	LDI  R30,LOW(118)
0007b3 c075      	RJMP _0x2E9
                 ; 0000 0559                 else if(stand_by_pos[1]==21){lcd_gotoxy(19,0);lcd_putchar('/');lcd_gotoxy(19,1);lcd_putchar('/');lcd_gotoxy(19,2);lcd_putchar('v');}
                 _0xF1:
                +
0007b4 91a0 05f1+LDS R26 , _stand_by_pos_S0000006002 + ( 1 )
                 	__GETB2MN _stand_by_pos_S0000006002,1
0007b6 31a5      	CPI  R26,LOW(0x15)
0007b7 f469      	BRNE _0xF3
0007b8 e1e3      	LDI  R30,LOW(19)
0007b9 940e 1af6 	CALL SUBOPT_0x44
0007bb 940e 1af2 	CALL SUBOPT_0x43
0007bd 940e 1afb 	CALL SUBOPT_0x45
0007bf 940e 1af2 	CALL SUBOPT_0x43
0007c1 940e 1b01 	CALL SUBOPT_0x46
0007c3 e7e6      	LDI  R30,LOW(118)
0007c4 c064      	RJMP _0x2E9
                 ; 0000 055A                 else if(stand_by_pos[1]==22){lcd_gotoxy(19,1);lcd_putchar('/');lcd_gotoxy(19,2);lcd_putchar('/');lcd_gotoxy(19,3);lcd_putchar('v');}
                 _0xF3:
                +
0007c5 91a0 05f1+LDS R26 , _stand_by_pos_S0000006002 + ( 1 )
                 	__GETB2MN _stand_by_pos_S0000006002,1
0007c7 31a6      	CPI  R26,LOW(0x16)
0007c8 f461      	BRNE _0xF5
0007c9 940e 1afb 	CALL SUBOPT_0x45
0007cb 940e 1af2 	CALL SUBOPT_0x43
0007cd 940e 1b01 	CALL SUBOPT_0x46
0007cf 940e 1af2 	CALL SUBOPT_0x43
0007d1 940e 1b07 	CALL SUBOPT_0x47
0007d3 e7e6      	LDI  R30,LOW(118)
0007d4 c054      	RJMP _0x2E9
                 ; 0000 055B                 else if(stand_by_pos[1]==23){lcd_gotoxy(19,2);lcd_putchar('/');lcd_gotoxy(18,3);lcd_putsf("<+");}
                 _0xF5:
                +
0007d5 91a0 05f1+LDS R26 , _stand_by_pos_S0000006002 + ( 1 )
                 	__GETB2MN _stand_by_pos_S0000006002,1
0007d7 31a7      	CPI  R26,LOW(0x17)
0007d8 f479      	BRNE _0xF7
0007d9 940e 1b01 	CALL SUBOPT_0x46
0007db 940e 1af2 	CALL SUBOPT_0x43
0007dd e1e2      	LDI  R30,LOW(18)
0007de 93ea      	ST   -Y,R30
0007df e0e3      	LDI  R30,LOW(3)
0007e0 93ea      	ST   -Y,R30
0007e1 940e 1793 	CALL _lcd_gotoxy
                +
0007e3 e4e2     +LDI R30 , LOW ( 2 * _0x0 + ( 152 ) )
0007e4 e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 152 ) )
                 	__POINTW1FN _0x0,152
0007e5 940e 1996 	CALL SUBOPT_0x12
                 ; 0000 055C                 else if((stand_by_pos[1]>=24)&&(stand_by_pos[1]<=41)){lcd_gotoxy(17-stand_by_pos[1]+24,3);lcd_putsf("<--");}
0007e7 c044      	RJMP _0xF8
                 _0xF7:
                +
0007e8 91a0 05f1+LDS R26 , _stand_by_pos_S0000006002 + ( 1 )
                 	__GETB2MN _stand_by_pos_S0000006002,1
0007ea 31a8      	CPI  R26,LOW(0x18)
0007eb f020      	BRLO _0xFA
                +
0007ec 91a0 05f1+LDS R26 , _stand_by_pos_S0000006002 + ( 1 )
                 	__GETB2MN _stand_by_pos_S0000006002,1
0007ee 32aa      	CPI  R26,LOW(0x2A)
0007ef f008      	BRLO _0xFB
                 _0xFA:
0007f0 c012      	RJMP _0xF9
                 _0xFB:
                +
0007f1 91e0 05f1+LDS R30 , _stand_by_pos_S0000006002 + ( 1 )
                 	__GETB1MN _stand_by_pos_S0000006002,1
0007f3 e0f0      	LDI  R31,0
0007f4 e1a1      	LDI  R26,LOW(17)
0007f5 e0b0      	LDI  R27,HIGH(17)
0007f6 940e 191e 	CALL SUBOPT_0x2
0007f8 5ee8      	SUBI R30,-LOW(24)
0007f9 93ea      	ST   -Y,R30
0007fa e0e3      	LDI  R30,LOW(3)
0007fb 93ea      	ST   -Y,R30
0007fc 940e 1793 	CALL _lcd_gotoxy
                +
0007fe e4e5     +LDI R30 , LOW ( 2 * _0x0 + ( 155 ) )
0007ff e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 155 ) )
                 	__POINTW1FN _0x0,155
000800 940e 1996 	CALL SUBOPT_0x12
                 ; 0000 055D                 else if(stand_by_pos[1]==42){lcd_gotoxy(0,2);lcd_putchar('^');lcd_gotoxy(0,3);lcd_putsf("+-");}
000802 c029      	RJMP _0xFC
                 _0xF9:
                +
000803 91a0 05f1+LDS R26 , _stand_by_pos_S0000006002 + ( 1 )
                 	__GETB2MN _stand_by_pos_S0000006002,1
000805 32aa      	CPI  R26,LOW(0x2A)
000806 f479      	BRNE _0xFD
000807 940e 1aec 	CALL SUBOPT_0x42
000809 e5ee      	LDI  R30,LOW(94)
00080a 93ea      	ST   -Y,R30
00080b 940e 17b9 	CALL _lcd_putchar
00080d 940e 199a 	CALL SUBOPT_0x13
00080f 940e 1793 	CALL _lcd_gotoxy
                +
000811 e4e9     +LDI R30 , LOW ( 2 * _0x0 + ( 159 ) )
000812 e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 159 ) )
                 	__POINTW1FN _0x0,159
000813 940e 1996 	CALL SUBOPT_0x12
                 ; 0000 055E                 else if(stand_by_pos[1]==43){lcd_gotoxy(0,1);lcd_putchar('^');lcd_gotoxy(0,2);lcd_putchar('/');lcd_gotoxy(0,3);lcd_putchar('/');}
000815 c016      	RJMP _0xFE
                 _0xFD:
                +
000816 91a0 05f1+LDS R26 , _stand_by_pos_S0000006002 + ( 1 )
                 	__GETB2MN _stand_by_pos_S0000006002,1
000818 32ab      	CPI  R26,LOW(0x2B)
000819 f491      	BRNE _0xFF
00081a 940e 19de 	CALL SUBOPT_0x1D
00081c e5ee      	LDI  R30,LOW(94)
00081d 93ea      	ST   -Y,R30
00081e 940e 17b9 	CALL _lcd_putchar
000820 940e 1aec 	CALL SUBOPT_0x42
000822 940e 1af2 	CALL SUBOPT_0x43
000824 940e 199a 	CALL SUBOPT_0x13
000826 940e 1793 	CALL _lcd_gotoxy
000828 e2ef      	LDI  R30,LOW(47)
                 _0x2E9:
000829 93ea      	ST   -Y,R30
00082a 940e 17b9 	CALL _lcd_putchar
                 ; 0000 055F 
                 ; 0000 0560             lcd_gotoxy(1,1);
                 _0xFF:
                 _0xFE:
                 _0xFC:
                 _0xF8:
                 _0xF0:
                 _0xEC:
00082c e0e1      	LDI  R30,LOW(1)
00082d 93ea      	ST   -Y,R30
00082e 93ea      	ST   -Y,R30
00082f 940e 1793 	CALL _lcd_gotoxy
                 ; 0000 0561             lcd_putsf("    SOLIARIUMO    ");
                +
000831 e4ec     +LDI R30 , LOW ( 2 * _0x0 + ( 162 ) )
000832 e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 162 ) )
                 	__POINTW1FN _0x0,162
000833 940e 1996 	CALL SUBOPT_0x12
                 ; 0000 0562             lcd_gotoxy(1,2);
000835 e0e1      	LDI  R30,LOW(1)
000836 93ea      	ST   -Y,R30
000837 e0e2      	LDI  R30,LOW(2)
000838 93ea      	ST   -Y,R30
000839 940e 1793 	CALL _lcd_gotoxy
                 ; 0000 0563             lcd_putsf("    VALDIKLIS     ");
                +
00083b e5ef     +LDI R30 , LOW ( 2 * _0x0 + ( 181 ) )
00083c e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 181 ) )
                 	__POINTW1FN _0x0,181
00083d 940e 1996 	CALL SUBOPT_0x12
                 ; 0000 0564             }
                 ; 0000 0565 
                 ; 0000 0566             if(BUTTON[BUTTON_LEFT]==1){
                 _0xE7:
                +
00083f 91a0 058e+LDS R26 , _BUTTON_S0000006001 + ( 1 )
                 	__GETB2MN _BUTTON_S0000006001,1
000841 30a1      	CPI  R26,LOW(0x1)
000842 f081      	BREQ _0x2EA
                 ; 0000 0567             STAND_BY = 0;
                 ; 0000 0568             }
                 ; 0000 0569             else if(BUTTON[BUTTON_RIGHT]==1){
                +
000843 91a0 0590+LDS R26 , _BUTTON_S0000006001 + ( 3 )
                 	__GETB2MN _BUTTON_S0000006001,3
000845 30a1      	CPI  R26,LOW(0x1)
000846 f061      	BREQ _0x2EA
                 ; 0000 056A             STAND_BY = 0;
                 ; 0000 056B             }
                 ; 0000 056C             else if(BUTTON[BUTTON_DOWN]==1){
                +
000847 91a0 0591+LDS R26 , _BUTTON_S0000006001 + ( 4 )
                 	__GETB2MN _BUTTON_S0000006001,4
000849 30a1      	CPI  R26,LOW(0x1)
00084a f041      	BREQ _0x2EA
                 ; 0000 056D             STAND_BY = 0;
                 ; 0000 056E             }
                 ; 0000 056F             else if(BUTTON[BUTTON_UP]==1){
00084b 91a0 058d 	LDS  R26,_BUTTON_S0000006001
00084d 30a1      	CPI  R26,LOW(0x1)
00084e f021      	BREQ _0x2EA
                 ; 0000 0570             STAND_BY = 0;
                 ; 0000 0571             }
                 ; 0000 0572             else if(BUTTON[BUTTON_ENTER]==1){
                +
00084f 91a0 058f+LDS R26 , _BUTTON_S0000006001 + ( 2 )
                 	__GETB2MN _BUTTON_S0000006001,2
000851 30a1      	CPI  R26,LOW(0x1)
000852 f419      	BRNE _0x108
                 ; 0000 0573             STAND_BY = 0;
                 _0x2EA:
000853 e0e0      	LDI  R30,LOW(0)
000854 93e0 0589 	STS  _STAND_BY_S0000006000,R30
                 ; 0000 0574             }
                 ; 0000 0575 
                 ; 0000 0576         }
                 _0x108:
                 ; 0000 0577         else{
000856 940c 12cb 	JMP  _0x109
                 _0xE6:
                 ; 0000 0578 
                 ; 0000 0579             if(RefreshLcd>=1){
000858 91a0 0535 	LDS  R26,_RefreshLcd_G000
00085a 30a1      	CPI  R26,LOW(0x1)
00085b f010      	BRLO _0x10A
                 ; 0000 057A             lcd_clear();
00085c 940e 17a3 	CALL _lcd_clear
                 ; 0000 057B             }
                 ; 0000 057C 
                 ; 0000 057D 
                 ; 0000 057E             // Pagrindinis langas
                 ; 0000 057F             if(Address[0]==0){
                 _0x10A:
00085e 91e0 052e 	LDS  R30,_Address_G000
000860 30e0      	CPI  R30,0
000861 f011      	BREQ PC+3
000862 940c 097b 	JMP _0x10B
                 ; 0000 0580                 if(BUTTON[BUTTON_DOWN]==1){
                +
000864 91a0 0591+LDS R26 , _BUTTON_S0000006001 + ( 4 )
                 	__GETB2MN _BUTTON_S0000006001,4
000866 30a1      	CPI  R26,LOW(0x1)
000867 f419      	BRNE _0x10C
                 ; 0000 0581                 SelectAnotherRow(0);
000868 940e 1b0d 	CALL SUBOPT_0x48
                 ; 0000 0582                 }
                 ; 0000 0583                 else if(BUTTON[BUTTON_UP]==1){
00086a c00f      	RJMP _0x10D
                 _0x10C:
00086b 91a0 058d 	LDS  R26,_BUTTON_S0000006001
00086d 30a1      	CPI  R26,LOW(0x1)
00086e f419      	BRNE _0x10E
                 ; 0000 0584                 SelectAnotherRow(1);
00086f 940e 1b11 	CALL SUBOPT_0x49
                 ; 0000 0585                 }
                 ; 0000 0586                 else if(BUTTON[BUTTON_ENTER]==1){
000871 c008      	RJMP _0x10F
                 _0x10E:
                +
000872 91a0 058f+LDS R26 , _BUTTON_S0000006001 + ( 2 )
                 	__GETB2MN _BUTTON_S0000006001,2
000874 30a1      	CPI  R26,LOW(0x1)
000875 f421      	BRNE _0x110
                 ; 0000 0587                 Address[0] = SelectedRow;
000876 91e0 0534 	LDS  R30,_SelectedRow_G000
000878 940e 1b15 	CALL SUBOPT_0x4A
                 ; 0000 0588                 SelectedRow = 0;
                 ; 0000 0589                 Address[5] = 0;
                 ; 0000 058A                 }
                 ; 0000 058B 
                 ; 0000 058C                 if(RefreshLcd>=1){
                 _0x110:
                 _0x10F:
                 _0x10D:
00087a 91a0 0535 	LDS  R26,_RefreshLcd_G000
00087c 30a1      	CPI  R26,LOW(0x1)
00087d f410      	BRSH PC+3
00087e 940c 0979 	JMP _0x111
                 ; 0000 058D                 unsigned char row, lcd_row;
                 ; 0000 058E                 lcd_row = 0;
000880 9722      	SBIW R28,2
                 ;	row -> Y+1
                 ;	lcd_row -> Y+0
000881 e0e0      	LDI  R30,LOW(0)
000882 83e8      	ST   Y,R30
                 ; 0000 058F                 RowsOnWindow = 8;
000883 e0e8      	LDI  R30,LOW(8)
000884 940e 1b1d 	CALL SUBOPT_0x4B
                 ; 0000 0590                     for(row=Address[5];row<4+Address[5];row++){
                 _0x113:
000886 940e 192a 	CALL SUBOPT_0x5
000888 940e 1b23 	CALL SUBOPT_0x4C
00088a f014      	BRLT PC+3
00088b 940c 0975 	JMP _0x114
                 ; 0000 0591                     lcd_gotoxy(0,lcd_row);
00088d 940e 1b26 	CALL SUBOPT_0x4D
                 ; 0000 0592                         if(row==0){
00088f f419      	BRNE _0x115
                 ; 0000 0593                         lcd_putsf("  -=PAGR. MENIU=-");
                +
000890 e7e2     +LDI R30 , LOW ( 2 * _0x0 + ( 200 ) )
000891 e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 200 ) )
                 	__POINTW1FN _0x0,200
000892 c0d7      	RJMP _0x2EB
                 ; 0000 0594                         }
                 ; 0000 0595                         else if(row==1){
                 _0x115:
000893 81a9      	LDD  R26,Y+1
000894 30a1      	CPI  R26,LOW(0x1)
000895 f539      	BRNE _0x117
                 ; 0000 0596                         lcd_putsf("1.KAMBARIO: ");
                +
000896 e8e4     +LDI R30 , LOW ( 2 * _0x0 + ( 218 ) )
000897 e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 218 ) )
                 	__POINTW1FN _0x0,218
000898 940e 1996 	CALL SUBOPT_0x12
                 ; 0000 0597                             if(DS18B20_IS_ASSIGNED[0]==1){
00089a e0a0      	LDI  R26,LOW(_DS18B20_IS_ASSIGNED)
00089b e0b0      	LDI  R27,HIGH(_DS18B20_IS_ASSIGNED)
00089c 940e 2063 	CALL __EEPROMRDB
00089e 30e1      	CPI  R30,LOW(0x1)
00089f f469      	BRNE _0x118
                 ; 0000 0598                             char lcd_buffer[10];
                 ; 0000 0599                             sprintf(lcd_buffer,"%+2.1f\xdfC",TEMPERATURES[0]);
0008a0 940e 1b2f 	CALL SUBOPT_0x4E
                 ;	row -> Y+11
                 ;	lcd_row -> Y+10
                 ;	lcd_buffer -> Y+0
0008a2 91e0 0509 	LDS  R30,_TEMPERATURES
0008a4 91f0 050a 	LDS  R31,_TEMPERATURES+1
0008a6 9160 050b 	LDS  R22,_TEMPERATURES+2
0008a8 9170 050c 	LDS  R23,_TEMPERATURES+3
0008aa 940e 1b38 	CALL SUBOPT_0x4F
                 ; 0000 059A                             lcd_puts(lcd_buffer);
                 ; 0000 059B                             }
                 ; 0000 059C                             else if(DS18B20_IS_ASSIGNED[0]==2){
0008ac c00f      	RJMP _0x119
                 _0x118:
0008ad e0a0      	LDI  R26,LOW(_DS18B20_IS_ASSIGNED)
0008ae e0b0      	LDI  R27,HIGH(_DS18B20_IS_ASSIGNED)
0008af 940e 2063 	CALL __EEPROMRDB
0008b1 30e2      	CPI  R30,LOW(0x2)
0008b2 f419      	BRNE _0x11A
                 ; 0000 059D                             lcd_putsf("OFF");
                +
0008b3 e9ea     +LDI R30 , LOW ( 2 * _0x0 + ( 240 ) )
0008b4 e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 240 ) )
                 	__POINTW1FN _0x0,240
0008b5 c002      	RJMP _0x2EC
                 ; 0000 059E                             }
                 ; 0000 059F                             else{
                 _0x11A:
                 ; 0000 05A0                             lcd_putsf("----");
                +
0008b6 e9ee     +LDI R30 , LOW ( 2 * _0x0 + ( 244 ) )
0008b7 e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 244 ) )
                 	__POINTW1FN _0x0,244
                 _0x2EC:
0008b8 93fa      	ST   -Y,R31
0008b9 93ea      	ST   -Y,R30
0008ba 940e 17df 	CALL _lcd_putsf
                 ; 0000 05A1                             }
                 _0x119:
                 ; 0000 05A2                         }
                 ; 0000 05A3                         else if(row==2){
0008bc c0b1      	RJMP _0x11C
                 _0x117:
0008bd 81a9      	LDD  R26,Y+1
0008be 30a2      	CPI  R26,LOW(0x2)
0008bf f509      	BRNE _0x11D
                 ; 0000 05A4                         lcd_putsf("2.LAUKO:    ");
                +
0008c0 eae3     +LDI R30 , LOW ( 2 * _0x0 + ( 249 ) )
0008c1 e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 249 ) )
                 	__POINTW1FN _0x0,249
0008c2 940e 1996 	CALL SUBOPT_0x12
                 ; 0000 05A5                             if(DS18B20_IS_ASSIGNED[1]==1){
                +
0008c4 e0a1     +LDI R26 , LOW ( _DS18B20_IS_ASSIGNED + ( 1 ) )
0008c5 e0b0     +LDI R27 , HIGH ( _DS18B20_IS_ASSIGNED + ( 1 ) )
                 	__POINTW2MN _DS18B20_IS_ASSIGNED,1
0008c6 940e 2063 	CALL __EEPROMRDB
0008c8 30e1      	CPI  R30,LOW(0x1)
0008c9 f439      	BRNE _0x11E
                 ; 0000 05A6                             char lcd_buffer[10];
                 ; 0000 05A7                             sprintf(lcd_buffer,"%+2.1f\xdfC",TEMPERATURES[1]);
0008ca 940e 1b2f 	CALL SUBOPT_0x4E
                 ;	row -> Y+11
                 ;	lcd_row -> Y+10
                 ;	lcd_buffer -> Y+0
0008cc 940e 1a59 	CALL SUBOPT_0x33
0008ce 940e 1b38 	CALL SUBOPT_0x4F
                 ; 0000 05A8                             lcd_puts(lcd_buffer);
                 ; 0000 05A9                             }
                 ; 0000 05AA                             else if(DS18B20_IS_ASSIGNED[1]==2){
0008d0 c00f      	RJMP _0x11F
                 _0x11E:
                +
0008d1 e0a1     +LDI R26 , LOW ( _DS18B20_IS_ASSIGNED + ( 1 ) )
0008d2 e0b0     +LDI R27 , HIGH ( _DS18B20_IS_ASSIGNED + ( 1 ) )
                 	__POINTW2MN _DS18B20_IS_ASSIGNED,1
0008d3 940e 2063 	CALL __EEPROMRDB
0008d5 30e2      	CPI  R30,LOW(0x2)
0008d6 f419      	BRNE _0x120
                 ; 0000 05AB                             lcd_putsf("OFF");
                +
0008d7 e9ea     +LDI R30 , LOW ( 2 * _0x0 + ( 240 ) )
0008d8 e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 240 ) )
                 	__POINTW1FN _0x0,240
0008d9 c002      	RJMP _0x2ED
                 ; 0000 05AC                             }
                 ; 0000 05AD                             else{
                 _0x120:
                 ; 0000 05AE                             lcd_putsf("----");
                +
0008da e9ee     +LDI R30 , LOW ( 2 * _0x0 + ( 244 ) )
0008db e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 244 ) )
                 	__POINTW1FN _0x0,244
                 _0x2ED:
0008dc 93fa      	ST   -Y,R31
0008dd 93ea      	ST   -Y,R30
0008de 940e 17df 	CALL _lcd_putsf
                 ; 0000 05AF                             }
                 _0x11F:
                 ; 0000 05B0                         }
                 ; 0000 05B1                         else if(row==3){
0008e0 c08d      	RJMP _0x122
                 _0x11D:
0008e1 81a9      	LDD  R26,Y+1
0008e2 30a3      	CPI  R26,LOW(0x3)
0008e3 f419      	BRNE _0x123
                 ; 0000 05B2                         lcd_putsf("3.SKLENDES:  ");
                +
0008e4 ebe0     +LDI R30 , LOW ( 2 * _0x0 + ( 262 ) )
0008e5 e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 262 ) )
                 	__POINTW1FN _0x0,262
0008e6 c083      	RJMP _0x2EB
                 ; 0000 05B3 
                 ; 0000 05B4                         }
                 ; 0000 05B5                         else if(row==4){
                 _0x123:
0008e7 81a9      	LDD  R26,Y+1
0008e8 30a4      	CPI  R26,LOW(0x4)
0008e9 f539      	BRNE _0x125
                 ; 0000 05B6                         lcd_putsf("4.SOLIAR.1: ");
                +
0008ea ebee     +LDI R30 , LOW ( 2 * _0x0 + ( 276 ) )
0008eb e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 276 ) )
                 	__POINTW1FN _0x0,276
0008ec 940e 1996 	CALL SUBOPT_0x12
                 ; 0000 05B7                             if(DS18B20_IS_ASSIGNED[2]==1){
                +
0008ee e0a2     +LDI R26 , LOW ( _DS18B20_IS_ASSIGNED + ( 2 ) )
0008ef e0b0     +LDI R27 , HIGH ( _DS18B20_IS_ASSIGNED + ( 2 ) )
                 	__POINTW2MN _DS18B20_IS_ASSIGNED,2
0008f0 940e 2063 	CALL __EEPROMRDB
0008f2 30e1      	CPI  R30,LOW(0x1)
0008f3 f469      	BRNE _0x126
                 ; 0000 05B8                             char lcd_buffer[10];
                 ; 0000 05B9                             sprintf(lcd_buffer,"%+2.1f\xdfC",TEMPERATURES[2]);
0008f4 940e 1b2f 	CALL SUBOPT_0x4E
                 ;	row -> Y+11
                 ;	lcd_row -> Y+10
                 ;	lcd_buffer -> Y+0
                +
0008f6 91e0 0511+LDS R30 , _TEMPERATURES + ( 8 )
0008f8 91f0 0512+LDS R31 , _TEMPERATURES + ( 8 ) + 1
0008fa 9160 0513+LDS R22 , _TEMPERATURES + ( 8 ) + 2
0008fc 9170 0514+LDS R23 , _TEMPERATURES + ( 8 ) + 3
                 	__GETD1MN _TEMPERATURES,8
0008fe 940e 1b38 	CALL SUBOPT_0x4F
                 ; 0000 05BA                             lcd_puts(lcd_buffer);
                 ; 0000 05BB                             }
                 ; 0000 05BC                             else if(DS18B20_IS_ASSIGNED[2]==2){
000900 c00f      	RJMP _0x127
                 _0x126:
                +
000901 e0a2     +LDI R26 , LOW ( _DS18B20_IS_ASSIGNED + ( 2 ) )
000902 e0b0     +LDI R27 , HIGH ( _DS18B20_IS_ASSIGNED + ( 2 ) )
                 	__POINTW2MN _DS18B20_IS_ASSIGNED,2
000903 940e 2063 	CALL __EEPROMRDB
000905 30e2      	CPI  R30,LOW(0x2)
000906 f419      	BRNE _0x128
                 ; 0000 05BD                             lcd_putsf("OFF");
                +
000907 e9ea     +LDI R30 , LOW ( 2 * _0x0 + ( 240 ) )
000908 e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 240 ) )
                 	__POINTW1FN _0x0,240
000909 c002      	RJMP _0x2EE
                 ; 0000 05BE                             }
                 ; 0000 05BF                             else{
                 _0x128:
                 ; 0000 05C0                             lcd_putsf("----");
                +
00090a e9ee     +LDI R30 , LOW ( 2 * _0x0 + ( 244 ) )
00090b e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 244 ) )
                 	__POINTW1FN _0x0,244
                 _0x2EE:
00090c 93fa      	ST   -Y,R31
00090d 93ea      	ST   -Y,R30
00090e 940e 17df 	CALL _lcd_putsf
                 ; 0000 05C1                             }
                 _0x127:
                 ; 0000 05C2                         }
                 ; 0000 05C3                         else if(row==5){
000910 c05d      	RJMP _0x12A
                 _0x125:
000911 81a9      	LDD  R26,Y+1
000912 30a5      	CPI  R26,LOW(0x5)
000913 f539      	BRNE _0x12B
                 ; 0000 05C4                         lcd_putsf("5.SOLIAR.2: ");
                +
000914 eceb     +LDI R30 , LOW ( 2 * _0x0 + ( 289 ) )
000915 e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 289 ) )
                 	__POINTW1FN _0x0,289
000916 940e 1996 	CALL SUBOPT_0x12
                 ; 0000 05C5                             if(DS18B20_IS_ASSIGNED[3]==1){
                +
000918 e0a3     +LDI R26 , LOW ( _DS18B20_IS_ASSIGNED + ( 3 ) )
000919 e0b0     +LDI R27 , HIGH ( _DS18B20_IS_ASSIGNED + ( 3 ) )
                 	__POINTW2MN _DS18B20_IS_ASSIGNED,3
00091a 940e 2063 	CALL __EEPROMRDB
00091c 30e1      	CPI  R30,LOW(0x1)
00091d f469      	BRNE _0x12C
                 ; 0000 05C6                             char lcd_buffer[10];
                 ; 0000 05C7                             sprintf(lcd_buffer,"%+2.1f\xdfC",TEMPERATURES[3]);
00091e 940e 1b2f 	CALL SUBOPT_0x4E
                 ;	row -> Y+11
                 ;	lcd_row -> Y+10
                 ;	lcd_buffer -> Y+0
                +
000920 91e0 0515+LDS R30 , _TEMPERATURES + ( 12 )
000922 91f0 0516+LDS R31 , _TEMPERATURES + ( 12 ) + 1
000924 9160 0517+LDS R22 , _TEMPERATURES + ( 12 ) + 2
000926 9170 0518+LDS R23 , _TEMPERATURES + ( 12 ) + 3
                 	__GETD1MN _TEMPERATURES,12
000928 940e 1b38 	CALL SUBOPT_0x4F
                 ; 0000 05C8                             lcd_puts(lcd_buffer);
                 ; 0000 05C9                             }
                 ; 0000 05CA                             else if(DS18B20_IS_ASSIGNED[3]==2){
00092a c00f      	RJMP _0x12D
                 _0x12C:
                +
00092b e0a3     +LDI R26 , LOW ( _DS18B20_IS_ASSIGNED + ( 3 ) )
00092c e0b0     +LDI R27 , HIGH ( _DS18B20_IS_ASSIGNED + ( 3 ) )
                 	__POINTW2MN _DS18B20_IS_ASSIGNED,3
00092d 940e 2063 	CALL __EEPROMRDB
00092f 30e2      	CPI  R30,LOW(0x2)
000930 f419      	BRNE _0x12E
                 ; 0000 05CB                             lcd_putsf("OFF");
                +
000931 e9ea     +LDI R30 , LOW ( 2 * _0x0 + ( 240 ) )
000932 e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 240 ) )
                 	__POINTW1FN _0x0,240
000933 c002      	RJMP _0x2EF
                 ; 0000 05CC                             }
                 ; 0000 05CD                             else{
                 _0x12E:
                 ; 0000 05CE                             lcd_putsf("----");
                +
000934 e9ee     +LDI R30 , LOW ( 2 * _0x0 + ( 244 ) )
000935 e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 244 ) )
                 	__POINTW1FN _0x0,244
                 _0x2EF:
000936 93fa      	ST   -Y,R31
000937 93ea      	ST   -Y,R30
000938 940e 17df 	CALL _lcd_putsf
                 ; 0000 05CF                             }
                 _0x12D:
                 ; 0000 05D0                         }
                 ; 0000 05D1                         else if(row==6){
00093a c033      	RJMP _0x130
                 _0x12B:
00093b 81a9      	LDD  R26,Y+1
00093c 30a6      	CPI  R26,LOW(0x6)
00093d f539      	BRNE _0x131
                 ; 0000 05D2                         lcd_putsf("6.SOLIAR.3: ");
                +
00093e ede8     +LDI R30 , LOW ( 2 * _0x0 + ( 302 ) )
00093f e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 302 ) )
                 	__POINTW1FN _0x0,302
000940 940e 1996 	CALL SUBOPT_0x12
                 ; 0000 05D3                             if(DS18B20_IS_ASSIGNED[4]==1){
                +
000942 e0a4     +LDI R26 , LOW ( _DS18B20_IS_ASSIGNED + ( 4 ) )
000943 e0b0     +LDI R27 , HIGH ( _DS18B20_IS_ASSIGNED + ( 4 ) )
                 	__POINTW2MN _DS18B20_IS_ASSIGNED,4
000944 940e 2063 	CALL __EEPROMRDB
000946 30e1      	CPI  R30,LOW(0x1)
000947 f469      	BRNE _0x132
                 ; 0000 05D4                             char lcd_buffer[10];
                 ; 0000 05D5                             sprintf(lcd_buffer,"%+2.1f\xdfC",TEMPERATURES[4]);
000948 940e 1b2f 	CALL SUBOPT_0x4E
                 ;	row -> Y+11
                 ;	lcd_row -> Y+10
                 ;	lcd_buffer -> Y+0
                +
00094a 91e0 0519+LDS R30 , _TEMPERATURES + ( 16 )
00094c 91f0 051a+LDS R31 , _TEMPERATURES + ( 16 ) + 1
00094e 9160 051b+LDS R22 , _TEMPERATURES + ( 16 ) + 2
000950 9170 051c+LDS R23 , _TEMPERATURES + ( 16 ) + 3
                 	__GETD1MN _TEMPERATURES,16
000952 940e 1b38 	CALL SUBOPT_0x4F
                 ; 0000 05D6                             lcd_puts(lcd_buffer);
                 ; 0000 05D7                             }
                 ; 0000 05D8                             else if(DS18B20_IS_ASSIGNED[4]==2){
000954 c00f      	RJMP _0x133
                 _0x132:
                +
000955 e0a4     +LDI R26 , LOW ( _DS18B20_IS_ASSIGNED + ( 4 ) )
000956 e0b0     +LDI R27 , HIGH ( _DS18B20_IS_ASSIGNED + ( 4 ) )
                 	__POINTW2MN _DS18B20_IS_ASSIGNED,4
000957 940e 2063 	CALL __EEPROMRDB
000959 30e2      	CPI  R30,LOW(0x2)
00095a f419      	BRNE _0x134
                 ; 0000 05D9                             lcd_putsf("OFF");
                +
00095b e9ea     +LDI R30 , LOW ( 2 * _0x0 + ( 240 ) )
00095c e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 240 ) )
                 	__POINTW1FN _0x0,240
00095d c002      	RJMP _0x2F0
                 ; 0000 05DA                             }
                 ; 0000 05DB                             else{
                 _0x134:
                 ; 0000 05DC                             lcd_putsf("----");
                +
00095e e9ee     +LDI R30 , LOW ( 2 * _0x0 + ( 244 ) )
00095f e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 244 ) )
                 	__POINTW1FN _0x0,244
                 _0x2F0:
000960 93fa      	ST   -Y,R31
000961 93ea      	ST   -Y,R30
000962 940e 17df 	CALL _lcd_putsf
                 ; 0000 05DD                             }
                 _0x133:
                 ; 0000 05DE                         }
                 ; 0000 05DF                         else if(row==7){
000964 c009      	RJMP _0x136
                 _0x131:
000965 81a9      	LDD  R26,Y+1
000966 30a7      	CPI  R26,LOW(0x7)
000967 f431      	BRNE _0x137
                 ; 0000 05E0                         lcd_putsf("7.NUSTATYMAI");
                +
000968 eee5     +LDI R30 , LOW ( 2 * _0x0 + ( 315 ) )
000969 e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 315 ) )
                 	__POINTW1FN _0x0,315
                 _0x2EB:
00096a 93fa      	ST   -Y,R31
00096b 93ea      	ST   -Y,R30
00096c 940e 17df 	CALL _lcd_putsf
                 ; 0000 05E1                         }
                 ; 0000 05E2                     lcd_row++;
                 _0x137:
                 _0x136:
                 _0x130:
                 _0x12A:
                 _0x122:
                 _0x11C:
00096e 81e8      	LD   R30,Y
00096f 5fef      	SUBI R30,-LOW(1)
000970 83e8      	ST   Y,R30
                 ; 0000 05E3                     }
000971 81e9      	LDD  R30,Y+1
000972 5fef      	SUBI R30,-LOW(1)
000973 83e9      	STD  Y+1,R30
000974 cf11      	RJMP _0x113
                 _0x114:
                 ; 0000 05E4 
                 ; 0000 05E5                 lcd_gotoxy(19,SelectedRow-Address[5]);
000975 940e 1b45 	CALL SUBOPT_0x50
000977 940e 1b4b 	CALL SUBOPT_0x51
                 ; 0000 05E6                 lcd_putchar('<');
                 ; 0000 05E7                 }
                 ; 0000 05E8             }
                 _0x111:
                 ; 0000 05E9 
                 ; 0000 05EA             // Kambario temp
                 ; 0000 05EB             else if(Address[0]==1){
000979 940c 12cb 	JMP  _0x138
                 _0x10B:
00097b 91a0 052e 	LDS  R26,_Address_G000
00097d 30a1      	CPI  R26,LOW(0x1)
00097e f011      	BREQ PC+3
00097f 940c 0b33 	JMP _0x139
                 ; 0000 05EC             unsigned char USING_TEMPERATURE_SENSOR=0;
                 ; 0000 05ED                 if(BUTTON[BUTTON_DOWN]==1){
000981 9721      	SBIW R28,1
000982 e0e0      	LDI  R30,LOW(0)
000983 940e 1b56 	CALL SUBOPT_0x52
                 ;	USING_TEMPERATURE_SENSOR -> Y+0
000985 f419      	BRNE _0x13A
                 ; 0000 05EE                 SelectAnotherRow(0);
000986 940e 1b0d 	CALL SUBOPT_0x48
                 ; 0000 05EF                 }
                 ; 0000 05F0                 else if(BUTTON[BUTTON_UP]==1){
000988 c131      	RJMP _0x13B
                 _0x13A:
000989 91a0 058d 	LDS  R26,_BUTTON_S0000006001
00098b 30a1      	CPI  R26,LOW(0x1)
00098c f419      	BRNE _0x13C
                 ; 0000 05F1                 SelectAnotherRow(1);
00098d 940e 1b11 	CALL SUBOPT_0x49
                 ; 0000 05F2                 }
                 ; 0000 05F3                 else if(BUTTON[BUTTON_ENTER]==1){
00098f c12a      	RJMP _0x13D
                 _0x13C:
                +
000990 91a0 058f+LDS R26 , _BUTTON_S0000006001 + ( 2 )
                 	__GETB2MN _BUTTON_S0000006001,2
000992 30a1      	CPI  R26,LOW(0x1)
000993 f441      	BRNE _0x13E
                 ; 0000 05F4                     if(SelectedRow==0){
000994 91e0 0534 	LDS  R30,_SelectedRow_G000
000996 30e0      	CPI  R30,0
000997 f419      	BRNE _0x13F
                 ; 0000 05F5                     Address[0] = 0;
000998 e0e0      	LDI  R30,LOW(0)
000999 940e 1b15 	CALL SUBOPT_0x4A
                 ; 0000 05F6                     SelectedRow = 0;
                 ; 0000 05F7                     Address[5] = 0;
                 ; 0000 05F8                     }
                 ; 0000 05F9                 }
                 _0x13F:
                 ; 0000 05FA                 else if(BUTTON[BUTTON_LEFT]==1){
00099b c11e      	RJMP _0x140
                 _0x13E:
                +
00099c 91a0 058e+LDS R26 , _BUTTON_S0000006001 + ( 1 )
                 	__GETB2MN _BUTTON_S0000006001,1
00099e 30a1      	CPI  R26,LOW(0x1)
00099f f011      	BREQ PC+3
0009a0 940c 0a2a 	JMP _0x141
                 ; 0000 05FB                     if(SelectedRow==1){
0009a2 91a0 0534 	LDS  R26,_SelectedRow_G000
0009a4 30a1      	CPI  R26,LOW(0x1)
0009a5 f4c1      	BRNE _0x142
                 ; 0000 05FC                         if(ROOM_TEMPERATURE>10.0){
0009a6 940e 19c2 	CALL SUBOPT_0x19
0009a8 940e 19c9 	CALL SUBOPT_0x1A
0009aa f009      	BREQ PC+2
0009ab f410      	BRCC PC+3
0009ac 940c 09b7 	JMP  _0x143
                 ; 0000 05FD                         ROOM_TEMPERATURE = ROOM_TEMPERATURE - 0.1;
0009ae 940e 19c2 	CALL SUBOPT_0x19
0009b0 940e 1b5b 	CALL SUBOPT_0x53
0009b2 940e 1b60 	CALL SUBOPT_0x54
0009b4 e5a0      	LDI  R26,LOW(_ROOM_TEMPERATURE)
0009b5 e0b0      	LDI  R27,HIGH(_ROOM_TEMPERATURE)
0009b6 c004      	RJMP _0x2F1
                 ; 0000 05FE                         }
                 ; 0000 05FF                         else{
                 _0x143:
                 ; 0000 0600                         ROOM_TEMPERATURE = 10.0;
0009b7 e5a0      	LDI  R26,LOW(_ROOM_TEMPERATURE)
0009b8 e0b0      	LDI  R27,HIGH(_ROOM_TEMPERATURE)
0009b9 940e 1b65 	CALL SUBOPT_0x55
                 _0x2F1:
0009bb 940e 206f 	CALL __EEPROMWRD
                 ; 0000 0601                         }
                 ; 0000 0602                     }
                 ; 0000 0603                     else if((SelectedRow==2)||(SelectedRow==3)){
0009bd c06b      	RJMP _0x145
                 _0x142:
0009be 91a0 0534 	LDS  R26,_SelectedRow_G000
0009c0 30a2      	CPI  R26,LOW(0x2)
0009c1 f019      	BREQ _0x147
0009c2 30a3      	CPI  R26,LOW(0x3)
0009c3 f009      	BREQ _0x147
0009c4 c064      	RJMP _0x146
                 _0x147:
                 ; 0000 0604                         if((DS18B20_IS_ASSIGNED[USING_TEMPERATURE_SENSOR]==1)||(DS18B20_IS_ASSIGNED[USING_TEMPERATURE_SENSOR]==2)){
0009c5 940e 19b8 	CALL SUBOPT_0x17
0009c7 940e 2063 	CALL __EEPROMRDB
0009c9 30e1      	CPI  R30,LOW(0x1)
0009ca f019      	BREQ _0x14A
0009cb 30e2      	CPI  R30,LOW(0x2)
0009cc f009      	BREQ _0x14A
0009cd c05b      	RJMP _0x149
                 _0x14A:
                 ; 0000 0605                         signed char i, Found=0;
                 ; 0000 0606                             for(i=ds18b20_sensor_assignation[USING_TEMPERATURE_SENSOR]-1;i>=0;i--){
0009ce 940e 1b6a 	CALL SUBOPT_0x56
                 ;	USING_TEMPERATURE_SENSOR -> Y+2
                 ;	i -> Y+1
                 ;	Found -> Y+0
0009d0 81e0      	LD   R30,Z
0009d1 940e 1923 	CALL SUBOPT_0x3
0009d3 83e9      	STD  Y+1,R30
                 _0x14D:
0009d4 81a9      	LDD  R26,Y+1
0009d5 30a0      	CPI  R26,0
0009d6 f414      	BRGE PC+3
0009d7 940c 0a1c 	JMP _0x14E
                 ; 0000 0607                             unsigned char used=0, a;
                 ; 0000 0608                                 for(a=0;a<MAX_DS18B20_DEVICES;a++){
0009d9 940e 1b6f 	CALL SUBOPT_0x57
                 ;	USING_TEMPERATURE_SENSOR -> Y+4
                 ;	i -> Y+3
                 ;	Found -> Y+2
                 ;	used -> Y+1
                 ;	a -> Y+0
                 _0x150:
0009db 81a8      	LD   R26,Y
0009dc 30a8      	CPI  R26,LOW(0x8)
0009dd f4a8      	BRSH _0x151
                 ; 0000 0609                                     if(DS18B20_IS_ASSIGNED[a]==1){
0009de 940e 19b8 	CALL SUBOPT_0x17
0009e0 940e 2063 	CALL __EEPROMRDB
0009e2 30e1      	CPI  R30,LOW(0x1)
0009e3 f459      	BRNE _0x152
                 ; 0000 060A                                         if(ds18b20_sensor_assignation[a]==i){
0009e4 81e8      	LD   R30,Y
0009e5 940e 1a0a 	CALL SUBOPT_0x25
0009e7 940e 1b74 	CALL SUBOPT_0x58
0009e9 17ea      	CP   R30,R26
0009ea 07fb      	CPC  R31,R27
0009eb f419      	BRNE _0x153
                 ; 0000 060B                                         used = 1;
0009ec e0e1      	LDI  R30,LOW(1)
0009ed 83e9      	STD  Y+1,R30
                 ; 0000 060C                                         break;
0009ee c004      	RJMP _0x151
                 ; 0000 060D                                         }
                 ; 0000 060E                                     }
                 _0x153:
                 ; 0000 060F                                 }
                 _0x152:
0009ef 81e8      	LD   R30,Y
0009f0 5fef      	SUBI R30,-LOW(1)
0009f1 83e8      	ST   Y,R30
0009f2 cfe8      	RJMP _0x150
                 _0x151:
                 ; 0000 0610 
                 ; 0000 0611                                 if(used==0){
0009f3 81e9      	LDD  R30,Y+1
0009f4 30e0      	CPI  R30,0
0009f5 f509      	BRNE _0x154
                 ; 0000 0612                                 unsigned char b;
                 ; 0000 0613                                 ds18b20_sensor_assignation[USING_TEMPERATURE_SENSOR] = i;
0009f6 940e 1b77 	CALL SUBOPT_0x59
                 ;	USING_TEMPERATURE_SENSOR -> Y+5
                 ;	i -> Y+4
                 ;	Found -> Y+3
                 ;	used -> Y+2
                 ;	a -> Y+1
                 ;	b -> Y+0
0009f8 940e 1b7a 	CALL SUBOPT_0x5A
                 ; 0000 0614                                     for(b=0;b<9;b++){
                 _0x156:
0009fa 81a8      	LD   R26,Y
0009fb 30a9      	CPI  R26,LOW(0x9)
0009fc f488      	BRSH _0x157
                 ; 0000 0615                                     DS18B20_ADDRESSES[USING_TEMPERATURE_SENSOR][b] = rom_code[i][b];
0009fd 81ed      	LDD  R30,Y+5
0009fe 940e 1a04 	CALL SUBOPT_0x24
000a00 01df      	MOVW R26,R30
000a01 940e 1a39 	CALL SUBOPT_0x2C
000a03 940e 1b7f 	CALL SUBOPT_0x5B
000a05 01df      	MOVW R26,R30
000a06 940e 1a39 	CALL SUBOPT_0x2C
000a08 940e 1b84 	CALL SUBOPT_0x5C
                 ; 0000 0616                                     }
000a0a 81e8      	LD   R30,Y
000a0b 5fef      	SUBI R30,-LOW(1)
000a0c 83e8      	ST   Y,R30
000a0d cfec      	RJMP _0x156
                 _0x157:
                 ; 0000 0617                                 TEMPERATURES[USING_TEMPERATURE_SENSOR] = 0.0;
000a0e 81ed      	LDD  R30,Y+5
000a0f 940e 1a43 	CALL SUBOPT_0x2F
000a11 940e 1b8b 	CALL SUBOPT_0x5D
                 ; 0000 0618                                 Found = 1;
000a13 e0e1      	LDI  R30,LOW(1)
000a14 83eb      	STD  Y+3,R30
                 ; 0000 0619                                 break;
000a15 9623      	ADIW R28,3
000a16 c005      	RJMP _0x14E
                 ; 0000 061A                                 }
                 ; 0000 061B                             }
                 _0x154:
000a17 9622      	ADIW R28,2
000a18 81e9      	LDD  R30,Y+1
000a19 50e1      	SUBI R30,LOW(1)
000a1a 83e9      	STD  Y+1,R30
000a1b cfb8      	RJMP _0x14D
                 _0x14E:
                 ; 0000 061C 
                 ; 0000 061D                             if(Found==0){
000a1c 81e8      	LD   R30,Y
000a1d 30e0      	CPI  R30,0
000a1e f449      	BRNE _0x158
                 ; 0000 061E                             DS18B20_IS_ASSIGNED[USING_TEMPERATURE_SENSOR] = 0;
000a1f 81aa      	LDD  R26,Y+2
000a20 940e 1a3c 	CALL SUBOPT_0x2D
000a22 940e 1b94 	CALL SUBOPT_0x5E
                 ; 0000 061F                             ds18b20_sensor_assignation[USING_TEMPERATURE_SENSOR] = 255;
000a24 940e 1b99 	CALL SUBOPT_0x5F
                 ; 0000 0620                             TEMPERATURES[USING_TEMPERATURE_SENSOR] = 0.0;
000a26 940e 1b8b 	CALL SUBOPT_0x5D
                 ; 0000 0621                             }
                 ; 0000 0622                         }
                 _0x158:
000a28 9622      	ADIW R28,2
                 ; 0000 0623                     }
                 _0x149:
                 ; 0000 0624                 }
                 _0x146:
                 _0x145:
                 ; 0000 0625                 else if(BUTTON[BUTTON_RIGHT]==1){
000a29 c090      	RJMP _0x159
                 _0x141:
                +
000a2a 91a0 0590+LDS R26 , _BUTTON_S0000006001 + ( 3 )
                 	__GETB2MN _BUTTON_S0000006001,3
000a2c 30a1      	CPI  R26,LOW(0x1)
000a2d f011      	BREQ PC+3
000a2e 940c 0aba 	JMP _0x15A
                 ; 0000 0626                     if(SelectedRow==1){
000a30 91a0 0534 	LDS  R26,_SelectedRow_G000
000a32 30a1      	CPI  R26,LOW(0x1)
000a33 f4c9      	BRNE _0x15B
                 ; 0000 0627                         if(ROOM_TEMPERATURE<30.0){
000a34 940e 19c2 	CALL SUBOPT_0x19
000a36 940e 19d0 	CALL SUBOPT_0x1B
000a38 f458      	BRSH _0x15C
                 ; 0000 0628                         ROOM_TEMPERATURE = ROOM_TEMPERATURE + 0.1;
000a39 940e 1a62 	CALL SUBOPT_0x34
                +
000a3b ecad     +LDI R26 , LOW ( 0x3DCCCCCD )
000a3c ecbc     +LDI R27 , HIGH ( 0x3DCCCCCD )
000a3d ec8c     +LDI R24 , BYTE3 ( 0x3DCCCCCD )
000a3e e39d     +LDI R25 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD2N 0x3DCCCCCD
000a3f 940e 1e5f 	CALL __ADDF12
000a41 e5a0      	LDI  R26,LOW(_ROOM_TEMPERATURE)
000a42 e0b0      	LDI  R27,HIGH(_ROOM_TEMPERATURE)
000a43 c006      	RJMP _0x2F2
                 ; 0000 0629                         }
                 ; 0000 062A                         else{
                 _0x15C:
                 ; 0000 062B                         ROOM_TEMPERATURE = 30.0;
000a44 e5a0      	LDI  R26,LOW(_ROOM_TEMPERATURE)
000a45 e0b0      	LDI  R27,HIGH(_ROOM_TEMPERATURE)
                +
000a46 e0e0     +LDI R30 , LOW ( 0x41F00000 )
000a47 e0f0     +LDI R31 , HIGH ( 0x41F00000 )
000a48 ef60     +LDI R22 , BYTE3 ( 0x41F00000 )
000a49 e471     +LDI R23 , BYTE4 ( 0x41F00000 )
                 	__GETD1N 0x41F00000
                 _0x2F2:
000a4a 940e 206f 	CALL __EEPROMWRD
                 ; 0000 062C                         }
                 ; 0000 062D                     }
                 ; 0000 062E                     else if((SelectedRow==2)||(SelectedRow==3)){
000a4c c06d      	RJMP _0x15E
                 _0x15B:
000a4d 91a0 0534 	LDS  R26,_SelectedRow_G000
000a4f 30a2      	CPI  R26,LOW(0x2)
000a50 f019      	BREQ _0x160
000a51 30a3      	CPI  R26,LOW(0x3)
000a52 f009      	BREQ _0x160
000a53 c066      	RJMP _0x15F
                 _0x160:
                 ; 0000 062F                     unsigned char i, Found=0;
                 ; 0000 0630 
                 ; 0000 0631                         if(DS18B20_IS_ASSIGNED[USING_TEMPERATURE_SENSOR]==1){
000a54 940e 1b9d 	CALL SUBOPT_0x60
                 ;	USING_TEMPERATURE_SENSOR -> Y+2
                 ;	i -> Y+1
                 ;	Found -> Y+0
000a56 940e 2063 	CALL __EEPROMRDB
000a58 30e1      	CPI  R30,LOW(0x1)
000a59 f431      	BRNE _0x162
                 ; 0000 0632                         i = ds18b20_sensor_assignation[USING_TEMPERATURE_SENSOR] + 1;
000a5a 81ea      	LDD  R30,Y+2
000a5b 940e 1a0a 	CALL SUBOPT_0x25
000a5d 81e0      	LD   R30,Z
000a5e 5fef      	SUBI R30,-LOW(1)
000a5f c001      	RJMP _0x2F3
                 ; 0000 0633                         }
                 ; 0000 0634                         else{
                 _0x162:
                 ; 0000 0635                         i = 0;
000a60 e0e0      	LDI  R30,LOW(0)
                 _0x2F3:
000a61 83e9      	STD  Y+1,R30
                 ; 0000 0636                         }
                 ; 0000 0637 
                 ; 0000 0638                         for(i=i;i<ds18b20_devices;i++){
000a62 83e9      	STD  Y+1,R30
                 _0x165:
000a63 940e 19ef 	CALL SUBOPT_0x20
000a65 f010      	BRLO PC+3
000a66 940c 0aac 	JMP _0x166
                 ; 0000 0639                         unsigned char used=0, a;
                 ; 0000 063A                             for(a=0;a<MAX_DS18B20_DEVICES;a++){
000a68 940e 1b6f 	CALL SUBOPT_0x57
                 ;	USING_TEMPERATURE_SENSOR -> Y+4
                 ;	i -> Y+3
                 ;	Found -> Y+2
                 ;	used -> Y+1
                 ;	a -> Y+0
                 _0x168:
000a6a 81a8      	LD   R26,Y
000a6b 30a8      	CPI  R26,LOW(0x8)
000a6c f4a0      	BRSH _0x169
                 ; 0000 063B                                 if(DS18B20_IS_ASSIGNED[a]==1){
000a6d 940e 19b8 	CALL SUBOPT_0x17
000a6f 940e 2063 	CALL __EEPROMRDB
000a71 30e1      	CPI  R30,LOW(0x1)
000a72 f451      	BRNE _0x16A
                 ; 0000 063C                                     if(ds18b20_sensor_assignation[a]==i){
000a73 81e8      	LD   R30,Y
000a74 940e 1a0a 	CALL SUBOPT_0x25
000a76 81a0      	LD   R26,Z
000a77 81eb      	LDD  R30,Y+3
000a78 17ea      	CP   R30,R26
000a79 f419      	BRNE _0x16B
                 ; 0000 063D                                     used = 1;
000a7a e0e1      	LDI  R30,LOW(1)
000a7b 83e9      	STD  Y+1,R30
                 ; 0000 063E                                     break;
000a7c c004      	RJMP _0x169
                 ; 0000 063F                                     }
                 ; 0000 0640                                 }
                 _0x16B:
                 ; 0000 0641                             }
                 _0x16A:
000a7d 81e8      	LD   R30,Y
000a7e 5fef      	SUBI R30,-LOW(1)
000a7f 83e8      	ST   Y,R30
000a80 cfe9      	RJMP _0x168
                 _0x169:
                 ; 0000 0642 
                 ; 0000 0643                             if(used==0){
000a81 81e9      	LDD  R30,Y+1
000a82 30e0      	CPI  R30,0
000a83 f519      	BRNE _0x16C
                 ; 0000 0644                             unsigned char b;
                 ; 0000 0645                             ds18b20_sensor_assignation[USING_TEMPERATURE_SENSOR] = i;
000a84 940e 1b77 	CALL SUBOPT_0x59
                 ;	USING_TEMPERATURE_SENSOR -> Y+5
                 ;	i -> Y+4
                 ;	Found -> Y+3
                 ;	used -> Y+2
                 ;	a -> Y+1
                 ;	b -> Y+0
000a86 940e 1b7a 	CALL SUBOPT_0x5A
                 ; 0000 0646                                 for(b=0;b<9;b++){
                 _0x16E:
000a88 81a8      	LD   R26,Y
000a89 30a9      	CPI  R26,LOW(0x9)
000a8a f488      	BRSH _0x16F
                 ; 0000 0647                                 DS18B20_ADDRESSES[USING_TEMPERATURE_SENSOR][b] = rom_code[i][b];
000a8b 81ed      	LDD  R30,Y+5
000a8c 940e 1a04 	CALL SUBOPT_0x24
000a8e 01df      	MOVW R26,R30
000a8f 940e 1a39 	CALL SUBOPT_0x2C
000a91 940e 1b7f 	CALL SUBOPT_0x5B
000a93 01df      	MOVW R26,R30
000a94 940e 1a39 	CALL SUBOPT_0x2C
000a96 940e 1b84 	CALL SUBOPT_0x5C
                 ; 0000 0648                                 }
000a98 81e8      	LD   R30,Y
000a99 5fef      	SUBI R30,-LOW(1)
000a9a 83e8      	ST   Y,R30
000a9b cfec      	RJMP _0x16E
                 _0x16F:
                 ; 0000 0649                             DS18B20_IS_ASSIGNED[USING_TEMPERATURE_SENSOR] = 1;
000a9c 81ad      	LDD  R26,Y+5
000a9d 940e 1a3c 	CALL SUBOPT_0x2D
000a9f 940e 1a13 	CALL SUBOPT_0x27
                 ; 0000 064A                             Found = 1;
000aa1 940e 1ba2 	CALL SUBOPT_0x61
                 ; 0000 064B                             TEMPERATURES[USING_TEMPERATURE_SENSOR] = 0.0;
000aa3 940e 1b8b 	CALL SUBOPT_0x5D
                 ; 0000 064C                             break;
000aa5 9623      	ADIW R28,3
000aa6 c005      	RJMP _0x166
                 ; 0000 064D                             }
                 ; 0000 064E                         }
                 _0x16C:
000aa7 9622      	ADIW R28,2
000aa8 81e9      	LDD  R30,Y+1
000aa9 5fef      	SUBI R30,-LOW(1)
000aaa 83e9      	STD  Y+1,R30
000aab cfb7      	RJMP _0x165
                 _0x166:
                 ; 0000 064F 
                 ; 0000 0650                         if(Found==0){
000aac 81e8      	LD   R30,Y
000aad 30e0      	CPI  R30,0
000aae f451      	BRNE _0x170
                 ; 0000 0651                         lcd_clear();
000aaf 940e 1ba5 	CALL SUBOPT_0x62
                 ; 0000 0652                         lcd_putsf(" AUKSTESNIO NUMERIO ");
                 ; 0000 0653                         lcd_putsf(" LAISVO TERMOMETRO  ");
000ab1 940e 1baa 	CALL SUBOPT_0x63
                 ; 0000 0654                         lcd_putsf("        NERA        ");
000ab3 940e 1bad 	CALL SUBOPT_0x64
                 ; 0000 0655                         delay_ms(1000);
000ab5 940e 1990 	CALL SUBOPT_0x11
                 ; 0000 0656                         lcd_clear();
000ab7 940e 17a3 	CALL _lcd_clear
                 ; 0000 0657                         }
                 ; 0000 0658                     }
                 _0x170:
000ab9 9622      	ADIW R28,2
                 ; 0000 0659                 }
                 _0x15F:
                 _0x15E:
                 ; 0000 065A 
                 ; 0000 065B                 if(RefreshLcd>=1){
                 _0x15A:
                 _0x159:
                 _0x140:
                 _0x13D:
                 _0x13B:
000aba 91a0 0535 	LDS  R26,_RefreshLcd_G000
000abc 30a1      	CPI  R26,LOW(0x1)
000abd f410      	BRSH PC+3
000abe 940c 0b31 	JMP _0x171
                 ; 0000 065C                 unsigned char row, lcd_row;
                 ; 0000 065D                 lcd_row = 0;
000ac0 940e 1bb0 	CALL SUBOPT_0x65
                 ;	USING_TEMPERATURE_SENSOR -> Y+2
                 ;	row -> Y+1
                 ;	lcd_row -> Y+0
                 ; 0000 065E                 RowsOnWindow = 4;
                 ; 0000 065F                     for(row=Address[5];row<4+Address[5];row++){
                 _0x173:
000ac2 940e 192a 	CALL SUBOPT_0x5
000ac4 940e 1b23 	CALL SUBOPT_0x4C
000ac6 f014      	BRLT PC+3
000ac7 940c 0b2d 	JMP _0x174
                 ; 0000 0660                     lcd_gotoxy(0,lcd_row);
000ac9 940e 1b26 	CALL SUBOPT_0x4D
                 ; 0000 0661                         if(row==0){
000acb f429      	BRNE _0x175
                 ; 0000 0662                         lcd_putsf(" -=KAMBARIO TERM.=- ");
                +
000acc e3e1     +LDI R30 , LOW ( 2 * _0x0 + ( 391 ) )
000acd e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 391 ) )
                 	__POINTW1FN _0x0,391
000ace 940e 1996 	CALL SUBOPT_0x12
                 ; 0000 0663                         }
                 ; 0000 0664                         else if(row==1){
000ad0 c055      	RJMP _0x176
                 _0x175:
000ad1 81a9      	LDD  R26,Y+1
000ad2 30a1      	CPI  R26,LOW(0x1)
000ad3 f489      	BRNE _0x177
                 ; 0000 0665                         char lcd_buffer[10];
                 ; 0000 0666                         lcd_putsf("1.UZSTATYTA:");
000ad4 972a      	SBIW R28,10
                 ;	USING_TEMPERATURE_SENSOR -> Y+12
                 ;	row -> Y+11
                 ;	lcd_row -> Y+10
                 ;	lcd_buffer -> Y+0
                +
000ad5 e4e6     +LDI R30 , LOW ( 2 * _0x0 + ( 412 ) )
000ad6 e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 412 ) )
                 	__POINTW1FN _0x0,412
000ad7 940e 1996 	CALL SUBOPT_0x12
                 ; 0000 0667                         sprintf(lcd_buffer,"%+2.1f\xdfC",ROOM_TEMPERATURE);
000ad9 01fe      	MOVW R30,R28
000ada 93fa      	ST   -Y,R31
000adb 93ea      	ST   -Y,R30
                +
000adc e9e1     +LDI R30 , LOW ( 2 * _0x0 + ( 231 ) )
000add e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 231 ) )
                 	__POINTW1FN _0x0,231
000ade 93fa      	ST   -Y,R31
000adf 93ea      	ST   -Y,R30
000ae0 940e 1a62 	CALL SUBOPT_0x34
000ae2 940e 1b38 	CALL SUBOPT_0x4F
                 ; 0000 0668                         lcd_puts(lcd_buffer);
                 ; 0000 0669                         }
                 ; 0000 066A                         else if(row==2){
000ae4 c041      	RJMP _0x178
                 _0x177:
000ae5 81a9      	LDD  R26,Y+1
000ae6 30a2      	CPI  R26,LOW(0x2)
000ae7 f521      	BRNE _0x179
                 ; 0000 066B                         lcd_putsf("2.TEMPERAT.:");
                +
000ae8 e5e3     +LDI R30 , LOW ( 2 * _0x0 + ( 425 ) )
000ae9 e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 425 ) )
                 	__POINTW1FN _0x0,425
000aea 940e 1996 	CALL SUBOPT_0x12
                 ; 0000 066C                             if(DS18B20_IS_ASSIGNED[USING_TEMPERATURE_SENSOR]==1){
000aec 81aa      	LDD  R26,Y+2
000aed 940e 1a3c 	CALL SUBOPT_0x2D
000aef 940e 2063 	CALL __EEPROMRDB
000af1 30e1      	CPI  R30,LOW(0x1)
000af2 f441      	BRNE _0x17A
                 ; 0000 066D                             char lcd_buffer[10];
                 ; 0000 066E                             sprintf(lcd_buffer,"%+2.1f\xdfC",TEMPERATURES[USING_TEMPERATURE_SENSOR]);
000af3 940e 1b2f 	CALL SUBOPT_0x4E
                 ;	USING_TEMPERATURE_SENSOR -> Y+12
                 ;	row -> Y+11
                 ;	lcd_row -> Y+10
                 ;	lcd_buffer -> Y+0
000af5 89e8      	LDD  R30,Y+16
000af6 940e 1a43 	CALL SUBOPT_0x2F
000af8 940e 1bb5 	CALL SUBOPT_0x66
                 ; 0000 066F                             lcd_puts(lcd_buffer);
                 ; 0000 0670                             }
                 ; 0000 0671                             else if(DS18B20_IS_ASSIGNED[USING_TEMPERATURE_SENSOR]==2){
000afa c010      	RJMP _0x17B
                 _0x17A:
000afb 81aa      	LDD  R26,Y+2
000afc 940e 1a3c 	CALL SUBOPT_0x2D
000afe 940e 2063 	CALL __EEPROMRDB
000b00 30e2      	CPI  R30,LOW(0x2)
000b01 f419      	BRNE _0x17C
                 ; 0000 0672                             lcd_putsf("    OFF");
                +
000b02 e6e0     +LDI R30 , LOW ( 2 * _0x0 + ( 438 ) )
000b03 e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 438 ) )
                 	__POINTW1FN _0x0,438
000b04 c002      	RJMP _0x2F4
                 ; 0000 0673                             }
                 ; 0000 0674                             else{
                 _0x17C:
                 ; 0000 0675                             lcd_putsf("   ----");
                +
000b05 e6e8     +LDI R30 , LOW ( 2 * _0x0 + ( 446 ) )
000b06 e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 446 ) )
                 	__POINTW1FN _0x0,446
                 _0x2F4:
000b07 93fa      	ST   -Y,R31
000b08 93ea      	ST   -Y,R30
000b09 940e 17df 	CALL _lcd_putsf
                 ; 0000 0676                             }
                 _0x17B:
                 ; 0000 0677                         }
                 ; 0000 0678                         else if(row==3){
000b0b c01a      	RJMP _0x17E
                 _0x179:
000b0c 81a9      	LDD  R26,Y+1
000b0d 30a3      	CPI  R26,LOW(0x3)
000b0e f4b9      	BRNE _0x17F
                 ; 0000 0679                         lcd_putsf("3.TERMOMETRO NR:");
                +
000b0f e7e0     +LDI R30 , LOW ( 2 * _0x0 + ( 454 ) )
000b10 e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 454 ) )
                 	__POINTW1FN _0x0,454
000b11 940e 1996 	CALL SUBOPT_0x12
                 ; 0000 067A                             if(DS18B20_IS_ASSIGNED[USING_TEMPERATURE_SENSOR]==1){
000b13 81aa      	LDD  R26,Y+2
000b14 940e 1a3c 	CALL SUBOPT_0x2D
000b16 940e 2063 	CALL __EEPROMRDB
000b18 30e1      	CPI  R30,LOW(0x1)
000b19 f431      	BRNE _0x180
                 ; 0000 067B                             lcd_putchar(NumToIndex(ds18b20_sensor_assignation[USING_TEMPERATURE_SENSOR])+1);
000b1a 81ea      	LDD  R30,Y+2
000b1b 940e 1a0a 	CALL SUBOPT_0x25
000b1d 940e 1bba 	CALL SUBOPT_0x67
                 ; 0000 067C                             lcd_putchar('/');
                 ; 0000 067D                             lcd_putchar(NumToIndex(ds18b20_devices));
000b1f c002      	RJMP _0x2F5
                 ; 0000 067E                             }
                 ; 0000 067F                             else{
                 _0x180:
                 ; 0000 0680                             lcd_putsf("-/");
000b20 940e 1bc3 	CALL SUBOPT_0x68
                 ; 0000 0681                             lcd_putchar(NumToIndex(ds18b20_devices));
                 _0x2F5:
000b22 91e0 0538 	LDS  R30,_ds18b20_devices_S0000006000
000b24 940e 19e4 	CALL SUBOPT_0x1E
                 ; 0000 0682                             }
                 ; 0000 0683                         }
                 ; 0000 0684                     lcd_row++;
                 _0x17F:
                 _0x17E:
                 _0x178:
                 _0x176:
000b26 81e8      	LD   R30,Y
000b27 5fef      	SUBI R30,-LOW(1)
000b28 83e8      	ST   Y,R30
                 ; 0000 0685                     }
000b29 81e9      	LDD  R30,Y+1
000b2a 5fef      	SUBI R30,-LOW(1)
000b2b 83e9      	STD  Y+1,R30
000b2c cf95      	RJMP _0x173
                 _0x174:
                 ; 0000 0686 
                 ; 0000 0687                 lcd_gotoxy(19,SelectedRow-Address[5]);
000b2d 940e 1b45 	CALL SUBOPT_0x50
000b2f 940e 1b4b 	CALL SUBOPT_0x51
                 ; 0000 0688                 lcd_putchar('<');
                 ; 0000 0689                 }
                 ; 0000 068A             }
                 _0x171:
000b31 9621      	ADIW R28,1
                 ; 0000 068B 
                 ; 0000 068C             // Lauko temp
                 ; 0000 068D             else if(Address[0]==2){
000b32 c798      	RJMP _0x182
                 _0x139:
000b33 91a0 052e 	LDS  R26,_Address_G000
000b35 30a2      	CPI  R26,LOW(0x2)
000b36 f011      	BREQ PC+3
000b37 940c 0c98 	JMP _0x183
                 ; 0000 068E             unsigned char USING_TEMPERATURE_SENSOR=1;
                 ; 0000 068F                 if(BUTTON[BUTTON_DOWN]==1){
000b39 9721      	SBIW R28,1
000b3a e0e1      	LDI  R30,LOW(1)
000b3b 940e 1b56 	CALL SUBOPT_0x52
                 ;	USING_TEMPERATURE_SENSOR -> Y+0
000b3d f419      	BRNE _0x184
                 ; 0000 0690                 SelectAnotherRow(0);
000b3e 940e 1b0d 	CALL SUBOPT_0x48
                 ; 0000 0691                 }
                 ; 0000 0692                 else if(BUTTON[BUTTON_UP]==1){
000b40 c0f6      	RJMP _0x185
                 _0x184:
000b41 91a0 058d 	LDS  R26,_BUTTON_S0000006001
000b43 30a1      	CPI  R26,LOW(0x1)
000b44 f419      	BRNE _0x186
                 ; 0000 0693                 SelectAnotherRow(1);
000b45 940e 1b11 	CALL SUBOPT_0x49
                 ; 0000 0694                 }
                 ; 0000 0695                 else if(BUTTON[BUTTON_ENTER]==1){
000b47 c0ef      	RJMP _0x187
                 _0x186:
                +
000b48 91a0 058f+LDS R26 , _BUTTON_S0000006001 + ( 2 )
                 	__GETB2MN _BUTTON_S0000006001,2
000b4a 30a1      	CPI  R26,LOW(0x1)
000b4b f441      	BRNE _0x188
                 ; 0000 0696                     if(SelectedRow==0){
000b4c 91e0 0534 	LDS  R30,_SelectedRow_G000
000b4e 30e0      	CPI  R30,0
000b4f f419      	BRNE _0x189
                 ; 0000 0697                     Address[0] = 0;
000b50 e0e0      	LDI  R30,LOW(0)
000b51 940e 1b15 	CALL SUBOPT_0x4A
                 ; 0000 0698                     SelectedRow = 0;
                 ; 0000 0699                     Address[5] = 0;
                 ; 0000 069A                     }
                 ; 0000 069B                 }
                 _0x189:
                 ; 0000 069C                 else if(BUTTON[BUTTON_LEFT]==1){
000b53 c0e3      	RJMP _0x18A
                 _0x188:
                +
000b54 91a0 058e+LDS R26 , _BUTTON_S0000006001 + ( 1 )
                 	__GETB2MN _BUTTON_S0000006001,1
000b56 30a1      	CPI  R26,LOW(0x1)
000b57 f011      	BREQ PC+3
000b58 940c 0bc4 	JMP _0x18B
                 ; 0000 069D                     if((SelectedRow==1)||(SelectedRow==2)){
000b5a 91a0 0534 	LDS  R26,_SelectedRow_G000
000b5c 30a1      	CPI  R26,LOW(0x1)
000b5d f019      	BREQ _0x18D
000b5e 30a2      	CPI  R26,LOW(0x2)
000b5f f009      	BREQ _0x18D
000b60 c062      	RJMP _0x18C
                 _0x18D:
                 ; 0000 069E                         if((DS18B20_IS_ASSIGNED[USING_TEMPERATURE_SENSOR]==1)||(DS18B20_IS_ASSIGNED[USING_TEMPERATURE_SENSOR]==2)){
000b61 940e 19b8 	CALL SUBOPT_0x17
000b63 940e 2063 	CALL __EEPROMRDB
000b65 30e1      	CPI  R30,LOW(0x1)
000b66 f019      	BREQ _0x190
000b67 30e2      	CPI  R30,LOW(0x2)
000b68 f009      	BREQ _0x190
000b69 c059      	RJMP _0x18F
                 _0x190:
                 ; 0000 069F                         signed char i, Found=0;
                 ; 0000 06A0                             for(i=ds18b20_sensor_assignation[USING_TEMPERATURE_SENSOR]-1;i>=0;i--){
000b6a 940e 1b6a 	CALL SUBOPT_0x56
                 ;	USING_TEMPERATURE_SENSOR -> Y+2
                 ;	i -> Y+1
                 ;	Found -> Y+0
000b6c 81e0      	LD   R30,Z
000b6d 940e 1923 	CALL SUBOPT_0x3
000b6f 83e9      	STD  Y+1,R30
                 _0x193:
000b70 81a9      	LDD  R26,Y+1
000b71 30a0      	CPI  R26,0
000b72 f414      	BRGE PC+3
000b73 940c 0bb6 	JMP _0x194
                 ; 0000 06A1                             unsigned char used=0, a;
                 ; 0000 06A2                                 for(a=0;a<MAX_DS18B20_DEVICES;a++){
000b75 940e 1b6f 	CALL SUBOPT_0x57
                 ;	USING_TEMPERATURE_SENSOR -> Y+4
                 ;	i -> Y+3
                 ;	Found -> Y+2
                 ;	used -> Y+1
                 ;	a -> Y+0
                 _0x196:
000b77 81a8      	LD   R26,Y
000b78 30a8      	CPI  R26,LOW(0x8)
000b79 f4a8      	BRSH _0x197
                 ; 0000 06A3                                     if(DS18B20_IS_ASSIGNED[a]==1){
000b7a 940e 19b8 	CALL SUBOPT_0x17
000b7c 940e 2063 	CALL __EEPROMRDB
000b7e 30e1      	CPI  R30,LOW(0x1)
000b7f f459      	BRNE _0x198
                 ; 0000 06A4                                         if(ds18b20_sensor_assignation[a]==i){
000b80 81e8      	LD   R30,Y
000b81 940e 1a0a 	CALL SUBOPT_0x25
000b83 940e 1b74 	CALL SUBOPT_0x58
000b85 17ea      	CP   R30,R26
000b86 07fb      	CPC  R31,R27
000b87 f419      	BRNE _0x199
                 ; 0000 06A5                                         used = 1;
000b88 e0e1      	LDI  R30,LOW(1)
000b89 83e9      	STD  Y+1,R30
                 ; 0000 06A6                                         break;
000b8a c004      	RJMP _0x197
                 ; 0000 06A7                                         }
                 ; 0000 06A8                                     }
                 _0x199:
                 ; 0000 06A9                                 }
                 _0x198:
000b8b 81e8      	LD   R30,Y
000b8c 5fef      	SUBI R30,-LOW(1)
000b8d 83e8      	ST   Y,R30
000b8e cfe8      	RJMP _0x196
                 _0x197:
                 ; 0000 06AA 
                 ; 0000 06AB                                 if(used==0){
000b8f 81e9      	LDD  R30,Y+1
000b90 30e0      	CPI  R30,0
000b91 f4f9      	BRNE _0x19A
                 ; 0000 06AC                                 unsigned char b;
                 ; 0000 06AD                                 ds18b20_sensor_assignation[USING_TEMPERATURE_SENSOR] = i;
000b92 940e 1b77 	CALL SUBOPT_0x59
                 ;	USING_TEMPERATURE_SENSOR -> Y+5
                 ;	i -> Y+4
                 ;	Found -> Y+3
                 ;	used -> Y+2
                 ;	a -> Y+1
                 ;	b -> Y+0
000b94 940e 1b7a 	CALL SUBOPT_0x5A
                 ; 0000 06AE                                     for(b=0;b<9;b++){
                 _0x19C:
000b96 81a8      	LD   R26,Y
000b97 30a9      	CPI  R26,LOW(0x9)
000b98 f488      	BRSH _0x19D
                 ; 0000 06AF                                     DS18B20_ADDRESSES[USING_TEMPERATURE_SENSOR][b] = rom_code[i][b];
000b99 81ed      	LDD  R30,Y+5
000b9a 940e 1a04 	CALL SUBOPT_0x24
000b9c 01df      	MOVW R26,R30
000b9d 940e 1a39 	CALL SUBOPT_0x2C
000b9f 940e 1b7f 	CALL SUBOPT_0x5B
000ba1 01df      	MOVW R26,R30
000ba2 940e 1a39 	CALL SUBOPT_0x2C
000ba4 940e 1b84 	CALL SUBOPT_0x5C
                 ; 0000 06B0                                     }
000ba6 81e8      	LD   R30,Y
000ba7 5fef      	SUBI R30,-LOW(1)
000ba8 83e8      	ST   Y,R30
000ba9 cfec      	RJMP _0x19C
                 _0x19D:
                 ; 0000 06B1                                 Found = 1;
000baa e0e1      	LDI  R30,LOW(1)
000bab 940e 1ba2 	CALL SUBOPT_0x61
                 ; 0000 06B2                                 TEMPERATURES[USING_TEMPERATURE_SENSOR] = 0.0;
000bad 940e 1b8b 	CALL SUBOPT_0x5D
                 ; 0000 06B3                                 break;
000baf 9623      	ADIW R28,3
000bb0 c005      	RJMP _0x194
                 ; 0000 06B4                                 }
                 ; 0000 06B5                             }
                 _0x19A:
000bb1 9622      	ADIW R28,2
000bb2 81e9      	LDD  R30,Y+1
000bb3 50e1      	SUBI R30,LOW(1)
000bb4 83e9      	STD  Y+1,R30
000bb5 cfba      	RJMP _0x193
                 _0x194:
                 ; 0000 06B6 
                 ; 0000 06B7                             if(Found==0){
000bb6 81e8      	LD   R30,Y
000bb7 30e0      	CPI  R30,0
000bb8 f449      	BRNE _0x19E
                 ; 0000 06B8                             DS18B20_IS_ASSIGNED[USING_TEMPERATURE_SENSOR] = 0;
000bb9 81aa      	LDD  R26,Y+2
000bba 940e 1a3c 	CALL SUBOPT_0x2D
000bbc 940e 1b94 	CALL SUBOPT_0x5E
                 ; 0000 06B9                             ds18b20_sensor_assignation[USING_TEMPERATURE_SENSOR] = 255;
000bbe 940e 1b99 	CALL SUBOPT_0x5F
                 ; 0000 06BA                             TEMPERATURES[USING_TEMPERATURE_SENSOR] = 0.0;
000bc0 940e 1b8b 	CALL SUBOPT_0x5D
                 ; 0000 06BB                             }
                 ; 0000 06BC                         }
                 _0x19E:
000bc2 9622      	ADIW R28,2
                 ; 0000 06BD                     }
                 _0x18F:
                 ; 0000 06BE                 }
                 _0x18C:
                 ; 0000 06BF                 else if(BUTTON[BUTTON_RIGHT]==1){
000bc3 c073      	RJMP _0x19F
                 _0x18B:
                +
000bc4 91a0 0590+LDS R26 , _BUTTON_S0000006001 + ( 3 )
                 	__GETB2MN _BUTTON_S0000006001,3
000bc6 30a1      	CPI  R26,LOW(0x1)
000bc7 f011      	BREQ PC+3
000bc8 940c 0c37 	JMP _0x1A0
                 ; 0000 06C0                     if((SelectedRow==1)||(SelectedRow==2)){
000bca 91a0 0534 	LDS  R26,_SelectedRow_G000
000bcc 30a1      	CPI  R26,LOW(0x1)
000bcd f019      	BREQ _0x1A2
000bce 30a2      	CPI  R26,LOW(0x2)
000bcf f009      	BREQ _0x1A2
000bd0 c066      	RJMP _0x1A1
                 _0x1A2:
                 ; 0000 06C1                     unsigned char i, Found=0;
                 ; 0000 06C2                         if(DS18B20_IS_ASSIGNED[USING_TEMPERATURE_SENSOR]==1){
000bd1 940e 1b9d 	CALL SUBOPT_0x60
                 ;	USING_TEMPERATURE_SENSOR -> Y+2
                 ;	i -> Y+1
                 ;	Found -> Y+0
000bd3 940e 2063 	CALL __EEPROMRDB
000bd5 30e1      	CPI  R30,LOW(0x1)
000bd6 f431      	BRNE _0x1A4
                 ; 0000 06C3                         i = ds18b20_sensor_assignation[USING_TEMPERATURE_SENSOR] + 1;
000bd7 81ea      	LDD  R30,Y+2
000bd8 940e 1a0a 	CALL SUBOPT_0x25
000bda 81e0      	LD   R30,Z
000bdb 5fef      	SUBI R30,-LOW(1)
000bdc c001      	RJMP _0x2F6
                 ; 0000 06C4                         }
                 ; 0000 06C5                         else{
                 _0x1A4:
                 ; 0000 06C6                         i = 0;
000bdd e0e0      	LDI  R30,LOW(0)
                 _0x2F6:
000bde 83e9      	STD  Y+1,R30
                 ; 0000 06C7                         }
                 ; 0000 06C8 
                 ; 0000 06C9                         for(i=i;i<ds18b20_devices;i++){
000bdf 83e9      	STD  Y+1,R30
                 _0x1A7:
000be0 940e 19ef 	CALL SUBOPT_0x20
000be2 f010      	BRLO PC+3
000be3 940c 0c29 	JMP _0x1A8
                 ; 0000 06CA                         unsigned char used=0, a;
                 ; 0000 06CB                             for(a=0;a<MAX_DS18B20_DEVICES;a++){
000be5 940e 1b6f 	CALL SUBOPT_0x57
                 ;	USING_TEMPERATURE_SENSOR -> Y+4
                 ;	i -> Y+3
                 ;	Found -> Y+2
                 ;	used -> Y+1
                 ;	a -> Y+0
                 _0x1AA:
000be7 81a8      	LD   R26,Y
000be8 30a8      	CPI  R26,LOW(0x8)
000be9 f4a0      	BRSH _0x1AB
                 ; 0000 06CC                                 if(DS18B20_IS_ASSIGNED[a]==1){
000bea 940e 19b8 	CALL SUBOPT_0x17
000bec 940e 2063 	CALL __EEPROMRDB
000bee 30e1      	CPI  R30,LOW(0x1)
000bef f451      	BRNE _0x1AC
                 ; 0000 06CD                                     if(ds18b20_sensor_assignation[a]==i){
000bf0 81e8      	LD   R30,Y
000bf1 940e 1a0a 	CALL SUBOPT_0x25
000bf3 81a0      	LD   R26,Z
000bf4 81eb      	LDD  R30,Y+3
000bf5 17ea      	CP   R30,R26
000bf6 f419      	BRNE _0x1AD
                 ; 0000 06CE                                     used = 1;
000bf7 e0e1      	LDI  R30,LOW(1)
000bf8 83e9      	STD  Y+1,R30
                 ; 0000 06CF                                     break;
000bf9 c004      	RJMP _0x1AB
                 ; 0000 06D0                                     }
                 ; 0000 06D1                                 }
                 _0x1AD:
                 ; 0000 06D2                             }
                 _0x1AC:
000bfa 81e8      	LD   R30,Y
000bfb 5fef      	SUBI R30,-LOW(1)
000bfc 83e8      	ST   Y,R30
000bfd cfe9      	RJMP _0x1AA
                 _0x1AB:
                 ; 0000 06D3 
                 ; 0000 06D4                             if(used==0){
000bfe 81e9      	LDD  R30,Y+1
000bff 30e0      	CPI  R30,0
000c00 f519      	BRNE _0x1AE
                 ; 0000 06D5                             unsigned char b;
                 ; 0000 06D6                             ds18b20_sensor_assignation[USING_TEMPERATURE_SENSOR] = i;
000c01 940e 1b77 	CALL SUBOPT_0x59
                 ;	USING_TEMPERATURE_SENSOR -> Y+5
                 ;	i -> Y+4
                 ;	Found -> Y+3
                 ;	used -> Y+2
                 ;	a -> Y+1
                 ;	b -> Y+0
000c03 940e 1b7a 	CALL SUBOPT_0x5A
                 ; 0000 06D7                                 for(b=0;b<9;b++){
                 _0x1B0:
000c05 81a8      	LD   R26,Y
000c06 30a9      	CPI  R26,LOW(0x9)
000c07 f488      	BRSH _0x1B1
                 ; 0000 06D8                                 DS18B20_ADDRESSES[USING_TEMPERATURE_SENSOR][b] = rom_code[i][b];
000c08 81ed      	LDD  R30,Y+5
000c09 940e 1a04 	CALL SUBOPT_0x24
000c0b 01df      	MOVW R26,R30
000c0c 940e 1a39 	CALL SUBOPT_0x2C
000c0e 940e 1b7f 	CALL SUBOPT_0x5B
000c10 01df      	MOVW R26,R30
000c11 940e 1a39 	CALL SUBOPT_0x2C
000c13 940e 1b84 	CALL SUBOPT_0x5C
                 ; 0000 06D9                                 }
000c15 81e8      	LD   R30,Y
000c16 5fef      	SUBI R30,-LOW(1)
000c17 83e8      	ST   Y,R30
000c18 cfec      	RJMP _0x1B0
                 _0x1B1:
                 ; 0000 06DA                             DS18B20_IS_ASSIGNED[USING_TEMPERATURE_SENSOR] = 1;
000c19 81ad      	LDD  R26,Y+5
000c1a 940e 1a3c 	CALL SUBOPT_0x2D
000c1c 940e 1a13 	CALL SUBOPT_0x27
                 ; 0000 06DB                             Found = 1;
000c1e 940e 1ba2 	CALL SUBOPT_0x61
                 ; 0000 06DC                             TEMPERATURES[USING_TEMPERATURE_SENSOR] = 0.0;
000c20 940e 1b8b 	CALL SUBOPT_0x5D
                 ; 0000 06DD                             break;
000c22 9623      	ADIW R28,3
000c23 c005      	RJMP _0x1A8
                 ; 0000 06DE                             }
                 ; 0000 06DF                         }
                 _0x1AE:
000c24 9622      	ADIW R28,2
000c25 81e9      	LDD  R30,Y+1
000c26 5fef      	SUBI R30,-LOW(1)
000c27 83e9      	STD  Y+1,R30
000c28 cfb7      	RJMP _0x1A7
                 _0x1A8:
                 ; 0000 06E0 
                 ; 0000 06E1                         if(Found==0){
000c29 81e8      	LD   R30,Y
000c2a 30e0      	CPI  R30,0
000c2b f451      	BRNE _0x1B2
                 ; 0000 06E2                         lcd_clear();
000c2c 940e 1ba5 	CALL SUBOPT_0x62
                 ; 0000 06E3                         lcd_putsf(" AUKSTESNIO NUMERIO ");
                 ; 0000 06E4                         lcd_putsf(" LAISVO TERMOMETRO  ");
000c2e 940e 1baa 	CALL SUBOPT_0x63
                 ; 0000 06E5                         lcd_putsf("        NERA        ");
000c30 940e 1bad 	CALL SUBOPT_0x64
                 ; 0000 06E6                         delay_ms(1000);
000c32 940e 1990 	CALL SUBOPT_0x11
                 ; 0000 06E7                         lcd_clear();
000c34 940e 17a3 	CALL _lcd_clear
                 ; 0000 06E8                         }
                 ; 0000 06E9                     }
                 _0x1B2:
000c36 9622      	ADIW R28,2
                 ; 0000 06EA                 }
                 _0x1A1:
                 ; 0000 06EB 
                 ; 0000 06EC                 if(RefreshLcd>=1){
                 _0x1A0:
                 _0x19F:
                 _0x18A:
                 _0x187:
                 _0x185:
000c37 91a0 0535 	LDS  R26,_RefreshLcd_G000
000c39 30a1      	CPI  R26,LOW(0x1)
000c3a f410      	BRSH PC+3
000c3b 940c 0c96 	JMP _0x1B3
                 ; 0000 06ED                 unsigned char row, lcd_row;
                 ; 0000 06EE                 lcd_row = 0;
000c3d 940e 1bb0 	CALL SUBOPT_0x65
                 ;	USING_TEMPERATURE_SENSOR -> Y+2
                 ;	row -> Y+1
                 ;	lcd_row -> Y+0
                 ; 0000 06EF                 RowsOnWindow = 4;
                 ; 0000 06F0                     for(row=Address[5];row<4+Address[5];row++){
                 _0x1B5:
000c3f 940e 192a 	CALL SUBOPT_0x5
000c41 940e 1b23 	CALL SUBOPT_0x4C
000c43 f014      	BRLT PC+3
000c44 940c 0c92 	JMP _0x1B6
                 ; 0000 06F1                     lcd_gotoxy(0,lcd_row);
000c46 940e 1b26 	CALL SUBOPT_0x4D
                 ; 0000 06F2                         if(row==0){
000c48 f429      	BRNE _0x1B7
                 ; 0000 06F3                         lcd_putsf("  -=LAUKO TERM.=-  ");
                +
000c49 e8e4     +LDI R30 , LOW ( 2 * _0x0 + ( 474 ) )
000c4a e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 474 ) )
                 	__POINTW1FN _0x0,474
000c4b 940e 1996 	CALL SUBOPT_0x12
                 ; 0000 06F4                         }
                 ; 0000 06F5                         else if(row==1){
000c4d c03d      	RJMP _0x1B8
                 _0x1B7:
000c4e 81a9      	LDD  R26,Y+1
000c4f 30a1      	CPI  R26,LOW(0x1)
000c50 f511      	BRNE _0x1B9
                 ; 0000 06F6                         lcd_putsf("1.TEMPERAT.:");
000c51 940e 1bc6 	CALL SUBOPT_0x69
                 ; 0000 06F7                             if(DS18B20_IS_ASSIGNED[USING_TEMPERATURE_SENSOR]==1){
000c53 81aa      	LDD  R26,Y+2
000c54 940e 1a3c 	CALL SUBOPT_0x2D
000c56 940e 2063 	CALL __EEPROMRDB
000c58 30e1      	CPI  R30,LOW(0x1)
000c59 f441      	BRNE _0x1BA
                 ; 0000 06F8                             char lcd_buffer[10];
                 ; 0000 06F9                             sprintf(lcd_buffer,"%+2.1f\xdfC",TEMPERATURES[USING_TEMPERATURE_SENSOR]);
000c5a 940e 1b2f 	CALL SUBOPT_0x4E
                 ;	USING_TEMPERATURE_SENSOR -> Y+12
                 ;	row -> Y+11
                 ;	lcd_row -> Y+10
                 ;	lcd_buffer -> Y+0
000c5c 89e8      	LDD  R30,Y+16
000c5d 940e 1a43 	CALL SUBOPT_0x2F
000c5f 940e 1bb5 	CALL SUBOPT_0x66
                 ; 0000 06FA                             lcd_puts(lcd_buffer);
                 ; 0000 06FB                             }
                 ; 0000 06FC                             else if(DS18B20_IS_ASSIGNED[USING_TEMPERATURE_SENSOR]==2){
000c61 c010      	RJMP _0x1BB
                 _0x1BA:
000c62 81aa      	LDD  R26,Y+2
000c63 940e 1a3c 	CALL SUBOPT_0x2D
000c65 940e 2063 	CALL __EEPROMRDB
000c67 30e2      	CPI  R30,LOW(0x2)
000c68 f419      	BRNE _0x1BC
                 ; 0000 06FD                             lcd_putsf("    OFF");
                +
000c69 e6e0     +LDI R30 , LOW ( 2 * _0x0 + ( 438 ) )
000c6a e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 438 ) )
                 	__POINTW1FN _0x0,438
000c6b c002      	RJMP _0x2F7
                 ; 0000 06FE                             }
                 ; 0000 06FF                             else{
                 _0x1BC:
                 ; 0000 0700                             lcd_putsf("   ----");
                +
000c6c e6e8     +LDI R30 , LOW ( 2 * _0x0 + ( 446 ) )
000c6d e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 446 ) )
                 	__POINTW1FN _0x0,446
                 _0x2F7:
000c6e 93fa      	ST   -Y,R31
000c6f 93ea      	ST   -Y,R30
000c70 940e 17df 	CALL _lcd_putsf
                 ; 0000 0701                             }
                 _0x1BB:
                 ; 0000 0702                         }
                 ; 0000 0703                         else if(row==2){
000c72 c018      	RJMP _0x1BE
                 _0x1B9:
000c73 81a9      	LDD  R26,Y+1
000c74 30a2      	CPI  R26,LOW(0x2)
000c75 f4a9      	BRNE _0x1BF
                 ; 0000 0704                         lcd_putsf("2.TERMOMETRO NR:");
000c76 940e 1bc9 	CALL SUBOPT_0x6A
                 ; 0000 0705                             if(DS18B20_IS_ASSIGNED[USING_TEMPERATURE_SENSOR]==1){
000c78 81aa      	LDD  R26,Y+2
000c79 940e 1a3c 	CALL SUBOPT_0x2D
000c7b 940e 2063 	CALL __EEPROMRDB
000c7d 30e1      	CPI  R30,LOW(0x1)
000c7e f431      	BRNE _0x1C0
                 ; 0000 0706                             lcd_putchar(NumToIndex(ds18b20_sensor_assignation[USING_TEMPERATURE_SENSOR])+1);
000c7f 81ea      	LDD  R30,Y+2
000c80 940e 1a0a 	CALL SUBOPT_0x25
000c82 940e 1bba 	CALL SUBOPT_0x67
                 ; 0000 0707                             lcd_putchar('/');
                 ; 0000 0708                             lcd_putchar(NumToIndex(ds18b20_devices));
000c84 c002      	RJMP _0x2F8
                 ; 0000 0709                             }
                 ; 0000 070A                             else{
                 _0x1C0:
                 ; 0000 070B                             lcd_putsf("-/");
000c85 940e 1bc3 	CALL SUBOPT_0x68
                 ; 0000 070C                             lcd_putchar(NumToIndex(ds18b20_devices));
                 _0x2F8:
000c87 91e0 0538 	LDS  R30,_ds18b20_devices_S0000006000
000c89 940e 19e4 	CALL SUBOPT_0x1E
                 ; 0000 070D                             }
                 ; 0000 070E                         }
                 ; 0000 070F                     lcd_row++;
                 _0x1BF:
                 _0x1BE:
                 _0x1B8:
000c8b 81e8      	LD   R30,Y
000c8c 5fef      	SUBI R30,-LOW(1)
000c8d 83e8      	ST   Y,R30
                 ; 0000 0710                     }
000c8e 81e9      	LDD  R30,Y+1
000c8f 5fef      	SUBI R30,-LOW(1)
000c90 83e9      	STD  Y+1,R30
000c91 cfad      	RJMP _0x1B5
                 _0x1B6:
                 ; 0000 0711 
                 ; 0000 0712                 lcd_gotoxy(19,SelectedRow-Address[5]);
000c92 940e 1b45 	CALL SUBOPT_0x50
000c94 940e 1b4b 	CALL SUBOPT_0x51
                 ; 0000 0713                 lcd_putchar('<');
                 ; 0000 0714                 }
                 ; 0000 0715             }
                 _0x1B3:
000c96 9621      	ADIW R28,1
                 ; 0000 0716 
                 ; 0000 0717             // Sklendes
                 ; 0000 0718             else if(Address[0]==3){
000c97 c633      	RJMP _0x1C2
                 _0x183:
000c98 91a0 052e 	LDS  R26,_Address_G000
000c9a 30a3      	CPI  R26,LOW(0x3)
000c9b f011      	BREQ PC+3
000c9c 940c 0df3 	JMP _0x1C3
                 ; 0000 0719                 if(BUTTON[BUTTON_DOWN]==1){
                +
000c9e 91a0 0591+LDS R26 , _BUTTON_S0000006001 + ( 4 )
                 	__GETB2MN _BUTTON_S0000006001,4
000ca0 30a1      	CPI  R26,LOW(0x1)
000ca1 f419      	BRNE _0x1C4
                 ; 0000 071A                 SelectAnotherRow(0);
000ca2 940e 1b0d 	CALL SUBOPT_0x48
                 ; 0000 071B                 }
                 ; 0000 071C                 else if(BUTTON[BUTTON_UP]==1){
000ca4 c0d2      	RJMP _0x1C5
                 _0x1C4:
000ca5 91a0 058d 	LDS  R26,_BUTTON_S0000006001
000ca7 30a1      	CPI  R26,LOW(0x1)
000ca8 f419      	BRNE _0x1C6
                 ; 0000 071D                 SelectAnotherRow(1);
000ca9 940e 1b11 	CALL SUBOPT_0x49
                 ; 0000 071E                 }
                 ; 0000 071F                 else if(BUTTON[BUTTON_ENTER]==1){
000cab c0cb      	RJMP _0x1C7
                 _0x1C6:
                +
000cac 91a0 058f+LDS R26 , _BUTTON_S0000006001 + ( 2 )
                 	__GETB2MN _BUTTON_S0000006001,2
000cae 30a1      	CPI  R26,LOW(0x1)
000caf f441      	BRNE _0x1C8
                 ; 0000 0720                     if(SelectedRow==0){
000cb0 91e0 0534 	LDS  R30,_SelectedRow_G000
000cb2 30e0      	CPI  R30,0
000cb3 f419      	BRNE _0x1C9
                 ; 0000 0721                     Address[0] = 0;
000cb4 e0e0      	LDI  R30,LOW(0)
000cb5 940e 1b15 	CALL SUBOPT_0x4A
                 ; 0000 0722                     SelectedRow = 0;
                 ; 0000 0723                     Address[5] = 0;
                 ; 0000 0724                     }
                 ; 0000 0725                 }
                 _0x1C9:
                 ; 0000 0726                 else if(BUTTON[BUTTON_LEFT]==1){
000cb7 c0bf      	RJMP _0x1CA
                 _0x1C8:
                +
000cb8 91a0 058e+LDS R26 , _BUTTON_S0000006001 + ( 1 )
                 	__GETB2MN _BUTTON_S0000006001,1
000cba 30a1      	CPI  R26,LOW(0x1)
000cbb f011      	BREQ PC+3
000cbc 940c 0d18 	JMP _0x1CB
                 ; 0000 0727                     if(SelectedRow==1){
000cbe 91a0 0534 	LDS  R26,_SelectedRow_G000
000cc0 30a1      	CPI  R26,LOW(0x1)
000cc1 f471      	BRNE _0x1CC
                 ; 0000 0728                         if(MANUAL_CONTROLLER==1){
000cc2 940e 1a54 	CALL SUBOPT_0x32
000cc4 30e1      	CPI  R30,LOW(0x1)
000cc5 f421      	BRNE _0x1CD
                 ; 0000 0729                         MANUAL_CONTROLLER = 0;
000cc6 e5a4      	LDI  R26,LOW(_MANUAL_CONTROLLER)
000cc7 e0b0      	LDI  R27,HIGH(_MANUAL_CONTROLLER)
000cc8 e0e0      	LDI  R30,LOW(0)
000cc9 c003      	RJMP _0x2F9
                 ; 0000 072A                         }
                 ; 0000 072B                         else{
                 _0x1CD:
                 ; 0000 072C                         MANUAL_CONTROLLER = 1;
000cca e5a4      	LDI  R26,LOW(_MANUAL_CONTROLLER)
000ccb e0b0      	LDI  R27,HIGH(_MANUAL_CONTROLLER)
000ccc e0e1      	LDI  R30,LOW(1)
                 _0x2F9:
000ccd 940e 207f 	CALL __EEPROMWRB
                 ; 0000 072D                         }
                 ; 0000 072E 
                 ; 0000 072F                     }
                 ; 0000 0730                     else if(SelectedRow==2){
000ccf c047      	RJMP _0x1CF
                 _0x1CC:
000cd0 91a0 0534 	LDS  R26,_SelectedRow_G000
000cd2 30a2      	CPI  R26,LOW(0x2)
000cd3 f471      	BRNE _0x1D0
                 ; 0000 0731                         if(MANUAL_CONTROLLER==1){
000cd4 940e 1a54 	CALL SUBOPT_0x32
000cd6 30e1      	CPI  R30,LOW(0x1)
000cd7 f449      	BRNE _0x1D1
                 ; 0000 0732                             if(dac_data[0]>0){
000cd8 91a0 0529 	LDS  R26,_dac_data
000cda 30a1      	CPI  R26,LOW(0x1)
000cdb f028      	BRLO _0x1D2
                 ; 0000 0733                             dac_data[0]--;
000cdc 91e0 0529 	LDS  R30,_dac_data
000cde 50e1      	SUBI R30,LOW(1)
000cdf 93e0 0529 	STS  _dac_data,R30
                 ; 0000 0734                             }
                 ; 0000 0735                         }
                 _0x1D2:
                 ; 0000 0736                     }
                 _0x1D1:
                 ; 0000 0737                     else if(SelectedRow==3){
000ce1 c035      	RJMP _0x1D3
                 _0x1D0:
000ce2 91a0 0534 	LDS  R26,_SelectedRow_G000
000ce4 30a3      	CPI  R26,LOW(0x3)
000ce5 f471      	BRNE _0x1D4
                 ; 0000 0738                         if(MANUAL_CONTROLLER==1){
000ce6 940e 1a54 	CALL SUBOPT_0x32
000ce8 30e1      	CPI  R30,LOW(0x1)
000ce9 f449      	BRNE _0x1D5
                 ; 0000 0739                             if(dac_data[1]>0){
                +
000cea 91a0 052a+LDS R26 , _dac_data + ( 1 )
                 	__GETB2MN _dac_data,1
000cec 30a1      	CPI  R26,LOW(0x1)
000ced f028      	BRLO _0x1D6
                 ; 0000 073A                             dac_data[1]--;
                +
000cee 91e0 052a+LDS R30 , _dac_data + ( 1 )
                 	__GETB1MN _dac_data,1
000cf0 50e1      	SUBI R30,LOW(1)
                +
000cf1 93e0 052a+STS _dac_data + ( 1 ) , R30
                 	__PUTB1MN _dac_data,1
                 ; 0000 073B                             }
                 ; 0000 073C                         }
                 _0x1D6:
                 ; 0000 073D                     }
                 _0x1D5:
                 ; 0000 073E                     else if(SelectedRow==4){
000cf3 c023      	RJMP _0x1D7
                 _0x1D4:
000cf4 91a0 0534 	LDS  R26,_SelectedRow_G000
000cf6 30a4      	CPI  R26,LOW(0x4)
000cf7 f471      	BRNE _0x1D8
                 ; 0000 073F                         if(MANUAL_CONTROLLER==1){
000cf8 940e 1a54 	CALL SUBOPT_0x32
000cfa 30e1      	CPI  R30,LOW(0x1)
000cfb f449      	BRNE _0x1D9
                 ; 0000 0740                             if(dac_data[2]>0){
                +
000cfc 91a0 052b+LDS R26 , _dac_data + ( 2 )
                 	__GETB2MN _dac_data,2
000cfe 30a1      	CPI  R26,LOW(0x1)
000cff f028      	BRLO _0x1DA
                 ; 0000 0741                             dac_data[2]--;
                +
000d00 91e0 052b+LDS R30 , _dac_data + ( 2 )
                 	__GETB1MN _dac_data,2
000d02 50e1      	SUBI R30,LOW(1)
                +
000d03 93e0 052b+STS _dac_data + ( 2 ) , R30
                 	__PUTB1MN _dac_data,2
                 ; 0000 0742                             }
                 ; 0000 0743                         }
                 _0x1DA:
                 ; 0000 0744                     }
                 _0x1D9:
                 ; 0000 0745                     else if(SelectedRow==5){
000d05 c011      	RJMP _0x1DB
                 _0x1D8:
000d06 91a0 0534 	LDS  R26,_SelectedRow_G000
000d08 30a5      	CPI  R26,LOW(0x5)
000d09 f469      	BRNE _0x1DC
                 ; 0000 0746                         if(MANUAL_CONTROLLER==1){
000d0a 940e 1a54 	CALL SUBOPT_0x32
000d0c 30e1      	CPI  R30,LOW(0x1)
000d0d f449      	BRNE _0x1DD
                 ; 0000 0747                             if(dac_data[3]>0){
                +
000d0e 91a0 052c+LDS R26 , _dac_data + ( 3 )
                 	__GETB2MN _dac_data,3
000d10 30a1      	CPI  R26,LOW(0x1)
000d11 f028      	BRLO _0x1DE
                 ; 0000 0748                             dac_data[3]--;
                +
000d12 91e0 052c+LDS R30 , _dac_data + ( 3 )
                 	__GETB1MN _dac_data,3
000d14 50e1      	SUBI R30,LOW(1)
                +
000d15 93e0 052c+STS _dac_data + ( 3 ) , R30
                 	__PUTB1MN _dac_data,3
                 ; 0000 0749                             }
                 ; 0000 074A                         }
                 _0x1DE:
                 ; 0000 074B                     }
                 _0x1DD:
                 ; 0000 074C                 }
                 _0x1DC:
                 _0x1DB:
                 _0x1D7:
                 _0x1D3:
                 _0x1CF:
                 ; 0000 074D                 else if(BUTTON[BUTTON_RIGHT]==1){
000d17 c05f      	RJMP _0x1DF
                 _0x1CB:
                +
000d18 91a0 0590+LDS R26 , _BUTTON_S0000006001 + ( 3 )
                 	__GETB2MN _BUTTON_S0000006001,3
000d1a 30a1      	CPI  R26,LOW(0x1)
000d1b f011      	BREQ PC+3
000d1c 940c 0d77 	JMP _0x1E0
                 ; 0000 074E                     if(SelectedRow==1){
000d1e 91a0 0534 	LDS  R26,_SelectedRow_G000
000d20 30a1      	CPI  R26,LOW(0x1)
000d21 f471      	BRNE _0x1E1
                 ; 0000 074F                         if(MANUAL_CONTROLLER==1){
000d22 940e 1a54 	CALL SUBOPT_0x32
000d24 30e1      	CPI  R30,LOW(0x1)
000d25 f421      	BRNE _0x1E2
                 ; 0000 0750                         MANUAL_CONTROLLER = 0;
000d26 e5a4      	LDI  R26,LOW(_MANUAL_CONTROLLER)
000d27 e0b0      	LDI  R27,HIGH(_MANUAL_CONTROLLER)
000d28 e0e0      	LDI  R30,LOW(0)
000d29 c003      	RJMP _0x2FA
                 ; 0000 0751                         }
                 ; 0000 0752                         else{
                 _0x1E2:
                 ; 0000 0753                         MANUAL_CONTROLLER = 1;
000d2a e5a4      	LDI  R26,LOW(_MANUAL_CONTROLLER)
000d2b e0b0      	LDI  R27,HIGH(_MANUAL_CONTROLLER)
000d2c e0e1      	LDI  R30,LOW(1)
                 _0x2FA:
000d2d 940e 207f 	CALL __EEPROMWRB
                 ; 0000 0754                         }
                 ; 0000 0755                     }
                 ; 0000 0756                     else if(SelectedRow==2){
000d2f c047      	RJMP _0x1E4
                 _0x1E1:
000d30 91a0 0534 	LDS  R26,_SelectedRow_G000
000d32 30a2      	CPI  R26,LOW(0x2)
000d33 f471      	BRNE _0x1E5
                 ; 0000 0757                         if(MANUAL_CONTROLLER==1){
000d34 940e 1a54 	CALL SUBOPT_0x32
000d36 30e1      	CPI  R30,LOW(0x1)
000d37 f449      	BRNE _0x1E6
                 ; 0000 0758                             if(dac_data[0]<255){
000d38 91a0 0529 	LDS  R26,_dac_data
000d3a 3faf      	CPI  R26,LOW(0xFF)
000d3b f428      	BRSH _0x1E7
                 ; 0000 0759                             dac_data[0]++;
000d3c 91e0 0529 	LDS  R30,_dac_data
000d3e 5fef      	SUBI R30,-LOW(1)
000d3f 93e0 0529 	STS  _dac_data,R30
                 ; 0000 075A                             }
                 ; 0000 075B                         }
                 _0x1E7:
                 ; 0000 075C                     }
                 _0x1E6:
                 ; 0000 075D                     else if(SelectedRow==3){
000d41 c035      	RJMP _0x1E8
                 _0x1E5:
000d42 91a0 0534 	LDS  R26,_SelectedRow_G000
000d44 30a3      	CPI  R26,LOW(0x3)
000d45 f471      	BRNE _0x1E9
                 ; 0000 075E                         if(MANUAL_CONTROLLER==1){
000d46 940e 1a54 	CALL SUBOPT_0x32
000d48 30e1      	CPI  R30,LOW(0x1)
000d49 f449      	BRNE _0x1EA
                 ; 0000 075F                             if(dac_data[1]<255){
                +
000d4a 91a0 052a+LDS R26 , _dac_data + ( 1 )
                 	__GETB2MN _dac_data,1
000d4c 3faf      	CPI  R26,LOW(0xFF)
000d4d f428      	BRSH _0x1EB
                 ; 0000 0760                             dac_data[1]++;
                +
000d4e 91e0 052a+LDS R30 , _dac_data + ( 1 )
                 	__GETB1MN _dac_data,1
000d50 5fef      	SUBI R30,-LOW(1)
                +
000d51 93e0 052a+STS _dac_data + ( 1 ) , R30
                 	__PUTB1MN _dac_data,1
                 ; 0000 0761                             }
                 ; 0000 0762                         }
                 _0x1EB:
                 ; 0000 0763                     }
                 _0x1EA:
                 ; 0000 0764                     else if(SelectedRow==4){
000d53 c023      	RJMP _0x1EC
                 _0x1E9:
000d54 91a0 0534 	LDS  R26,_SelectedRow_G000
000d56 30a4      	CPI  R26,LOW(0x4)
000d57 f471      	BRNE _0x1ED
                 ; 0000 0765                         if(MANUAL_CONTROLLER==1){
000d58 940e 1a54 	CALL SUBOPT_0x32
000d5a 30e1      	CPI  R30,LOW(0x1)
000d5b f449      	BRNE _0x1EE
                 ; 0000 0766                             if(dac_data[2]<255){
                +
000d5c 91a0 052b+LDS R26 , _dac_data + ( 2 )
                 	__GETB2MN _dac_data,2
000d5e 3faf      	CPI  R26,LOW(0xFF)
000d5f f428      	BRSH _0x1EF
                 ; 0000 0767                             dac_data[2]++;
                +
000d60 91e0 052b+LDS R30 , _dac_data + ( 2 )
                 	__GETB1MN _dac_data,2
000d62 5fef      	SUBI R30,-LOW(1)
                +
000d63 93e0 052b+STS _dac_data + ( 2 ) , R30
                 	__PUTB1MN _dac_data,2
                 ; 0000 0768                             }
                 ; 0000 0769                         }
                 _0x1EF:
                 ; 0000 076A                     }
                 _0x1EE:
                 ; 0000 076B                     else if(SelectedRow==5){
000d65 c011      	RJMP _0x1F0
                 _0x1ED:
000d66 91a0 0534 	LDS  R26,_SelectedRow_G000
000d68 30a5      	CPI  R26,LOW(0x5)
000d69 f469      	BRNE _0x1F1
                 ; 0000 076C                         if(MANUAL_CONTROLLER==1){
000d6a 940e 1a54 	CALL SUBOPT_0x32
000d6c 30e1      	CPI  R30,LOW(0x1)
000d6d f449      	BRNE _0x1F2
                 ; 0000 076D                             if(dac_data[3]<255){
                +
000d6e 91a0 052c+LDS R26 , _dac_data + ( 3 )
                 	__GETB2MN _dac_data,3
000d70 3faf      	CPI  R26,LOW(0xFF)
000d71 f428      	BRSH _0x1F3
                 ; 0000 076E                             dac_data[3]++;
                +
000d72 91e0 052c+LDS R30 , _dac_data + ( 3 )
                 	__GETB1MN _dac_data,3
000d74 5fef      	SUBI R30,-LOW(1)
                +
000d75 93e0 052c+STS _dac_data + ( 3 ) , R30
                 	__PUTB1MN _dac_data,3
                 ; 0000 076F                             }
                 ; 0000 0770                         }
                 _0x1F3:
                 ; 0000 0771                     }
                 _0x1F2:
                 ; 0000 0772                 }
                 _0x1F1:
                 _0x1F0:
                 _0x1EC:
                 _0x1E8:
                 _0x1E4:
                 ; 0000 0773 
                 ; 0000 0774                 if(RefreshLcd>=1){
                 _0x1E0:
                 _0x1DF:
                 _0x1CA:
                 _0x1C7:
                 _0x1C5:
000d77 91a0 0535 	LDS  R26,_RefreshLcd_G000
000d79 30a1      	CPI  R26,LOW(0x1)
000d7a f410      	BRSH PC+3
000d7b 940c 0df2 	JMP _0x1F4
                 ; 0000 0775                 unsigned char row, lcd_row;
                 ; 0000 0776                 lcd_row = 0;
000d7d 9722      	SBIW R28,2
                 ;	row -> Y+1
                 ;	lcd_row -> Y+0
000d7e e0e0      	LDI  R30,LOW(0)
000d7f 83e8      	ST   Y,R30
                 ; 0000 0777                 RowsOnWindow = 6;
000d80 e0e6      	LDI  R30,LOW(6)
000d81 940e 1b1d 	CALL SUBOPT_0x4B
                 ; 0000 0778                     for(row=Address[5];row<4+Address[5];row++){
                 _0x1F6:
000d83 940e 192a 	CALL SUBOPT_0x5
000d85 940e 1b23 	CALL SUBOPT_0x4C
000d87 f014      	BRLT PC+3
000d88 940c 0dee 	JMP _0x1F7
                 ; 0000 0779                     lcd_gotoxy(0,lcd_row);
000d8a 940e 1b26 	CALL SUBOPT_0x4D
                 ; 0000 077A                         if(row==0){
000d8c f419      	BRNE _0x1F8
                 ; 0000 077B                         lcd_putsf("    -=SKLENDES=-");
                +
000d8d ebe6     +LDI R30 , LOW ( 2 * _0x0 + ( 524 ) )
000d8e e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 524 ) )
                 	__POINTW1FN _0x0,524
000d8f c053      	RJMP _0x2FB
                 ; 0000 077C                         }
                 ; 0000 077D                         else if(row==1){
                 _0x1F8:
000d90 81a9      	LDD  R26,Y+1
000d91 30a1      	CPI  R26,LOW(0x1)
000d92 f491      	BRNE _0x1FA
                 ; 0000 077E                         lcd_putsf("REZIMAS:");
                +
000d93 ece7     +LDI R30 , LOW ( 2 * _0x0 + ( 541 ) )
000d94 e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 541 ) )
                 	__POINTW1FN _0x0,541
000d95 940e 1996 	CALL SUBOPT_0x12
                 ; 0000 077F                             if(MANUAL_CONTROLLER==1){
000d97 940e 1a54 	CALL SUBOPT_0x32
000d99 30e1      	CPI  R30,LOW(0x1)
000d9a f419      	BRNE _0x1FB
                 ; 0000 0780                             lcd_putsf(" RANKINIS");
                +
000d9b ede0     +LDI R30 , LOW ( 2 * _0x0 + ( 550 ) )
000d9c e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 550 ) )
                 	__POINTW1FN _0x0,550
000d9d c002      	RJMP _0x2FC
                 ; 0000 0781                             }
                 ; 0000 0782                             else{
                 _0x1FB:
                 ; 0000 0783                             lcd_putsf(" AUTOMAT.");
                +
000d9e edea     +LDI R30 , LOW ( 2 * _0x0 + ( 560 ) )
000d9f e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 560 ) )
                 	__POINTW1FN _0x0,560
                 _0x2FC:
000da0 93fa      	ST   -Y,R31
000da1 93ea      	ST   -Y,R30
000da2 940e 17df 	CALL _lcd_putsf
                 ; 0000 0784                             }
                 ; 0000 0785                         }
                 ; 0000 0786                         else if(row==2){
000da4 c042      	RJMP _0x1FD
                 _0x1FA:
000da5 81a9      	LDD  R26,Y+1
000da6 30a2      	CPI  R26,LOW(0x2)
000da7 f459      	BRNE _0x1FE
                 ; 0000 0787                         lcd_putsf("LAUKO:    ");
                +
000da8 eae5     +LDI R30 , LOW ( 2 * _0x0 + ( 251 ) )
000da9 e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 251 ) )
                 	__POINTW1FN _0x0,251
000daa 940e 1996 	CALL SUBOPT_0x12
                 ; 0000 0788                         lcd_put_number(0,3,0,0,dac_data[0],0);
000dac 940e 199a 	CALL SUBOPT_0x13
000dae 940e 199f 	CALL SUBOPT_0x14
000db0 91e0 0529 	LDS  R30,_dac_data
000db2 c029      	RJMP _0x2FD
                 ; 0000 0789                         lcd_putsf("/255");
                 ; 0000 078A                         }
                 ; 0000 078B                         else if(row==3){
                 _0x1FE:
000db3 81a9      	LDD  R26,Y+1
000db4 30a3      	CPI  R26,LOW(0x3)
000db5 f459      	BRNE _0x200
                 ; 0000 078C                         lcd_putsf("SOLIAR.1: ");
                +
000db6 ece0     +LDI R30 , LOW ( 2 * _0x0 + ( 278 ) )
000db7 e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 278 ) )
                 	__POINTW1FN _0x0,278
000db8 940e 1996 	CALL SUBOPT_0x12
                 ; 0000 078D                         lcd_put_number(0,3,0,0,dac_data[1],0);
000dba 940e 199a 	CALL SUBOPT_0x13
000dbc 940e 199f 	CALL SUBOPT_0x14
                +
000dbe 91e0 052a+LDS R30 , _dac_data + ( 1 )
                 	__GETB1MN _dac_data,1
000dc0 c01b      	RJMP _0x2FD
                 ; 0000 078E                         lcd_putsf("/255");
                 ; 0000 078F                         }
                 ; 0000 0790                         else if(row==4){
                 _0x200:
000dc1 81a9      	LDD  R26,Y+1
000dc2 30a4      	CPI  R26,LOW(0x4)
000dc3 f459      	BRNE _0x202
                 ; 0000 0791                         lcd_putsf("SOLIAR.2: ");
                +
000dc4 eced     +LDI R30 , LOW ( 2 * _0x0 + ( 291 ) )
000dc5 e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 291 ) )
                 	__POINTW1FN _0x0,291
000dc6 940e 1996 	CALL SUBOPT_0x12
                 ; 0000 0792                         lcd_put_number(0,3,0,0,dac_data[2],0);
000dc8 940e 199a 	CALL SUBOPT_0x13
000dca 940e 199f 	CALL SUBOPT_0x14
                +
000dcc 91e0 052b+LDS R30 , _dac_data + ( 2 )
                 	__GETB1MN _dac_data,2
000dce c00d      	RJMP _0x2FD
                 ; 0000 0793                         lcd_putsf("/255");
                 ; 0000 0794                         }
                 ; 0000 0795                         else if(row==5){
                 _0x202:
000dcf 81a9      	LDD  R26,Y+1
000dd0 30a5      	CPI  R26,LOW(0x5)
000dd1 f4a9      	BRNE _0x204
                 ; 0000 0796                         lcd_putsf("SOLIAR.3: ");
                +
000dd2 edea     +LDI R30 , LOW ( 2 * _0x0 + ( 304 ) )
000dd3 e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 304 ) )
                 	__POINTW1FN _0x0,304
000dd4 940e 1996 	CALL SUBOPT_0x12
                 ; 0000 0797                         lcd_put_number(0,3,0,0,dac_data[3],0);
000dd6 940e 199a 	CALL SUBOPT_0x13
000dd8 940e 199f 	CALL SUBOPT_0x14
                +
000dda 91e0 052c+LDS R30 , _dac_data + ( 3 )
                 	__GETB1MN _dac_data,3
                 _0x2FD:
000ddc e0f0      	LDI  R31,0
000ddd 940e 1f87 	CALL __CWD1
000ddf 940e 19a3 	CALL SUBOPT_0x15
                 ; 0000 0798                         lcd_putsf("/255");
                +
000de1 eee4     +LDI R30 , LOW ( 2 * _0x0 + ( 570 ) )
000de2 e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 570 ) )
                 	__POINTW1FN _0x0,570
                 _0x2FB:
000de3 93fa      	ST   -Y,R31
000de4 93ea      	ST   -Y,R30
000de5 940e 17df 	CALL _lcd_putsf
                 ; 0000 0799                         }
                 ; 0000 079A                     lcd_row++;
                 _0x204:
                 _0x1FD:
000de7 81e8      	LD   R30,Y
000de8 5fef      	SUBI R30,-LOW(1)
000de9 83e8      	ST   Y,R30
                 ; 0000 079B                     }
000dea 81e9      	LDD  R30,Y+1
000deb 5fef      	SUBI R30,-LOW(1)
000dec 83e9      	STD  Y+1,R30
000ded cf95      	RJMP _0x1F6
                 _0x1F7:
                 ; 0000 079C 
                 ; 0000 079D                 lcd_gotoxy(19,SelectedRow-Address[5]);
000dee 940e 1b45 	CALL SUBOPT_0x50
000df0 940e 1b4b 	CALL SUBOPT_0x51
                 ; 0000 079E                 lcd_putchar('<');
                 ; 0000 079F                 }
                 ; 0000 07A0             }
                 _0x1F4:
                 ; 0000 07A1 
                 ; 0000 07A2             // 1 soliariumo temp
                 ; 0000 07A3             else if(Address[0]==4){
000df2 c4d8      	RJMP _0x205
                 _0x1C3:
000df3 91a0 052e 	LDS  R26,_Address_G000
000df5 30a4      	CPI  R26,LOW(0x4)
000df6 f011      	BREQ PC+3
000df7 940c 0f58 	JMP _0x206
                 ; 0000 07A4             unsigned char USING_TEMPERATURE_SENSOR=2;
                 ; 0000 07A5                 if(BUTTON[BUTTON_DOWN]==1){
000df9 9721      	SBIW R28,1
000dfa e0e2      	LDI  R30,LOW(2)
000dfb 940e 1b56 	CALL SUBOPT_0x52
                 ;	USING_TEMPERATURE_SENSOR -> Y+0
000dfd f419      	BRNE _0x207
                 ; 0000 07A6                 SelectAnotherRow(0);
000dfe 940e 1b0d 	CALL SUBOPT_0x48
                 ; 0000 07A7                 }
                 ; 0000 07A8                 else if(BUTTON[BUTTON_UP]==1){
000e00 c0f6      	RJMP _0x208
                 _0x207:
000e01 91a0 058d 	LDS  R26,_BUTTON_S0000006001
000e03 30a1      	CPI  R26,LOW(0x1)
000e04 f419      	BRNE _0x209
                 ; 0000 07A9                 SelectAnotherRow(1);
000e05 940e 1b11 	CALL SUBOPT_0x49
                 ; 0000 07AA                 }
                 ; 0000 07AB                 else if(BUTTON[BUTTON_ENTER]==1){
000e07 c0ef      	RJMP _0x20A
                 _0x209:
                +
000e08 91a0 058f+LDS R26 , _BUTTON_S0000006001 + ( 2 )
                 	__GETB2MN _BUTTON_S0000006001,2
000e0a 30a1      	CPI  R26,LOW(0x1)
000e0b f441      	BRNE _0x20B
                 ; 0000 07AC                     if(SelectedRow==0){
000e0c 91e0 0534 	LDS  R30,_SelectedRow_G000
000e0e 30e0      	CPI  R30,0
000e0f f419      	BRNE _0x20C
                 ; 0000 07AD                     Address[0] = 0;
000e10 e0e0      	LDI  R30,LOW(0)
000e11 940e 1b15 	CALL SUBOPT_0x4A
                 ; 0000 07AE                     SelectedRow = 0;
                 ; 0000 07AF                     Address[5] = 0;
                 ; 0000 07B0                     }
                 ; 0000 07B1                 }
                 _0x20C:
                 ; 0000 07B2                 else if(BUTTON[BUTTON_LEFT]==1){
000e13 c0e3      	RJMP _0x20D
                 _0x20B:
                +
000e14 91a0 058e+LDS R26 , _BUTTON_S0000006001 + ( 1 )
                 	__GETB2MN _BUTTON_S0000006001,1
000e16 30a1      	CPI  R26,LOW(0x1)
000e17 f011      	BREQ PC+3
000e18 940c 0e84 	JMP _0x20E
                 ; 0000 07B3                     if((SelectedRow==1)||(SelectedRow==2)){
000e1a 91a0 0534 	LDS  R26,_SelectedRow_G000
000e1c 30a1      	CPI  R26,LOW(0x1)
000e1d f019      	BREQ _0x210
000e1e 30a2      	CPI  R26,LOW(0x2)
000e1f f009      	BREQ _0x210
000e20 c062      	RJMP _0x20F
                 _0x210:
                 ; 0000 07B4                         if((DS18B20_IS_ASSIGNED[USING_TEMPERATURE_SENSOR]==1)||(DS18B20_IS_ASSIGNED[USING_TEMPERATURE_SENSOR]==2)){
000e21 940e 19b8 	CALL SUBOPT_0x17
000e23 940e 2063 	CALL __EEPROMRDB
000e25 30e1      	CPI  R30,LOW(0x1)
000e26 f019      	BREQ _0x213
000e27 30e2      	CPI  R30,LOW(0x2)
000e28 f009      	BREQ _0x213
000e29 c059      	RJMP _0x212
                 _0x213:
                 ; 0000 07B5                         signed char i, Found=0;
                 ; 0000 07B6                             for(i=ds18b20_sensor_assignation[USING_TEMPERATURE_SENSOR]-1;i>=0;i--){
000e2a 940e 1b6a 	CALL SUBOPT_0x56
                 ;	USING_TEMPERATURE_SENSOR -> Y+2
                 ;	i -> Y+1
                 ;	Found -> Y+0
000e2c 81e0      	LD   R30,Z
000e2d 940e 1923 	CALL SUBOPT_0x3
000e2f 83e9      	STD  Y+1,R30
                 _0x216:
000e30 81a9      	LDD  R26,Y+1
000e31 30a0      	CPI  R26,0
000e32 f414      	BRGE PC+3
000e33 940c 0e76 	JMP _0x217
                 ; 0000 07B7                             unsigned char used=0, a;
                 ; 0000 07B8                                 for(a=0;a<MAX_DS18B20_DEVICES;a++){
000e35 940e 1b6f 	CALL SUBOPT_0x57
                 ;	USING_TEMPERATURE_SENSOR -> Y+4
                 ;	i -> Y+3
                 ;	Found -> Y+2
                 ;	used -> Y+1
                 ;	a -> Y+0
                 _0x219:
000e37 81a8      	LD   R26,Y
000e38 30a8      	CPI  R26,LOW(0x8)
000e39 f4a8      	BRSH _0x21A
                 ; 0000 07B9                                     if(DS18B20_IS_ASSIGNED[a]==1){
000e3a 940e 19b8 	CALL SUBOPT_0x17
000e3c 940e 2063 	CALL __EEPROMRDB
000e3e 30e1      	CPI  R30,LOW(0x1)
000e3f f459      	BRNE _0x21B
                 ; 0000 07BA                                         if(ds18b20_sensor_assignation[a]==i){
000e40 81e8      	LD   R30,Y
000e41 940e 1a0a 	CALL SUBOPT_0x25
000e43 940e 1b74 	CALL SUBOPT_0x58
000e45 17ea      	CP   R30,R26
000e46 07fb      	CPC  R31,R27
000e47 f419      	BRNE _0x21C
                 ; 0000 07BB                                         used = 1;
000e48 e0e1      	LDI  R30,LOW(1)
000e49 83e9      	STD  Y+1,R30
                 ; 0000 07BC                                         break;
000e4a c004      	RJMP _0x21A
                 ; 0000 07BD                                         }
                 ; 0000 07BE                                     }
                 _0x21C:
                 ; 0000 07BF                                 }
                 _0x21B:
000e4b 81e8      	LD   R30,Y
000e4c 5fef      	SUBI R30,-LOW(1)
000e4d 83e8      	ST   Y,R30
000e4e cfe8      	RJMP _0x219
                 _0x21A:
                 ; 0000 07C0 
                 ; 0000 07C1                                 if(used==0){
000e4f 81e9      	LDD  R30,Y+1
000e50 30e0      	CPI  R30,0
000e51 f4f9      	BRNE _0x21D
                 ; 0000 07C2                                 unsigned char b;
                 ; 0000 07C3                                 ds18b20_sensor_assignation[USING_TEMPERATURE_SENSOR] = i;
000e52 940e 1b77 	CALL SUBOPT_0x59
                 ;	USING_TEMPERATURE_SENSOR -> Y+5
                 ;	i -> Y+4
                 ;	Found -> Y+3
                 ;	used -> Y+2
                 ;	a -> Y+1
                 ;	b -> Y+0
000e54 940e 1b7a 	CALL SUBOPT_0x5A
                 ; 0000 07C4                                     for(b=0;b<9;b++){
                 _0x21F:
000e56 81a8      	LD   R26,Y
000e57 30a9      	CPI  R26,LOW(0x9)
000e58 f488      	BRSH _0x220
                 ; 0000 07C5                                     DS18B20_ADDRESSES[USING_TEMPERATURE_SENSOR][b] = rom_code[i][b];
000e59 81ed      	LDD  R30,Y+5
000e5a 940e 1a04 	CALL SUBOPT_0x24
000e5c 01df      	MOVW R26,R30
000e5d 940e 1a39 	CALL SUBOPT_0x2C
000e5f 940e 1b7f 	CALL SUBOPT_0x5B
000e61 01df      	MOVW R26,R30
000e62 940e 1a39 	CALL SUBOPT_0x2C
000e64 940e 1b84 	CALL SUBOPT_0x5C
                 ; 0000 07C6                                     }
000e66 81e8      	LD   R30,Y
000e67 5fef      	SUBI R30,-LOW(1)
000e68 83e8      	ST   Y,R30
000e69 cfec      	RJMP _0x21F
                 _0x220:
                 ; 0000 07C7                                 Found = 1;
000e6a e0e1      	LDI  R30,LOW(1)
000e6b 940e 1ba2 	CALL SUBOPT_0x61
                 ; 0000 07C8                                 TEMPERATURES[USING_TEMPERATURE_SENSOR] = 0.0;
000e6d 940e 1b8b 	CALL SUBOPT_0x5D
                 ; 0000 07C9                                 break;
000e6f 9623      	ADIW R28,3
000e70 c005      	RJMP _0x217
                 ; 0000 07CA                                 }
                 ; 0000 07CB                             }
                 _0x21D:
000e71 9622      	ADIW R28,2
000e72 81e9      	LDD  R30,Y+1
000e73 50e1      	SUBI R30,LOW(1)
000e74 83e9      	STD  Y+1,R30
000e75 cfba      	RJMP _0x216
                 _0x217:
                 ; 0000 07CC 
                 ; 0000 07CD                             if(Found==0){
000e76 81e8      	LD   R30,Y
000e77 30e0      	CPI  R30,0
000e78 f449      	BRNE _0x221
                 ; 0000 07CE                             DS18B20_IS_ASSIGNED[USING_TEMPERATURE_SENSOR] = 0;
000e79 81aa      	LDD  R26,Y+2
000e7a 940e 1a3c 	CALL SUBOPT_0x2D
000e7c 940e 1b94 	CALL SUBOPT_0x5E
                 ; 0000 07CF                             ds18b20_sensor_assignation[USING_TEMPERATURE_SENSOR] = 255;
000e7e 940e 1b99 	CALL SUBOPT_0x5F
                 ; 0000 07D0                             TEMPERATURES[USING_TEMPERATURE_SENSOR] = 0.0;
000e80 940e 1b8b 	CALL SUBOPT_0x5D
                 ; 0000 07D1                             }
                 ; 0000 07D2                         }
                 _0x221:
000e82 9622      	ADIW R28,2
                 ; 0000 07D3                     }
                 _0x212:
                 ; 0000 07D4                 }
                 _0x20F:
                 ; 0000 07D5                 else if(BUTTON[BUTTON_RIGHT]==1){
000e83 c073      	RJMP _0x222
                 _0x20E:
                +
000e84 91a0 0590+LDS R26 , _BUTTON_S0000006001 + ( 3 )
                 	__GETB2MN _BUTTON_S0000006001,3
000e86 30a1      	CPI  R26,LOW(0x1)
000e87 f011      	BREQ PC+3
000e88 940c 0ef7 	JMP _0x223
                 ; 0000 07D6                     if((SelectedRow==1)||(SelectedRow==2)){
000e8a 91a0 0534 	LDS  R26,_SelectedRow_G000
000e8c 30a1      	CPI  R26,LOW(0x1)
000e8d f019      	BREQ _0x225
000e8e 30a2      	CPI  R26,LOW(0x2)
000e8f f009      	BREQ _0x225
000e90 c066      	RJMP _0x224
                 _0x225:
                 ; 0000 07D7                     unsigned char i, Found=0;
                 ; 0000 07D8                         if(DS18B20_IS_ASSIGNED[USING_TEMPERATURE_SENSOR]==1){
000e91 940e 1b9d 	CALL SUBOPT_0x60
                 ;	USING_TEMPERATURE_SENSOR -> Y+2
                 ;	i -> Y+1
                 ;	Found -> Y+0
000e93 940e 2063 	CALL __EEPROMRDB
000e95 30e1      	CPI  R30,LOW(0x1)
000e96 f431      	BRNE _0x227
                 ; 0000 07D9                         i = ds18b20_sensor_assignation[USING_TEMPERATURE_SENSOR] + 1;
000e97 81ea      	LDD  R30,Y+2
000e98 940e 1a0a 	CALL SUBOPT_0x25
000e9a 81e0      	LD   R30,Z
000e9b 5fef      	SUBI R30,-LOW(1)
000e9c c001      	RJMP _0x2FE
                 ; 0000 07DA                         }
                 ; 0000 07DB                         else{
                 _0x227:
                 ; 0000 07DC                         i = 0;
000e9d e0e0      	LDI  R30,LOW(0)
                 _0x2FE:
000e9e 83e9      	STD  Y+1,R30
                 ; 0000 07DD                         }
                 ; 0000 07DE 
                 ; 0000 07DF                         for(i=i;i<ds18b20_devices;i++){
000e9f 83e9      	STD  Y+1,R30
                 _0x22A:
000ea0 940e 19ef 	CALL SUBOPT_0x20
000ea2 f010      	BRLO PC+3
000ea3 940c 0ee9 	JMP _0x22B
                 ; 0000 07E0                         unsigned char used=0, a;
                 ; 0000 07E1                             for(a=0;a<MAX_DS18B20_DEVICES;a++){
000ea5 940e 1b6f 	CALL SUBOPT_0x57
                 ;	USING_TEMPERATURE_SENSOR -> Y+4
                 ;	i -> Y+3
                 ;	Found -> Y+2
                 ;	used -> Y+1
                 ;	a -> Y+0
                 _0x22D:
000ea7 81a8      	LD   R26,Y
000ea8 30a8      	CPI  R26,LOW(0x8)
000ea9 f4a0      	BRSH _0x22E
                 ; 0000 07E2                                 if(DS18B20_IS_ASSIGNED[a]==1){
000eaa 940e 19b8 	CALL SUBOPT_0x17
000eac 940e 2063 	CALL __EEPROMRDB
000eae 30e1      	CPI  R30,LOW(0x1)
000eaf f451      	BRNE _0x22F
                 ; 0000 07E3                                     if(ds18b20_sensor_assignation[a]==i){
000eb0 81e8      	LD   R30,Y
000eb1 940e 1a0a 	CALL SUBOPT_0x25
000eb3 81a0      	LD   R26,Z
000eb4 81eb      	LDD  R30,Y+3
000eb5 17ea      	CP   R30,R26
000eb6 f419      	BRNE _0x230
                 ; 0000 07E4                                     used = 1;
000eb7 e0e1      	LDI  R30,LOW(1)
000eb8 83e9      	STD  Y+1,R30
                 ; 0000 07E5                                     break;
000eb9 c004      	RJMP _0x22E
                 ; 0000 07E6                                     }
                 ; 0000 07E7                                 }
                 _0x230:
                 ; 0000 07E8                             }
                 _0x22F:
000eba 81e8      	LD   R30,Y
000ebb 5fef      	SUBI R30,-LOW(1)
000ebc 83e8      	ST   Y,R30
000ebd cfe9      	RJMP _0x22D
                 _0x22E:
                 ; 0000 07E9 
                 ; 0000 07EA                             if(used==0){
000ebe 81e9      	LDD  R30,Y+1
000ebf 30e0      	CPI  R30,0
000ec0 f519      	BRNE _0x231
                 ; 0000 07EB                             unsigned char b;
                 ; 0000 07EC                             ds18b20_sensor_assignation[USING_TEMPERATURE_SENSOR] = i;
000ec1 940e 1b77 	CALL SUBOPT_0x59
                 ;	USING_TEMPERATURE_SENSOR -> Y+5
                 ;	i -> Y+4
                 ;	Found -> Y+3
                 ;	used -> Y+2
                 ;	a -> Y+1
                 ;	b -> Y+0
000ec3 940e 1b7a 	CALL SUBOPT_0x5A
                 ; 0000 07ED                                 for(b=0;b<9;b++){
                 _0x233:
000ec5 81a8      	LD   R26,Y
000ec6 30a9      	CPI  R26,LOW(0x9)
000ec7 f488      	BRSH _0x234
                 ; 0000 07EE                                 DS18B20_ADDRESSES[USING_TEMPERATURE_SENSOR][b] = rom_code[i][b];
000ec8 81ed      	LDD  R30,Y+5
000ec9 940e 1a04 	CALL SUBOPT_0x24
000ecb 01df      	MOVW R26,R30
000ecc 940e 1a39 	CALL SUBOPT_0x2C
000ece 940e 1b7f 	CALL SUBOPT_0x5B
000ed0 01df      	MOVW R26,R30
000ed1 940e 1a39 	CALL SUBOPT_0x2C
000ed3 940e 1b84 	CALL SUBOPT_0x5C
                 ; 0000 07EF                                 }
000ed5 81e8      	LD   R30,Y
000ed6 5fef      	SUBI R30,-LOW(1)
000ed7 83e8      	ST   Y,R30
000ed8 cfec      	RJMP _0x233
                 _0x234:
                 ; 0000 07F0                             DS18B20_IS_ASSIGNED[USING_TEMPERATURE_SENSOR] = 1;
000ed9 81ad      	LDD  R26,Y+5
000eda 940e 1a3c 	CALL SUBOPT_0x2D
000edc 940e 1a13 	CALL SUBOPT_0x27
                 ; 0000 07F1                             Found = 1;
000ede 940e 1ba2 	CALL SUBOPT_0x61
                 ; 0000 07F2                             TEMPERATURES[USING_TEMPERATURE_SENSOR] = 0.0;
000ee0 940e 1b8b 	CALL SUBOPT_0x5D
                 ; 0000 07F3                             break;
000ee2 9623      	ADIW R28,3
000ee3 c005      	RJMP _0x22B
                 ; 0000 07F4                             }
                 ; 0000 07F5                         }
                 _0x231:
000ee4 9622      	ADIW R28,2
000ee5 81e9      	LDD  R30,Y+1
000ee6 5fef      	SUBI R30,-LOW(1)
000ee7 83e9      	STD  Y+1,R30
000ee8 cfb7      	RJMP _0x22A
                 _0x22B:
                 ; 0000 07F6 
                 ; 0000 07F7                         if(Found==0){
000ee9 81e8      	LD   R30,Y
000eea 30e0      	CPI  R30,0
000eeb f451      	BRNE _0x235
                 ; 0000 07F8                         lcd_clear();
000eec 940e 1ba5 	CALL SUBOPT_0x62
                 ; 0000 07F9                         lcd_putsf(" AUKSTESNIO NUMERIO ");
                 ; 0000 07FA                         lcd_putsf(" LAISVO TERMOMETRO  ");
000eee 940e 1baa 	CALL SUBOPT_0x63
                 ; 0000 07FB                         lcd_putsf("        NERA        ");
000ef0 940e 1bad 	CALL SUBOPT_0x64
                 ; 0000 07FC                         delay_ms(1000);
000ef2 940e 1990 	CALL SUBOPT_0x11
                 ; 0000 07FD                         lcd_clear();
000ef4 940e 17a3 	CALL _lcd_clear
                 ; 0000 07FE                         }
                 ; 0000 07FF                     }
                 _0x235:
000ef6 9622      	ADIW R28,2
                 ; 0000 0800                 }
                 _0x224:
                 ; 0000 0801 
                 ; 0000 0802                 if(RefreshLcd>=1){
                 _0x223:
                 _0x222:
                 _0x20D:
                 _0x20A:
                 _0x208:
000ef7 91a0 0535 	LDS  R26,_RefreshLcd_G000
000ef9 30a1      	CPI  R26,LOW(0x1)
000efa f410      	BRSH PC+3
000efb 940c 0f56 	JMP _0x236
                 ; 0000 0803                 unsigned char row, lcd_row;
                 ; 0000 0804                 lcd_row = 0;
000efd 940e 1bb0 	CALL SUBOPT_0x65
                 ;	USING_TEMPERATURE_SENSOR -> Y+2
                 ;	row -> Y+1
                 ;	lcd_row -> Y+0
                 ; 0000 0805                 RowsOnWindow = 4;
                 ; 0000 0806                     for(row=Address[5];row<4+Address[5];row++){
                 _0x238:
000eff 940e 192a 	CALL SUBOPT_0x5
000f01 940e 1b23 	CALL SUBOPT_0x4C
000f03 f014      	BRLT PC+3
000f04 940c 0f52 	JMP _0x239
                 ; 0000 0807                     lcd_gotoxy(0,lcd_row);
000f06 940e 1b26 	CALL SUBOPT_0x4D
                 ; 0000 0808                         if(row==0){
000f08 f429      	BRNE _0x23A
                 ; 0000 0809                         lcd_putsf("-=SOLIAR. 1 TERM.=- ");
                +
000f09 eee9     +LDI R30 , LOW ( 2 * _0x0 + ( 575 ) )
000f0a e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 575 ) )
                 	__POINTW1FN _0x0,575
000f0b 940e 1996 	CALL SUBOPT_0x12
                 ; 0000 080A                         }
                 ; 0000 080B                         else if(row==1){
000f0d c03d      	RJMP _0x23B
                 _0x23A:
000f0e 81a9      	LDD  R26,Y+1
000f0f 30a1      	CPI  R26,LOW(0x1)
000f10 f511      	BRNE _0x23C
                 ; 0000 080C                         lcd_putsf("1.TEMPERAT.:");
000f11 940e 1bc6 	CALL SUBOPT_0x69
                 ; 0000 080D                             if(DS18B20_IS_ASSIGNED[USING_TEMPERATURE_SENSOR]==1){
000f13 81aa      	LDD  R26,Y+2
000f14 940e 1a3c 	CALL SUBOPT_0x2D
000f16 940e 2063 	CALL __EEPROMRDB
000f18 30e1      	CPI  R30,LOW(0x1)
000f19 f441      	BRNE _0x23D
                 ; 0000 080E                             char lcd_buffer[10];
                 ; 0000 080F                             sprintf(lcd_buffer,"%+2.1f\xdfC",TEMPERATURES[USING_TEMPERATURE_SENSOR]);
000f1a 940e 1b2f 	CALL SUBOPT_0x4E
                 ;	USING_TEMPERATURE_SENSOR -> Y+12
                 ;	row -> Y+11
                 ;	lcd_row -> Y+10
                 ;	lcd_buffer -> Y+0
000f1c 89e8      	LDD  R30,Y+16
000f1d 940e 1a43 	CALL SUBOPT_0x2F
000f1f 940e 1bb5 	CALL SUBOPT_0x66
                 ; 0000 0810                             lcd_puts(lcd_buffer);
                 ; 0000 0811                             }
                 ; 0000 0812                             else if(DS18B20_IS_ASSIGNED[USING_TEMPERATURE_SENSOR]==2){
000f21 c010      	RJMP _0x23E
                 _0x23D:
000f22 81aa      	LDD  R26,Y+2
000f23 940e 1a3c 	CALL SUBOPT_0x2D
000f25 940e 2063 	CALL __EEPROMRDB
000f27 30e2      	CPI  R30,LOW(0x2)
000f28 f419      	BRNE _0x23F
                 ; 0000 0813                             lcd_putsf("    OFF");
                +
000f29 e6e0     +LDI R30 , LOW ( 2 * _0x0 + ( 438 ) )
000f2a e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 438 ) )
                 	__POINTW1FN _0x0,438
000f2b c002      	RJMP _0x2FF
                 ; 0000 0814                             }
                 ; 0000 0815                             else{
                 _0x23F:
                 ; 0000 0816                             lcd_putsf("   ----");
                +
000f2c e6e8     +LDI R30 , LOW ( 2 * _0x0 + ( 446 ) )
000f2d e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 446 ) )
                 	__POINTW1FN _0x0,446
                 _0x2FF:
000f2e 93fa      	ST   -Y,R31
000f2f 93ea      	ST   -Y,R30
000f30 940e 17df 	CALL _lcd_putsf
                 ; 0000 0817                             }
                 _0x23E:
                 ; 0000 0818                         }
                 ; 0000 0819                         else if(row==2){
000f32 c018      	RJMP _0x241
                 _0x23C:
000f33 81a9      	LDD  R26,Y+1
000f34 30a2      	CPI  R26,LOW(0x2)
000f35 f4a9      	BRNE _0x242
                 ; 0000 081A                         lcd_putsf("2.TERMOMETRO NR:");
000f36 940e 1bc9 	CALL SUBOPT_0x6A
                 ; 0000 081B                             if(DS18B20_IS_ASSIGNED[USING_TEMPERATURE_SENSOR]==1){
000f38 81aa      	LDD  R26,Y+2
000f39 940e 1a3c 	CALL SUBOPT_0x2D
000f3b 940e 2063 	CALL __EEPROMRDB
000f3d 30e1      	CPI  R30,LOW(0x1)
000f3e f431      	BRNE _0x243
                 ; 0000 081C                             lcd_putchar(NumToIndex(ds18b20_sensor_assignation[USING_TEMPERATURE_SENSOR])+1);
000f3f 81ea      	LDD  R30,Y+2
000f40 940e 1a0a 	CALL SUBOPT_0x25
000f42 940e 1bba 	CALL SUBOPT_0x67
                 ; 0000 081D                             lcd_putchar('/');
                 ; 0000 081E                             lcd_putchar(NumToIndex(ds18b20_devices));
000f44 c002      	RJMP _0x300
                 ; 0000 081F                             }
                 ; 0000 0820                             else{
                 _0x243:
                 ; 0000 0821                             lcd_putsf("-/");
000f45 940e 1bc3 	CALL SUBOPT_0x68
                 ; 0000 0822                             lcd_putchar(NumToIndex(ds18b20_devices));
                 _0x300:
000f47 91e0 0538 	LDS  R30,_ds18b20_devices_S0000006000
000f49 940e 19e4 	CALL SUBOPT_0x1E
                 ; 0000 0823                             }
                 ; 0000 0824                         }
                 ; 0000 0825                     lcd_row++;
                 _0x242:
                 _0x241:
                 _0x23B:
000f4b 81e8      	LD   R30,Y
000f4c 5fef      	SUBI R30,-LOW(1)
000f4d 83e8      	ST   Y,R30
                 ; 0000 0826                     }
000f4e 81e9      	LDD  R30,Y+1
000f4f 5fef      	SUBI R30,-LOW(1)
000f50 83e9      	STD  Y+1,R30
000f51 cfad      	RJMP _0x238
                 _0x239:
                 ; 0000 0827 
                 ; 0000 0828                 lcd_gotoxy(19,SelectedRow-Address[5]);
000f52 940e 1b45 	CALL SUBOPT_0x50
000f54 940e 1b4b 	CALL SUBOPT_0x51
                 ; 0000 0829                 lcd_putchar('<');
                 ; 0000 082A                 }
                 ; 0000 082B             }
                 _0x236:
000f56 9621      	ADIW R28,1
                 ; 0000 082C 
                 ; 0000 082D             // 2 soliariumo temp
                 ; 0000 082E             else if(Address[0]==5){
000f57 c373      	RJMP _0x245
                 _0x206:
000f58 91a0 052e 	LDS  R26,_Address_G000
000f5a 30a5      	CPI  R26,LOW(0x5)
000f5b f011      	BREQ PC+3
000f5c 940c 10bd 	JMP _0x246
                 ; 0000 082F             unsigned char USING_TEMPERATURE_SENSOR=3;
                 ; 0000 0830                 if(BUTTON[BUTTON_DOWN]==1){
000f5e 9721      	SBIW R28,1
000f5f e0e3      	LDI  R30,LOW(3)
000f60 940e 1b56 	CALL SUBOPT_0x52
                 ;	USING_TEMPERATURE_SENSOR -> Y+0
000f62 f419      	BRNE _0x247
                 ; 0000 0831                 SelectAnotherRow(0);
000f63 940e 1b0d 	CALL SUBOPT_0x48
                 ; 0000 0832                 }
                 ; 0000 0833                 else if(BUTTON[BUTTON_UP]==1){
000f65 c0f6      	RJMP _0x248
                 _0x247:
000f66 91a0 058d 	LDS  R26,_BUTTON_S0000006001
000f68 30a1      	CPI  R26,LOW(0x1)
000f69 f419      	BRNE _0x249
                 ; 0000 0834                 SelectAnotherRow(1);
000f6a 940e 1b11 	CALL SUBOPT_0x49
                 ; 0000 0835                 }
                 ; 0000 0836                 else if(BUTTON[BUTTON_ENTER]==1){
000f6c c0ef      	RJMP _0x24A
                 _0x249:
                +
000f6d 91a0 058f+LDS R26 , _BUTTON_S0000006001 + ( 2 )
                 	__GETB2MN _BUTTON_S0000006001,2
000f6f 30a1      	CPI  R26,LOW(0x1)
000f70 f441      	BRNE _0x24B
                 ; 0000 0837                     if(SelectedRow==0){
000f71 91e0 0534 	LDS  R30,_SelectedRow_G000
000f73 30e0      	CPI  R30,0
000f74 f419      	BRNE _0x24C
                 ; 0000 0838                     Address[0] = 0;
000f75 e0e0      	LDI  R30,LOW(0)
000f76 940e 1b15 	CALL SUBOPT_0x4A
                 ; 0000 0839                     SelectedRow = 0;
                 ; 0000 083A                     Address[5] = 0;
                 ; 0000 083B                     }
                 ; 0000 083C                 }
                 _0x24C:
                 ; 0000 083D                 else if(BUTTON[BUTTON_LEFT]==1){
000f78 c0e3      	RJMP _0x24D
                 _0x24B:
                +
000f79 91a0 058e+LDS R26 , _BUTTON_S0000006001 + ( 1 )
                 	__GETB2MN _BUTTON_S0000006001,1
000f7b 30a1      	CPI  R26,LOW(0x1)
000f7c f011      	BREQ PC+3
000f7d 940c 0fe9 	JMP _0x24E
                 ; 0000 083E                     if((SelectedRow==1)||(SelectedRow==2)){
000f7f 91a0 0534 	LDS  R26,_SelectedRow_G000
000f81 30a1      	CPI  R26,LOW(0x1)
000f82 f019      	BREQ _0x250
000f83 30a2      	CPI  R26,LOW(0x2)
000f84 f009      	BREQ _0x250
000f85 c062      	RJMP _0x24F
                 _0x250:
                 ; 0000 083F                         if((DS18B20_IS_ASSIGNED[USING_TEMPERATURE_SENSOR]==1)||(DS18B20_IS_ASSIGNED[USING_TEMPERATURE_SENSOR]==2)){
000f86 940e 19b8 	CALL SUBOPT_0x17
000f88 940e 2063 	CALL __EEPROMRDB
000f8a 30e1      	CPI  R30,LOW(0x1)
000f8b f019      	BREQ _0x253
000f8c 30e2      	CPI  R30,LOW(0x2)
000f8d f009      	BREQ _0x253
000f8e c059      	RJMP _0x252
                 _0x253:
                 ; 0000 0840                         signed char i, Found=0;
                 ; 0000 0841                             for(i=ds18b20_sensor_assignation[USING_TEMPERATURE_SENSOR]-1;i>=0;i--){
000f8f 940e 1b6a 	CALL SUBOPT_0x56
                 ;	USING_TEMPERATURE_SENSOR -> Y+2
                 ;	i -> Y+1
                 ;	Found -> Y+0
000f91 81e0      	LD   R30,Z
000f92 940e 1923 	CALL SUBOPT_0x3
000f94 83e9      	STD  Y+1,R30
                 _0x256:
000f95 81a9      	LDD  R26,Y+1
000f96 30a0      	CPI  R26,0
000f97 f414      	BRGE PC+3
000f98 940c 0fdb 	JMP _0x257
                 ; 0000 0842                             unsigned char used=0, a;
                 ; 0000 0843                                 for(a=0;a<MAX_DS18B20_DEVICES;a++){
000f9a 940e 1b6f 	CALL SUBOPT_0x57
                 ;	USING_TEMPERATURE_SENSOR -> Y+4
                 ;	i -> Y+3
                 ;	Found -> Y+2
                 ;	used -> Y+1
                 ;	a -> Y+0
                 _0x259:
000f9c 81a8      	LD   R26,Y
000f9d 30a8      	CPI  R26,LOW(0x8)
000f9e f4a8      	BRSH _0x25A
                 ; 0000 0844                                     if(DS18B20_IS_ASSIGNED[a]==1){
000f9f 940e 19b8 	CALL SUBOPT_0x17
000fa1 940e 2063 	CALL __EEPROMRDB
000fa3 30e1      	CPI  R30,LOW(0x1)
000fa4 f459      	BRNE _0x25B
                 ; 0000 0845                                         if(ds18b20_sensor_assignation[a]==i){
000fa5 81e8      	LD   R30,Y
000fa6 940e 1a0a 	CALL SUBOPT_0x25
000fa8 940e 1b74 	CALL SUBOPT_0x58
000faa 17ea      	CP   R30,R26
000fab 07fb      	CPC  R31,R27
000fac f419      	BRNE _0x25C
                 ; 0000 0846                                         used = 1;
000fad e0e1      	LDI  R30,LOW(1)
000fae 83e9      	STD  Y+1,R30
                 ; 0000 0847                                         break;
000faf c004      	RJMP _0x25A
                 ; 0000 0848                                         }
                 ; 0000 0849                                     }
                 _0x25C:
                 ; 0000 084A                                 }
                 _0x25B:
000fb0 81e8      	LD   R30,Y
000fb1 5fef      	SUBI R30,-LOW(1)
000fb2 83e8      	ST   Y,R30
000fb3 cfe8      	RJMP _0x259
                 _0x25A:
                 ; 0000 084B 
                 ; 0000 084C                                 if(used==0){
000fb4 81e9      	LDD  R30,Y+1
000fb5 30e0      	CPI  R30,0
000fb6 f4f9      	BRNE _0x25D
                 ; 0000 084D                                 unsigned char b;
                 ; 0000 084E                                 ds18b20_sensor_assignation[USING_TEMPERATURE_SENSOR] = i;
000fb7 940e 1b77 	CALL SUBOPT_0x59
                 ;	USING_TEMPERATURE_SENSOR -> Y+5
                 ;	i -> Y+4
                 ;	Found -> Y+3
                 ;	used -> Y+2
                 ;	a -> Y+1
                 ;	b -> Y+0
000fb9 940e 1b7a 	CALL SUBOPT_0x5A
                 ; 0000 084F                                     for(b=0;b<9;b++){
                 _0x25F:
000fbb 81a8      	LD   R26,Y
000fbc 30a9      	CPI  R26,LOW(0x9)
000fbd f488      	BRSH _0x260
                 ; 0000 0850                                     DS18B20_ADDRESSES[USING_TEMPERATURE_SENSOR][b] = rom_code[i][b];
000fbe 81ed      	LDD  R30,Y+5
000fbf 940e 1a04 	CALL SUBOPT_0x24
000fc1 01df      	MOVW R26,R30
000fc2 940e 1a39 	CALL SUBOPT_0x2C
000fc4 940e 1b7f 	CALL SUBOPT_0x5B
000fc6 01df      	MOVW R26,R30
000fc7 940e 1a39 	CALL SUBOPT_0x2C
000fc9 940e 1b84 	CALL SUBOPT_0x5C
                 ; 0000 0851                                     }
000fcb 81e8      	LD   R30,Y
000fcc 5fef      	SUBI R30,-LOW(1)
000fcd 83e8      	ST   Y,R30
000fce cfec      	RJMP _0x25F
                 _0x260:
                 ; 0000 0852                                 Found = 1;
000fcf e0e1      	LDI  R30,LOW(1)
000fd0 940e 1ba2 	CALL SUBOPT_0x61
                 ; 0000 0853                                 TEMPERATURES[USING_TEMPERATURE_SENSOR] = 0.0;
000fd2 940e 1b8b 	CALL SUBOPT_0x5D
                 ; 0000 0854                                 break;
000fd4 9623      	ADIW R28,3
000fd5 c005      	RJMP _0x257
                 ; 0000 0855                                 }
                 ; 0000 0856                             }
                 _0x25D:
000fd6 9622      	ADIW R28,2
000fd7 81e9      	LDD  R30,Y+1
000fd8 50e1      	SUBI R30,LOW(1)
000fd9 83e9      	STD  Y+1,R30
000fda cfba      	RJMP _0x256
                 _0x257:
                 ; 0000 0857 
                 ; 0000 0858                             if(Found==0){
000fdb 81e8      	LD   R30,Y
000fdc 30e0      	CPI  R30,0
000fdd f449      	BRNE _0x261
                 ; 0000 0859                             DS18B20_IS_ASSIGNED[USING_TEMPERATURE_SENSOR] = 0;
000fde 81aa      	LDD  R26,Y+2
000fdf 940e 1a3c 	CALL SUBOPT_0x2D
000fe1 940e 1b94 	CALL SUBOPT_0x5E
                 ; 0000 085A                             ds18b20_sensor_assignation[USING_TEMPERATURE_SENSOR] = 255;
000fe3 940e 1b99 	CALL SUBOPT_0x5F
                 ; 0000 085B                             TEMPERATURES[USING_TEMPERATURE_SENSOR] = 0.0;
000fe5 940e 1b8b 	CALL SUBOPT_0x5D
                 ; 0000 085C                             }
                 ; 0000 085D                         }
                 _0x261:
000fe7 9622      	ADIW R28,2
                 ; 0000 085E                     }
                 _0x252:
                 ; 0000 085F                 }
                 _0x24F:
                 ; 0000 0860                 else if(BUTTON[BUTTON_RIGHT]==1){
000fe8 c073      	RJMP _0x262
                 _0x24E:
                +
000fe9 91a0 0590+LDS R26 , _BUTTON_S0000006001 + ( 3 )
                 	__GETB2MN _BUTTON_S0000006001,3
000feb 30a1      	CPI  R26,LOW(0x1)
000fec f011      	BREQ PC+3
000fed 940c 105c 	JMP _0x263
                 ; 0000 0861                     if((SelectedRow==1)||(SelectedRow==2)){
000fef 91a0 0534 	LDS  R26,_SelectedRow_G000
000ff1 30a1      	CPI  R26,LOW(0x1)
000ff2 f019      	BREQ _0x265
000ff3 30a2      	CPI  R26,LOW(0x2)
000ff4 f009      	BREQ _0x265
000ff5 c066      	RJMP _0x264
                 _0x265:
                 ; 0000 0862                     unsigned char i, Found=0;
                 ; 0000 0863                         if(DS18B20_IS_ASSIGNED[USING_TEMPERATURE_SENSOR]==1){
000ff6 940e 1b9d 	CALL SUBOPT_0x60
                 ;	USING_TEMPERATURE_SENSOR -> Y+2
                 ;	i -> Y+1
                 ;	Found -> Y+0
000ff8 940e 2063 	CALL __EEPROMRDB
000ffa 30e1      	CPI  R30,LOW(0x1)
000ffb f431      	BRNE _0x267
                 ; 0000 0864                         i = ds18b20_sensor_assignation[USING_TEMPERATURE_SENSOR] + 1;
000ffc 81ea      	LDD  R30,Y+2
000ffd 940e 1a0a 	CALL SUBOPT_0x25
000fff 81e0      	LD   R30,Z
001000 5fef      	SUBI R30,-LOW(1)
001001 c001      	RJMP _0x301
                 ; 0000 0865                         }
                 ; 0000 0866                         else{
                 _0x267:
                 ; 0000 0867                         i = 0;
001002 e0e0      	LDI  R30,LOW(0)
                 _0x301:
001003 83e9      	STD  Y+1,R30
                 ; 0000 0868                         }
                 ; 0000 0869 
                 ; 0000 086A                         for(i=i;i<ds18b20_devices;i++){
001004 83e9      	STD  Y+1,R30
                 _0x26A:
001005 940e 19ef 	CALL SUBOPT_0x20
001007 f010      	BRLO PC+3
001008 940c 104e 	JMP _0x26B
                 ; 0000 086B                         unsigned char used=0, a;
                 ; 0000 086C                             for(a=0;a<MAX_DS18B20_DEVICES;a++){
00100a 940e 1b6f 	CALL SUBOPT_0x57
                 ;	USING_TEMPERATURE_SENSOR -> Y+4
                 ;	i -> Y+3
                 ;	Found -> Y+2
                 ;	used -> Y+1
                 ;	a -> Y+0
                 _0x26D:
00100c 81a8      	LD   R26,Y
00100d 30a8      	CPI  R26,LOW(0x8)
00100e f4a0      	BRSH _0x26E
                 ; 0000 086D                                 if(DS18B20_IS_ASSIGNED[a]==1){
00100f 940e 19b8 	CALL SUBOPT_0x17
001011 940e 2063 	CALL __EEPROMRDB
001013 30e1      	CPI  R30,LOW(0x1)
001014 f451      	BRNE _0x26F
                 ; 0000 086E                                     if(ds18b20_sensor_assignation[a]==i){
001015 81e8      	LD   R30,Y
001016 940e 1a0a 	CALL SUBOPT_0x25
001018 81a0      	LD   R26,Z
001019 81eb      	LDD  R30,Y+3
00101a 17ea      	CP   R30,R26
00101b f419      	BRNE _0x270
                 ; 0000 086F                                     used = 1;
00101c e0e1      	LDI  R30,LOW(1)
00101d 83e9      	STD  Y+1,R30
                 ; 0000 0870                                     break;
00101e c004      	RJMP _0x26E
                 ; 0000 0871                                     }
                 ; 0000 0872                                 }
                 _0x270:
                 ; 0000 0873                             }
                 _0x26F:
00101f 81e8      	LD   R30,Y
001020 5fef      	SUBI R30,-LOW(1)
001021 83e8      	ST   Y,R30
001022 cfe9      	RJMP _0x26D
                 _0x26E:
                 ; 0000 0874 
                 ; 0000 0875                             if(used==0){
001023 81e9      	LDD  R30,Y+1
001024 30e0      	CPI  R30,0
001025 f519      	BRNE _0x271
                 ; 0000 0876                             unsigned char b;
                 ; 0000 0877                             ds18b20_sensor_assignation[USING_TEMPERATURE_SENSOR] = i;
001026 940e 1b77 	CALL SUBOPT_0x59
                 ;	USING_TEMPERATURE_SENSOR -> Y+5
                 ;	i -> Y+4
                 ;	Found -> Y+3
                 ;	used -> Y+2
                 ;	a -> Y+1
                 ;	b -> Y+0
001028 940e 1b7a 	CALL SUBOPT_0x5A
                 ; 0000 0878                                 for(b=0;b<9;b++){
                 _0x273:
00102a 81a8      	LD   R26,Y
00102b 30a9      	CPI  R26,LOW(0x9)
00102c f488      	BRSH _0x274
                 ; 0000 0879                                 DS18B20_ADDRESSES[USING_TEMPERATURE_SENSOR][b] = rom_code[i][b];
00102d 81ed      	LDD  R30,Y+5
00102e 940e 1a04 	CALL SUBOPT_0x24
001030 01df      	MOVW R26,R30
001031 940e 1a39 	CALL SUBOPT_0x2C
001033 940e 1b7f 	CALL SUBOPT_0x5B
001035 01df      	MOVW R26,R30
001036 940e 1a39 	CALL SUBOPT_0x2C
001038 940e 1b84 	CALL SUBOPT_0x5C
                 ; 0000 087A                                 }
00103a 81e8      	LD   R30,Y
00103b 5fef      	SUBI R30,-LOW(1)
00103c 83e8      	ST   Y,R30
00103d cfec      	RJMP _0x273
                 _0x274:
                 ; 0000 087B                             DS18B20_IS_ASSIGNED[USING_TEMPERATURE_SENSOR] = 1;
00103e 81ad      	LDD  R26,Y+5
00103f 940e 1a3c 	CALL SUBOPT_0x2D
001041 940e 1a13 	CALL SUBOPT_0x27
                 ; 0000 087C                             Found = 1;
001043 940e 1ba2 	CALL SUBOPT_0x61
                 ; 0000 087D                             TEMPERATURES[USING_TEMPERATURE_SENSOR] = 0.0;
001045 940e 1b8b 	CALL SUBOPT_0x5D
                 ; 0000 087E                             break;
001047 9623      	ADIW R28,3
001048 c005      	RJMP _0x26B
                 ; 0000 087F                             }
                 ; 0000 0880                         }
                 _0x271:
001049 9622      	ADIW R28,2
00104a 81e9      	LDD  R30,Y+1
00104b 5fef      	SUBI R30,-LOW(1)
00104c 83e9      	STD  Y+1,R30
00104d cfb7      	RJMP _0x26A
                 _0x26B:
                 ; 0000 0881 
                 ; 0000 0882                         if(Found==0){
00104e 81e8      	LD   R30,Y
00104f 30e0      	CPI  R30,0
001050 f451      	BRNE _0x275
                 ; 0000 0883                         lcd_clear();
001051 940e 1ba5 	CALL SUBOPT_0x62
                 ; 0000 0884                         lcd_putsf(" AUKSTESNIO NUMERIO ");
                 ; 0000 0885                         lcd_putsf(" LAISVO TERMOMETRO  ");
001053 940e 1baa 	CALL SUBOPT_0x63
                 ; 0000 0886                         lcd_putsf("        NERA        ");
001055 940e 1bad 	CALL SUBOPT_0x64
                 ; 0000 0887                         delay_ms(1000);
001057 940e 1990 	CALL SUBOPT_0x11
                 ; 0000 0888                         lcd_clear();
001059 940e 17a3 	CALL _lcd_clear
                 ; 0000 0889                         }
                 ; 0000 088A                     }
                 _0x275:
00105b 9622      	ADIW R28,2
                 ; 0000 088B                 }
                 _0x264:
                 ; 0000 088C 
                 ; 0000 088D                 if(RefreshLcd>=1){
                 _0x263:
                 _0x262:
                 _0x24D:
                 _0x24A:
                 _0x248:
00105c 91a0 0535 	LDS  R26,_RefreshLcd_G000
00105e 30a1      	CPI  R26,LOW(0x1)
00105f f410      	BRSH PC+3
001060 940c 10bb 	JMP _0x276
                 ; 0000 088E                 unsigned char row, lcd_row;
                 ; 0000 088F                 lcd_row = 0;
001062 940e 1bb0 	CALL SUBOPT_0x65
                 ;	USING_TEMPERATURE_SENSOR -> Y+2
                 ;	row -> Y+1
                 ;	lcd_row -> Y+0
                 ; 0000 0890                 RowsOnWindow = 4;
                 ; 0000 0891                     for(row=Address[5];row<4+Address[5];row++){
                 _0x278:
001064 940e 192a 	CALL SUBOPT_0x5
001066 940e 1b23 	CALL SUBOPT_0x4C
001068 f014      	BRLT PC+3
001069 940c 10b7 	JMP _0x279
                 ; 0000 0892                     lcd_gotoxy(0,lcd_row);
00106b 940e 1b26 	CALL SUBOPT_0x4D
                 ; 0000 0893                         if(row==0){
00106d f429      	BRNE _0x27A
                 ; 0000 0894                         lcd_putsf("-=SOLIAR. 2 TERM.=- ");
                +
00106e efee     +LDI R30 , LOW ( 2 * _0x0 + ( 596 ) )
00106f e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 596 ) )
                 	__POINTW1FN _0x0,596
001070 940e 1996 	CALL SUBOPT_0x12
                 ; 0000 0895                         }
                 ; 0000 0896                         else if(row==1){
001072 c03d      	RJMP _0x27B
                 _0x27A:
001073 81a9      	LDD  R26,Y+1
001074 30a1      	CPI  R26,LOW(0x1)
001075 f511      	BRNE _0x27C
                 ; 0000 0897                         lcd_putsf("1.TEMPERAT.:");
001076 940e 1bc6 	CALL SUBOPT_0x69
                 ; 0000 0898                             if(DS18B20_IS_ASSIGNED[USING_TEMPERATURE_SENSOR]==1){
001078 81aa      	LDD  R26,Y+2
001079 940e 1a3c 	CALL SUBOPT_0x2D
00107b 940e 2063 	CALL __EEPROMRDB
00107d 30e1      	CPI  R30,LOW(0x1)
00107e f441      	BRNE _0x27D
                 ; 0000 0899                             char lcd_buffer[10];
                 ; 0000 089A                             sprintf(lcd_buffer,"%+2.1f\xdfC",TEMPERATURES[USING_TEMPERATURE_SENSOR]);
00107f 940e 1b2f 	CALL SUBOPT_0x4E
                 ;	USING_TEMPERATURE_SENSOR -> Y+12
                 ;	row -> Y+11
                 ;	lcd_row -> Y+10
                 ;	lcd_buffer -> Y+0
001081 89e8      	LDD  R30,Y+16
001082 940e 1a43 	CALL SUBOPT_0x2F
001084 940e 1bb5 	CALL SUBOPT_0x66
                 ; 0000 089B                             lcd_puts(lcd_buffer);
                 ; 0000 089C                             }
                 ; 0000 089D                             else if(DS18B20_IS_ASSIGNED[USING_TEMPERATURE_SENSOR]==2){
001086 c010      	RJMP _0x27E
                 _0x27D:
001087 81aa      	LDD  R26,Y+2
001088 940e 1a3c 	CALL SUBOPT_0x2D
00108a 940e 2063 	CALL __EEPROMRDB
00108c 30e2      	CPI  R30,LOW(0x2)
00108d f419      	BRNE _0x27F
                 ; 0000 089E                             lcd_putsf("    OFF");
                +
00108e e6e0     +LDI R30 , LOW ( 2 * _0x0 + ( 438 ) )
00108f e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 438 ) )
                 	__POINTW1FN _0x0,438
001090 c002      	RJMP _0x302
                 ; 0000 089F                             }
                 ; 0000 08A0                             else{
                 _0x27F:
                 ; 0000 08A1                             lcd_putsf("   ----");
                +
001091 e6e8     +LDI R30 , LOW ( 2 * _0x0 + ( 446 ) )
001092 e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 446 ) )
                 	__POINTW1FN _0x0,446
                 _0x302:
001093 93fa      	ST   -Y,R31
001094 93ea      	ST   -Y,R30
001095 940e 17df 	CALL _lcd_putsf
                 ; 0000 08A2                             }
                 _0x27E:
                 ; 0000 08A3                         }
                 ; 0000 08A4                         else if(row==2){
001097 c018      	RJMP _0x281
                 _0x27C:
001098 81a9      	LDD  R26,Y+1
001099 30a2      	CPI  R26,LOW(0x2)
00109a f4a9      	BRNE _0x282
                 ; 0000 08A5                         lcd_putsf("2.TERMOMETRO NR:");
00109b 940e 1bc9 	CALL SUBOPT_0x6A
                 ; 0000 08A6                             if(DS18B20_IS_ASSIGNED[USING_TEMPERATURE_SENSOR]==1){
00109d 81aa      	LDD  R26,Y+2
00109e 940e 1a3c 	CALL SUBOPT_0x2D
0010a0 940e 2063 	CALL __EEPROMRDB
0010a2 30e1      	CPI  R30,LOW(0x1)
0010a3 f431      	BRNE _0x283
                 ; 0000 08A7                             lcd_putchar(NumToIndex(ds18b20_sensor_assignation[USING_TEMPERATURE_SENSOR])+1);
0010a4 81ea      	LDD  R30,Y+2
0010a5 940e 1a0a 	CALL SUBOPT_0x25
0010a7 940e 1bba 	CALL SUBOPT_0x67
                 ; 0000 08A8                             lcd_putchar('/');
                 ; 0000 08A9                             lcd_putchar(NumToIndex(ds18b20_devices));
0010a9 c002      	RJMP _0x303
                 ; 0000 08AA                             }
                 ; 0000 08AB                             else{
                 _0x283:
                 ; 0000 08AC                             lcd_putsf("-/");
0010aa 940e 1bc3 	CALL SUBOPT_0x68
                 ; 0000 08AD                             lcd_putchar(NumToIndex(ds18b20_devices));
                 _0x303:
0010ac 91e0 0538 	LDS  R30,_ds18b20_devices_S0000006000
0010ae 940e 19e4 	CALL SUBOPT_0x1E
                 ; 0000 08AE                             }
                 ; 0000 08AF                         }
                 ; 0000 08B0                     lcd_row++;
                 _0x282:
                 _0x281:
                 _0x27B:
0010b0 81e8      	LD   R30,Y
0010b1 5fef      	SUBI R30,-LOW(1)
0010b2 83e8      	ST   Y,R30
                 ; 0000 08B1                     }
0010b3 81e9      	LDD  R30,Y+1
0010b4 5fef      	SUBI R30,-LOW(1)
0010b5 83e9      	STD  Y+1,R30
0010b6 cfad      	RJMP _0x278
                 _0x279:
                 ; 0000 08B2 
                 ; 0000 08B3                 lcd_gotoxy(19,SelectedRow-Address[5]);
0010b7 940e 1b45 	CALL SUBOPT_0x50
0010b9 940e 1b4b 	CALL SUBOPT_0x51
                 ; 0000 08B4                 lcd_putchar('<');
                 ; 0000 08B5                 }
                 ; 0000 08B6             }
                 _0x276:
0010bb 9621      	ADIW R28,1
                 ; 0000 08B7 
                 ; 0000 08B8             // 3 soliariumo temp
                 ; 0000 08B9             else if(Address[0]==6){
0010bc c20e      	RJMP _0x285
                 _0x246:
0010bd 91a0 052e 	LDS  R26,_Address_G000
0010bf 30a6      	CPI  R26,LOW(0x6)
0010c0 f011      	BREQ PC+3
0010c1 940c 1222 	JMP _0x286
                 ; 0000 08BA             unsigned char USING_TEMPERATURE_SENSOR=4;
                 ; 0000 08BB                 if(BUTTON[BUTTON_DOWN]==1){
0010c3 9721      	SBIW R28,1
0010c4 e0e4      	LDI  R30,LOW(4)
0010c5 940e 1b56 	CALL SUBOPT_0x52
                 ;	USING_TEMPERATURE_SENSOR -> Y+0
0010c7 f419      	BRNE _0x287
                 ; 0000 08BC                 SelectAnotherRow(0);
0010c8 940e 1b0d 	CALL SUBOPT_0x48
                 ; 0000 08BD                 }
                 ; 0000 08BE                 else if(BUTTON[BUTTON_UP]==1){
0010ca c0f6      	RJMP _0x288
                 _0x287:
0010cb 91a0 058d 	LDS  R26,_BUTTON_S0000006001
0010cd 30a1      	CPI  R26,LOW(0x1)
0010ce f419      	BRNE _0x289
                 ; 0000 08BF                 SelectAnotherRow(1);
0010cf 940e 1b11 	CALL SUBOPT_0x49
                 ; 0000 08C0                 }
                 ; 0000 08C1                 else if(BUTTON[BUTTON_ENTER]==1){
0010d1 c0ef      	RJMP _0x28A
                 _0x289:
                +
0010d2 91a0 058f+LDS R26 , _BUTTON_S0000006001 + ( 2 )
                 	__GETB2MN _BUTTON_S0000006001,2
0010d4 30a1      	CPI  R26,LOW(0x1)
0010d5 f441      	BRNE _0x28B
                 ; 0000 08C2                     if(SelectedRow==0){
0010d6 91e0 0534 	LDS  R30,_SelectedRow_G000
0010d8 30e0      	CPI  R30,0
0010d9 f419      	BRNE _0x28C
                 ; 0000 08C3                     Address[0] = 0;
0010da e0e0      	LDI  R30,LOW(0)
0010db 940e 1b15 	CALL SUBOPT_0x4A
                 ; 0000 08C4                     SelectedRow = 0;
                 ; 0000 08C5                     Address[5] = 0;
                 ; 0000 08C6                     }
                 ; 0000 08C7                 }
                 _0x28C:
                 ; 0000 08C8                 else if(BUTTON[BUTTON_LEFT]==1){
0010dd c0e3      	RJMP _0x28D
                 _0x28B:
                +
0010de 91a0 058e+LDS R26 , _BUTTON_S0000006001 + ( 1 )
                 	__GETB2MN _BUTTON_S0000006001,1
0010e0 30a1      	CPI  R26,LOW(0x1)
0010e1 f011      	BREQ PC+3
0010e2 940c 114e 	JMP _0x28E
                 ; 0000 08C9                     if((SelectedRow==1)||(SelectedRow==2)){
0010e4 91a0 0534 	LDS  R26,_SelectedRow_G000
0010e6 30a1      	CPI  R26,LOW(0x1)
0010e7 f019      	BREQ _0x290
0010e8 30a2      	CPI  R26,LOW(0x2)
0010e9 f009      	BREQ _0x290
0010ea c062      	RJMP _0x28F
                 _0x290:
                 ; 0000 08CA                         if((DS18B20_IS_ASSIGNED[USING_TEMPERATURE_SENSOR]==1)||(DS18B20_IS_ASSIGNED[USING_TEMPERATURE_SENSOR]==2)){
0010eb 940e 19b8 	CALL SUBOPT_0x17
0010ed 940e 2063 	CALL __EEPROMRDB
0010ef 30e1      	CPI  R30,LOW(0x1)
0010f0 f019      	BREQ _0x293
0010f1 30e2      	CPI  R30,LOW(0x2)
0010f2 f009      	BREQ _0x293
0010f3 c059      	RJMP _0x292
                 _0x293:
                 ; 0000 08CB                         signed char i, Found=0;
                 ; 0000 08CC                             for(i=ds18b20_sensor_assignation[USING_TEMPERATURE_SENSOR]-1;i>=0;i--){
0010f4 940e 1b6a 	CALL SUBOPT_0x56
                 ;	USING_TEMPERATURE_SENSOR -> Y+2
                 ;	i -> Y+1
                 ;	Found -> Y+0
0010f6 81e0      	LD   R30,Z
0010f7 940e 1923 	CALL SUBOPT_0x3
0010f9 83e9      	STD  Y+1,R30
                 _0x296:
0010fa 81a9      	LDD  R26,Y+1
0010fb 30a0      	CPI  R26,0
0010fc f414      	BRGE PC+3
0010fd 940c 1140 	JMP _0x297
                 ; 0000 08CD                             unsigned char used=0, a;
                 ; 0000 08CE                                 for(a=0;a<MAX_DS18B20_DEVICES;a++){
0010ff 940e 1b6f 	CALL SUBOPT_0x57
                 ;	USING_TEMPERATURE_SENSOR -> Y+4
                 ;	i -> Y+3
                 ;	Found -> Y+2
                 ;	used -> Y+1
                 ;	a -> Y+0
                 _0x299:
001101 81a8      	LD   R26,Y
001102 30a8      	CPI  R26,LOW(0x8)
001103 f4a8      	BRSH _0x29A
                 ; 0000 08CF                                     if(DS18B20_IS_ASSIGNED[a]==1){
001104 940e 19b8 	CALL SUBOPT_0x17
001106 940e 2063 	CALL __EEPROMRDB
001108 30e1      	CPI  R30,LOW(0x1)
001109 f459      	BRNE _0x29B
                 ; 0000 08D0                                         if(ds18b20_sensor_assignation[a]==i){
00110a 81e8      	LD   R30,Y
00110b 940e 1a0a 	CALL SUBOPT_0x25
00110d 940e 1b74 	CALL SUBOPT_0x58
00110f 17ea      	CP   R30,R26
001110 07fb      	CPC  R31,R27
001111 f419      	BRNE _0x29C
                 ; 0000 08D1                                         used = 1;
001112 e0e1      	LDI  R30,LOW(1)
001113 83e9      	STD  Y+1,R30
                 ; 0000 08D2                                         break;
001114 c004      	RJMP _0x29A
                 ; 0000 08D3                                         }
                 ; 0000 08D4                                     }
                 _0x29C:
                 ; 0000 08D5                                 }
                 _0x29B:
001115 81e8      	LD   R30,Y
001116 5fef      	SUBI R30,-LOW(1)
001117 83e8      	ST   Y,R30
001118 cfe8      	RJMP _0x299
                 _0x29A:
                 ; 0000 08D6 
                 ; 0000 08D7                                 if(used==0){
001119 81e9      	LDD  R30,Y+1
00111a 30e0      	CPI  R30,0
00111b f4f9      	BRNE _0x29D
                 ; 0000 08D8                                 unsigned char b;
                 ; 0000 08D9                                 ds18b20_sensor_assignation[USING_TEMPERATURE_SENSOR] = i;
00111c 940e 1b77 	CALL SUBOPT_0x59
                 ;	USING_TEMPERATURE_SENSOR -> Y+5
                 ;	i -> Y+4
                 ;	Found -> Y+3
                 ;	used -> Y+2
                 ;	a -> Y+1
                 ;	b -> Y+0
00111e 940e 1b7a 	CALL SUBOPT_0x5A
                 ; 0000 08DA                                     for(b=0;b<9;b++){
                 _0x29F:
001120 81a8      	LD   R26,Y
001121 30a9      	CPI  R26,LOW(0x9)
001122 f488      	BRSH _0x2A0
                 ; 0000 08DB                                     DS18B20_ADDRESSES[USING_TEMPERATURE_SENSOR][b] = rom_code[i][b];
001123 81ed      	LDD  R30,Y+5
001124 940e 1a04 	CALL SUBOPT_0x24
001126 01df      	MOVW R26,R30
001127 940e 1a39 	CALL SUBOPT_0x2C
001129 940e 1b7f 	CALL SUBOPT_0x5B
00112b 01df      	MOVW R26,R30
00112c 940e 1a39 	CALL SUBOPT_0x2C
00112e 940e 1b84 	CALL SUBOPT_0x5C
                 ; 0000 08DC                                     }
001130 81e8      	LD   R30,Y
001131 5fef      	SUBI R30,-LOW(1)
001132 83e8      	ST   Y,R30
001133 cfec      	RJMP _0x29F
                 _0x2A0:
                 ; 0000 08DD                                 Found = 1;
001134 e0e1      	LDI  R30,LOW(1)
001135 940e 1ba2 	CALL SUBOPT_0x61
                 ; 0000 08DE                                 TEMPERATURES[USING_TEMPERATURE_SENSOR] = 0.0;
001137 940e 1b8b 	CALL SUBOPT_0x5D
                 ; 0000 08DF                                 break;
001139 9623      	ADIW R28,3
00113a c005      	RJMP _0x297
                 ; 0000 08E0                                 }
                 ; 0000 08E1                             }
                 _0x29D:
00113b 9622      	ADIW R28,2
00113c 81e9      	LDD  R30,Y+1
00113d 50e1      	SUBI R30,LOW(1)
00113e 83e9      	STD  Y+1,R30
00113f cfba      	RJMP _0x296
                 _0x297:
                 ; 0000 08E2 
                 ; 0000 08E3                             if(Found==0){
001140 81e8      	LD   R30,Y
001141 30e0      	CPI  R30,0
001142 f449      	BRNE _0x2A1
                 ; 0000 08E4                             DS18B20_IS_ASSIGNED[USING_TEMPERATURE_SENSOR] = 0;
001143 81aa      	LDD  R26,Y+2
001144 940e 1a3c 	CALL SUBOPT_0x2D
001146 940e 1b94 	CALL SUBOPT_0x5E
                 ; 0000 08E5                             ds18b20_sensor_assignation[USING_TEMPERATURE_SENSOR] = 255;
001148 940e 1b99 	CALL SUBOPT_0x5F
                 ; 0000 08E6                             TEMPERATURES[USING_TEMPERATURE_SENSOR] = 0.0;
00114a 940e 1b8b 	CALL SUBOPT_0x5D
                 ; 0000 08E7                             }
                 ; 0000 08E8                         }
                 _0x2A1:
00114c 9622      	ADIW R28,2
                 ; 0000 08E9                     }
                 _0x292:
                 ; 0000 08EA                 }
                 _0x28F:
                 ; 0000 08EB                 else if(BUTTON[BUTTON_RIGHT]==1){
00114d c073      	RJMP _0x2A2
                 _0x28E:
                +
00114e 91a0 0590+LDS R26 , _BUTTON_S0000006001 + ( 3 )
                 	__GETB2MN _BUTTON_S0000006001,3
001150 30a1      	CPI  R26,LOW(0x1)
001151 f011      	BREQ PC+3
001152 940c 11c1 	JMP _0x2A3
                 ; 0000 08EC                     if((SelectedRow==1)||(SelectedRow==2)){
001154 91a0 0534 	LDS  R26,_SelectedRow_G000
001156 30a1      	CPI  R26,LOW(0x1)
001157 f019      	BREQ _0x2A5
001158 30a2      	CPI  R26,LOW(0x2)
001159 f009      	BREQ _0x2A5
00115a c066      	RJMP _0x2A4
                 _0x2A5:
                 ; 0000 08ED                     unsigned char i, Found=0;
                 ; 0000 08EE                         if(DS18B20_IS_ASSIGNED[USING_TEMPERATURE_SENSOR]==1){
00115b 940e 1b9d 	CALL SUBOPT_0x60
                 ;	USING_TEMPERATURE_SENSOR -> Y+2
                 ;	i -> Y+1
                 ;	Found -> Y+0
00115d 940e 2063 	CALL __EEPROMRDB
00115f 30e1      	CPI  R30,LOW(0x1)
001160 f431      	BRNE _0x2A7
                 ; 0000 08EF                         i = ds18b20_sensor_assignation[USING_TEMPERATURE_SENSOR] + 1;
001161 81ea      	LDD  R30,Y+2
001162 940e 1a0a 	CALL SUBOPT_0x25
001164 81e0      	LD   R30,Z
001165 5fef      	SUBI R30,-LOW(1)
001166 c001      	RJMP _0x304
                 ; 0000 08F0                         }
                 ; 0000 08F1                         else{
                 _0x2A7:
                 ; 0000 08F2                         i = 0;
001167 e0e0      	LDI  R30,LOW(0)
                 _0x304:
001168 83e9      	STD  Y+1,R30
                 ; 0000 08F3                         }
                 ; 0000 08F4 
                 ; 0000 08F5                         for(i=i;i<ds18b20_devices;i++){
001169 83e9      	STD  Y+1,R30
                 _0x2AA:
00116a 940e 19ef 	CALL SUBOPT_0x20
00116c f010      	BRLO PC+3
00116d 940c 11b3 	JMP _0x2AB
                 ; 0000 08F6                         unsigned char used=0, a;
                 ; 0000 08F7                             for(a=0;a<MAX_DS18B20_DEVICES;a++){
00116f 940e 1b6f 	CALL SUBOPT_0x57
                 ;	USING_TEMPERATURE_SENSOR -> Y+4
                 ;	i -> Y+3
                 ;	Found -> Y+2
                 ;	used -> Y+1
                 ;	a -> Y+0
                 _0x2AD:
001171 81a8      	LD   R26,Y
001172 30a8      	CPI  R26,LOW(0x8)
001173 f4a0      	BRSH _0x2AE
                 ; 0000 08F8                                 if(DS18B20_IS_ASSIGNED[a]==1){
001174 940e 19b8 	CALL SUBOPT_0x17
001176 940e 2063 	CALL __EEPROMRDB
001178 30e1      	CPI  R30,LOW(0x1)
001179 f451      	BRNE _0x2AF
                 ; 0000 08F9                                     if(ds18b20_sensor_assignation[a]==i){
00117a 81e8      	LD   R30,Y
00117b 940e 1a0a 	CALL SUBOPT_0x25
00117d 81a0      	LD   R26,Z
00117e 81eb      	LDD  R30,Y+3
00117f 17ea      	CP   R30,R26
001180 f419      	BRNE _0x2B0
                 ; 0000 08FA                                     used = 1;
001181 e0e1      	LDI  R30,LOW(1)
001182 83e9      	STD  Y+1,R30
                 ; 0000 08FB                                     break;
001183 c004      	RJMP _0x2AE
                 ; 0000 08FC                                     }
                 ; 0000 08FD                                 }
                 _0x2B0:
                 ; 0000 08FE                             }
                 _0x2AF:
001184 81e8      	LD   R30,Y
001185 5fef      	SUBI R30,-LOW(1)
001186 83e8      	ST   Y,R30
001187 cfe9      	RJMP _0x2AD
                 _0x2AE:
                 ; 0000 08FF 
                 ; 0000 0900                             if(used==0){
001188 81e9      	LDD  R30,Y+1
001189 30e0      	CPI  R30,0
00118a f519      	BRNE _0x2B1
                 ; 0000 0901                             unsigned char b;
                 ; 0000 0902                             ds18b20_sensor_assignation[USING_TEMPERATURE_SENSOR] = i;
00118b 940e 1b77 	CALL SUBOPT_0x59
                 ;	USING_TEMPERATURE_SENSOR -> Y+5
                 ;	i -> Y+4
                 ;	Found -> Y+3
                 ;	used -> Y+2
                 ;	a -> Y+1
                 ;	b -> Y+0
00118d 940e 1b7a 	CALL SUBOPT_0x5A
                 ; 0000 0903                                 for(b=0;b<9;b++){
                 _0x2B3:
00118f 81a8      	LD   R26,Y
001190 30a9      	CPI  R26,LOW(0x9)
001191 f488      	BRSH _0x2B4
                 ; 0000 0904                                 DS18B20_ADDRESSES[USING_TEMPERATURE_SENSOR][b] = rom_code[i][b];
001192 81ed      	LDD  R30,Y+5
001193 940e 1a04 	CALL SUBOPT_0x24
001195 01df      	MOVW R26,R30
001196 940e 1a39 	CALL SUBOPT_0x2C
001198 940e 1b7f 	CALL SUBOPT_0x5B
00119a 01df      	MOVW R26,R30
00119b 940e 1a39 	CALL SUBOPT_0x2C
00119d 940e 1b84 	CALL SUBOPT_0x5C
                 ; 0000 0905                                 }
00119f 81e8      	LD   R30,Y
0011a0 5fef      	SUBI R30,-LOW(1)
0011a1 83e8      	ST   Y,R30
0011a2 cfec      	RJMP _0x2B3
                 _0x2B4:
                 ; 0000 0906                             DS18B20_IS_ASSIGNED[USING_TEMPERATURE_SENSOR] = 1;
0011a3 81ad      	LDD  R26,Y+5
0011a4 940e 1a3c 	CALL SUBOPT_0x2D
0011a6 940e 1a13 	CALL SUBOPT_0x27
                 ; 0000 0907                             Found = 1;
0011a8 940e 1ba2 	CALL SUBOPT_0x61
                 ; 0000 0908                             TEMPERATURES[USING_TEMPERATURE_SENSOR] = 0.0;
0011aa 940e 1b8b 	CALL SUBOPT_0x5D
                 ; 0000 0909                             break;
0011ac 9623      	ADIW R28,3
0011ad c005      	RJMP _0x2AB
                 ; 0000 090A                             }
                 ; 0000 090B                         }
                 _0x2B1:
0011ae 9622      	ADIW R28,2
0011af 81e9      	LDD  R30,Y+1
0011b0 5fef      	SUBI R30,-LOW(1)
0011b1 83e9      	STD  Y+1,R30
0011b2 cfb7      	RJMP _0x2AA
                 _0x2AB:
                 ; 0000 090C 
                 ; 0000 090D                         if(Found==0){
0011b3 81e8      	LD   R30,Y
0011b4 30e0      	CPI  R30,0
0011b5 f451      	BRNE _0x2B5
                 ; 0000 090E                         lcd_clear();
0011b6 940e 1ba5 	CALL SUBOPT_0x62
                 ; 0000 090F                         lcd_putsf(" AUKSTESNIO NUMERIO ");
                 ; 0000 0910                         lcd_putsf(" LAISVO TERMOMETRO  ");
0011b8 940e 1baa 	CALL SUBOPT_0x63
                 ; 0000 0911                         lcd_putsf("        NERA        ");
0011ba 940e 1bad 	CALL SUBOPT_0x64
                 ; 0000 0912                         delay_ms(1000);
0011bc 940e 1990 	CALL SUBOPT_0x11
                 ; 0000 0913                         lcd_clear();
0011be 940e 17a3 	CALL _lcd_clear
                 ; 0000 0914                         }
                 ; 0000 0915                     }
                 _0x2B5:
0011c0 9622      	ADIW R28,2
                 ; 0000 0916                 }
                 _0x2A4:
                 ; 0000 0917 
                 ; 0000 0918                 if(RefreshLcd>=1){
                 _0x2A3:
                 _0x2A2:
                 _0x28D:
                 _0x28A:
                 _0x288:
0011c1 91a0 0535 	LDS  R26,_RefreshLcd_G000
0011c3 30a1      	CPI  R26,LOW(0x1)
0011c4 f410      	BRSH PC+3
0011c5 940c 1220 	JMP _0x2B6
                 ; 0000 0919                 unsigned char row, lcd_row;
                 ; 0000 091A                 lcd_row = 0;
0011c7 940e 1bb0 	CALL SUBOPT_0x65
                 ;	USING_TEMPERATURE_SENSOR -> Y+2
                 ;	row -> Y+1
                 ;	lcd_row -> Y+0
                 ; 0000 091B                 RowsOnWindow = 4;
                 ; 0000 091C                     for(row=Address[5];row<4+Address[5];row++){
                 _0x2B8:
0011c9 940e 192a 	CALL SUBOPT_0x5
0011cb 940e 1b23 	CALL SUBOPT_0x4C
0011cd f014      	BRLT PC+3
0011ce 940c 121c 	JMP _0x2B9
                 ; 0000 091D                     lcd_gotoxy(0,lcd_row);
0011d0 940e 1b26 	CALL SUBOPT_0x4D
                 ; 0000 091E                         if(row==0){
0011d2 f429      	BRNE _0x2BA
                 ; 0000 091F                         lcd_putsf("-=SOLIAR. 3 TERM.=- ");
                +
0011d3 e1e3     +LDI R30 , LOW ( 2 * _0x0 + ( 617 ) )
0011d4 e0f3     +LDI R31 , HIGH ( 2 * _0x0 + ( 617 ) )
                 	__POINTW1FN _0x0,617
0011d5 940e 1996 	CALL SUBOPT_0x12
                 ; 0000 0920                         }
                 ; 0000 0921                         else if(row==1){
0011d7 c03d      	RJMP _0x2BB
                 _0x2BA:
0011d8 81a9      	LDD  R26,Y+1
0011d9 30a1      	CPI  R26,LOW(0x1)
0011da f511      	BRNE _0x2BC
                 ; 0000 0922                         lcd_putsf("1.TEMPERAT.:");
0011db 940e 1bc6 	CALL SUBOPT_0x69
                 ; 0000 0923                             if(DS18B20_IS_ASSIGNED[USING_TEMPERATURE_SENSOR]==1){
0011dd 81aa      	LDD  R26,Y+2
0011de 940e 1a3c 	CALL SUBOPT_0x2D
0011e0 940e 2063 	CALL __EEPROMRDB
0011e2 30e1      	CPI  R30,LOW(0x1)
0011e3 f441      	BRNE _0x2BD
                 ; 0000 0924                             char lcd_buffer[10];
                 ; 0000 0925                             sprintf(lcd_buffer,"%+2.1f\xdfC",TEMPERATURES[USING_TEMPERATURE_SENSOR]);
0011e4 940e 1b2f 	CALL SUBOPT_0x4E
                 ;	USING_TEMPERATURE_SENSOR -> Y+12
                 ;	row -> Y+11
                 ;	lcd_row -> Y+10
                 ;	lcd_buffer -> Y+0
0011e6 89e8      	LDD  R30,Y+16
0011e7 940e 1a43 	CALL SUBOPT_0x2F
0011e9 940e 1bb5 	CALL SUBOPT_0x66
                 ; 0000 0926                             lcd_puts(lcd_buffer);
                 ; 0000 0927                             }
                 ; 0000 0928                             else if(DS18B20_IS_ASSIGNED[USING_TEMPERATURE_SENSOR]==2){
0011eb c010      	RJMP _0x2BE
                 _0x2BD:
0011ec 81aa      	LDD  R26,Y+2
0011ed 940e 1a3c 	CALL SUBOPT_0x2D
0011ef 940e 2063 	CALL __EEPROMRDB
0011f1 30e2      	CPI  R30,LOW(0x2)
0011f2 f419      	BRNE _0x2BF
                 ; 0000 0929                             lcd_putsf("    OFF");
                +
0011f3 e6e0     +LDI R30 , LOW ( 2 * _0x0 + ( 438 ) )
0011f4 e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 438 ) )
                 	__POINTW1FN _0x0,438
0011f5 c002      	RJMP _0x305
                 ; 0000 092A                             }
                 ; 0000 092B                             else{
                 _0x2BF:
                 ; 0000 092C                             lcd_putsf("   ----");
                +
0011f6 e6e8     +LDI R30 , LOW ( 2 * _0x0 + ( 446 ) )
0011f7 e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 446 ) )
                 	__POINTW1FN _0x0,446
                 _0x305:
0011f8 93fa      	ST   -Y,R31
0011f9 93ea      	ST   -Y,R30
0011fa 940e 17df 	CALL _lcd_putsf
                 ; 0000 092D                             }
                 _0x2BE:
                 ; 0000 092E                         }
                 ; 0000 092F                         else if(row==2){
0011fc c018      	RJMP _0x2C1
                 _0x2BC:
0011fd 81a9      	LDD  R26,Y+1
0011fe 30a2      	CPI  R26,LOW(0x2)
0011ff f4a9      	BRNE _0x2C2
                 ; 0000 0930                         lcd_putsf("2.TERMOMETRO NR:");
001200 940e 1bc9 	CALL SUBOPT_0x6A
                 ; 0000 0931                             if(DS18B20_IS_ASSIGNED[USING_TEMPERATURE_SENSOR]==1){
001202 81aa      	LDD  R26,Y+2
001203 940e 1a3c 	CALL SUBOPT_0x2D
001205 940e 2063 	CALL __EEPROMRDB
001207 30e1      	CPI  R30,LOW(0x1)
001208 f431      	BRNE _0x2C3
                 ; 0000 0932                             lcd_putchar(NumToIndex(ds18b20_sensor_assignation[USING_TEMPERATURE_SENSOR])+1);
001209 81ea      	LDD  R30,Y+2
00120a 940e 1a0a 	CALL SUBOPT_0x25
00120c 940e 1bba 	CALL SUBOPT_0x67
                 ; 0000 0933                             lcd_putchar('/');
                 ; 0000 0934                             lcd_putchar(NumToIndex(ds18b20_devices));
00120e c002      	RJMP _0x306
                 ; 0000 0935                             }
                 ; 0000 0936                             else{
                 _0x2C3:
                 ; 0000 0937                             lcd_putsf("-/");
00120f 940e 1bc3 	CALL SUBOPT_0x68
                 ; 0000 0938                             lcd_putchar(NumToIndex(ds18b20_devices));
                 _0x306:
001211 91e0 0538 	LDS  R30,_ds18b20_devices_S0000006000
001213 940e 19e4 	CALL SUBOPT_0x1E
                 ; 0000 0939                             }
                 ; 0000 093A                         }
                 ; 0000 093B                     lcd_row++;
                 _0x2C2:
                 _0x2C1:
                 _0x2BB:
001215 81e8      	LD   R30,Y
001216 5fef      	SUBI R30,-LOW(1)
001217 83e8      	ST   Y,R30
                 ; 0000 093C                     }
001218 81e9      	LDD  R30,Y+1
001219 5fef      	SUBI R30,-LOW(1)
00121a 83e9      	STD  Y+1,R30
00121b cfad      	RJMP _0x2B8
                 _0x2B9:
                 ; 0000 093D 
                 ; 0000 093E                 lcd_gotoxy(19,SelectedRow-Address[5]);
00121c 940e 1b45 	CALL SUBOPT_0x50
00121e 940e 1b4b 	CALL SUBOPT_0x51
                 ; 0000 093F                 lcd_putchar('<');
                 ; 0000 0940                 }
                 ; 0000 0941             }
                 _0x2B6:
001220 9621      	ADIW R28,1
                 ; 0000 0942 
                 ; 0000 0943             // Nustatymai
                 ; 0000 0944             else if(Address[0]==7){
001221 c0a9      	RJMP _0x2C5
                 _0x286:
001222 91a0 052e 	LDS  R26,_Address_G000
001224 30a7      	CPI  R26,LOW(0x7)
001225 f011      	BREQ PC+3
001226 940c 12cb 	JMP _0x2C6
                 ; 0000 0945                 if(Address[1]==0){
                +
001228 91e0 052f+LDS R30 , _Address_G000 + ( 1 )
                 	__GETB1MN _Address_G000,1
00122a 30e0      	CPI  R30,0
00122b f011      	BREQ PC+3
00122c 940c 1278 	JMP _0x2C7
                 ; 0000 0946                     if(BUTTON[BUTTON_DOWN]==1){
                +
00122e 91a0 0591+LDS R26 , _BUTTON_S0000006001 + ( 4 )
                 	__GETB2MN _BUTTON_S0000006001,4
001230 30a1      	CPI  R26,LOW(0x1)
001231 f419      	BRNE _0x2C8
                 ; 0000 0947                     SelectAnotherRow(0);
001232 940e 1b0d 	CALL SUBOPT_0x48
                 ; 0000 0948                     }
                 ; 0000 0949                     else if(BUTTON[BUTTON_UP]==1){
001234 c019      	RJMP _0x2C9
                 _0x2C8:
001235 91a0 058d 	LDS  R26,_BUTTON_S0000006001
001237 30a1      	CPI  R26,LOW(0x1)
001238 f419      	BRNE _0x2CA
                 ; 0000 094A                     SelectAnotherRow(1);
001239 940e 1b11 	CALL SUBOPT_0x49
                 ; 0000 094B                     }
                 ; 0000 094C                     else if(BUTTON[BUTTON_ENTER]==1){
00123b c012      	RJMP _0x2CB
                 _0x2CA:
                +
00123c 91a0 058f+LDS R26 , _BUTTON_S0000006001 + ( 2 )
                 	__GETB2MN _BUTTON_S0000006001,2
00123e 30a1      	CPI  R26,LOW(0x1)
00123f f471      	BRNE _0x2CC
                 ; 0000 094D                         if(SelectedRow==0){
001240 91e0 0534 	LDS  R30,_SelectedRow_G000
001242 30e0      	CPI  R30,0
001243 f421      	BRNE _0x2CD
                 ; 0000 094E                         Address[0] = 0;
001244 e0e0      	LDI  R30,LOW(0)
001245 93e0 052e 	STS  _Address_G000,R30
                 ; 0000 094F                         }
                 ; 0000 0950                         else{
001247 c004      	RJMP _0x2CE
                 _0x2CD:
                 ; 0000 0951                         Address[1] = SelectedRow;
001248 91e0 0534 	LDS  R30,_SelectedRow_G000
                +
00124a 93e0 052f+STS _Address_G000 + ( 1 ) , R30
                 	__PUTB1MN _Address_G000,1
                 ; 0000 0952                         }
                 _0x2CE:
                 ; 0000 0953                     SelectedRow = 0;
00124c 940e 1bcc 	CALL SUBOPT_0x6B
                 ; 0000 0954                     Address[5] = 0;
                 ; 0000 0955                     }
                 ; 0000 0956 
                 ; 0000 0957                     if(RefreshLcd>=1){
                 _0x2CC:
                 _0x2CB:
                 _0x2C9:
00124e 91a0 0535 	LDS  R26,_RefreshLcd_G000
001250 30a1      	CPI  R26,LOW(0x1)
001251 f128      	BRLO _0x2CF
                 ; 0000 0958                     unsigned char row, lcd_row;
                 ; 0000 0959                     lcd_row = 0;
001252 9722      	SBIW R28,2
                 ;	row -> Y+1
                 ;	lcd_row -> Y+0
001253 e0e0      	LDI  R30,LOW(0)
001254 83e8      	ST   Y,R30
                 ; 0000 095A                     RowsOnWindow = 1;
001255 e0e1      	LDI  R30,LOW(1)
001256 940e 1b1d 	CALL SUBOPT_0x4B
                 ; 0000 095B                         for(row=Address[5];row<4+Address[5];row++){
                 _0x2D1:
001258 940e 192a 	CALL SUBOPT_0x5
00125a 940e 1b23 	CALL SUBOPT_0x4C
00125c f4b4      	BRGE _0x2D2
                 ; 0000 095C                         lcd_gotoxy(0,lcd_row);
00125d 940e 1b26 	CALL SUBOPT_0x4D
                 ; 0000 095D                             if(row==0){
00125f f419      	BRNE _0x2D3
                 ; 0000 095E                             lcd_putsf("   -=NUSTATYMAI=-   ");
                +
001260 e2e8     +LDI R30 , LOW ( 2 * _0x0 + ( 638 ) )
001261 e0f3     +LDI R31 , HIGH ( 2 * _0x0 + ( 638 ) )
                 	__POINTW1FN _0x0,638
001262 c005      	RJMP _0x307
                 ; 0000 095F                             }
                 ; 0000 0960                             else if(row==1){
                 _0x2D3:
001263 81a9      	LDD  R26,Y+1
001264 30a1      	CPI  R26,LOW(0x1)
001265 f431      	BRNE _0x2D5
                 ; 0000 0961                             lcd_putsf("NEBAIGTA");
                +
001266 e3ed     +LDI R30 , LOW ( 2 * _0x0 + ( 659 ) )
001267 e0f3     +LDI R31 , HIGH ( 2 * _0x0 + ( 659 ) )
                 	__POINTW1FN _0x0,659
                 _0x307:
001268 93fa      	ST   -Y,R31
001269 93ea      	ST   -Y,R30
00126a 940e 17df 	CALL _lcd_putsf
                 ; 0000 0962                             }
                 ; 0000 0963                         lcd_row++;
                 _0x2D5:
00126c 81e8      	LD   R30,Y
00126d 5fef      	SUBI R30,-LOW(1)
00126e 83e8      	ST   Y,R30
                 ; 0000 0964                         }
00126f 81e9      	LDD  R30,Y+1
001270 5fef      	SUBI R30,-LOW(1)
001271 83e9      	STD  Y+1,R30
001272 cfe5      	RJMP _0x2D1
                 _0x2D2:
                 ; 0000 0965                     lcd_gotoxy(19,SelectedRow-Address[5]);
001273 940e 1b45 	CALL SUBOPT_0x50
001275 940e 1b4b 	CALL SUBOPT_0x51
                 ; 0000 0966                     lcd_putchar('<');
                 ; 0000 0967                     }
                 ; 0000 0968                 }
                 _0x2CF:
                 ; 0000 0969                 else if(Address[1]==1){
001277 c053      	RJMP _0x2D6
                 _0x2C7:
                +
001278 91a0 052f+LDS R26 , _Address_G000 + ( 1 )
                 	__GETB2MN _Address_G000,1
00127a 30a1      	CPI  R26,LOW(0x1)
00127b f011      	BREQ PC+3
00127c 940c 12cb 	JMP _0x2D7
                 ; 0000 096A                     if(BUTTON[BUTTON_DOWN]==1){
                +
00127e 91a0 0591+LDS R26 , _BUTTON_S0000006001 + ( 4 )
                 	__GETB2MN _BUTTON_S0000006001,4
001280 30a1      	CPI  R26,LOW(0x1)
001281 f461      	BRNE _0x2D8
                 ; 0000 096B                         if(lcd_light>0){
001282 940e 19bd 	CALL SUBOPT_0x18
001284 30e1      	CPI  R30,LOW(0x1)
001285 f038      	BRLO _0x2D9
                 ; 0000 096C                         lcd_light += -1;
001286 940e 19bd 	CALL SUBOPT_0x18
001288 50e1      	SUBI R30,-LOW(255)
001289 e5a5      	LDI  R26,LOW(_lcd_light)
00128a e0b0      	LDI  R27,HIGH(_lcd_light)
00128b 940e 207f 	CALL __EEPROMWRB
                 ; 0000 096D                         }
                 ; 0000 096E                     }
                 _0x2D9:
                 ; 0000 096F                     else if(BUTTON[BUTTON_UP]==1){
00128d c019      	RJMP _0x2DA
                 _0x2D8:
00128e 91a0 058d 	LDS  R26,_BUTTON_S0000006001
001290 30a1      	CPI  R26,LOW(0x1)
001291 f461      	BRNE _0x2DB
                 ; 0000 0970                         if(lcd_light<20){
001292 940e 19bd 	CALL SUBOPT_0x18
001294 31e4      	CPI  R30,LOW(0x14)
001295 f438      	BRSH _0x2DC
                 ; 0000 0971                         lcd_light += 1;
001296 940e 19bd 	CALL SUBOPT_0x18
001298 5fef      	SUBI R30,-LOW(1)
001299 e5a5      	LDI  R26,LOW(_lcd_light)
00129a e0b0      	LDI  R27,HIGH(_lcd_light)
00129b 940e 207f 	CALL __EEPROMWRB
                 ; 0000 0972                         }
                 ; 0000 0973                     }
                 _0x2DC:
                 ; 0000 0974                     else if(BUTTON[BUTTON_ENTER]==1){
00129d c009      	RJMP _0x2DD
                 _0x2DB:
                +
00129e 91a0 058f+LDS R26 , _BUTTON_S0000006001 + ( 2 )
                 	__GETB2MN _BUTTON_S0000006001,2
0012a0 30a1      	CPI  R26,LOW(0x1)
0012a1 f429      	BRNE _0x2DE
                 ; 0000 0975                     Address[1] = 0;
0012a2 e0e0      	LDI  R30,LOW(0)
                +
0012a3 93e0 052f+STS _Address_G000 + ( 1 ) , R30
                 	__PUTB1MN _Address_G000,1
                 ; 0000 0976                     SelectedRow = 0;
0012a5 940e 1bcc 	CALL SUBOPT_0x6B
                 ; 0000 0977                     Address[5] = 0;
                 ; 0000 0978                     }
                 ; 0000 0979 
                 ; 0000 097A                     if(RefreshLcd>=1){
                 _0x2DE:
                 _0x2DD:
                 _0x2DA:
0012a7 91a0 0535 	LDS  R26,_RefreshLcd_G000
0012a9 30a1      	CPI  R26,LOW(0x1)
0012aa f100      	BRLO _0x2DF
                 ; 0000 097B                     lcd_putsf("-=EKRANO APSVIET.=- ");
                +
0012ab e4e6     +LDI R30 , LOW ( 2 * _0x0 + ( 668 ) )
0012ac e0f3     +LDI R31 , HIGH ( 2 * _0x0 + ( 668 ) )
                 	__POINTW1FN _0x0,668
0012ad 940e 1996 	CALL SUBOPT_0x12
                 ; 0000 097C                     lcd_putsf("APSVIETIMAS:");
                +
0012af e5eb     +LDI R30 , LOW ( 2 * _0x0 + ( 689 ) )
0012b0 e0f3     +LDI R31 , HIGH ( 2 * _0x0 + ( 689 ) )
                 	__POINTW1FN _0x0,689
0012b1 940e 1996 	CALL SUBOPT_0x12
                 ; 0000 097D                     lcd_put_number(0,3,0,0,lcd_light,0);
0012b3 940e 199a 	CALL SUBOPT_0x13
0012b5 940e 199f 	CALL SUBOPT_0x14
0012b7 940e 19bd 	CALL SUBOPT_0x18
0012b9 e0f0      	LDI  R31,0
0012ba 940e 1f87 	CALL __CWD1
0012bc 940e 19a3 	CALL SUBOPT_0x15
                 ; 0000 097E 
                 ; 0000 097F                     lcd_gotoxy(19,0);
0012be e1e3      	LDI  R30,LOW(19)
0012bf 940e 1af6 	CALL SUBOPT_0x44
                 ; 0000 0980                     lcd_putchar('+');
0012c1 e2eb      	LDI  R30,LOW(43)
0012c2 93ea      	ST   -Y,R30
0012c3 940e 17b9 	CALL _lcd_putchar
                 ; 0000 0981                     lcd_gotoxy(19,3);
0012c5 940e 1b07 	CALL SUBOPT_0x47
                 ; 0000 0982                     lcd_putchar('-');
0012c7 e2ed      	LDI  R30,LOW(45)
0012c8 93ea      	ST   -Y,R30
0012c9 940e 17b9 	CALL _lcd_putchar
                 ; 0000 0983                     }
                 ; 0000 0984                 }
                 _0x2DF:
                 ; 0000 0985                 else if(Address[1]==2){
                 _0x2D7:
                 ; 0000 0986 
                 ; 0000 0987                 }
                 ; 0000 0988             }
                 _0x2D6:
                 ; 0000 0989         }
                 _0x2C6:
                 _0x2C5:
                 _0x285:
                 _0x245:
                 _0x205:
                 _0x1C2:
                 _0x182:
                 _0x138:
                 _0x109:
                 ; 0000 098A 
                 ; 0000 098B         if(RefreshLcd>=1){
0012cb 91a0 0535 	LDS  R26,_RefreshLcd_G000
0012cd 30a1      	CPI  R26,LOW(0x1)
0012ce f028      	BRLO _0x2E2
                 ; 0000 098C         RefreshLcd--;
0012cf 91e0 0535 	LDS  R30,_RefreshLcd_G000
0012d1 50e1      	SUBI R30,LOW(1)
0012d2 93e0 0535 	STS  _RefreshLcd_G000,R30
                 ; 0000 098D         }
                 ; 0000 098E     //////////////////////////////////////////////////////////////////////////////////
                 ; 0000 098F     //////////////////////////////////////////////////////////////////////////////////
                 ; 0000 0990     //////////////////////////////////////////////////////////////////////////////////
                 ; 0000 0991     delay_ms(1);
                 _0x2E2:
0012d4 e0e1      	LDI  R30,LOW(1)
0012d5 e0f0      	LDI  R31,HIGH(1)
0012d6 940e 19fa 	CALL SUBOPT_0x22
                 ; 0000 0992     }
0012d8 940c 04d3 	JMP  _0x6D
                 ; 0000 0993 }
                 _0x2E3:
0012da cfff      	RJMP _0x2E3
                 
                 	.CSEG
                 _ftrunc:
0012db 817b         ldd  r23,y+3
0012dc 816a         ldd  r22,y+2
0012dd 81f9         ldd  r31,y+1
0012de 81e8         ld   r30,y
0012df fb77         bst  r23,7
0012e0 0f77         lsl  r23
0012e1 fd67         sbrc r22,7
0012e2 6071         sbr  r23,1
0012e3 2f97         mov  r25,r23
0012e4 579e         subi r25,0x7e
0012e5 f081         breq __ftrunc0
0012e6 f078         brcs __ftrunc0
0012e7 3198         cpi  r25,24
0012e8 f490         brsh __ftrunc1
0012e9 27aa         clr  r26
0012ea 27bb         clr  r27
0012eb 2788         clr  r24
                 __ftrunc2:
0012ec 9408         sec
0012ed 9587         ror  r24
0012ee 95b7         ror  r27
0012ef 95a7         ror  r26
0012f0 959a         dec  r25
0012f1 f7d1         brne __ftrunc2
0012f2 23ea         and  r30,r26
0012f3 23fb         and  r31,r27
0012f4 2368         and  r22,r24
0012f5 c005         rjmp __ftrunc1
                 __ftrunc0:
0012f6 94e8         clt
0012f7 2777         clr  r23
0012f8 27ee         clr  r30
0012f9 27ff         clr  r31
0012fa 2766         clr  r22
                 __ftrunc1:
0012fb 776f         cbr  r22,0x80
0012fc 9576         lsr  r23
0012fd f408         brcc __ftrunc3
0012fe 6860         sbr  r22,0x80
                 __ftrunc3:
0012ff f977         bld  r23,7
001300 91a9         ld   r26,y+
001301 91b9         ld   r27,y+
001302 9189         ld   r24,y+
001303 9199         ld   r25,y+
001304 17ea         cp   r30,r26
001305 07fb         cpc  r31,r27
001306 0768         cpc  r22,r24
001307 0779         cpc  r23,r25
001308 fb97         bst  r25,7
001309 9508         ret
                 _floor:
00130a 940e 1bd2 	CALL SUBOPT_0x6C
00130c 940e 2049 	CALL __PUTPARD1
00130e 940e 12db 	CALL _ftrunc
001310 940e 203f 	CALL __PUTD1S0
001312 f419          brne __floor1
                 __floor0:
001313 940e 1bd2 	CALL SUBOPT_0x6C
001315 c009      	RJMP _0x20E0009
                 __floor1:
001316 f7e6          brtc __floor0
001317 940e 1bd2 	CALL SUBOPT_0x6C
                +
001319 e0a0     +LDI R26 , LOW ( 0x3F800000 )
00131a e0b0     +LDI R27 , HIGH ( 0x3F800000 )
00131b e880     +LDI R24 , BYTE3 ( 0x3F800000 )
00131c e39f     +LDI R25 , BYTE4 ( 0x3F800000 )
                 	__GETD2N 0x3F800000
00131d 940e 1e58 	CALL __SUBF12
                 _0x20E0009:
00131f 9624      	ADIW R28,4
001320 9508      	RET
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _put_buff_G101:
001321 931a      	ST   -Y,R17
001322 930a      	ST   -Y,R16
001323 81aa      	LDD  R26,Y+2
001324 81bb      	LDD  R27,Y+2+1
001325 9612      	ADIW R26,2
001326 940e 2022 	CALL __GETW1P
001328 9730      	SBIW R30,0
001329 f129      	BREQ _0x2020010
00132a 81aa      	LDD  R26,Y+2
00132b 81bb      	LDD  R27,Y+2+1
00132c 9614      	ADIW R26,4
00132d 940e 2022 	CALL __GETW1P
00132f 018f      	MOVW R16,R30
001330 9730      	SBIW R30,0
001331 f061      	BREQ _0x2020012
                +
001332 3002     +CPI R16 , LOW ( 2 )
001333 e0e0     +LDI R30 , HIGH ( 2 )
001334 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
001335 f0c0      	BRLO _0x2020013
001336 01f8      	MOVW R30,R16
001337 9731      	SBIW R30,1
001338 018f      	MOVW R16,R30
                +
001339 81aa     +LDD R26 , Y + 2
00133a 81bb     +LDD R27 , Y + 2 + 1
00133b 9614     +ADIW R26 , 4
00133c 93ed     +ST X + , R30
00133d 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x2020012:
00133e 81aa      	LDD  R26,Y+2
00133f 81bb      	LDD  R27,Y+2+1
001340 9612      	ADIW R26,2
001341 940e 1a17 	CALL SUBOPT_0x28
001343 9731      	SBIW R30,1
001344 81ac      	LDD  R26,Y+4
001345 83a0      	STD  Z+0,R26
001346 81aa      	LDD  R26,Y+2
001347 81bb      	LDD  R27,Y+2+1
001348 940e 2022 	CALL __GETW1P
00134a 23ff      	TST  R31
00134b f012      	BRMI _0x2020014
00134c 940e 1a17 	CALL SUBOPT_0x28
                 _0x2020014:
                 _0x2020013:
00134e c006      	RJMP _0x2020015
                 _0x2020010:
00134f 81aa      	LDD  R26,Y+2
001350 81bb      	LDD  R27,Y+2+1
001351 efef      	LDI  R30,LOW(65535)
001352 efff      	LDI  R31,HIGH(65535)
001353 93ed      	ST   X+,R30
001354 93fc      	ST   X,R31
                 _0x2020015:
001355 8119      	LDD  R17,Y+1
001356 8108      	LDD  R16,Y+0
001357 c3fa      	RJMP _0x20E0005
                 __ftoe_G101:
001358 9724      	SBIW R28,4
001359 e0e0      	LDI  R30,LOW(0)
00135a 83e8      	ST   Y,R30
00135b 83e9      	STD  Y+1,R30
00135c e8e0      	LDI  R30,LOW(128)
00135d 83ea      	STD  Y+2,R30
00135e e3ef      	LDI  R30,LOW(63)
00135f 83eb      	STD  Y+3,R30
001360 940e 209b 	CALL __SAVELOCR4
001362 85ee      	LDD  R30,Y+14
001363 85ff      	LDD  R31,Y+14+1
001364 3fef      	CPI  R30,LOW(0xFFFF)
001365 efaf      	LDI  R26,HIGH(0xFFFF)
001366 07fa      	CPC  R31,R26
001367 f449      	BRNE _0x2020019
001368 85e8      	LDD  R30,Y+8
001369 85f9      	LDD  R31,Y+8+1
00136a 93fa      	ST   -Y,R31
00136b 93ea      	ST   -Y,R30
                +
00136c e6e8     +LDI R30 , LOW ( 2 * _0x2020000 + ( 0 ) )
00136d e0f3     +LDI R31 , HIGH ( 2 * _0x2020000 + ( 0 ) )
                 	__POINTW1FN _0x2020000,0
00136e 940e 1bd5 	CALL SUBOPT_0x6D
001370 c0b1      	RJMP _0x20E0008
                 _0x2020019:
001371 3fef      	CPI  R30,LOW(0x7FFF)
001372 e7af      	LDI  R26,HIGH(0x7FFF)
001373 07fa      	CPC  R31,R26
001374 f449      	BRNE _0x2020018
001375 85e8      	LDD  R30,Y+8
001376 85f9      	LDD  R31,Y+8+1
001377 93fa      	ST   -Y,R31
001378 93ea      	ST   -Y,R30
                +
001379 e6e9     +LDI R30 , LOW ( 2 * _0x2020000 + ( 1 ) )
00137a e0f3     +LDI R31 , HIGH ( 2 * _0x2020000 + ( 1 ) )
                 	__POINTW1FN _0x2020000,1
00137b 940e 1bd5 	CALL SUBOPT_0x6D
00137d c0a4      	RJMP _0x20E0008
                 _0x2020018:
00137e 85ab      	LDD  R26,Y+11
00137f 30a7      	CPI  R26,LOW(0x7)
001380 f010      	BRLO _0x202001B
001381 e0e6      	LDI  R30,LOW(6)
001382 87eb      	STD  Y+11,R30
                 _0x202001B:
001383 851b      	LDD  R17,Y+11
                 _0x202001C:
001384 2fe1      	MOV  R30,R17
001385 5011      	SUBI R17,1
001386 30e0      	CPI  R30,0
001387 f019      	BREQ _0x202001E
001388 940e 1bd9 	CALL SUBOPT_0x6E
00138a cff9      	RJMP _0x202001C
                 _0x202001E:
                +
00138b 85ec     +LDD R30 , Y + 12
00138c 85fd     +LDD R31 , Y + 12 + 1
00138d 856e     +LDD R22 , Y + 12 + 2
00138e 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
00138f 940e 2090 	CALL __CPD10
001391 f421      	BRNE _0x202001F
001392 e030      	LDI  R19,LOW(0)
001393 940e 1bd9 	CALL SUBOPT_0x6E
001395 c02e      	RJMP _0x2020020
                 _0x202001F:
001396 853b      	LDD  R19,Y+11
001397 940e 1be5 	CALL SUBOPT_0x6F
001399 f009      	BREQ PC+2
00139a f410      	BRCC PC+3
00139b 940c 13a8 	JMP  _0x2020021
00139d 940e 1bd9 	CALL SUBOPT_0x6E
                 _0x2020022:
00139f 940e 1be5 	CALL SUBOPT_0x6F
0013a1 f028      	BRLO _0x2020024
0013a2 940e 1bf0 	CALL SUBOPT_0x70
0013a4 940e 1bf5 	CALL SUBOPT_0x71
0013a6 cff8      	RJMP _0x2020022
                 _0x2020024:
0013a7 c00d      	RJMP _0x2020025
                 _0x2020021:
                 _0x2020026:
0013a8 940e 1be5 	CALL SUBOPT_0x6F
0013aa f440      	BRSH _0x2020028
0013ab 940e 1bf0 	CALL SUBOPT_0x70
0013ad 940e 1bfe 	CALL SUBOPT_0x72
0013af 940e 1c02 	CALL SUBOPT_0x73
0013b1 5031      	SUBI R19,LOW(1)
0013b2 cff5      	RJMP _0x2020026
                 _0x2020028:
0013b3 940e 1bd9 	CALL SUBOPT_0x6E
                 _0x2020025:
                +
0013b5 85ec     +LDD R30 , Y + 12
0013b6 85fd     +LDD R31 , Y + 12 + 1
0013b7 856e     +LDD R22 , Y + 12 + 2
0013b8 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
0013b9 940e 1c07 	CALL SUBOPT_0x74
0013bb 940e 1c02 	CALL SUBOPT_0x73
0013bd 940e 1be5 	CALL SUBOPT_0x6F
0013bf f020      	BRLO _0x2020029
0013c0 940e 1bf0 	CALL SUBOPT_0x70
0013c2 940e 1bf5 	CALL SUBOPT_0x71
                 _0x2020029:
                 _0x2020020:
0013c4 e010      	LDI  R17,LOW(0)
                 _0x202002A:
0013c5 85eb      	LDD  R30,Y+11
0013c6 17e1      	CP   R30,R17
0013c7 f1a8      	BRLO _0x202002C
                +
0013c8 81ac     +LDD R26 , Y + 4
0013c9 81bd     +LDD R27 , Y + 4 + 1
0013ca 818e     +LDD R24 , Y + 4 + 2
0013cb 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
0013cc 940e 1c0e 	CALL SUBOPT_0x75
0013ce 940e 1c07 	CALL SUBOPT_0x74
0013d0 940e 2049 	CALL __PUTPARD1
0013d2 940e 130a 	CALL _floor
                +
0013d4 83ec     +STD Y + 4 , R30
0013d5 83fd     +STD Y + 4 + 1 , R31
0013d6 836e     +STD Y + 4 + 2 , R22
0013d7 837f     +STD Y + 4 + 3 , R23
                 	__PUTD1S 4
0013d8 940e 1bf0 	CALL SUBOPT_0x70
0013da 940e 1efd 	CALL __DIVF21
0013dc 940e 1dec 	CALL __CFD1U
0013de 2f0e      	MOV  R16,R30
0013df 940e 1c12 	CALL SUBOPT_0x76
0013e1 940e 1c19 	CALL SUBOPT_0x77
0013e3 27ff      	CLR  R31
0013e4 2766      	CLR  R22
0013e5 2777      	CLR  R23
0013e6 940e 1e25 	CALL __CDF1
                +
0013e8 81ac     +LDD R26 , Y + 4
0013e9 81bd     +LDD R27 , Y + 4 + 1
0013ea 818e     +LDD R24 , Y + 4 + 2
0013eb 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
0013ec 940e 1eaf 	CALL __MULF12
0013ee 940e 1bf0 	CALL SUBOPT_0x70
0013f0 940e 1b60 	CALL SUBOPT_0x54
0013f2 940e 1c02 	CALL SUBOPT_0x73
0013f4 2fe1      	MOV  R30,R17
0013f5 5f1f      	SUBI R17,-1
0013f6 30e0      	CPI  R30,0
0013f7 f669      	BRNE _0x202002A
0013f8 940e 1c12 	CALL SUBOPT_0x76
0013fa e2ee      	LDI  R30,LOW(46)
0013fb 93ec      	ST   X,R30
0013fc cfc8      	RJMP _0x202002A
                 _0x202002C:
0013fd 940e 1c1e 	CALL SUBOPT_0x78
0013ff 85aa      	LDD  R26,Y+10
001400 83a0      	STD  Z+0,R26
001401 3030      	CPI  R19,0
001402 f42c      	BRGE _0x202002E
001403 940e 1c12 	CALL SUBOPT_0x76
001405 e2ed      	LDI  R30,LOW(45)
001406 93ec      	ST   X,R30
001407 9531      	NEG  R19
                 _0x202002E:
001408 303a      	CPI  R19,10
001409 f054      	BRLT _0x202002F
00140a 940e 1c1e 	CALL SUBOPT_0x78
00140c 01bf      	MOVW R22,R30
00140d 2fa3      	MOV  R26,R19
00140e e0ea      	LDI  R30,LOW(10)
00140f 940e 1fc9 	CALL __DIVB21
001411 5de0      	SUBI R30,-LOW(48)
001412 01db      	MOVW R26,R22
001413 93ec      	ST   X,R30
                 _0x202002F:
001414 940e 1c1e 	CALL SUBOPT_0x78
001416 01bf      	MOVW R22,R30
001417 2fa3      	MOV  R26,R19
001418 e0ea      	LDI  R30,LOW(10)
001419 940e 1ff3 	CALL __MODB21
00141b 5de0      	SUBI R30,-LOW(48)
00141c 01db      	MOVW R26,R22
00141d 93ec      	ST   X,R30
00141e 85a8      	LDD  R26,Y+8
00141f 85b9      	LDD  R27,Y+8+1
001420 e0e0      	LDI  R30,LOW(0)
001421 93ec      	ST   X,R30
                 _0x20E0008:
001422 940e 20a2 	CALL __LOADLOCR4
001424 9660      	ADIW R28,16
001425 9508      	RET
                 __print_G101:
001426 97ef      	SBIW R28,63
001427 9761      	SBIW R28,17
001428 940e 2099 	CALL __SAVELOCR6
00142a e010      	LDI  R17,0
                +
00142b 01fe     +MOVW R30 , R28
00142c 5ae8     +SUBI R30 , LOW ( - 88 )
00142d 4fff     +SBCI R31 , HIGH ( - 88 )
00142e 9001     +LD R0 , Z +
00142f 81f0     +LD R31 , Z
001430 2de0     +MOV R30 , R0
                 	__GETW1SX 88
001431 87e8      	STD  Y+8,R30
001432 87f9      	STD  Y+8+1,R31
                +
001433 01fe     +MOVW R30 , R28
001434 5aea     +SUBI R30 , LOW ( - 86 )
001435 4fff     +SBCI R31 , HIGH ( - 86 )
001436 9001     +LD R0 , Z +
001437 81f0     +LD R31 , Z
001438 2de0     +MOV R30 , R0
                 	__GETW1SX 86
001439 83ee      	STD  Y+6,R30
00143a 83ff      	STD  Y+6+1,R31
00143b 81ae      	LDD  R26,Y+6
00143c 81bf      	LDD  R27,Y+6+1
00143d e0e0      	LDI  R30,LOW(0)
00143e e0f0      	LDI  R31,HIGH(0)
00143f 93ed      	ST   X+,R30
001440 93fc      	ST   X,R31
                 _0x2020030:
001441 01de      	MOVW R26,R28
001442 5aa4      	SUBI R26,LOW(-(92))
001443 4fbf      	SBCI R27,HIGH(-(92))
001444 940e 1a17 	CALL SUBOPT_0x28
001446 9731      	SBIW R30,1
001447 91e4      	LPM  R30,Z
001448 2f2e      	MOV  R18,R30
001449 30e0      	CPI  R30,0
00144a f411      	BRNE PC+3
00144b 940c 163b 	JMP _0x2020032
00144d 2fe1      	MOV  R30,R17
00144e 30e0      	CPI  R30,0
00144f f439      	BRNE _0x2020036
001450 3225      	CPI  R18,37
001451 f411      	BRNE _0x2020037
001452 e011      	LDI  R17,LOW(1)
001453 c002      	RJMP _0x2020038
                 _0x2020037:
001454 940e 1c25 	CALL SUBOPT_0x79
                 _0x2020038:
001456 c1e3      	RJMP _0x2020035
                 _0x2020036:
001457 30e1      	CPI  R30,LOW(0x1)
001458 f4c1      	BRNE _0x2020039
001459 3225      	CPI  R18,37
00145a f419      	BRNE _0x202003A
00145b 940e 1c25 	CALL SUBOPT_0x79
00145d c1db      	RJMP _0x202010E
                 _0x202003A:
00145e e012      	LDI  R17,LOW(2)
00145f e0e0      	LDI  R30,LOW(0)
001460 8bed      	STD  Y+21,R30
001461 e000      	LDI  R16,LOW(0)
001462 322d      	CPI  R18,45
001463 f411      	BRNE _0x202003B
001464 e001      	LDI  R16,LOW(1)
001465 c1d4      	RJMP _0x2020035
                 _0x202003B:
001466 322b      	CPI  R18,43
001467 f419      	BRNE _0x202003C
001468 e2eb      	LDI  R30,LOW(43)
001469 8bed      	STD  Y+21,R30
00146a c1cf      	RJMP _0x2020035
                 _0x202003C:
00146b 3220      	CPI  R18,32
00146c f419      	BRNE _0x202003D
00146d e2e0      	LDI  R30,LOW(32)
00146e 8bed      	STD  Y+21,R30
00146f c1ca      	RJMP _0x2020035
                 _0x202003D:
001470 c002      	RJMP _0x202003E
                 _0x2020039:
001471 30e2      	CPI  R30,LOW(0x2)
001472 f439      	BRNE _0x202003F
                 _0x202003E:
001473 e050      	LDI  R21,LOW(0)
001474 e013      	LDI  R17,LOW(3)
001475 3320      	CPI  R18,48
001476 f411      	BRNE _0x2020040
001477 6800      	ORI  R16,LOW(128)
001478 c1c1      	RJMP _0x2020035
                 _0x2020040:
001479 c002      	RJMP _0x2020041
                 _0x202003F:
00147a 30e3      	CPI  R30,LOW(0x3)
00147b f491      	BRNE _0x2020042
                 _0x2020041:
00147c 3320      	CPI  R18,48
00147d f010      	BRLO _0x2020044
00147e 332a      	CPI  R18,58
00147f f008      	BRLO _0x2020045
                 _0x2020044:
001480 c007      	RJMP _0x2020043
                 _0x2020045:
001481 e0aa      	LDI  R26,LOW(10)
001482 9f5a      	MUL  R21,R26
001483 2d50      	MOV  R21,R0
001484 2fe2      	MOV  R30,R18
001485 53e0      	SUBI R30,LOW(48)
001486 0f5e      	ADD  R21,R30
001487 c1b2      	RJMP _0x2020035
                 _0x2020043:
001488 e040      	LDI  R20,LOW(0)
001489 322e      	CPI  R18,46
00148a f411      	BRNE _0x2020046
00148b e014      	LDI  R17,LOW(4)
00148c c1ad      	RJMP _0x2020035
                 _0x2020046:
00148d c00f      	RJMP _0x2020047
                 _0x2020042:
00148e 30e4      	CPI  R30,LOW(0x4)
00148f f499      	BRNE _0x2020049
001490 3320      	CPI  R18,48
001491 f010      	BRLO _0x202004B
001492 332a      	CPI  R18,58
001493 f008      	BRLO _0x202004C
                 _0x202004B:
001494 c008      	RJMP _0x202004A
                 _0x202004C:
001495 6200      	ORI  R16,LOW(32)
001496 e0aa      	LDI  R26,LOW(10)
001497 9f4a      	MUL  R20,R26
001498 2d40      	MOV  R20,R0
001499 2fe2      	MOV  R30,R18
00149a 53e0      	SUBI R30,LOW(48)
00149b 0f4e      	ADD  R20,R30
00149c c19d      	RJMP _0x2020035
                 _0x202004A:
                 _0x2020047:
00149d 362c      	CPI  R18,108
00149e f419      	BRNE _0x202004D
00149f 6002      	ORI  R16,LOW(2)
0014a0 e015      	LDI  R17,LOW(5)
0014a1 c198      	RJMP _0x2020035
                 _0x202004D:
0014a2 c004      	RJMP _0x202004E
                 _0x2020049:
0014a3 30e5      	CPI  R30,LOW(0x5)
0014a4 f011      	BREQ PC+3
0014a5 940c 163a 	JMP _0x2020035
                 _0x202004E:
0014a7 2fe2      	MOV  R30,R18
0014a8 36e3      	CPI  R30,LOW(0x63)
0014a9 f459      	BRNE _0x2020053
0014aa 940e 1c2e 	CALL SUBOPT_0x7A
0014ac 940e 1c35 	CALL SUBOPT_0x7B
0014ae 940e 1c2e 	CALL SUBOPT_0x7A
0014b0 81a4      	LDD  R26,Z+4
0014b1 93aa      	ST   -Y,R26
0014b2 940e 1c3c 	CALL SUBOPT_0x7C
0014b4 c184      	RJMP _0x2020054
                 _0x2020053:
0014b5 34e5      	CPI  R30,LOW(0x45)
0014b6 f011      	BREQ _0x2020057
0014b7 36e5      	CPI  R30,LOW(0x65)
0014b8 f409      	BRNE _0x2020058
                 _0x2020057:
0014b9 c004      	RJMP _0x2020059
                 _0x2020058:
0014ba 36e6      	CPI  R30,LOW(0x66)
0014bb f011      	BREQ PC+3
0014bc 940c 1508 	JMP _0x202005A
                 _0x2020059:
0014be 01fe      	MOVW R30,R28
0014bf 9676      	ADIW R30,22
0014c0 87ee      	STD  Y+14,R30
0014c1 87ff      	STD  Y+14+1,R31
0014c2 940e 1c44 	CALL SUBOPT_0x7D
0014c4 940e 2026 	CALL __GETD1P
0014c6 940e 1c4b 	CALL SUBOPT_0x7E
0014c8 940e 1c50 	CALL SUBOPT_0x7F
0014ca 85ad      	LDD  R26,Y+13
0014cb 23aa      	TST  R26
0014cc f022      	BRMI _0x202005B
0014cd 89ad      	LDD  R26,Y+21
0014ce 32ab      	CPI  R26,LOW(0x2B)
0014cf f049      	BREQ _0x202005D
0014d0 c017      	RJMP _0x202005E
                 _0x202005B:
0014d1 940e 198b 	CALL SUBOPT_0x10
0014d3 940e 1db9 	CALL __ANEGF1
0014d5 940e 1c4b 	CALL SUBOPT_0x7E
0014d7 e2ed      	LDI  R30,LOW(45)
0014d8 8bed      	STD  Y+21,R30
                 _0x202005D:
0014d9 ff07      	SBRS R16,7
0014da c005      	RJMP _0x202005F
0014db 89ed      	LDD  R30,Y+21
0014dc 93ea      	ST   -Y,R30
0014dd 940e 1c3c 	CALL SUBOPT_0x7C
0014df c008      	RJMP _0x2020060
                 _0x202005F:
0014e0 85ee      	LDD  R30,Y+14
0014e1 85ff      	LDD  R31,Y+14+1
0014e2 9631      	ADIW R30,1
0014e3 87ee      	STD  Y+14,R30
0014e4 87ff      	STD  Y+14+1,R31
0014e5 9731      	SBIW R30,1
0014e6 89ad      	LDD  R26,Y+21
0014e7 83a0      	STD  Z+0,R26
                 _0x2020060:
                 _0x202005E:
0014e8 ff05      	SBRS R16,5
0014e9 e046      	LDI  R20,LOW(6)
0014ea 3626      	CPI  R18,102
0014eb f461      	BRNE _0x2020062
0014ec 940e 198b 	CALL SUBOPT_0x10
0014ee 940e 2049 	CALL __PUTPARD1
0014f0 934a      	ST   -Y,R20
0014f1 89eb      	LDD  R30,Y+19
0014f2 89fc      	LDD  R31,Y+19+1
0014f3 93fa      	ST   -Y,R31
0014f4 93ea      	ST   -Y,R30
0014f5 940e 1834 	CALL _ftoa
0014f7 c00b      	RJMP _0x2020063
                 _0x2020062:
0014f8 940e 198b 	CALL SUBOPT_0x10
0014fa 940e 2049 	CALL __PUTPARD1
0014fc 934a      	ST   -Y,R20
0014fd 932a      	ST   -Y,R18
0014fe 89ec      	LDD  R30,Y+20
0014ff 89fd      	LDD  R31,Y+20+1
001500 93fa      	ST   -Y,R31
001501 93ea      	ST   -Y,R30
001502 de55      	RCALL __ftoe_G101
                 _0x2020063:
001503 01fe      	MOVW R30,R28
001504 9676      	ADIW R30,22
001505 940e 1c52 	CALL SUBOPT_0x80
001507 c01e      	RJMP _0x2020064
                 _0x202005A:
001508 37e3      	CPI  R30,LOW(0x73)
001509 f439      	BRNE _0x2020066
00150a 940e 1c50 	CALL SUBOPT_0x7F
00150c 940e 1c5a 	CALL SUBOPT_0x81
00150e 940e 1c52 	CALL SUBOPT_0x80
001510 c00e      	RJMP _0x2020067
                 _0x2020066:
001511 37e0      	CPI  R30,LOW(0x70)
001512 f4c1      	BRNE _0x2020069
001513 940e 1c50 	CALL SUBOPT_0x7F
001515 940e 1c5a 	CALL SUBOPT_0x81
001517 87ee      	STD  Y+14,R30
001518 87ff      	STD  Y+14+1,R31
001519 93fa      	ST   -Y,R31
00151a 93ea      	ST   -Y,R30
00151b 940e 1907 	CALL _strlenf
00151d 2f1e      	MOV  R17,R30
00151e 6008      	ORI  R16,LOW(8)
                 _0x2020067:
00151f 770f      	ANDI R16,LOW(127)
001520 3040      	CPI  R20,0
001521 f011      	BREQ _0x202006B
001522 1741      	CP   R20,R17
001523 f008      	BRLO _0x202006C
                 _0x202006B:
001524 c001      	RJMP _0x202006A
                 _0x202006C:
001525 2f14      	MOV  R17,R20
                 _0x202006A:
                 _0x2020064:
001526 e040      	LDI  R20,LOW(0)
001527 e0e0      	LDI  R30,LOW(0)
001528 8bec      	STD  Y+20,R30
001529 e030      	LDI  R19,LOW(0)
00152a c06e      	RJMP _0x202006D
                 _0x2020069:
00152b 36e4      	CPI  R30,LOW(0x64)
00152c f011      	BREQ _0x2020070
00152d 36e9      	CPI  R30,LOW(0x69)
00152e f411      	BRNE _0x2020071
                 _0x2020070:
00152f 6004      	ORI  R16,LOW(4)
001530 c002      	RJMP _0x2020072
                 _0x2020071:
001531 37e5      	CPI  R30,LOW(0x75)
001532 f4a1      	BRNE _0x2020073
                 _0x2020072:
001533 e0ea      	LDI  R30,LOW(10)
001534 8bec      	STD  Y+20,R30
001535 ff01      	SBRS R16,1
001536 c008      	RJMP _0x2020074
                +
001537 e0e0     +LDI R30 , LOW ( 0x3B9ACA00 )
001538 ecfa     +LDI R31 , HIGH ( 0x3B9ACA00 )
001539 e96a     +LDI R22 , BYTE3 ( 0x3B9ACA00 )
00153a e37b     +LDI R23 , BYTE4 ( 0x3B9ACA00 )
                 	__GETD1N 0x3B9ACA00
00153b 940e 1c5f 	CALL SUBOPT_0x82
00153d e01a      	LDI  R17,LOW(10)
00153e c023      	RJMP _0x2020075
                 _0x2020074:
                +
00153f e1e0     +LDI R30 , LOW ( 0x2710 )
001540 e2f7     +LDI R31 , HIGH ( 0x2710 )
001541 e060     +LDI R22 , BYTE3 ( 0x2710 )
001542 e070     +LDI R23 , BYTE4 ( 0x2710 )
                 	__GETD1N 0x2710
001543 940e 1c5f 	CALL SUBOPT_0x82
001545 e015      	LDI  R17,LOW(5)
001546 c01b      	RJMP _0x2020075
                 _0x2020073:
001547 35e8      	CPI  R30,LOW(0x58)
001548 f411      	BRNE _0x2020077
001549 6008      	ORI  R16,LOW(8)
00154a c004      	RJMP _0x2020078
                 _0x2020077:
00154b 37e8      	CPI  R30,LOW(0x78)
00154c f011      	BREQ PC+3
00154d 940c 1639 	JMP _0x20200B6
                 _0x2020078:
00154f e1e0      	LDI  R30,LOW(16)
001550 8bec      	STD  Y+20,R30
001551 ff01      	SBRS R16,1
001552 c008      	RJMP _0x202007A
                +
001553 e0e0     +LDI R30 , LOW ( 0x10000000 )
001554 e0f0     +LDI R31 , HIGH ( 0x10000000 )
001555 e060     +LDI R22 , BYTE3 ( 0x10000000 )
001556 e170     +LDI R23 , BYTE4 ( 0x10000000 )
                 	__GETD1N 0x10000000
001557 940e 1c5f 	CALL SUBOPT_0x82
001559 e018      	LDI  R17,LOW(8)
00155a c007      	RJMP _0x2020075
                 _0x202007A:
                +
00155b e0e0     +LDI R30 , LOW ( 0x1000 )
00155c e1f0     +LDI R31 , HIGH ( 0x1000 )
00155d e060     +LDI R22 , BYTE3 ( 0x1000 )
00155e e070     +LDI R23 , BYTE4 ( 0x1000 )
                 	__GETD1N 0x1000
00155f 940e 1c5f 	CALL SUBOPT_0x82
001561 e014      	LDI  R17,LOW(4)
                 _0x2020075:
001562 3040      	CPI  R20,0
001563 f011      	BREQ _0x202007B
001564 770f      	ANDI R16,LOW(127)
001565 c001      	RJMP _0x202007C
                 _0x202007B:
001566 e041      	LDI  R20,LOW(1)
                 _0x202007C:
001567 ff01      	SBRS R16,1
001568 c008      	RJMP _0x202007D
001569 940e 1c50 	CALL SUBOPT_0x7F
00156b 940e 1c44 	CALL SUBOPT_0x7D
00156d 9614      	ADIW R26,4
00156e 940e 2026 	CALL __GETD1P
001570 c00f      	RJMP _0x202010F
                 _0x202007D:
001571 ff02      	SBRS R16,2
001572 c007      	RJMP _0x202007F
001573 940e 1c50 	CALL SUBOPT_0x7F
001575 940e 1c5a 	CALL SUBOPT_0x81
001577 940e 1f87 	CALL __CWD1
001579 c006      	RJMP _0x202010F
                 _0x202007F:
00157a 940e 1c50 	CALL SUBOPT_0x7F
00157c 940e 1c5a 	CALL SUBOPT_0x81
00157e 2766      	CLR  R22
00157f 2777      	CLR  R23
                 _0x202010F:
                +
001580 87ea     +STD Y + 10 , R30
001581 87fb     +STD Y + 10 + 1 , R31
001582 876c     +STD Y + 10 + 2 , R22
001583 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
001584 ff02      	SBRS R16,2
001585 c012      	RJMP _0x2020081
001586 85ad      	LDD  R26,Y+13
001587 23aa      	TST  R26
001588 f442      	BRPL _0x2020082
001589 940e 198b 	CALL SUBOPT_0x10
00158b 940e 1f6b 	CALL __ANEGD1
00158d 940e 1c4b 	CALL SUBOPT_0x7E
00158f e2ed      	LDI  R30,LOW(45)
001590 8bed      	STD  Y+21,R30
                 _0x2020082:
001591 89ed      	LDD  R30,Y+21
001592 30e0      	CPI  R30,0
001593 f019      	BREQ _0x2020083
001594 5f1f      	SUBI R17,-LOW(1)
001595 5f4f      	SUBI R20,-LOW(1)
001596 c001      	RJMP _0x2020084
                 _0x2020083:
001597 7f0b      	ANDI R16,LOW(251)
                 _0x2020084:
                 _0x2020081:
001598 2f34      	MOV  R19,R20
                 _0x202006D:
001599 fd00      	SBRC R16,0
00159a c014      	RJMP _0x2020085
                 _0x2020086:
00159b 1715      	CP   R17,R21
00159c f410      	BRSH _0x2020089
00159d 1735      	CP   R19,R21
00159e f008      	BRLO _0x202008A
                 _0x2020089:
00159f c00f      	RJMP _0x2020088
                 _0x202008A:
0015a0 ff07      	SBRS R16,7
0015a1 c008      	RJMP _0x202008B
0015a2 ff02      	SBRS R16,2
0015a3 c004      	RJMP _0x202008C
0015a4 7f0b      	ANDI R16,LOW(251)
0015a5 892d      	LDD  R18,Y+21
0015a6 5011      	SUBI R17,LOW(1)
0015a7 c001      	RJMP _0x202008D
                 _0x202008C:
0015a8 e320      	LDI  R18,LOW(48)
                 _0x202008D:
0015a9 c001      	RJMP _0x202008E
                 _0x202008B:
0015aa e220      	LDI  R18,LOW(32)
                 _0x202008E:
0015ab 940e 1c25 	CALL SUBOPT_0x79
0015ad 5051      	SUBI R21,LOW(1)
0015ae cfec      	RJMP _0x2020086
                 _0x2020088:
                 _0x2020085:
                 _0x202008F:
0015af 1714      	CP   R17,R20
0015b0 f490      	BRSH _0x2020091
0015b1 6100      	ORI  R16,LOW(16)
0015b2 ff02      	SBRS R16,2
0015b3 c006      	RJMP _0x2020092
0015b4 940e 1c64 	CALL SUBOPT_0x83
0015b6 f009      	BREQ _0x2020093
0015b7 5051      	SUBI R21,LOW(1)
                 _0x2020093:
0015b8 5011      	SUBI R17,LOW(1)
0015b9 5041      	SUBI R20,LOW(1)
                 _0x2020092:
0015ba e3e0      	LDI  R30,LOW(48)
0015bb 93ea      	ST   -Y,R30
0015bc 940e 1c3c 	CALL SUBOPT_0x7C
0015be 3050      	CPI  R21,0
0015bf f009      	BREQ _0x2020094
0015c0 5051      	SUBI R21,LOW(1)
                 _0x2020094:
0015c1 5041      	SUBI R20,LOW(1)
0015c2 cfec      	RJMP _0x202008F
                 _0x2020091:
0015c3 2f31      	MOV  R19,R17
0015c4 89ec      	LDD  R30,Y+20
0015c5 30e0      	CPI  R30,0
0015c6 f4b9      	BRNE _0x2020095
                 _0x2020096:
0015c7 3030      	CPI  R19,0
0015c8 f0a1      	BREQ _0x2020098
0015c9 ff03      	SBRS R16,3
0015ca c006      	RJMP _0x2020099
0015cb 85ee      	LDD  R30,Y+14
0015cc 85ff      	LDD  R31,Y+14+1
0015cd 9125      	LPM  R18,Z+
0015ce 87ee      	STD  Y+14,R30
0015cf 87ff      	STD  Y+14+1,R31
0015d0 c005      	RJMP _0x202009A
                 _0x2020099:
0015d1 85ae      	LDD  R26,Y+14
0015d2 85bf      	LDD  R27,Y+14+1
0015d3 912d      	LD   R18,X+
0015d4 87ae      	STD  Y+14,R26
0015d5 87bf      	STD  Y+14+1,R27
                 _0x202009A:
0015d6 940e 1c25 	CALL SUBOPT_0x79
0015d8 3050      	CPI  R21,0
0015d9 f009      	BREQ _0x202009B
0015da 5051      	SUBI R21,LOW(1)
                 _0x202009B:
0015db 5031      	SUBI R19,LOW(1)
0015dc cfea      	RJMP _0x2020096
                 _0x2020098:
0015dd c051      	RJMP _0x202009C
                 _0x2020095:
                 _0x202009E:
0015de 940e 1c78 	CALL SUBOPT_0x84
0015e0 940e 1fce 	CALL __DIVD21U
0015e2 2f2e      	MOV  R18,R30
0015e3 302a      	CPI  R18,10
0015e4 f030      	BRLO _0x20200A0
0015e5 ff03      	SBRS R16,3
0015e6 c002      	RJMP _0x20200A1
0015e7 5c29      	SUBI R18,-LOW(55)
0015e8 c001      	RJMP _0x20200A2
                 _0x20200A1:
0015e9 5a29      	SUBI R18,-LOW(87)
                 _0x20200A2:
0015ea c001      	RJMP _0x20200A3
                 _0x20200A0:
0015eb 5d20      	SUBI R18,-LOW(48)
                 _0x20200A3:
0015ec fd04      	SBRC R16,4
0015ed c021      	RJMP _0x20200A5
0015ee 3321      	CPI  R18,49
0015ef f460      	BRSH _0x20200A7
                +
0015f0 89a8     +LDD R26 , Y + 16
0015f1 89b9     +LDD R27 , Y + 16 + 1
0015f2 898a     +LDD R24 , Y + 16 + 2
0015f3 899b     +LDD R25 , Y + 16 + 3
                 	__GETD2S 16
                +
0015f4 30a1     +CPI R26 , LOW ( 0x1 )
0015f5 e0e0     +LDI R30 , HIGH ( 0x1 )
0015f6 07be     +CPC R27 , R30
0015f7 e0e0     +LDI R30 , BYTE3 ( 0x1 )
0015f8 078e     +CPC R24 , R30
0015f9 e0e0     +LDI R30 , BYTE4 ( 0x1 )
0015fa 079e     +CPC R25 , R30
                 	__CPD2N 0x1
0015fb f409      	BRNE _0x20200A6
                 _0x20200A7:
0015fc c00b      	RJMP _0x20200A9
                 _0x20200A6:
0015fd 1743      	CP   R20,R19
0015fe f440      	BRSH _0x2020110
0015ff 1753      	CP   R21,R19
001600 f010      	BRLO _0x20200AC
001601 ff00      	SBRS R16,0
001602 c001      	RJMP _0x20200AD
                 _0x20200AC:
001603 c010      	RJMP _0x20200AB
                 _0x20200AD:
001604 e220      	LDI  R18,LOW(32)
001605 ff07      	SBRS R16,7
001606 c008      	RJMP _0x20200AE
                 _0x2020110:
001607 e320      	LDI  R18,LOW(48)
                 _0x20200A9:
001608 6100      	ORI  R16,LOW(16)
001609 ff02      	SBRS R16,2
00160a c004      	RJMP _0x20200AF
00160b 940e 1c64 	CALL SUBOPT_0x83
00160d f009      	BREQ _0x20200B0
00160e 5051      	SUBI R21,LOW(1)
                 _0x20200B0:
                 _0x20200AF:
                 _0x20200AE:
                 _0x20200A5:
00160f 940e 1c25 	CALL SUBOPT_0x79
001611 3050      	CPI  R21,0
001612 f009      	BREQ _0x20200B1
001613 5051      	SUBI R21,LOW(1)
                 _0x20200B1:
                 _0x20200AB:
001614 5031      	SUBI R19,LOW(1)
001615 940e 1c78 	CALL SUBOPT_0x84
001617 940e 1fff 	CALL __MODD21U
001619 940e 1c4b 	CALL SUBOPT_0x7E
00161b 89ec      	LDD  R30,Y+20
                +
00161c 89a8     +LDD R26 , Y + 16
00161d 89b9     +LDD R27 , Y + 16 + 1
00161e 898a     +LDD R24 , Y + 16 + 2
00161f 899b     +LDD R25 , Y + 16 + 3
                 	__GETD2S 16
001620 27ff      	CLR  R31
001621 2766      	CLR  R22
001622 2777      	CLR  R23
001623 940e 1fce 	CALL __DIVD21U
001625 940e 1c5f 	CALL SUBOPT_0x82
                +
001627 89e8     +LDD R30 , Y + 16
001628 89f9     +LDD R31 , Y + 16 + 1
001629 896a     +LDD R22 , Y + 16 + 2
00162a 897b     +LDD R23 , Y + 16 + 3
                 	__GETD1S 16
00162b 940e 2090 	CALL __CPD10
00162d f009      	BREQ _0x202009F
00162e cfaf      	RJMP _0x202009E
                 _0x202009F:
                 _0x202009C:
00162f ff00      	SBRS R16,0
001630 c008      	RJMP _0x20200B2
                 _0x20200B3:
001631 3050      	CPI  R21,0
001632 f031      	BREQ _0x20200B5
001633 5051      	SUBI R21,LOW(1)
001634 e2e0      	LDI  R30,LOW(32)
001635 93ea      	ST   -Y,R30
001636 940e 1c3c 	CALL SUBOPT_0x7C
001638 cff8      	RJMP _0x20200B3
                 _0x20200B5:
                 _0x20200B2:
                 _0x20200B6:
                 _0x2020054:
                 _0x202010E:
001639 e010      	LDI  R17,LOW(0)
                 _0x2020035:
00163a ce06      	RJMP _0x2020030
                 _0x2020032:
00163b 81ae      	LDD  R26,Y+6
00163c 81bf      	LDD  R27,Y+6+1
00163d 940e 2022 	CALL __GETW1P
00163f 940e 20a0 	CALL __LOADLOCR6
001641 96ef      	ADIW R28,63
001642 966f      	ADIW R28,31
001643 9508      	RET
                 _sprintf:
001644 92ff      	PUSH R15
001645 2ef8      	MOV  R15,R24
001646 9726      	SBIW R28,6
001647 940e 209b 	CALL __SAVELOCR4
001649 940e 1c81 	CALL SUBOPT_0x85
00164b 9730      	SBIW R30,0
00164c f419      	BRNE _0x20200B7
00164d efef      	LDI  R30,LOW(65535)
00164e efff      	LDI  R31,HIGH(65535)
00164f c025      	RJMP _0x20E0007
                 _0x20200B7:
001650 01de      	MOVW R26,R28
001651 9616      	ADIW R26,6
001652 940e 1f62 	CALL __ADDW2R15
001654 018d      	MOVW R16,R26
001655 940e 1c81 	CALL SUBOPT_0x85
001657 83ee      	STD  Y+6,R30
001658 83ff      	STD  Y+6+1,R31
001659 e0e0      	LDI  R30,LOW(0)
00165a 87e8      	STD  Y+8,R30
00165b 87e9      	STD  Y+8+1,R30
00165c 01de      	MOVW R26,R28
00165d 961a      	ADIW R26,10
00165e 940e 1f62 	CALL __ADDW2R15
001660 940e 2022 	CALL __GETW1P
001662 93fa      	ST   -Y,R31
001663 93ea      	ST   -Y,R30
001664 931a      	ST   -Y,R17
001665 930a      	ST   -Y,R16
001666 e2e1      	LDI  R30,LOW(_put_buff_G101)
001667 e1f3      	LDI  R31,HIGH(_put_buff_G101)
001668 93fa      	ST   -Y,R31
001669 93ea      	ST   -Y,R30
00166a 01fe      	MOVW R30,R28
00166b 963a      	ADIW R30,10
00166c 93fa      	ST   -Y,R31
00166d 93ea      	ST   -Y,R30
00166e ddb7      	RCALL __print_G101
00166f 019f      	MOVW R18,R30
001670 81ae      	LDD  R26,Y+6
001671 81bf      	LDD  R27,Y+6+1
001672 e0e0      	LDI  R30,LOW(0)
001673 93ec      	ST   X,R30
001674 01f9      	MOVW R30,R18
                 _0x20E0007:
001675 940e 20a2 	CALL __LOADLOCR4
001677 962a      	ADIW R28,10
001678 90ff      	POP  R15
001679 9508      	RET
                 
                 	.CSEG
                 _ds18b20_select:
00167a 931a      	ST   -Y,R17
00167b 940e 1ce3 	CALL _w1_init
00167d 30e0      	CPI  R30,0
00167e f419      	BRNE _0x2040003
00167f e0e0      	LDI  R30,LOW(0)
001680 940c 17ed 	JMP  _0x20E0004
                 _0x2040003:
001682 81e9      	LDD  R30,Y+1
001683 81fa      	LDD  R31,Y+1+1
001684 9730      	SBIW R30,0
001685 f089      	BREQ _0x2040004
001686 e5e5      	LDI  R30,LOW(85)
001687 93ea      	ST   -Y,R30
001688 940e 1d29 	CALL _w1_write
00168a e010      	LDI  R17,LOW(0)
                 _0x2040006:
00168b 81a9      	LDD  R26,Y+1
00168c 81ba      	LDD  R27,Y+1+1
00168d 91ed      	LD   R30,X+
00168e 83a9      	STD  Y+1,R26
00168f 83ba      	STD  Y+1+1,R27
001690 93ea      	ST   -Y,R30
001691 940e 1d29 	CALL _w1_write
001693 5f1f      	SUBI R17,-LOW(1)
001694 3018      	CPI  R17,8
001695 f3a8      	BRLO _0x2040006
001696 c004      	RJMP _0x2040008
                 _0x2040004:
001697 ecec      	LDI  R30,LOW(204)
001698 93ea      	ST   -Y,R30
001699 940e 1d29 	CALL _w1_write
                 _0x2040008:
00169b e0e1      	LDI  R30,LOW(1)
00169c 940c 17ed 	JMP  _0x20E0004
                 _ds18b20_read_spd:
00169e 940e 209b 	CALL __SAVELOCR4
0016a0 81ec      	LDD  R30,Y+4
0016a1 81fd      	LDD  R31,Y+4+1
0016a2 940e 1c88 	CALL SUBOPT_0x86
0016a4 f411      	BRNE _0x2040009
0016a5 e0e0      	LDI  R30,LOW(0)
0016a6 c01d      	RJMP _0x20E0006
                 _0x2040009:
0016a7 ebee      	LDI  R30,LOW(190)
0016a8 93ea      	ST   -Y,R30
0016a9 940e 1d29 	CALL _w1_write
0016ab e010      	LDI  R17,LOW(0)
                +
0016ac e020     +LDI R18 , LOW ( ___ds18b20_scratch_pad )
0016ad e035     +LDI R19 , HIGH ( ___ds18b20_scratch_pad )
                 	__POINTWRM 18,19,___ds18b20_scratch_pad
                 _0x204000B:
0016ae 933f      	PUSH R19
0016af 932f      	PUSH R18
                +
0016b0 5f2f     +SUBI R18 , LOW ( - 1 )
0016b1 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
0016b2 940e 1d24 	CALL _w1_read
0016b4 91af      	POP  R26
0016b5 91bf      	POP  R27
0016b6 93ec      	ST   X,R30
0016b7 5f1f      	SUBI R17,-LOW(1)
0016b8 3019      	CPI  R17,9
0016b9 f3a0      	BRLO _0x204000B
0016ba e0e0      	LDI  R30,LOW(___ds18b20_scratch_pad)
0016bb e0f5      	LDI  R31,HIGH(___ds18b20_scratch_pad)
0016bc 93fa      	ST   -Y,R31
0016bd 93ea      	ST   -Y,R30
0016be e0e9      	LDI  R30,LOW(9)
0016bf 93ea      	ST   -Y,R30
0016c0 940e 1da3 	CALL _w1_dow_crc8
0016c2 940e 1f91 	CALL __LNEGB1
                 _0x20E0006:
0016c4 940e 20a2 	CALL __LOADLOCR4
0016c6 9626      	ADIW R28,6
0016c7 9508      	RET
                 _ds18b20_temperature:
0016c8 931a      	ST   -Y,R17
0016c9 940e 1c8e 	CALL SUBOPT_0x87
0016cb f421      	BRNE _0x204000D
0016cc 940e 1c96 	CALL SUBOPT_0x88
0016ce 940c 17ed 	JMP  _0x20E0004
                 _0x204000D:
                +
0016d0 91a0 0504+LDS R26 , ___ds18b20_scratch_pad + ( 4 )
                 	__GETB2MN ___ds18b20_scratch_pad,4
0016d2 e0b0      	LDI  R27,0
0016d3 e0e5      	LDI  R30,LOW(5)
0016d4 940e 1f73 	CALL __ASRW12
0016d6 70e3      	ANDI R30,LOW(0x3)
0016d7 2f1e      	MOV  R17,R30
0016d8 81e9      	LDD  R30,Y+1
0016d9 81fa      	LDD  R31,Y+1+1
0016da 940e 1c88 	CALL SUBOPT_0x86
0016dc f421      	BRNE _0x204000E
0016dd 940e 1c96 	CALL SUBOPT_0x88
0016df 940c 17ed 	JMP  _0x20E0004
                 _0x204000E:
0016e1 e4e4      	LDI  R30,LOW(68)
0016e2 93ea      	ST   -Y,R30
0016e3 940e 1d29 	CALL _w1_write
0016e5 2fe1      	MOV  R30,R17
0016e6 e8ac      	LDI  R26,LOW(_conv_delay_G102*2)
0016e7 e0b0      	LDI  R27,HIGH(_conv_delay_G102*2)
0016e8 940e 1c9b 	CALL SUBOPT_0x89
0016ea 940e 19fa 	CALL SUBOPT_0x22
0016ec 940e 1c8e 	CALL SUBOPT_0x87
0016ee f421      	BRNE _0x204000F
0016ef 940e 1c96 	CALL SUBOPT_0x88
0016f1 940c 17ed 	JMP  _0x20E0004
                 _0x204000F:
0016f3 940e 1ce3 	CALL _w1_init
0016f5 2fe1      	MOV  R30,R17
0016f6 e9a4      	LDI  R26,LOW(_bit_mask_G102*2)
0016f7 e0b0      	LDI  R27,HIGH(_bit_mask_G102*2)
0016f8 940e 1c9b 	CALL SUBOPT_0x89
0016fa 91a0 0500 	LDS  R26,___ds18b20_scratch_pad
0016fc 91b0 0501 	LDS  R27,___ds18b20_scratch_pad+1
0016fe 23ea      	AND  R30,R26
0016ff 23fb      	AND  R31,R27
001700 940e 1ca3 	CALL SUBOPT_0x8A
                +
001702 e0a0     +LDI R26 , LOW ( 0x3D800000 )
001703 e0b0     +LDI R27 , HIGH ( 0x3D800000 )
001704 e880     +LDI R24 , BYTE3 ( 0x3D800000 )
001705 e39d     +LDI R25 , BYTE4 ( 0x3D800000 )
                 	__GETD2N 0x3D800000
001706 940e 1eaf 	CALL __MULF12
001708 940c 17ed 	JMP  _0x20E0004
                 _ds18b20_init:
00170a 81eb      	LDD  R30,Y+3
00170b 81fc      	LDD  R31,Y+3+1
00170c 940e 1c88 	CALL SUBOPT_0x86
00170e f411      	BRNE _0x2040010
00170f e0e0      	LDI  R30,LOW(0)
001710 c041      	RJMP _0x20E0005
                 _0x2040010:
001711 81e8      	LD   R30,Y
001712 95e2      	SWAP R30
001713 7fe0      	ANDI R30,0xF0
001714 0fee      	LSL  R30
001715 61ef      	ORI  R30,LOW(0x1F)
001716 83e8      	ST   Y,R30
001717 e4ee      	LDI  R30,LOW(78)
001718 93ea      	ST   -Y,R30
001719 940e 1d29 	CALL _w1_write
00171b 81e9      	LDD  R30,Y+1
00171c 93ea      	ST   -Y,R30
00171d 940e 1d29 	CALL _w1_write
00171f 81ea      	LDD  R30,Y+2
001720 93ea      	ST   -Y,R30
001721 940e 1d29 	CALL _w1_write
001723 81e8      	LD   R30,Y
001724 93ea      	ST   -Y,R30
001725 940e 1d29 	CALL _w1_write
001727 81eb      	LDD  R30,Y+3
001728 81fc      	LDD  R31,Y+3+1
001729 93fa      	ST   -Y,R31
00172a 93ea      	ST   -Y,R30
00172b df72      	RCALL _ds18b20_read_spd
00172c 30e0      	CPI  R30,0
00172d f411      	BRNE _0x2040011
00172e e0e0      	LDI  R30,LOW(0)
00172f c022      	RJMP _0x20E0005
                 _0x2040011:
                +
001730 91a0 0503+LDS R26 , ___ds18b20_scratch_pad + ( 3 )
                 	__GETB2MN ___ds18b20_scratch_pad,3
001732 81ea      	LDD  R30,Y+2
001733 17ea      	CP   R30,R26
001734 f451      	BRNE _0x2040013
                +
001735 91a0 0502+LDS R26 , ___ds18b20_scratch_pad + ( 2 )
                 	__GETB2MN ___ds18b20_scratch_pad,2
001737 81e9      	LDD  R30,Y+1
001738 17ea      	CP   R30,R26
001739 f429      	BRNE _0x2040013
                +
00173a 91a0 0504+LDS R26 , ___ds18b20_scratch_pad + ( 4 )
                 	__GETB2MN ___ds18b20_scratch_pad,4
00173c 81e8      	LD   R30,Y
00173d 17ea      	CP   R30,R26
00173e f011      	BREQ _0x2040012
                 _0x2040013:
00173f e0e0      	LDI  R30,LOW(0)
001740 c011      	RJMP _0x20E0005
                 _0x2040012:
001741 81eb      	LDD  R30,Y+3
001742 81fc      	LDD  R31,Y+3+1
001743 940e 1c88 	CALL SUBOPT_0x86
001745 f411      	BRNE _0x2040015
001746 e0e0      	LDI  R30,LOW(0)
001747 c00a      	RJMP _0x20E0005
                 _0x2040015:
001748 e4e8      	LDI  R30,LOW(72)
001749 93ea      	ST   -Y,R30
00174a 940e 1d29 	CALL _w1_write
00174c e0ef      	LDI  R30,LOW(15)
00174d e0f0      	LDI  R31,HIGH(15)
00174e 940e 19fa 	CALL SUBOPT_0x22
001750 940e 1ce3 	CALL _w1_init
                 _0x20E0005:
001752 9625      	ADIW R28,5
001753 9508      	RET
                     .equ __lcd_direction=__lcd_port-1
                     .equ __lcd_pin=__lcd_port-2
                     .equ __lcd_rs=0
                     .equ __lcd_rd=1
                     .equ __lcd_enable=2
                     .equ __lcd_busy_flag=7
                 
                 	.DSEG
                 
                 	.CSEG
                 __lcd_delay_G103:
001754 e0ff          ldi   r31,15
                 __lcd_delay0:
001755 95fa          dec   r31
001756 f7f1          brne  __lcd_delay0
001757 9508      	RET
                 __lcd_ready:
001758 b1a2          in    r26,__lcd_direction
001759 70af          andi  r26,0xf                 ;set as input
00175a b9a2          out   __lcd_direction,r26
00175b 9a19          sbi   __lcd_port,__lcd_rd     ;RD=1
00175c 9818          cbi   __lcd_port,__lcd_rs     ;RS=0
                 __lcd_busy:
00175d dff6      	RCALL __lcd_delay_G103
00175e 9a1a          sbi   __lcd_port,__lcd_enable ;EN=1
00175f dff4      	RCALL __lcd_delay_G103
001760 b1a1          in    r26,__lcd_pin
001761 981a          cbi   __lcd_port,__lcd_enable ;EN=0
001762 dff1      	RCALL __lcd_delay_G103
001763 9a1a          sbi   __lcd_port,__lcd_enable ;EN=1
001764 dfef      	RCALL __lcd_delay_G103
001765 981a          cbi   __lcd_port,__lcd_enable ;EN=0
001766 fda7          sbrc  r26,__lcd_busy_flag
001767 cff5          rjmp  __lcd_busy
001768 9508      	RET
                 __lcd_write_nibble_G103:
001769 7fa0          andi  r26,0xf0
00176a 2bab          or    r26,r27
00176b b9a3          out   __lcd_port,r26          ;write
00176c 9a1a          sbi   __lcd_port,__lcd_enable ;EN=1
00176d 940e 1754 	CALL __lcd_delay_G103
00176f 981a          cbi   __lcd_port,__lcd_enable ;EN=0
001770 940e 1754 	CALL __lcd_delay_G103
001772 9508      	RET
                 __lcd_write_data:
001773 9819          cbi  __lcd_port,__lcd_rd 	  ;RD=0
001774 b1a2          in    r26,__lcd_direction
001775 6fa7          ori   r26,0xf0 | (1<<__lcd_rs) | (1<<__lcd_rd) | (1<<__lcd_enable) ;set as output
001776 b9a2          out   __lcd_direction,r26
001777 b1b3          in    r27,__lcd_port
001778 70bf          andi  r27,0xf
001779 81a8          ld    r26,y
00177a dfee      	RCALL __lcd_write_nibble_G103
00177b 81a8          ld    r26,y
00177c 95a2          swap  r26
00177d dfeb      	RCALL __lcd_write_nibble_G103
00177e 9a19          sbi   __lcd_port,__lcd_rd     ;RD=1
00177f 940c 1832 	JMP  _0x20E0003
                 __lcd_read_nibble_G103:
001781 9a1a          sbi   __lcd_port,__lcd_enable ;EN=1
001782 940e 1754 	CALL __lcd_delay_G103
001784 b1e1          in    r30,__lcd_pin           ;read
001785 981a          cbi   __lcd_port,__lcd_enable ;EN=0
001786 940e 1754 	CALL __lcd_delay_G103
001788 7fe0          andi  r30,0xf0
001789 9508      	RET
                 _lcd_read_byte0_G103:
00178a 940e 1754 	CALL __lcd_delay_G103
00178c dff4      	RCALL __lcd_read_nibble_G103
00178d 2fae          mov   r26,r30
00178e dff2      	RCALL __lcd_read_nibble_G103
00178f 9819          cbi   __lcd_port,__lcd_rd     ;RD=0
001790 95e2          swap  r30
001791 2bea          or    r30,r26
001792 9508      	RET
                 _lcd_gotoxy:
001793 940e 1758 	CALL __lcd_ready
001795 940e 1a39 	CALL SUBOPT_0x2C
001797 50ee      	SUBI R30,LOW(-__base_y_G103)
001798 4ffa      	SBCI R31,HIGH(-__base_y_G103)
001799 81e0      	LD   R30,Z
00179a 81a9      	LDD  R26,Y+1
00179b 0fea      	ADD  R30,R26
00179c 93ea      	ST   -Y,R30
00179d 940e 1773 	CALL __lcd_write_data
00179f 8089      	LDD  R8,Y+1
0017a0 80b8      	LDD  R11,Y+0
0017a1 9622      	ADIW R28,2
0017a2 9508      	RET
                 _lcd_clear:
0017a3 940e 1758 	CALL __lcd_ready
0017a5 e0e2      	LDI  R30,LOW(2)
0017a6 93ea      	ST   -Y,R30
0017a7 940e 1773 	CALL __lcd_write_data
0017a9 940e 1758 	CALL __lcd_ready
0017ab e0ec      	LDI  R30,LOW(12)
0017ac 93ea      	ST   -Y,R30
0017ad 940e 1773 	CALL __lcd_write_data
0017af 940e 1758 	CALL __lcd_ready
0017b1 e0e1      	LDI  R30,LOW(1)
0017b2 93ea      	ST   -Y,R30
0017b3 940e 1773 	CALL __lcd_write_data
0017b5 e0e0      	LDI  R30,LOW(0)
0017b6 2ebe      	MOV  R11,R30
0017b7 2e8e      	MOV  R8,R30
0017b8 9508      	RET
                 _lcd_putchar:
0017b9 93ef          push r30
0017ba 93ff          push r31
0017bb 81a8          ld   r26,y
0017bc 9468          set
0017bd 30aa          cpi  r26,10
0017be f019          breq __lcd_putchar1
0017bf 94e8          clt
0017c0 148a      	CP   R8,R10
0017c1 f030      	BRLO _0x2060004
                 	__lcd_putchar1:
0017c2 94b3      	INC  R11
0017c3 e0e0      	LDI  R30,LOW(0)
0017c4 93ea      	ST   -Y,R30
0017c5 92ba      	ST   -Y,R11
0017c6 dfcc      	RCALL _lcd_gotoxy
0017c7 f036      	brts __lcd_putchar0
                 _0x2060004:
0017c8 9483      	INC  R8
0017c9 df8e          rcall __lcd_ready
0017ca 9a18          sbi  __lcd_port,__lcd_rs ;RS=1
0017cb 81a8          ld   r26,y
0017cc 93aa          st   -y,r26
0017cd dfa5          rcall __lcd_write_data
                 __lcd_putchar0:
0017ce 91ff          pop  r31
0017cf 91ef          pop  r30
0017d0 940c 1832 	JMP  _0x20E0003
                 _lcd_puts:
0017d2 931a      	ST   -Y,R17
                 _0x2060005:
0017d3 81a9      	LDD  R26,Y+1
0017d4 81ba      	LDD  R27,Y+1+1
0017d5 91ed      	LD   R30,X+
0017d6 83a9      	STD  Y+1,R26
0017d7 83ba      	STD  Y+1+1,R27
0017d8 2f1e      	MOV  R17,R30
0017d9 30e0      	CPI  R30,0
0017da f019      	BREQ _0x2060007
0017db 931a      	ST   -Y,R17
0017dc dfdc      	RCALL _lcd_putchar
0017dd cff5      	RJMP _0x2060005
                 _0x2060007:
0017de c00e      	RJMP _0x20E0004
                 _lcd_putsf:
0017df 931a      	ST   -Y,R17
                 _0x2060008:
0017e0 81e9      	LDD  R30,Y+1
0017e1 81fa      	LDD  R31,Y+1+1
0017e2 9631      	ADIW R30,1
0017e3 83e9      	STD  Y+1,R30
0017e4 83fa      	STD  Y+1+1,R31
0017e5 9731      	SBIW R30,1
0017e6 91e4      	LPM  R30,Z
0017e7 2f1e      	MOV  R17,R30
0017e8 30e0      	CPI  R30,0
0017e9 f019      	BREQ _0x206000A
0017ea 931a      	ST   -Y,R17
0017eb dfcd      	RCALL _lcd_putchar
0017ec cff3      	RJMP _0x2060008
                 _0x206000A:
                 _0x20E0004:
0017ed 8118      	LDD  R17,Y+0
0017ee 9623      	ADIW R28,3
0017ef 9508      	RET
                 __long_delay_G103:
0017f0 27aa          clr   r26
0017f1 27bb          clr   r27
                 __long_delay0:
0017f2 9711          sbiw  r26,1         ;2 cycles
0017f3 f7f1          brne  __long_delay0 ;2 cycles
0017f4 9508      	RET
                 __lcd_init_write_G103:
0017f5 9819          cbi  __lcd_port,__lcd_rd 	  ;RD=0
0017f6 b1a2          in    r26,__lcd_direction
0017f7 6fa7          ori   r26,0xf7                ;set as output
0017f8 b9a2          out   __lcd_direction,r26
0017f9 b1b3          in    r27,__lcd_port
0017fa 70bf          andi  r27,0xf
0017fb 81a8          ld    r26,y
0017fc 940e 1769 	CALL __lcd_write_nibble_G103
0017fe 9a19          sbi   __lcd_port,__lcd_rd     ;RD=1
0017ff c032      	RJMP _0x20E0003
                 _lcd_init:
001800 981a          cbi   __lcd_port,__lcd_enable ;EN=0
001801 9818          cbi   __lcd_port,__lcd_rs     ;RS=0
001802 80a8      	LDD  R10,Y+0
001803 81e8      	LD   R30,Y
001804 58e0      	SUBI R30,-LOW(128)
                +
001805 93e0 05f4+STS __base_y_G103 + ( 2 ) , R30
                 	__PUTB1MN __base_y_G103,2
001807 81e8      	LD   R30,Y
001808 54e0      	SUBI R30,-LOW(192)
                +
001809 93e0 05f5+STS __base_y_G103 + ( 3 ) , R30
                 	__PUTB1MN __base_y_G103,3
00180b 940e 1ca8 	CALL SUBOPT_0x8B
00180d 940e 1ca8 	CALL SUBOPT_0x8B
00180f 940e 1ca8 	CALL SUBOPT_0x8B
001811 dfde      	RCALL __long_delay_G103
001812 e2e0      	LDI  R30,LOW(32)
001813 93ea      	ST   -Y,R30
001814 dfe0      	RCALL __lcd_init_write_G103
001815 dfda      	RCALL __long_delay_G103
001816 e2e8      	LDI  R30,LOW(40)
001817 940e 1cae 	CALL SUBOPT_0x8C
001819 e0e4      	LDI  R30,LOW(4)
00181a 940e 1cae 	CALL SUBOPT_0x8C
00181c e8e5      	LDI  R30,LOW(133)
00181d 940e 1cae 	CALL SUBOPT_0x8C
00181f b1a2          in    r26,__lcd_direction
001820 70af          andi  r26,0xf                 ;set as input
001821 b9a2          out   __lcd_direction,r26
001822 9a19          sbi   __lcd_port,__lcd_rd     ;RD=1
001823 940e 178a 	CALL _lcd_read_byte0_G103
001825 30e5      	CPI  R30,LOW(0x5)
001826 f011      	BREQ _0x206000B
001827 e0e0      	LDI  R30,LOW(0)
001828 c009      	RJMP _0x20E0003
                 _0x206000B:
001829 940e 1758 	CALL __lcd_ready
00182b e0e6      	LDI  R30,LOW(6)
00182c 93ea      	ST   -Y,R30
00182d 940e 1773 	CALL __lcd_write_data
00182f 940e 17a3 	CALL _lcd_clear
001831 e0e1      	LDI  R30,LOW(1)
                 _0x20E0003:
001832 9621      	ADIW R28,1
001833 9508      	RET
                 
                 	.CSEG
                 _ftoa:
001834 9724      	SBIW R28,4
001835 e0e0      	LDI  R30,LOW(0)
001836 83e8      	ST   Y,R30
001837 83e9      	STD  Y+1,R30
001838 83ea      	STD  Y+2,R30
001839 e3ef      	LDI  R30,LOW(63)
00183a 83eb      	STD  Y+3,R30
00183b 931a      	ST   -Y,R17
00183c 930a      	ST   -Y,R16
00183d 85eb      	LDD  R30,Y+11
00183e 85fc      	LDD  R31,Y+11+1
00183f 3fef      	CPI  R30,LOW(0xFFFF)
001840 efaf      	LDI  R26,HIGH(0xFFFF)
001841 07fa      	CPC  R31,R26
001842 f449      	BRNE _0x208000D
001843 81ee      	LDD  R30,Y+6
001844 81ff      	LDD  R31,Y+6+1
001845 93fa      	ST   -Y,R31
001846 93ea      	ST   -Y,R30
                +
001847 e7e2     +LDI R30 , LOW ( 2 * _0x2080000 + ( 0 ) )
001848 e0f3     +LDI R31 , HIGH ( 2 * _0x2080000 + ( 0 ) )
                 	__POINTW1FN _0x2080000,0
001849 940e 1bd5 	CALL SUBOPT_0x6D
00184b c0a2      	RJMP _0x20E0002
                 _0x208000D:
00184c 3fef      	CPI  R30,LOW(0x7FFF)
00184d e7af      	LDI  R26,HIGH(0x7FFF)
00184e 07fa      	CPC  R31,R26
00184f f449      	BRNE _0x208000C
001850 81ee      	LDD  R30,Y+6
001851 81ff      	LDD  R31,Y+6+1
001852 93fa      	ST   -Y,R31
001853 93ea      	ST   -Y,R30
                +
001854 e7e3     +LDI R30 , LOW ( 2 * _0x2080000 + ( 1 ) )
001855 e0f3     +LDI R31 , HIGH ( 2 * _0x2080000 + ( 1 ) )
                 	__POINTW1FN _0x2080000,1
001856 940e 1bd5 	CALL SUBOPT_0x6D
001858 c095      	RJMP _0x20E0002
                 _0x208000C:
001859 85ac      	LDD  R26,Y+12
00185a 23aa      	TST  R26
00185b f462      	BRPL _0x208000F
                +
00185c 85e9     +LDD R30 , Y + 9
00185d 85fa     +LDD R31 , Y + 9 + 1
00185e 856b     +LDD R22 , Y + 9 + 2
00185f 857c     +LDD R23 , Y + 9 + 3
                 	__GETD1S 9
001860 940e 1db9 	CALL __ANEGF1
001862 940e 1cb3 	CALL SUBOPT_0x8D
001864 940e 1cb8 	CALL SUBOPT_0x8E
001866 e2ed      	LDI  R30,LOW(45)
001867 93ec      	ST   X,R30
                 _0x208000F:
001868 85a8      	LDD  R26,Y+8
001869 30a7      	CPI  R26,LOW(0x7)
00186a f010      	BRLO _0x2080010
00186b e0e6      	LDI  R30,LOW(6)
00186c 87e8      	STD  Y+8,R30
                 _0x2080010:
00186d 8518      	LDD  R17,Y+8
                 _0x2080011:
00186e 2fe1      	MOV  R30,R17
00186f 5011      	SUBI R17,1
001870 30e0      	CPI  R30,0
001871 f039      	BREQ _0x2080013
001872 940e 1cbf 	CALL SUBOPT_0x8F
001874 940e 1c0e 	CALL SUBOPT_0x75
001876 940e 1cc4 	CALL SUBOPT_0x90
001878 cff5      	RJMP _0x2080011
                 _0x2080013:
001879 940e 1cc9 	CALL SUBOPT_0x91
00187b 940e 1e5f 	CALL __ADDF12
00187d 940e 1cb3 	CALL SUBOPT_0x8D
00187f e010      	LDI  R17,LOW(0)
                +
001880 e0e0     +LDI R30 , LOW ( 0x3F800000 )
001881 e0f0     +LDI R31 , HIGH ( 0x3F800000 )
001882 e860     +LDI R22 , BYTE3 ( 0x3F800000 )
001883 e37f     +LDI R23 , BYTE4 ( 0x3F800000 )
                 	__GETD1N 0x3F800000
001884 940e 1cc4 	CALL SUBOPT_0x90
                 _0x2080014:
001886 940e 1cc9 	CALL SUBOPT_0x91
001888 940e 1f42 	CALL __CMPF12
00188a f040      	BRLO _0x2080016
00188b 940e 1cbf 	CALL SUBOPT_0x8F
00188d 940e 1bfe 	CALL SUBOPT_0x72
00188f 940e 1cc4 	CALL SUBOPT_0x90
001891 5f1f      	SUBI R17,-LOW(1)
001892 cff3      	RJMP _0x2080014
                 _0x2080016:
001893 3010      	CPI  R17,0
001894 f429      	BRNE _0x2080017
001895 940e 1cb8 	CALL SUBOPT_0x8E
001897 e3e0      	LDI  R30,LOW(48)
001898 93ec      	ST   X,R30
001899 c029      	RJMP _0x2080018
                 _0x2080017:
                 _0x2080019:
00189a 2fe1      	MOV  R30,R17
00189b 5011      	SUBI R17,1
00189c 30e0      	CPI  R30,0
00189d f129      	BREQ _0x208001B
00189e 940e 1cbf 	CALL SUBOPT_0x8F
0018a0 940e 1c0e 	CALL SUBOPT_0x75
0018a2 940e 1c07 	CALL SUBOPT_0x74
0018a4 940e 2049 	CALL __PUTPARD1
0018a6 940e 130a 	CALL _floor
0018a8 940e 1cc4 	CALL SUBOPT_0x90
0018aa 940e 1cc9 	CALL SUBOPT_0x91
0018ac 940e 1efd 	CALL __DIVF21
0018ae 940e 1dec 	CALL __CFD1U
0018b0 2f0e      	MOV  R16,R30
0018b1 940e 1cb8 	CALL SUBOPT_0x8E
0018b3 940e 1c19 	CALL SUBOPT_0x77
0018b5 e0f0      	LDI  R31,0
0018b6 940e 1cbf 	CALL SUBOPT_0x8F
0018b8 940e 1ca3 	CALL SUBOPT_0x8A
0018ba 940e 1eaf 	CALL __MULF12
0018bc 940e 1cd2 	CALL SUBOPT_0x92
0018be 940e 1b60 	CALL SUBOPT_0x54
0018c0 940e 1cb3 	CALL SUBOPT_0x8D
0018c2 cfd7      	RJMP _0x2080019
                 _0x208001B:
                 _0x2080018:
0018c3 85e8      	LDD  R30,Y+8
0018c4 30e0      	CPI  R30,0
0018c5 f121      	BREQ _0x20E0001
0018c6 940e 1cb8 	CALL SUBOPT_0x8E
0018c8 e2ee      	LDI  R30,LOW(46)
0018c9 93ec      	ST   X,R30
                 _0x208001D:
0018ca 85e8      	LDD  R30,Y+8
0018cb 50e1      	SUBI R30,LOW(1)
0018cc 87e8      	STD  Y+8,R30
0018cd 5fef      	SUBI R30,-LOW(1)
0018ce f0d9      	BREQ _0x208001F
0018cf 940e 1cd2 	CALL SUBOPT_0x92
0018d1 940e 1bfe 	CALL SUBOPT_0x72
0018d3 940e 1cb3 	CALL SUBOPT_0x8D
                +
0018d5 85e9     +LDD R30 , Y + 9
0018d6 85fa     +LDD R31 , Y + 9 + 1
0018d7 856b     +LDD R22 , Y + 9 + 2
0018d8 857c     +LDD R23 , Y + 9 + 3
                 	__GETD1S 9
0018d9 940e 1dec 	CALL __CFD1U
0018db 2f0e      	MOV  R16,R30
0018dc 940e 1cb8 	CALL SUBOPT_0x8E
0018de 940e 1c19 	CALL SUBOPT_0x77
0018e0 e0f0      	LDI  R31,0
0018e1 940e 1cd2 	CALL SUBOPT_0x92
0018e3 940e 1ca3 	CALL SUBOPT_0x8A
0018e5 940e 1b60 	CALL SUBOPT_0x54
0018e7 940e 1cb3 	CALL SUBOPT_0x8D
0018e9 cfe0      	RJMP _0x208001D
                 _0x208001F:
                 _0x20E0001:
0018ea 81ae      	LDD  R26,Y+6
0018eb 81bf      	LDD  R27,Y+6+1
0018ec e0e0      	LDI  R30,LOW(0)
0018ed 93ec      	ST   X,R30
                 _0x20E0002:
0018ee 8119      	LDD  R17,Y+1
0018ef 8108      	LDD  R16,Y+0
0018f0 962d      	ADIW R28,13
0018f1 9508      	RET
                 
                 	.DSEG
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.CSEG
                 _strcpyf:
0018f2 91e9          ld   r30,y+
0018f3 91f9          ld   r31,y+
0018f4 91a9          ld   r26,y+
0018f5 91b9          ld   r27,y+
0018f6 01cd          movw r24,r26
                 strcpyf0:
0018f7 9005      	lpm  r0,z+
0018f8 920d          st   x+,r0
0018f9 2000          tst  r0
0018fa f7e1          brne strcpyf0
0018fb 01fc          movw r30,r24
0018fc 9508          ret
                 _strlen:
0018fd 91a9          ld   r26,y+
0018fe 91b9          ld   r27,y+
0018ff 27ee          clr  r30
001900 27ff          clr  r31
                 strlen0:
001901 916d          ld   r22,x+
001902 2366          tst  r22
001903 f011          breq strlen1
001904 9631          adiw r30,1
001905 cffb          rjmp strlen0
                 strlen1:
001906 9508          ret
                 _strlenf:
001907 27aa          clr  r26
001908 27bb          clr  r27
001909 91e9          ld   r30,y+
00190a 91f9          ld   r31,y+
                 strlenf0:
00190b 9005      	lpm  r0,z+
00190c 2000          tst  r0
00190d f011          breq strlenf1
00190e 9611          adiw r26,1
00190f cffb          rjmp strlenf0
                 strlenf1:
001910 01fd          movw r30,r26
001911 9508          ret
                 
                 	.DSEG
                 ___ds18b20_scratch_pad:
000500           	.BYTE 0x9
                 
                 	.ESEG
                 _DS18B20_IS_ASSIGNED:
000000           	.BYTE 0x8
                 _DS18B20_ADDRESSES:
000008           	.BYTE 0x48
                 
                 	.DSEG
                 _TEMPERATURES:
000509           	.BYTE 0x20
                 
                 	.ESEG
                 _ROOM_TEMPERATURE:
000050           	.BYTE 0x4
                 _MANUAL_CONTROLLER:
000054           	.BYTE 0x1
                 
                 	.DSEG
                 _dac_data:
000529           	.BYTE 0x4
                 _RowsOnWindow_G000:
00052d           	.BYTE 0x1
                 _Address_G000:
00052e           	.BYTE 0x6
                 _SelectedRow_G000:
000534           	.BYTE 0x1
                 _RefreshLcd_G000:
000535           	.BYTE 0x1
                 _lcd_light_osc_G000:
000536           	.BYTE 0x1
                 _lcd_light_now_G000:
000537           	.BYTE 0x1
                 
                 	.ESEG
                 _lcd_light:
000055           	.BYTE 0x1
                 
                 	.DSEG
                 _ds18b20_devices_S0000006000:
000538           	.BYTE 0x1
                 _rom_code_S0000006000:
000539           	.BYTE 0x48
                 _ds18b20_sensor_assignation_S0000006000:
000581           	.BYTE 0x8
                 _STAND_BY_S0000006000:
000589           	.BYTE 0x1
                 _SecondCounter_S0000006001:
00058a           	.BYTE 0x2
                 _TimeRefreshed_S0000006001:
00058c           	.BYTE 0x1
                 _BUTTON_S0000006001:
00058d           	.BYTE 0x5
                 _ButtonFilter_S0000006001:
000592           	.BYTE 0x5
                 _ds18b20_wait_time_S0000006001:
000597           	.BYTE 0x1
                 _ds18b20_scanning_device_S0000006001:
000598           	.BYTE 0x1
                 _error_temperature_S0000006001:
000599           	.BYTE 0x8
                 _ADC_CHANNEL_S0000006001:
0005a1           	.BYTE 0x1
                 _AlgorythmSecondTimer_S0000006001:
0005a2           	.BYTE 0x1
                 _ALGORYTHM_REFRESH_TIME_S0000006001:
0005a3           	.BYTE 0x1
                 _VERY_LAST_TEMPERATURES_S0000006001:
0005a4           	.BYTE 0x20
                 _LAST_TEMPERATURES_S0000006001:
0005c4           	.BYTE 0x20
                 _LAST_SOLARIUM_STATE_S0000006001:
0005e4           	.BYTE 0x3
                 _SOLARIUM_OUTSIDE_OFFSET_S0000006001:
0005e7           	.BYTE 0x4
                 _SOLARIUM_INSIDE_OFFSET_S0000006001:
0005eb           	.BYTE 0x4
                 _lcd_led_counter_S0000006001:
0005ef           	.BYTE 0x1
                 _stand_by_pos_S0000006002:
0005f0           	.BYTE 0x2
                 __base_y_G103:
0005f2           	.BYTE 0x4
                 __seed_G104:
0005f6           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x0:
001912 e0b0      	LDI  R27,0
001913 e0f0      	LDI  R31,0
001914 fde7      	SBRC R30,7
001915 efff      	SER  R31
001916 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1:
001917 2fe2      	MOV  R30,R18
001918 e0f0      	LDI  R31,0
001919 01de      	MOVW R26,R28
00191a 9614      	ADIW R26,4
00191b 0fae      	ADD  R26,R30
00191c 1fbf      	ADC  R27,R31
00191d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2:
00191e 940e 2054 	CALL __SWAPW12
001920 1bea      	SUB  R30,R26
001921 0bfb      	SBC  R31,R27
001922 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x3:
001923 e0f0      	LDI  R31,0
001924 9731      	SBIW R30,1
001925 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:24 WORDS
                 SUBOPT_0x4:
001926 e0b0      	LDI  R27,0
001927 17ae      	CP   R26,R30
001928 07bf      	CPC  R27,R31
001929 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 17 TIMES, CODE SIZE REDUCTION:45 WORDS
                 SUBOPT_0x5:
                +
00192a 91e0 0533+LDS R30 , _Address_G000 + ( 5 )
                 	__GETB1MN _Address_G000,5
00192c e0f0      	LDI  R31,0
00192d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x6:
                +
00192e 81e9     +LDD R30 , Y + 1
00192f 81fa     +LDD R31 , Y + 1 + 1
001930 816b     +LDD R22 , Y + 1 + 2
001931 817c     +LDD R23 , Y + 1 + 3
                 	__GETD1S 1
001932 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x7:
                +
001933 e0aa     +LDI R26 , LOW ( 0xA )
001934 e0b0     +LDI R27 , HIGH ( 0xA )
001935 e080     +LDI R24 , BYTE3 ( 0xA )
001936 e090     +LDI R25 , BYTE4 ( 0xA )
                 	__GETD2N 0xA
001937 940e 1f96 	CALL __MULD12U
001939 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x8:
                +
00193a 83e9     +STD Y + 1 , R30
00193b 83fa     +STD Y + 1 + 1 , R31
00193c 836b     +STD Y + 1 + 2 , R22
00193d 837c     +STD Y + 1 + 3 , R23
                 	__PUTD1S 1
00193e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x9:
                +
00193f 81a9     +LDD R26 , Y + 1
001940 81ba     +LDD R27 , Y + 1 + 1
001941 818b     +LDD R24 , Y + 1 + 2
001942 819c     +LDD R25 , Y + 1 + 3
                 	__GETD2S 1
001943 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0xA:
                +
001944 81ee     +LDD R30 , Y + 6
001945 81ff     +LDD R31 , Y + 6 + 1
001946 8568     +LDD R22 , Y + 6 + 2
001947 8579     +LDD R23 , Y + 6 + 3
                 	__GETD1S 6
001948 cfea      	RJMP SUBOPT_0x7
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xB:
001949 01df      	MOVW R26,R30
00194a 01cb      	MOVW R24,R22
00194b dfe2      	RCALL SUBOPT_0x6
00194c 940e 2094 	CALL __CPD21
00194e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xC:
                +
00194f 50e1     +SUBI R30 , LOW ( 1 )
001950 40f0     +SBCI R31 , HIGH ( 1 )
001951 4060     +SBCI R22 , BYTE3 ( 1 )
001952 4070     +SBCI R23 , BYTE4 ( 1 )
                 	__SUBD1N 1
001953 cfe6      	RJMP SUBOPT_0x8
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0xD:
001954 89ac      	LDD  R26,Y+20
001955 27bb      	CLR  R27
001956 89ea      	LDD  R30,Y+18
001957 e0f0      	LDI  R31,0
001958 1bae      	SUB  R26,R30
001959 0bbf      	SBC  R27,R31
00195a 81ed      	LDD  R30,Y+5
00195b e0f0      	LDI  R31,0
00195c 17ea      	CP   R30,R26
00195d 07fb      	CPC  R31,R27
00195e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xE:
                +
00195f 81ee     +LDD R30 , Y + 6
001960 81ff     +LDD R31 , Y + 6 + 1
001961 8568     +LDD R22 , Y + 6 + 2
001962 8579     +LDD R23 , Y + 6 + 3
                 	__GETD1S 6
001963 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:37 WORDS
                 SUBOPT_0xF:
001964 dfda      	RCALL SUBOPT_0x9
001965 940e 1fce 	CALL __DIVD21U
001967 83e8      	ST   Y,R30
001968 93ea      	ST   -Y,R30
001969 940e 029e 	CALL _NumToIndex
00196b 93ea      	ST   -Y,R30
00196c 940e 17b9 	CALL _lcd_putchar
00196e 81a8      	LD   R26,Y
00196f 27bb      	CLR  R27
001970 dfee      	RCALL SUBOPT_0xE
001971 940e 1f8c 	CALL __CWD2
001973 940e 1f96 	CALL __MULD12U
001975 dfc9      	RCALL SUBOPT_0x9
001976 940e 1f66 	CALL __SUBD21
                +
001978 83a9     +STD Y + 1 , R26
001979 83ba     +STD Y + 1 + 1 , R27
00197a 838b     +STD Y + 1 + 2 , R24
00197b 839c     +STD Y + 1 + 3 , R25
                 	__PUTD2S 1
                +
00197c 81ae     +LDD R26 , Y + 6
00197d 81bf     +LDD R27 , Y + 6 + 1
00197e 8588     +LDD R24 , Y + 6 + 2
00197f 8599     +LDD R25 , Y + 6 + 3
                 	__GETD2S 6
                +
001980 e0ea     +LDI R30 , LOW ( 0xA )
001981 e0f0     +LDI R31 , HIGH ( 0xA )
001982 e060     +LDI R22 , BYTE3 ( 0xA )
001983 e070     +LDI R23 , BYTE4 ( 0xA )
                 	__GETD1N 0xA
001984 940e 1fce 	CALL __DIVD21U
                +
001986 83ee     +STD Y + 6 , R30
001987 83ff     +STD Y + 6 + 1 , R31
001988 8768     +STD Y + 6 + 2 , R22
001989 8779     +STD Y + 6 + 3 , R23
                 	__PUTD1S 6
00198a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x10:
                +
00198b 85ea     +LDD R30 , Y + 10
00198c 85fb     +LDD R31 , Y + 10 + 1
00198d 856c     +LDD R22 , Y + 10 + 2
00198e 857d     +LDD R23 , Y + 10 + 3
                 	__GETD1S 10
00198f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x11:
001990 eee8      	LDI  R30,LOW(1000)
001991 e0f3      	LDI  R31,HIGH(1000)
001992 93fa      	ST   -Y,R31
001993 93ea      	ST   -Y,R30
001994 940c 1cd7 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 62 TIMES, CODE SIZE REDUCTION:119 WORDS
                 SUBOPT_0x12:
001996 93fa      	ST   -Y,R31
001997 93ea      	ST   -Y,R30
001998 940c 17df 	JMP  _lcd_putsf
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x13:
00199a e0e0      	LDI  R30,LOW(0)
00199b 93ea      	ST   -Y,R30
00199c e0e3      	LDI  R30,LOW(3)
00199d 93ea      	ST   -Y,R30
00199e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x14:
00199f e0e0      	LDI  R30,LOW(0)
0019a0 93ea      	ST   -Y,R30
0019a1 93ea      	ST   -Y,R30
0019a2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x15:
0019a3 940e 2049 	CALL __PUTPARD1
                +
0019a5 e0e0     +LDI R30 , LOW ( 0x0 )
0019a6 e0f0     +LDI R31 , HIGH ( 0x0 )
0019a7 e060     +LDI R22 , BYTE3 ( 0x0 )
0019a8 e070     +LDI R23 , BYTE4 ( 0x0 )
                 	__GETD1N 0x0
0019a9 940e 2049 	CALL __PUTPARD1
0019ab 940c 02d5 	JMP  _lcd_put_number
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x16:
0019ad e0e0      	LDI  R30,LOW(0)
0019ae 93e0 0529 	STS  _dac_data,R30
0019b0 efef      	LDI  R30,LOW(255)
                +
0019b1 93e0 052a+STS _dac_data + ( 1 ) , R30
                 	__PUTB1MN _dac_data,1
                +
0019b3 93e0 052b+STS _dac_data + ( 2 ) , R30
                 	__PUTB1MN _dac_data,2
                +
0019b5 93e0 052c+STS _dac_data + ( 3 ) , R30
                 	__PUTB1MN _dac_data,3
0019b7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 17 TIMES, CODE SIZE REDUCTION:61 WORDS
                 SUBOPT_0x17:
0019b8 81a8      	LD   R26,Y
0019b9 e0b0      	LDI  R27,0
0019ba 50a0      	SUBI R26,LOW(-_DS18B20_IS_ASSIGNED)
0019bb 40b0      	SBCI R27,HIGH(-_DS18B20_IS_ASSIGNED)
0019bc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x18:
0019bd e5a5      	LDI  R26,LOW(_lcd_light)
0019be e0b0      	LDI  R27,HIGH(_lcd_light)
0019bf 940e 2063 	CALL __EEPROMRDB
0019c1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x19:
0019c2 e5a0      	LDI  R26,LOW(_ROOM_TEMPERATURE)
0019c3 e0b0      	LDI  R27,HIGH(_ROOM_TEMPERATURE)
0019c4 940e 205b 	CALL __EEPROMRDD
0019c6 01df      	MOVW R26,R30
0019c7 01cb      	MOVW R24,R22
0019c8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1A:
                +
0019c9 e0e0     +LDI R30 , LOW ( 0x41200000 )
0019ca e0f0     +LDI R31 , HIGH ( 0x41200000 )
0019cb e260     +LDI R22 , BYTE3 ( 0x41200000 )
0019cc e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
0019cd 940e 1f42 	CALL __CMPF12
0019cf 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1B:
                +
0019d0 e0e0     +LDI R30 , LOW ( 0x41F00000 )
0019d1 e0f0     +LDI R31 , HIGH ( 0x41F00000 )
0019d2 ef60     +LDI R22 , BYTE3 ( 0x41F00000 )
0019d3 e471     +LDI R23 , BYTE4 ( 0x41F00000 )
                 	__GETD1N 0x41F00000
0019d4 940e 1f42 	CALL __CMPF12
0019d6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1C:
0019d7 81e9      	LDD  R30,Y+1
0019d8 e0f0      	LDI  R31,0
0019d9 57ef      	SUBI R30,LOW(-_ds18b20_sensor_assignation_S0000006000)
0019da 4ffa      	SBCI R31,HIGH(-_ds18b20_sensor_assignation_S0000006000)
0019db efaf      	LDI  R26,LOW(255)
0019dc 83a0      	STD  Z+0,R26
0019dd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x1D:
0019de e0e0      	LDI  R30,LOW(0)
0019df 93ea      	ST   -Y,R30
0019e0 e0e1      	LDI  R30,LOW(1)
0019e1 93ea      	ST   -Y,R30
0019e2 940c 1793 	JMP  _lcd_gotoxy
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x1E:
0019e4 93ea      	ST   -Y,R30
0019e5 940e 029e 	CALL _NumToIndex
0019e7 93ea      	ST   -Y,R30
0019e8 940c 17b9 	JMP  _lcd_putchar
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1F:
0019ea 81a9      	LDD  R26,Y+1
0019eb e0b0      	LDI  R27,0
0019ec 50a0      	SUBI R26,LOW(-_DS18B20_IS_ASSIGNED)
0019ed 40b0      	SBCI R27,HIGH(-_DS18B20_IS_ASSIGNED)
0019ee 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x20:
0019ef 91e0 0538 	LDS  R30,_ds18b20_devices_S0000006000
0019f1 81a9      	LDD  R26,Y+1
0019f2 17ae      	CP   R26,R30
0019f3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 13 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x21:
0019f4 e0a9      	LDI  R26,LOW(9)
0019f5 9fea      	MUL  R30,R26
0019f6 01f0      	MOVW R30,R0
0019f7 5ce7      	SUBI R30,LOW(-_rom_code_S0000006000)
0019f8 4ffa      	SBCI R31,HIGH(-_rom_code_S0000006000)
0019f9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x22:
0019fa 93fa      	ST   -Y,R31
0019fb 93ea      	ST   -Y,R30
0019fc 940c 1cd7 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x23:
0019fe 01df      	MOVW R26,R30
0019ff 81e9      	LDD  R30,Y+1
001a00 e0f0      	LDI  R31,0
001a01 0fae      	ADD  R26,R30
001a02 1fbf      	ADC  R27,R31
001a03 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 11 TIMES, CODE SIZE REDUCTION:27 WORDS
                 SUBOPT_0x24:
001a04 e0a9      	LDI  R26,LOW(9)
001a05 9fea      	MUL  R30,R26
001a06 01f0      	MOVW R30,R0
001a07 5fe8      	SUBI R30,LOW(-_DS18B20_ADDRESSES)
001a08 4fff      	SBCI R31,HIGH(-_DS18B20_ADDRESSES)
001a09 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 42 TIMES, CODE SIZE REDUCTION:120 WORDS
                 SUBOPT_0x25:
001a0a e0f0      	LDI  R31,0
001a0b 57ef      	SUBI R30,LOW(-_ds18b20_sensor_assignation_S0000006000)
001a0c 4ffa      	SBCI R31,HIGH(-_ds18b20_sensor_assignation_S0000006000)
001a0d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x26:
001a0e 81ab      	LDD  R26,Y+3
001a0f e0b0      	LDI  R27,0
001a10 50a0      	SUBI R26,LOW(-_DS18B20_IS_ASSIGNED)
001a11 40b0      	SBCI R27,HIGH(-_DS18B20_IS_ASSIGNED)
001a12 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x27:
001a13 e0e1      	LDI  R30,LOW(1)
001a14 940e 207f 	CALL __EEPROMWRB
001a16 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x28:
001a17 91ed      	LD   R30,X+
001a18 91fd      	LD   R31,X+
001a19 9631      	ADIW R30,1
001a1a 93fe      	ST   -X,R31
001a1b 93ee      	ST   -X,R30
001a1c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:16 WORDS
                 SUBOPT_0x29:
001a1d e0e0      	LDI  R30,LOW(0)
001a1e 93e0 052e 	STS  _Address_G000,R30
                +
001a20 93e0 052f+STS _Address_G000 + ( 1 ) , R30
                 	__PUTB1MN _Address_G000,1
                +
001a22 93e0 0530+STS _Address_G000 + ( 2 ) , R30
                 	__PUTB1MN _Address_G000,2
                +
001a24 93e0 0531+STS _Address_G000 + ( 3 ) , R30
                 	__PUTB1MN _Address_G000,3
                +
001a26 93e0 0532+STS _Address_G000 + ( 4 ) , R30
                 	__PUTB1MN _Address_G000,4
                +
001a28 93e0 0533+STS _Address_G000 + ( 5 ) , R30
                 	__PUTB1MN _Address_G000,5
001a2a 93e0 0534 	STS  _SelectedRow_G000,R30
001a2c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2A:
001a2d 81e8      	LD   R30,Y
001a2e e0f0      	LDI  R31,0
001a2f 56ee      	SUBI R30,LOW(-_ButtonFilter_S0000006001)
001a30 4ffa      	SBCI R31,HIGH(-_ButtonFilter_S0000006001)
001a31 81a0      	LD   R26,Z
001a32 30aa      	CPI  R26,LOW(0xA)
001a33 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2B:
001a34 81e8      	LD   R30,Y
001a35 e0f0      	LDI  R31,0
001a36 57e3      	SUBI R30,LOW(-_BUTTON_S0000006001)
001a37 4ffa      	SBCI R31,HIGH(-_BUTTON_S0000006001)
001a38 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 22 TIMES, CODE SIZE REDUCTION:39 WORDS
                 SUBOPT_0x2C:
001a39 81e8      	LD   R30,Y
001a3a e0f0      	LDI  R31,0
001a3b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 31 TIMES, CODE SIZE REDUCTION:87 WORDS
                 SUBOPT_0x2D:
001a3c e0b0      	LDI  R27,0
001a3d 50a0      	SUBI R26,LOW(-_DS18B20_IS_ASSIGNED)
001a3e 40b0      	SBCI R27,HIGH(-_DS18B20_IS_ASSIGNED)
001a3f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2E:
001a40 940e 203a 	CALL __GETD2S0
001a42 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 22 TIMES, CODE SIZE REDUCTION:102 WORDS
                 SUBOPT_0x2F:
001a43 e0a9      	LDI  R26,LOW(_TEMPERATURES)
001a44 e0b5      	LDI  R27,HIGH(_TEMPERATURES)
001a45 e0f0      	LDI  R31,0
001a46 940e 1f7c 	CALL __LSLW2
001a48 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x30:
001a49 91e0 0598 	LDS  R30,_ds18b20_scanning_device_S0000006001
001a4b e0f0      	LDI  R31,0
001a4c 56e7      	SUBI R30,LOW(-_error_temperature_S0000006001)
001a4d 4ffa      	SBCI R31,HIGH(-_error_temperature_S0000006001)
001a4e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x31:
001a4f 91e0 05a1 	LDS  R30,_ADC_CHANNEL_S0000006001
001a51 93ea      	ST   -Y,R30
001a52 940c 025c 	JMP  _read_adc
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:19 WORDS
                 SUBOPT_0x32:
001a54 e5a4      	LDI  R26,LOW(_MANUAL_CONTROLLER)
001a55 e0b0      	LDI  R27,HIGH(_MANUAL_CONTROLLER)
001a56 940e 2063 	CALL __EEPROMRDB
001a58 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x33:
                +
001a59 91e0 050d+LDS R30 , _TEMPERATURES + ( 4 )
001a5b 91f0 050e+LDS R31 , _TEMPERATURES + ( 4 ) + 1
001a5d 9160 050f+LDS R22 , _TEMPERATURES + ( 4 ) + 2
001a5f 9170 0510+LDS R23 , _TEMPERATURES + ( 4 ) + 3
                 	__GETD1MN _TEMPERATURES,4
001a61 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x34:
001a62 e5a0      	LDI  R26,LOW(_ROOM_TEMPERATURE)
001a63 e0b0      	LDI  R27,HIGH(_ROOM_TEMPERATURE)
001a64 940e 205b 	CALL __EEPROMRDD
001a66 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x35:
001a67 91a0 0509 	LDS  R26,_TEMPERATURES
001a69 91b0 050a 	LDS  R27,_TEMPERATURES+1
001a6b 9180 050b 	LDS  R24,_TEMPERATURES+2
001a6d 9190 050c 	LDS  R25,_TEMPERATURES+3
001a6f 940e 1e58 	CALL __SUBF12
001a71 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x36:
001a72 01df      	MOVW R26,R30
001a73 01cb      	MOVW R24,R22
001a74 91e0 05eb 	LDS  R30,_SOLARIUM_INSIDE_OFFSET_S0000006001
001a76 91f0 05ec 	LDS  R31,_SOLARIUM_INSIDE_OFFSET_S0000006001+1
001a78 9160 05ed 	LDS  R22,_SOLARIUM_INSIDE_OFFSET_S0000006001+2
001a7a 9170 05ee 	LDS  R23,_SOLARIUM_INSIDE_OFFSET_S0000006001+3
001a7c 940e 1f42 	CALL __CMPF12
001a7e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x37:
001a7f 91a0 05eb 	LDS  R26,_SOLARIUM_INSIDE_OFFSET_S0000006001
001a81 91b0 05ec 	LDS  R27,_SOLARIUM_INSIDE_OFFSET_S0000006001+1
001a83 9180 05ed 	LDS  R24,_SOLARIUM_INSIDE_OFFSET_S0000006001+2
001a85 9190 05ee 	LDS  R25,_SOLARIUM_INSIDE_OFFSET_S0000006001+3
                +
001a87 e0e0     +LDI R30 , LOW ( 0x40000000 )
001a88 e0f0     +LDI R31 , HIGH ( 0x40000000 )
001a89 e060     +LDI R22 , BYTE3 ( 0x40000000 )
001a8a e470     +LDI R23 , BYTE4 ( 0x40000000 )
                 	__GETD1N 0x40000000
001a8b 940e 1eaf 	CALL __MULF12
001a8d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:45 WORDS
                 SUBOPT_0x38:
001a8e 91e0 0509 	LDS  R30,_TEMPERATURES
001a90 91f0 050a 	LDS  R31,_TEMPERATURES+1
001a92 9160 050b 	LDS  R22,_TEMPERATURES+2
001a94 9170 050c 	LDS  R23,_TEMPERATURES+3
001a96 91a0 05c4 	LDS  R26,_LAST_TEMPERATURES_S0000006001
001a98 91b0 05c5 	LDS  R27,_LAST_TEMPERATURES_S0000006001+1
001a9a 9180 05c6 	LDS  R24,_LAST_TEMPERATURES_S0000006001+2
001a9c 9190 05c7 	LDS  R25,_LAST_TEMPERATURES_S0000006001+3
001a9e 940e 1f42 	CALL __CMPF12
001aa0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x39:
                +
001aa1 93e0 052a+STS _dac_data + ( 1 ) , R30
                 	__PUTB1MN _dac_data,1
                +
001aa3 91e0 052a+LDS R30 , _dac_data + ( 1 )
                 	__GETB1MN _dac_data,1
                +
001aa5 93e0 052b+STS _dac_data + ( 2 ) , R30
                 	__PUTB1MN _dac_data,2
                +
001aa7 91e0 052a+LDS R30 , _dac_data + ( 1 )
                 	__GETB1MN _dac_data,1
001aa9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x3A:
001aaa efef      	LDI  R30,LOW(255)
                +
001aab 93e0 052a+STS _dac_data + ( 1 ) , R30
                 	__PUTB1MN _dac_data,1
                +
001aad 93e0 052b+STS _dac_data + ( 2 ) , R30
                 	__PUTB1MN _dac_data,2
001aaf 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x3B:
001ab0 91a0 0509 	LDS  R26,_TEMPERATURES
001ab2 91b0 050a 	LDS  R27,_TEMPERATURES+1
001ab4 9180 050b 	LDS  R24,_TEMPERATURES+2
001ab6 9190 050c 	LDS  R25,_TEMPERATURES+3
001ab8 940e 204e 	CALL __SWAPD12
001aba 940e 1e58 	CALL __SUBF12
001abc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3C:
                +
001abd e2aa     +LDI R26 , LOW ( _dac_data + ( 1 ) )
001abe e0b5     +LDI R27 , HIGH ( _dac_data + ( 1 ) )
                 	__POINTW2MN _dac_data,1
001abf 91ec      	LD   R30,X
001ac0 e0f0      	LDI  R31,0
001ac1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x3D:
001ac2 93ec      	ST   X,R30
                +
001ac3 91e0 052a+LDS R30 , _dac_data + ( 1 )
                 	__GETB1MN _dac_data,1
                +
001ac5 93e0 052b+STS _dac_data + ( 2 ) , R30
                 	__PUTB1MN _dac_data,2
                +
001ac7 91e0 052a+LDS R30 , _dac_data + ( 1 )
                 	__GETB1MN _dac_data,1
001ac9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x3E:
001aca efef      	LDI  R30,LOW(255)
001acb 93e0 0529 	STS  _dac_data,R30
001acd e0e0      	LDI  R30,LOW(0)
                +
001ace 93e0 052a+STS _dac_data + ( 1 ) , R30
                 	__PUTB1MN _dac_data,1
                +
001ad0 93e0 052b+STS _dac_data + ( 2 ) , R30
                 	__PUTB1MN _dac_data,2
                +
001ad2 93e0 052c+STS _dac_data + ( 3 ) , R30
                 	__PUTB1MN _dac_data,3
001ad4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x3F:
001ad5 91a0 0509 	LDS  R26,_TEMPERATURES
001ad7 91b0 050a 	LDS  R27,_TEMPERATURES+1
001ad9 9180 050b 	LDS  R24,_TEMPERATURES+2
001adb 9190 050c 	LDS  R25,_TEMPERATURES+3
001add 940e 1f42 	CALL __CMPF12
001adf 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x40:
001ae0 e0f0      	LDI  R31,0
001ae1 940e 1f7c 	CALL __LSLW2
001ae3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x41:
001ae4 0fae      	ADD  R26,R30
001ae5 1fbf      	ADC  R27,R31
001ae6 940e 2026 	CALL __GETD1P
001ae8 01d0      	MOVW R26,R0
001ae9 940e 202c 	CALL __PUTDP1
001aeb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x42:
001aec e0e0      	LDI  R30,LOW(0)
001aed 93ea      	ST   -Y,R30
001aee e0e2      	LDI  R30,LOW(2)
001aef 93ea      	ST   -Y,R30
001af0 940c 1793 	JMP  _lcd_gotoxy
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 14 TIMES, CODE SIZE REDUCTION:23 WORDS
                 SUBOPT_0x43:
001af2 e2ef      	LDI  R30,LOW(47)
001af3 93ea      	ST   -Y,R30
001af4 940c 17b9 	JMP  _lcd_putchar
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x44:
001af6 93ea      	ST   -Y,R30
001af7 e0e0      	LDI  R30,LOW(0)
001af8 93ea      	ST   -Y,R30
001af9 940c 1793 	JMP  _lcd_gotoxy
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x45:
001afb e1e3      	LDI  R30,LOW(19)
001afc 93ea      	ST   -Y,R30
001afd e0e1      	LDI  R30,LOW(1)
001afe 93ea      	ST   -Y,R30
001aff 940c 1793 	JMP  _lcd_gotoxy
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x46:
001b01 e1e3      	LDI  R30,LOW(19)
001b02 93ea      	ST   -Y,R30
001b03 e0e2      	LDI  R30,LOW(2)
001b04 93ea      	ST   -Y,R30
001b05 940c 1793 	JMP  _lcd_gotoxy
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x47:
001b07 e1e3      	LDI  R30,LOW(19)
001b08 93ea      	ST   -Y,R30
001b09 e0e3      	LDI  R30,LOW(3)
001b0a 93ea      	ST   -Y,R30
001b0b 940c 1793 	JMP  _lcd_gotoxy
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x48:
001b0d e0e0      	LDI  R30,LOW(0)
001b0e 93ea      	ST   -Y,R30
001b0f 940c 0268 	JMP  _SelectAnotherRow
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x49:
001b11 e0e1      	LDI  R30,LOW(1)
001b12 93ea      	ST   -Y,R30
001b13 940c 0268 	JMP  _SelectAnotherRow
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x4A:
001b15 93e0 052e 	STS  _Address_G000,R30
001b17 e0e0      	LDI  R30,LOW(0)
001b18 93e0 0534 	STS  _SelectedRow_G000,R30
                +
001b1a 93e0 0533+STS _Address_G000 + ( 5 ) , R30
                 	__PUTB1MN _Address_G000,5
001b1c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x4B:
001b1d 93e0 052d 	STS  _RowsOnWindow_G000,R30
                +
001b1f 91e0 0533+LDS R30 , _Address_G000 + ( 5 )
                 	__GETB1MN _Address_G000,5
001b21 83e9      	STD  Y+1,R30
001b22 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x4C:
001b23 9634      	ADIW R30,4
001b24 81a9      	LDD  R26,Y+1
001b25 ce00      	RJMP SUBOPT_0x4
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:39 WORDS
                 SUBOPT_0x4D:
001b26 e0e0      	LDI  R30,LOW(0)
001b27 93ea      	ST   -Y,R30
001b28 81e9      	LDD  R30,Y+1
001b29 93ea      	ST   -Y,R30
001b2a 940e 1793 	CALL _lcd_gotoxy
001b2c 81e9      	LDD  R30,Y+1
001b2d 30e0      	CPI  R30,0
001b2e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:60 WORDS
                 SUBOPT_0x4E:
001b2f 972a      	SBIW R28,10
001b30 01fe      	MOVW R30,R28
001b31 93fa      	ST   -Y,R31
001b32 93ea      	ST   -Y,R30
                +
001b33 e9e1     +LDI R30 , LOW ( 2 * _0x0 + ( 231 ) )
001b34 e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 231 ) )
                 	__POINTW1FN _0x0,231
001b35 93fa      	ST   -Y,R31
001b36 93ea      	ST   -Y,R30
001b37 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 11 TIMES, CODE SIZE REDUCTION:107 WORDS
                 SUBOPT_0x4F:
001b38 940e 2049 	CALL __PUTPARD1
001b3a e084      	LDI  R24,4
001b3b 940e 1644 	CALL _sprintf
001b3d 9628      	ADIW R28,8
001b3e 01fe      	MOVW R30,R28
001b3f 93fa      	ST   -Y,R31
001b40 93ea      	ST   -Y,R30
001b41 940e 17d2 	CALL _lcd_puts
001b43 962a      	ADIW R28,10
001b44 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:32 WORDS
                 SUBOPT_0x50:
001b45 e1e3      	LDI  R30,LOW(19)
001b46 93ea      	ST   -Y,R30
001b47 91a0 0534 	LDS  R26,_SelectedRow_G000
001b49 27bb      	CLR  R27
001b4a cddf      	RJMP SUBOPT_0x5
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:53 WORDS
                 SUBOPT_0x51:
001b4b 1bae      	SUB  R26,R30
001b4c 0bbf      	SBC  R27,R31
001b4d 93aa      	ST   -Y,R26
001b4e 940e 1793 	CALL _lcd_gotoxy
001b50 e3ec      	LDI  R30,LOW(60)
001b51 93ea      	ST   -Y,R30
001b52 940e 17b9 	CALL _lcd_putchar
001b54 9622      	ADIW R28,2
001b55 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x52:
001b56 83e8      	ST   Y,R30
                +
001b57 91a0 0591+LDS R26 , _BUTTON_S0000006001 + ( 4 )
                 	__GETB2MN _BUTTON_S0000006001,4
001b59 30a1      	CPI  R26,LOW(0x1)
001b5a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x53:
                +
001b5b eced     +LDI R30 , LOW ( 0x3DCCCCCD )
001b5c ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
001b5d ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
001b5e e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
001b5f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x54:
001b60 940e 204e 	CALL __SWAPD12
001b62 940e 1e58 	CALL __SUBF12
001b64 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x55:
                +
001b65 e0e0     +LDI R30 , LOW ( 0x41200000 )
001b66 e0f0     +LDI R31 , HIGH ( 0x41200000 )
001b67 e260     +LDI R22 , BYTE3 ( 0x41200000 )
001b68 e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
001b69 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x56:
001b6a 9722      	SBIW R28,2
001b6b e0e0      	LDI  R30,LOW(0)
001b6c 83e8      	ST   Y,R30
001b6d 81ea      	LDD  R30,Y+2
001b6e ce9b      	RJMP SUBOPT_0x25
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:24 WORDS
                 SUBOPT_0x57:
001b6f 9722      	SBIW R28,2
001b70 e0e0      	LDI  R30,LOW(0)
001b71 83e9      	STD  Y+1,R30
001b72 83e8      	ST   Y,R30
001b73 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x58:
001b74 81a0      	LD   R26,Z
001b75 81eb      	LDD  R30,Y+3
001b76 cd9b      	RJMP SUBOPT_0x0
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x59:
001b77 9721      	SBIW R28,1
001b78 81ed      	LDD  R30,Y+5
001b79 ce90      	RJMP SUBOPT_0x25
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x5A:
001b7a 81ac      	LDD  R26,Y+4
001b7b 83a0      	STD  Z+0,R26
001b7c e0e0      	LDI  R30,LOW(0)
001b7d 83e8      	ST   Y,R30
001b7e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x5B:
001b7f 0fea      	ADD  R30,R26
001b80 1ffb      	ADC  R31,R27
001b81 01bf      	MOVW R22,R30
001b82 81ec      	LDD  R30,Y+4
001b83 ce70      	RJMP SUBOPT_0x21
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x5C:
001b84 0fae      	ADD  R26,R30
001b85 1fbf      	ADC  R27,R31
001b86 91ec      	LD   R30,X
001b87 01db      	MOVW R26,R22
001b88 940e 207f 	CALL __EEPROMWRB
001b8a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 15 TIMES, CODE SIZE REDUCTION:81 WORDS
                 SUBOPT_0x5D:
001b8b 0fae      	ADD  R26,R30
001b8c 1fbf      	ADC  R27,R31
                +
001b8d e0e0     +LDI R30 , LOW ( 0x0 )
001b8e e0f0     +LDI R31 , HIGH ( 0x0 )
001b8f e060     +LDI R22 , BYTE3 ( 0x0 )
001b90 e070     +LDI R23 , BYTE4 ( 0x0 )
                 	__GETD1N 0x0
001b91 940e 202c 	CALL __PUTDP1
001b93 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x5E:
001b94 e0e0      	LDI  R30,LOW(0)
001b95 940e 207f 	CALL __EEPROMWRB
001b97 81ea      	LDD  R30,Y+2
001b98 ce71      	RJMP SUBOPT_0x25
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x5F:
001b99 efaf      	LDI  R26,LOW(255)
001b9a 83a0      	STD  Z+0,R26
001b9b 81ea      	LDD  R30,Y+2
001b9c cea6      	RJMP SUBOPT_0x2F
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x60:
001b9d 9722      	SBIW R28,2
001b9e e0e0      	LDI  R30,LOW(0)
001b9f 83e8      	ST   Y,R30
001ba0 81aa      	LDD  R26,Y+2
001ba1 ce9a      	RJMP SUBOPT_0x2D
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x61:
001ba2 83eb      	STD  Y+3,R30
001ba3 81ed      	LDD  R30,Y+5
001ba4 ce9e      	RJMP SUBOPT_0x2F
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x62:
001ba5 940e 17a3 	CALL _lcd_clear
                +
001ba7 efe2     +LDI R30 , LOW ( 2 * _0x0 + ( 328 ) )
001ba8 e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 328 ) )
                 	__POINTW1FN _0x0,328
001ba9 cdec      	RJMP SUBOPT_0x12
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x63:
                +
001baa e0e7     +LDI R30 , LOW ( 2 * _0x0 + ( 349 ) )
001bab e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 349 ) )
                 	__POINTW1FN _0x0,349
001bac cde9      	RJMP SUBOPT_0x12
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x64:
                +
001bad e1ec     +LDI R30 , LOW ( 2 * _0x0 + ( 370 ) )
001bae e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 370 ) )
                 	__POINTW1FN _0x0,370
001baf cde6      	RJMP SUBOPT_0x12
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x65:
001bb0 9722      	SBIW R28,2
001bb1 e0e0      	LDI  R30,LOW(0)
001bb2 83e8      	ST   Y,R30
001bb3 e0e4      	LDI  R30,LOW(4)
001bb4 cf68      	RJMP SUBOPT_0x4B
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x66:
001bb5 0fae      	ADD  R26,R30
001bb6 1fbf      	ADC  R27,R31
001bb7 940e 2026 	CALL __GETD1P
001bb9 cf7e      	RJMP SUBOPT_0x4F
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:29 WORDS
                 SUBOPT_0x67:
001bba 81e0      	LD   R30,Z
001bbb 93ea      	ST   -Y,R30
001bbc 940e 029e 	CALL _NumToIndex
001bbe 5fef      	SUBI R30,-LOW(1)
001bbf 93ea      	ST   -Y,R30
001bc0 940e 17b9 	CALL _lcd_putchar
001bc2 cf2f      	RJMP SUBOPT_0x43
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x68:
                +
001bc3 e8e1     +LDI R30 , LOW ( 2 * _0x0 + ( 471 ) )
001bc4 e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 471 ) )
                 	__POINTW1FN _0x0,471
001bc5 cdd0      	RJMP SUBOPT_0x12
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x69:
                +
001bc6 e9e8     +LDI R30 , LOW ( 2 * _0x0 + ( 494 ) )
001bc7 e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 494 ) )
                 	__POINTW1FN _0x0,494
001bc8 cdcd      	RJMP SUBOPT_0x12
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x6A:
                +
001bc9 eae5     +LDI R30 , LOW ( 2 * _0x0 + ( 507 ) )
001bca e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 507 ) )
                 	__POINTW1FN _0x0,507
001bcb cdca      	RJMP SUBOPT_0x12
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x6B:
001bcc e0e0      	LDI  R30,LOW(0)
001bcd 93e0 0534 	STS  _SelectedRow_G000,R30
                +
001bcf 93e0 0533+STS _Address_G000 + ( 5 ) , R30
                 	__PUTB1MN _Address_G000,5
001bd1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x6C:
001bd2 940e 2035 	CALL __GETD1S0
001bd4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x6D:
001bd5 93fa      	ST   -Y,R31
001bd6 93ea      	ST   -Y,R30
001bd7 940c 18f2 	JMP  _strcpyf
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:27 WORDS
                 SUBOPT_0x6E:
                +
001bd9 81ac     +LDD R26 , Y + 4
001bda 81bd     +LDD R27 , Y + 4 + 1
001bdb 818e     +LDD R24 , Y + 4 + 2
001bdc 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
001bdd df87      	RCALL SUBOPT_0x55
001bde 940e 1eaf 	CALL __MULF12
                +
001be0 83ec     +STD Y + 4 , R30
001be1 83fd     +STD Y + 4 + 1 , R31
001be2 836e     +STD Y + 4 + 2 , R22
001be3 837f     +STD Y + 4 + 3 , R23
                 	__PUTD1S 4
001be4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x6F:
                +
001be5 81ec     +LDD R30 , Y + 4
001be6 81fd     +LDD R31 , Y + 4 + 1
001be7 816e     +LDD R22 , Y + 4 + 2
001be8 817f     +LDD R23 , Y + 4 + 3
                 	__GETD1S 4
                +
001be9 85ac     +LDD R26 , Y + 12
001bea 85bd     +LDD R27 , Y + 12 + 1
001beb 858e     +LDD R24 , Y + 12 + 2
001bec 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
001bed 940e 1f42 	CALL __CMPF12
001bef 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x70:
                +
001bf0 85ac     +LDD R26 , Y + 12
001bf1 85bd     +LDD R27 , Y + 12 + 1
001bf2 858e     +LDD R24 , Y + 12 + 2
001bf3 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
001bf4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x71:
001bf5 df65      	RCALL SUBOPT_0x53
001bf6 940e 1eaf 	CALL __MULF12
                +
001bf8 87ec     +STD Y + 12 , R30
001bf9 87fd     +STD Y + 12 + 1 , R31
001bfa 876e     +STD Y + 12 + 2 , R22
001bfb 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
001bfc 5f3f      	SUBI R19,-LOW(1)
001bfd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x72:
001bfe df66      	RCALL SUBOPT_0x55
001bff 940e 1eaf 	CALL __MULF12
001c01 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x73:
                +
001c02 87ec     +STD Y + 12 , R30
001c03 87fd     +STD Y + 12 + 1 , R31
001c04 876e     +STD Y + 12 + 2 , R22
001c05 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
001c06 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x74:
                +
001c07 e0a0     +LDI R26 , LOW ( 0x3F000000 )
001c08 e0b0     +LDI R27 , HIGH ( 0x3F000000 )
001c09 e080     +LDI R24 , BYTE3 ( 0x3F000000 )
001c0a e39f     +LDI R25 , BYTE4 ( 0x3F000000 )
                 	__GETD2N 0x3F000000
001c0b 940e 1e5f 	CALL __ADDF12
001c0d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x75:
001c0e df4c      	RCALL SUBOPT_0x53
001c0f 940e 1eaf 	CALL __MULF12
001c11 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x76:
001c12 85a8      	LDD  R26,Y+8
001c13 85b9      	LDD  R27,Y+8+1
001c14 9611      	ADIW R26,1
001c15 87a8      	STD  Y+8,R26
001c16 87b9      	STD  Y+8+1,R27
001c17 9711      	SBIW R26,1
001c18 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x77:
001c19 2fe0      	MOV  R30,R16
001c1a 5de0      	SUBI R30,-LOW(48)
001c1b 93ec      	ST   X,R30
001c1c 2fe0      	MOV  R30,R16
001c1d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x78:
001c1e 85e8      	LDD  R30,Y+8
001c1f 85f9      	LDD  R31,Y+8+1
001c20 9631      	ADIW R30,1
001c21 87e8      	STD  Y+8,R30
001c22 87f9      	STD  Y+8+1,R31
001c23 9731      	SBIW R30,1
001c24 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x79:
001c25 932a      	ST   -Y,R18
001c26 81ef      	LDD  R30,Y+7
001c27 85f8      	LDD  R31,Y+7+1
001c28 93fa      	ST   -Y,R31
001c29 93ea      	ST   -Y,R30
001c2a 85eb      	LDD  R30,Y+11
001c2b 85fc      	LDD  R31,Y+11+1
001c2c 9509      	ICALL
001c2d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x7A:
                +
001c2e 01fe     +MOVW R30 , R28
001c2f 5ae6     +SUBI R30 , LOW ( - 90 )
001c30 4fff     +SBCI R31 , HIGH ( - 90 )
001c31 9001     +LD R0 , Z +
001c32 81f0     +LD R31 , Z
001c33 2de0     +MOV R30 , R0
                 	__GETW1SX 90
001c34 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x7B:
001c35 9734      	SBIW R30,4
                +
001c36 01de     +MOVW R26 , R28
001c37 5aa6     +SUBI R26 , LOW ( - 90 )
001c38 4fbf     +SBCI R27 , HIGH ( - 90 )
001c39 93ed     +ST X + , R30
001c3a 93fc     +ST X , R31
                 	__PUTW1SX 90
001c3b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x7C:
001c3c 81ef      	LDD  R30,Y+7
001c3d 85f8      	LDD  R31,Y+7+1
001c3e 93fa      	ST   -Y,R31
001c3f 93ea      	ST   -Y,R30
001c40 85eb      	LDD  R30,Y+11
001c41 85fc      	LDD  R31,Y+11+1
001c42 9509      	ICALL
001c43 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x7D:
                +
001c44 01de     +MOVW R26 , R28
001c45 5aa6     +SUBI R26 , LOW ( - 90 )
001c46 4fbf     +SBCI R27 , HIGH ( - 90 )
001c47 900d     +LD R0 , X +
001c48 91bc     +LD R27 , X
001c49 2da0     +MOV R26 , R0
                 	__GETW2SX 90
001c4a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x7E:
                +
001c4b 87ea     +STD Y + 10 , R30
001c4c 87fb     +STD Y + 10 + 1 , R31
001c4d 876c     +STD Y + 10 + 2 , R22
001c4e 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
001c4f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x7F:
001c50 dfdd      	RCALL SUBOPT_0x7A
001c51 cfe3      	RJMP SUBOPT_0x7B
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x80:
001c52 87ee      	STD  Y+14,R30
001c53 87ff      	STD  Y+14+1,R31
001c54 93fa      	ST   -Y,R31
001c55 93ea      	ST   -Y,R30
001c56 940e 18fd 	CALL _strlen
001c58 2f1e      	MOV  R17,R30
001c59 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x81:
001c5a dfe9      	RCALL SUBOPT_0x7D
001c5b 9614      	ADIW R26,4
001c5c 940e 2022 	CALL __GETW1P
001c5e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x82:
                +
001c5f 8be8     +STD Y + 16 , R30
001c60 8bf9     +STD Y + 16 + 1 , R31
001c61 8b6a     +STD Y + 16 + 2 , R22
001c62 8b7b     +STD Y + 16 + 3 , R23
                 	__PUTD1S 16
001c63 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:14 WORDS
                 SUBOPT_0x83:
001c64 7f0b      	ANDI R16,LOW(251)
001c65 89ed      	LDD  R30,Y+21
001c66 93ea      	ST   -Y,R30
                +
001c67 01fe     +MOVW R30 , R28
001c68 5ae9     +SUBI R30 , LOW ( - 87 )
001c69 4fff     +SBCI R31 , HIGH ( - 87 )
001c6a 9001     +LD R0 , Z +
001c6b 81f0     +LD R31 , Z
001c6c 2de0     +MOV R30 , R0
                 	__GETW1SX 87
001c6d 93fa      	ST   -Y,R31
001c6e 93ea      	ST   -Y,R30
                +
001c6f 01fe     +MOVW R30 , R28
001c70 5ae5     +SUBI R30 , LOW ( - 91 )
001c71 4fff     +SBCI R31 , HIGH ( - 91 )
001c72 9001     +LD R0 , Z +
001c73 81f0     +LD R31 , Z
001c74 2de0     +MOV R30 , R0
                 	__GETW1SX 91
001c75 9509      	ICALL
001c76 3050      	CPI  R21,0
001c77 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x84:
                +
001c78 89e8     +LDD R30 , Y + 16
001c79 89f9     +LDD R31 , Y + 16 + 1
001c7a 896a     +LDD R22 , Y + 16 + 2
001c7b 897b     +LDD R23 , Y + 16 + 3
                 	__GETD1S 16
                +
001c7c 85aa     +LDD R26 , Y + 10
001c7d 85bb     +LDD R27 , Y + 10 + 1
001c7e 858c     +LDD R24 , Y + 10 + 2
001c7f 859d     +LDD R25 , Y + 10 + 3
                 	__GETD2S 10
001c80 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x85:
001c81 01de      	MOVW R26,R28
001c82 961c      	ADIW R26,12
001c83 940e 1f62 	CALL __ADDW2R15
001c85 940e 2022 	CALL __GETW1P
001c87 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x86:
001c88 93fa      	ST   -Y,R31
001c89 93ea      	ST   -Y,R30
001c8a 940e 167a 	CALL _ds18b20_select
001c8c 30e0      	CPI  R30,0
001c8d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x87:
001c8e 81e9      	LDD  R30,Y+1
001c8f 81fa      	LDD  R31,Y+1+1
001c90 93fa      	ST   -Y,R31
001c91 93ea      	ST   -Y,R30
001c92 940e 169e 	CALL _ds18b20_read_spd
001c94 30e0      	CPI  R30,0
001c95 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x88:
                +
001c96 e0e0     +LDI R30 , LOW ( 0xC61C3C00 )
001c97 e3fc     +LDI R31 , HIGH ( 0xC61C3C00 )
001c98 e16c     +LDI R22 , BYTE3 ( 0xC61C3C00 )
001c99 ec76     +LDI R23 , BYTE4 ( 0xC61C3C00 )
                 	__GETD1N 0xC61C3C00
001c9a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x89:
001c9b e0f0      	LDI  R31,0
001c9c 0fee      	LSL  R30
001c9d 1fff      	ROL  R31
001c9e 0fea      	ADD  R30,R26
001c9f 1ffb      	ADC  R31,R27
001ca0 940e 2031 	CALL __GETW1PF
001ca2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x8A:
001ca3 940e 1f87 	CALL __CWD1
001ca5 940e 1e25 	CALL __CDF1
001ca7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x8B:
001ca8 940e 17f0 	CALL __long_delay_G103
001caa e3e0      	LDI  R30,LOW(48)
001cab 93ea      	ST   -Y,R30
001cac 940c 17f5 	JMP  __lcd_init_write_G103
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x8C:
001cae 93ea      	ST   -Y,R30
001caf 940e 1773 	CALL __lcd_write_data
001cb1 940c 17f0 	JMP  __long_delay_G103
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x8D:
                +
001cb3 87e9     +STD Y + 9 , R30
001cb4 87fa     +STD Y + 9 + 1 , R31
001cb5 876b     +STD Y + 9 + 2 , R22
001cb6 877c     +STD Y + 9 + 3 , R23
                 	__PUTD1S 9
001cb7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x8E:
001cb8 81ae      	LDD  R26,Y+6
001cb9 81bf      	LDD  R27,Y+6+1
001cba 9611      	ADIW R26,1
001cbb 83ae      	STD  Y+6,R26
001cbc 83bf      	STD  Y+6+1,R27
001cbd 9711      	SBIW R26,1
001cbe 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x8F:
                +
001cbf 81aa     +LDD R26 , Y + 2
001cc0 81bb     +LDD R27 , Y + 2 + 1
001cc1 818c     +LDD R24 , Y + 2 + 2
001cc2 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
001cc3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x90:
                +
001cc4 83ea     +STD Y + 2 , R30
001cc5 83fb     +STD Y + 2 + 1 , R31
001cc6 836c     +STD Y + 2 + 2 , R22
001cc7 837d     +STD Y + 2 + 3 , R23
                 	__PUTD1S 2
001cc8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x91:
                +
001cc9 81ea     +LDD R30 , Y + 2
001cca 81fb     +LDD R31 , Y + 2 + 1
001ccb 816c     +LDD R22 , Y + 2 + 2
001ccc 817d     +LDD R23 , Y + 2 + 3
                 	__GETD1S 2
                +
001ccd 85a9     +LDD R26 , Y + 9
001cce 85ba     +LDD R27 , Y + 9 + 1
001ccf 858b     +LDD R24 , Y + 9 + 2
001cd0 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
001cd1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x92:
                +
001cd2 85a9     +LDD R26 , Y + 9
001cd3 85ba     +LDD R27 , Y + 9 + 1
001cd4 858b     +LDD R24 , Y + 9 + 2
001cd5 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
001cd6 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
001cd7 91e9      	ld   r30,y+
001cd8 91f9      	ld   r31,y+
001cd9 9630      	adiw r30,0
001cda f039      	breq __delay_ms1
                 __delay_ms0:
                +
001cdb ed80     +LDI R24 , LOW ( 0x7D0 )
001cdc e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
001cdd 9701     +SBIW R24 , 1
001cde f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
001cdf 95a8      	wdr
001ce0 9731      	sbiw r30,1
001ce1 f7c9      	brne __delay_ms0
                 __delay_ms1:
001ce2 9508      	ret
                 
                 _w1_init:
001ce3 27ee      	clr  r30
001ce4 9890      	cbi  __w1_port,__w1_bit
001ce5 9a88      	sbi  __w1_port-1,__w1_bit
                +
001ce6 ec80     +LDI R24 , LOW ( 0x3C0 )
001ce7 e093     +LDI R25 , HIGH ( 0x3C0 )
                +__DELAY_USW_LOOP :
001ce8 9701     +SBIW R24 , 1
001ce9 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x3C0
001cea 9888      	cbi  __w1_port-1,__w1_bit
                +
001ceb e285     +LDI R24 , LOW ( 0x25 )
                +__DELAY_USB_LOOP :
001cec 958a     +DEC R24
001ced f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 0x25
001cee 9b80      	sbis __w1_port-2,__w1_bit
001cef 9508      	ret
                +
001cf0 ec8b     +LDI R24 , LOW ( 0xCB )
                +__DELAY_USB_LOOP :
001cf1 958a     +DEC R24
001cf2 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 0xCB
001cf3 9b80      	sbis __w1_port-2,__w1_bit
001cf4 95e3      	inc  r30
                +
001cf5 e08c     +LDI R24 , LOW ( 0x30C )
001cf6 e093     +LDI R25 , HIGH ( 0x30C )
                +__DELAY_USW_LOOP :
001cf7 9701     +SBIW R24 , 1
001cf8 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x30C
001cf9 9508      	ret
                 
                 __w1_read_bit:
001cfa 9a88      	sbi  __w1_port-1,__w1_bit
                +
001cfb e085     +LDI R24 , LOW ( 0x5 )
                +__DELAY_USB_LOOP :
001cfc 958a     +DEC R24
001cfd f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 0x5
001cfe 9888      	cbi  __w1_port-1,__w1_bit
                +
001cff e18d     +LDI R24 , LOW ( 0x1D )
                +__DELAY_USB_LOOP :
001d00 958a     +DEC R24
001d01 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 0x1D
001d02 9488      	clc
001d03 9980      	sbic __w1_port-2,__w1_bit
001d04 9408      	sec
001d05 95e7      	ror  r30
                +
001d06 ed85     +LDI R24 , LOW ( 0xD5 )
                +__DELAY_USB_LOOP :
001d07 958a     +DEC R24
001d08 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 0xD5
001d09 9508      	ret
                 
                 __w1_write_bit:
001d0a 94e8      	clt
001d0b 9a88      	sbi  __w1_port-1,__w1_bit
                +
001d0c e085     +LDI R24 , LOW ( 0x5 )
                +__DELAY_USB_LOOP :
001d0d 958a     +DEC R24
001d0e f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 0x5
001d0f fd70      	sbrc r23,0
001d10 9888      	cbi  __w1_port-1,__w1_bit
                +
001d11 e283     +LDI R24 , LOW ( 0x23 )
                +__DELAY_USB_LOOP :
001d12 958a     +DEC R24
001d13 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 0x23
001d14 9980      	sbic __w1_port-2,__w1_bit
001d15 c003      	rjmp __w1_write_bit0
001d16 ff70      	sbrs r23,0
001d17 c003      	rjmp __w1_write_bit1
001d18 9508      	ret
                 __w1_write_bit0:
001d19 ff70      	sbrs r23,0
001d1a 9508      	ret
                 __w1_write_bit1:
                +
001d1b ec88     +LDI R24 , LOW ( 0xC8 )
                +__DELAY_USB_LOOP :
001d1c 958a     +DEC R24
001d1d f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 0xC8
001d1e 9888      	cbi  __w1_port-1,__w1_bit
                +
001d1f e08d     +LDI R24 , LOW ( 0xD )
                +__DELAY_USB_LOOP :
001d20 958a     +DEC R24
001d21 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 0xD
001d22 9468      	set
001d23 9508      	ret
                 
                 _w1_read:
001d24 e068      	ldi  r22,8
                 	__w1_read0:
001d25 dfd4      	rcall __w1_read_bit
001d26 956a      	dec  r22
001d27 f7e9      	brne __w1_read0
001d28 9508      	ret
                 
                 _w1_write:
001d29 e068      	ldi  r22,8
001d2a 9179      	ld   r23,y+
001d2b 27ee      	clr  r30
                 __w1_write0:
001d2c dfdd      	rcall __w1_write_bit
001d2d f426      	brtc __w1_write1
001d2e 9577      	ror  r23
001d2f 956a      	dec  r22
001d30 f7d9      	brne __w1_write0
001d31 95e3      	inc  r30
                 __w1_write1:
001d32 9508      	ret
                 
                 _w1_search:
001d33 934f      	push r20
001d34 935f      	push r21
001d35 2411      	clr  r1
001d36 2744      	clr  r20
001d37 81a8      	ld   r26,y
001d38 81b9      	ldd  r27,y+1
                 __w1_search0:
001d39 2c01      	mov  r0,r1
001d3a 2411      	clr  r1
001d3b dfa7      	rcall _w1_init
001d3c 23ee      	tst  r30
001d3d f0f9      	breq __w1_search7
001d3e 81ea      	ldd  r30,y+2
001d3f 93ea      	st   -y,r30
001d40 dfe8      	rcall _w1_write
001d41 e051      	ldi  r21,1
                 __w1_search1:
001d42 1550      	cp   r21,r0
001d43 f498      	brsh __w1_search6
001d44 dfb5      	rcall __w1_read_bit
001d45 fde7      	sbrc r30,7
001d46 c008      	rjmp __w1_search2
001d47 dfb2      	rcall __w1_read_bit
001d48 fde7      	sbrc r30,7
001d49 c006      	rjmp __w1_search3
001d4a d03f      	rcall __sel_bit
001d4b 2389      	and  r24,r25
001d4c f419      	brne __w1_search3
001d4d 2e15      	mov  r1,r21
001d4e c001      	rjmp __w1_search3
                 __w1_search2:
001d4f dfaa      	rcall __w1_read_bit
                 __w1_search3:
001d50 d039      	rcall __sel_bit
001d51 2389      	and  r24,r25
001d52 e070      	ldi  r23,0
001d53 f009      	breq __w1_search5
                 __w1_search4:
001d54 e071      	ldi  r23,1
                 __w1_search5:
001d55 dfb4      	rcall __w1_write_bit
001d56 c01e      	rjmp __w1_search13
                 __w1_search6:
001d57 dfa2      	rcall __w1_read_bit
001d58 ffe7      	sbrs r30,7
001d59 c00b      	rjmp __w1_search9
001d5a df9f      	rcall __w1_read_bit
001d5b ffe7      	sbrs r30,7
001d5c c005      	rjmp __w1_search8
                 __w1_search7:
001d5d 2fe4      	mov  r30,r20
001d5e 915f      	pop  r21
001d5f 914f      	pop  r20
001d60 9623      	adiw r28,3
001d61 9508      	ret
                 __w1_search8:
001d62 9468      	set
001d63 d037      	rcall __set_bit
001d64 cfef      	rjmp __w1_search4
                 __w1_search9:
001d65 df94      	rcall __w1_read_bit
001d66 ffe7      	sbrs r30,7
001d67 c001      	rjmp __w1_search10
001d68 c003      	rjmp __w1_search11
                 __w1_search10:
001d69 1550      	cp   r21,r0
001d6a f031      	breq __w1_search12
001d6b 2e15      	mov  r1,r21
                 __w1_search11:
001d6c 94e8      	clt
001d6d d02d      	rcall __set_bit
001d6e 2777      	clr  r23
001d6f df9a      	rcall __w1_write_bit
001d70 c004      	rjmp __w1_search13
                 __w1_search12:
001d71 9468      	set
001d72 d028      	rcall __set_bit
001d73 e071      	ldi  r23,1
001d74 df95      	rcall __w1_write_bit
                 __w1_search13:
001d75 9553      	inc  r21
001d76 3451      	cpi  r21,65
001d77 f254      	brlt __w1_search1
001d78 df81      	rcall __w1_read_bit
001d79 1fee      	rol  r30
001d7a 1fee      	rol  r30
001d7b 70e1      	andi r30,1
001d7c 9618      	adiw r26,8
001d7d 93ec      	st   x,r30
001d7e 9718      	sbiw r26,8
001d7f 9543      	inc  r20
001d80 2011      	tst  r1
001d81 f2d9      	breq __w1_search7
001d82 e059      	ldi  r21,9
                 __w1_search14:
001d83 91ec      	ld   r30,x
001d84 9619      	adiw r26,9
001d85 93ec      	st   x,r30
001d86 9718      	sbiw r26,8
001d87 955a      	dec  r21
001d88 f7d1      	brne __w1_search14
001d89 cfaf      	rjmp __w1_search0
                 
                 __sel_bit:
001d8a 2fe5      	mov  r30,r21
001d8b 95ea      	dec  r30
001d8c 2f6e      	mov  r22,r30
001d8d 95e6      	lsr  r30
001d8e 95e6      	lsr  r30
001d8f 95e6      	lsr  r30
001d90 27ff      	clr  r31
001d91 0fea      	add  r30,r26
001d92 1ffb      	adc  r31,r27
001d93 8180      	ld   r24,z
001d94 e091      	ldi  r25,1
001d95 7067      	andi r22,7
                 __sel_bit0:
001d96 f019      	breq __sel_bit1
001d97 0f99      	lsl  r25
001d98 956a      	dec  r22
001d99 cffc      	rjmp __sel_bit0
                 __sel_bit1:
001d9a 9508      	ret
                 
                 __set_bit:
001d9b dfee      	rcall __sel_bit
001d9c f01e      	brts __set_bit2
001d9d 9590      	com  r25
001d9e 2389      	and  r24,r25
001d9f c001      	rjmp __set_bit3
                 __set_bit2:
001da0 2b89      	or   r24,r25
                 __set_bit3:
001da1 8380      	st   z,r24
001da2 9508      	ret
                 
                 _w1_dow_crc8:
001da3 27ee      	clr  r30
001da4 8188      	ld   r24,y
001da5 2388      	tst  r24
001da6 f081      	breq __w1_dow_crc83
001da7 e168      	ldi  r22,0x18
001da8 81a9      	ldd  r26,y+1
001da9 81ba      	ldd  r27,y+2
                 __w1_dow_crc80:
001daa e098      	ldi  r25,8
001dab 91fd      	ld   r31,x+
                 __w1_dow_crc81:
001dac 2f7f      	mov  r23,r31
001dad 277e      	eor  r23,r30
001dae 9577      	ror  r23
001daf f408      	brcc __w1_dow_crc82
001db0 27e6      	eor  r30,r22
                 __w1_dow_crc82:
001db1 95e7      	ror  r30
001db2 95f6      	lsr  r31
001db3 959a      	dec  r25
001db4 f7b9      	brne __w1_dow_crc81
001db5 958a      	dec  r24
001db6 f799      	brne __w1_dow_crc80
                 __w1_dow_crc83:
001db7 9623      	adiw r28,3
001db8 9508      	ret
                 
                 __ANEGF1:
001db9 9730      	SBIW R30,0
001dba 4060      	SBCI R22,0
001dbb 4070      	SBCI R23,0
001dbc f009      	BREQ __ANEGF10
001dbd 5870      	SUBI R23,0x80
                 __ANEGF10:
001dbe 9508      	RET
                 
                 __ROUND_REPACK:
001dbf 2355      	TST  R21
001dc0 f442      	BRPL __REPACK
001dc1 3850      	CPI  R21,0x80
001dc2 f411      	BRNE __ROUND_REPACK0
001dc3 ffe0      	SBRS R30,0
001dc4 c004      	RJMP __REPACK
                 __ROUND_REPACK0:
001dc5 9631      	ADIW R30,1
001dc6 1f69      	ADC  R22,R25
001dc7 1f79      	ADC  R23,R25
001dc8 f06b      	BRVS __REPACK1
                 
                 __REPACK:
001dc9 e850      	LDI  R21,0x80
001dca 2757      	EOR  R21,R23
001dcb f411      	BRNE __REPACK0
001dcc 935f      	PUSH R21
001dcd c0cf      	RJMP __ZERORES
                 __REPACK0:
001dce 3f5f      	CPI  R21,0xFF
001dcf f031      	BREQ __REPACK1
001dd0 0f66      	LSL  R22
001dd1 0c00      	LSL  R0
001dd2 9557      	ROR  R21
001dd3 9567      	ROR  R22
001dd4 2f75      	MOV  R23,R21
001dd5 9508      	RET
                 __REPACK1:
001dd6 935f      	PUSH R21
001dd7 2000      	TST  R0
001dd8 f00a      	BRMI __REPACK2
001dd9 c0cf      	RJMP __MAXRES
                 __REPACK2:
001dda c0c8      	RJMP __MINRES
                 
                 __UNPACK:
001ddb e850      	LDI  R21,0x80
001ddc 2e19      	MOV  R1,R25
001ddd 2215      	AND  R1,R21
001dde 0f88      	LSL  R24
001ddf 1f99      	ROL  R25
001de0 2795      	EOR  R25,R21
001de1 0f55      	LSL  R21
001de2 9587      	ROR  R24
                 
                 __UNPACK1:
001de3 e850      	LDI  R21,0x80
001de4 2e07      	MOV  R0,R23
001de5 2205      	AND  R0,R21
001de6 0f66      	LSL  R22
001de7 1f77      	ROL  R23
001de8 2775      	EOR  R23,R21
001de9 0f55      	LSL  R21
001dea 9567      	ROR  R22
001deb 9508      	RET
                 
                 __CFD1U:
001dec 9468      	SET
001ded c001      	RJMP __CFD1U0
                 __CFD1:
001dee 94e8      	CLT
                 __CFD1U0:
001def 935f      	PUSH R21
001df0 dff2      	RCALL __UNPACK1
001df1 3870      	CPI  R23,0x80
001df2 f018      	BRLO __CFD10
001df3 3f7f      	CPI  R23,0xFF
001df4 f408      	BRCC __CFD10
001df5 c0a7      	RJMP __ZERORES
                 __CFD10:
001df6 e156      	LDI  R21,22
001df7 1b57      	SUB  R21,R23
001df8 f4aa      	BRPL __CFD11
001df9 9551      	NEG  R21
001dfa 3058      	CPI  R21,8
001dfb f40e      	BRTC __CFD19
001dfc 3059      	CPI  R21,9
                 __CFD19:
001dfd f030      	BRLO __CFD17
001dfe efef      	SER  R30
001dff efff      	SER  R31
001e00 ef6f      	SER  R22
001e01 e77f      	LDI  R23,0x7F
001e02 f977      	BLD  R23,7
001e03 c01a      	RJMP __CFD15
                 __CFD17:
001e04 2777      	CLR  R23
001e05 2355      	TST  R21
001e06 f0b9      	BREQ __CFD15
                 __CFD18:
001e07 0fee      	LSL  R30
001e08 1fff      	ROL  R31
001e09 1f66      	ROL  R22
001e0a 1f77      	ROL  R23
001e0b 955a      	DEC  R21
001e0c f7d1      	BRNE __CFD18
001e0d c010      	RJMP __CFD15
                 __CFD11:
001e0e 2777      	CLR  R23
                 __CFD12:
001e0f 3058      	CPI  R21,8
001e10 f028      	BRLO __CFD13
001e11 2fef      	MOV  R30,R31
001e12 2ff6      	MOV  R31,R22
001e13 2f67      	MOV  R22,R23
001e14 5058      	SUBI R21,8
001e15 cff9      	RJMP __CFD12
                 __CFD13:
001e16 2355      	TST  R21
001e17 f031      	BREQ __CFD15
                 __CFD14:
001e18 9576      	LSR  R23
001e19 9567      	ROR  R22
001e1a 95f7      	ROR  R31
001e1b 95e7      	ROR  R30
001e1c 955a      	DEC  R21
001e1d f7d1      	BRNE __CFD14
                 __CFD15:
001e1e 2000      	TST  R0
001e1f f40a      	BRPL __CFD16
001e20 d14a      	RCALL __ANEGD1
                 __CFD16:
001e21 915f      	POP  R21
001e22 9508      	RET
                 
                 __CDF1U:
001e23 9468      	SET
001e24 c001      	RJMP __CDF1U0
                 __CDF1:
001e25 94e8      	CLT
                 __CDF1U0:
001e26 9730      	SBIW R30,0
001e27 4060      	SBCI R22,0
001e28 4070      	SBCI R23,0
001e29 f0b1      	BREQ __CDF10
001e2a 2400      	CLR  R0
001e2b f026      	BRTS __CDF11
001e2c 2377      	TST  R23
001e2d f412      	BRPL __CDF11
001e2e 9400      	COM  R0
001e2f d13b      	RCALL __ANEGD1
                 __CDF11:
001e30 2e17      	MOV  R1,R23
001e31 e17e      	LDI  R23,30
001e32 2011      	TST  R1
                 __CDF12:
001e33 f032      	BRMI __CDF13
001e34 957a      	DEC  R23
001e35 0fee      	LSL  R30
001e36 1fff      	ROL  R31
001e37 1f66      	ROL  R22
001e38 1c11      	ROL  R1
001e39 cff9      	RJMP __CDF12
                 __CDF13:
001e3a 2fef      	MOV  R30,R31
001e3b 2ff6      	MOV  R31,R22
001e3c 2d61      	MOV  R22,R1
001e3d 935f      	PUSH R21
001e3e df8a      	RCALL __REPACK
001e3f 915f      	POP  R21
                 __CDF10:
001e40 9508      	RET
                 
                 __SWAPACC:
001e41 934f      	PUSH R20
001e42 01af      	MOVW R20,R30
001e43 01fd      	MOVW R30,R26
001e44 01da      	MOVW R26,R20
001e45 01ab      	MOVW R20,R22
001e46 01bc      	MOVW R22,R24
001e47 01ca      	MOVW R24,R20
001e48 2d40      	MOV  R20,R0
001e49 2c01      	MOV  R0,R1
001e4a 2e14      	MOV  R1,R20
001e4b 914f      	POP  R20
001e4c 9508      	RET
                 
                 __UADD12:
001e4d 0fea      	ADD  R30,R26
001e4e 1ffb      	ADC  R31,R27
001e4f 1f68      	ADC  R22,R24
001e50 9508      	RET
                 
                 __NEGMAN1:
001e51 95e0      	COM  R30
001e52 95f0      	COM  R31
001e53 9560      	COM  R22
001e54 5fef      	SUBI R30,-1
001e55 4fff      	SBCI R31,-1
001e56 4f6f      	SBCI R22,-1
001e57 9508      	RET
                 
                 __SUBF12:
001e58 935f      	PUSH R21
001e59 df81      	RCALL __UNPACK
001e5a 3890      	CPI  R25,0x80
001e5b f171      	BREQ __ADDF129
001e5c e850      	LDI  R21,0x80
001e5d 2615      	EOR  R1,R21
                 
001e5e c004      	RJMP __ADDF120
                 
                 __ADDF12:
001e5f 935f      	PUSH R21
001e60 df7a      	RCALL __UNPACK
001e61 3890      	CPI  R25,0x80
001e62 f139      	BREQ __ADDF129
                 
                 __ADDF120:
001e63 3870      	CPI  R23,0x80
001e64 f121      	BREQ __ADDF128
                 __ADDF121:
001e65 2f57      	MOV  R21,R23
001e66 1b59      	SUB  R21,R25
001e67 f12b      	BRVS __ADDF1211
001e68 f412      	BRPL __ADDF122
001e69 dfd7      	RCALL __SWAPACC
001e6a cffa      	RJMP __ADDF121
                 __ADDF122:
001e6b 3158      	CPI  R21,24
001e6c f018      	BRLO __ADDF123
001e6d 27aa      	CLR  R26
001e6e 27bb      	CLR  R27
001e6f 2788      	CLR  R24
                 __ADDF123:
001e70 3058      	CPI  R21,8
001e71 f028      	BRLO __ADDF124
001e72 2fab      	MOV  R26,R27
001e73 2fb8      	MOV  R27,R24
001e74 2788      	CLR  R24
001e75 5058      	SUBI R21,8
001e76 cff9      	RJMP __ADDF123
                 __ADDF124:
001e77 2355      	TST  R21
001e78 f029      	BREQ __ADDF126
                 __ADDF125:
001e79 9586      	LSR  R24
001e7a 95b7      	ROR  R27
001e7b 95a7      	ROR  R26
001e7c 955a      	DEC  R21
001e7d f7d9      	BRNE __ADDF125
                 __ADDF126:
001e7e 2d50      	MOV  R21,R0
001e7f 2551      	EOR  R21,R1
001e80 f072      	BRMI __ADDF127
001e81 dfcb      	RCALL __UADD12
001e82 f438      	BRCC __ADDF129
001e83 9567      	ROR  R22
001e84 95f7      	ROR  R31
001e85 95e7      	ROR  R30
001e86 9573      	INC  R23
001e87 f413      	BRVC __ADDF129
001e88 c020      	RJMP __MAXRES
                 __ADDF128:
001e89 dfb7      	RCALL __SWAPACC
                 __ADDF129:
001e8a df3e      	RCALL __REPACK
001e8b 915f      	POP  R21
001e8c 9508      	RET
                 __ADDF1211:
001e8d f7d8      	BRCC __ADDF128
001e8e cffb      	RJMP __ADDF129
                 __ADDF127:
001e8f 1bea      	SUB  R30,R26
001e90 0bfb      	SBC  R31,R27
001e91 0b68      	SBC  R22,R24
001e92 f051      	BREQ __ZERORES
001e93 f410      	BRCC __ADDF1210
001e94 9400      	COM  R0
001e95 dfbb      	RCALL __NEGMAN1
                 __ADDF1210:
001e96 2366      	TST  R22
001e97 f392      	BRMI __ADDF129
001e98 0fee      	LSL  R30
001e99 1fff      	ROL  R31
001e9a 1f66      	ROL  R22
001e9b 957a      	DEC  R23
001e9c f7cb      	BRVC __ADDF1210
                 
                 __ZERORES:
001e9d 27ee      	CLR  R30
001e9e 27ff      	CLR  R31
001e9f 2766      	CLR  R22
001ea0 2777      	CLR  R23
001ea1 915f      	POP  R21
001ea2 9508      	RET
                 
                 __MINRES:
001ea3 efef      	SER  R30
001ea4 efff      	SER  R31
001ea5 e76f      	LDI  R22,0x7F
001ea6 ef7f      	SER  R23
001ea7 915f      	POP  R21
001ea8 9508      	RET
                 
                 __MAXRES:
001ea9 efef      	SER  R30
001eaa efff      	SER  R31
001eab e76f      	LDI  R22,0x7F
001eac e77f      	LDI  R23,0x7F
001ead 915f      	POP  R21
001eae 9508      	RET
                 
                 __MULF12:
001eaf 935f      	PUSH R21
001eb0 df2a      	RCALL __UNPACK
001eb1 3870      	CPI  R23,0x80
001eb2 f351      	BREQ __ZERORES
001eb3 3890      	CPI  R25,0x80
001eb4 f341      	BREQ __ZERORES
001eb5 2401      	EOR  R0,R1
001eb6 9408      	SEC
001eb7 1f79      	ADC  R23,R25
001eb8 f423      	BRVC __MULF124
001eb9 f31c      	BRLT __ZERORES
                 __MULF125:
001eba 2000      	TST  R0
001ebb f33a      	BRMI __MINRES
001ebc cfec      	RJMP __MAXRES
                 __MULF124:
001ebd 920f      	PUSH R0
001ebe 931f      	PUSH R17
001ebf 932f      	PUSH R18
001ec0 933f      	PUSH R19
001ec1 934f      	PUSH R20
001ec2 2711      	CLR  R17
001ec3 2722      	CLR  R18
001ec4 2799      	CLR  R25
001ec5 9f68      	MUL  R22,R24
001ec6 01a0      	MOVW R20,R0
001ec7 9f8f      	MUL  R24,R31
001ec8 2d30      	MOV  R19,R0
001ec9 0d41      	ADD  R20,R1
001eca 1f59      	ADC  R21,R25
001ecb 9f6b      	MUL  R22,R27
001ecc 0d30      	ADD  R19,R0
001ecd 1d41      	ADC  R20,R1
001ece 1f59      	ADC  R21,R25
001ecf 9f8e      	MUL  R24,R30
001ed0 d027      	RCALL __MULF126
001ed1 9fbf      	MUL  R27,R31
001ed2 d025      	RCALL __MULF126
001ed3 9f6a      	MUL  R22,R26
001ed4 d023      	RCALL __MULF126
001ed5 9fbe      	MUL  R27,R30
001ed6 d01d      	RCALL __MULF127
001ed7 9faf      	MUL  R26,R31
001ed8 d01b      	RCALL __MULF127
001ed9 9fae      	MUL  R26,R30
001eda 0d11      	ADD  R17,R1
001edb 1f29      	ADC  R18,R25
001edc 1f39      	ADC  R19,R25
001edd 1f49      	ADC  R20,R25
001ede 1f59      	ADC  R21,R25
001edf 2fe3      	MOV  R30,R19
001ee0 2ff4      	MOV  R31,R20
001ee1 2f65      	MOV  R22,R21
001ee2 2f52      	MOV  R21,R18
001ee3 914f      	POP  R20
001ee4 913f      	POP  R19
001ee5 912f      	POP  R18
001ee6 911f      	POP  R17
001ee7 900f      	POP  R0
001ee8 2366      	TST  R22
001ee9 f02a      	BRMI __MULF122
001eea 0f55      	LSL  R21
001eeb 1fee      	ROL  R30
001eec 1fff      	ROL  R31
001eed 1f66      	ROL  R22
001eee c002      	RJMP __MULF123
                 __MULF122:
001eef 9573      	INC  R23
001ef0 f24b      	BRVS __MULF125
                 __MULF123:
001ef1 decd      	RCALL __ROUND_REPACK
001ef2 915f      	POP  R21
001ef3 9508      	RET
                 
                 __MULF127:
001ef4 0d10      	ADD  R17,R0
001ef5 1d21      	ADC  R18,R1
001ef6 1f39      	ADC  R19,R25
001ef7 c002      	RJMP __MULF128
                 __MULF126:
001ef8 0d20      	ADD  R18,R0
001ef9 1d31      	ADC  R19,R1
                 __MULF128:
001efa 1f49      	ADC  R20,R25
001efb 1f59      	ADC  R21,R25
001efc 9508      	RET
                 
                 __DIVF21:
001efd 935f      	PUSH R21
001efe dedc      	RCALL __UNPACK
001eff 3870      	CPI  R23,0x80
001f00 f421      	BRNE __DIVF210
001f01 2011      	TST  R1
                 __DIVF211:
001f02 f40a      	BRPL __DIVF219
001f03 cf9f      	RJMP __MINRES
                 __DIVF219:
001f04 cfa4      	RJMP __MAXRES
                 __DIVF210:
001f05 3890      	CPI  R25,0x80
001f06 f409      	BRNE __DIVF218
                 __DIVF217:
001f07 cf95      	RJMP __ZERORES
                 __DIVF218:
001f08 2401      	EOR  R0,R1
001f09 9408      	SEC
001f0a 0b97      	SBC  R25,R23
001f0b f41b      	BRVC __DIVF216
001f0c f3d4      	BRLT __DIVF217
001f0d 2000      	TST  R0
001f0e cff3      	RJMP __DIVF211
                 __DIVF216:
001f0f 2f79      	MOV  R23,R25
001f10 931f      	PUSH R17
001f11 932f      	PUSH R18
001f12 933f      	PUSH R19
001f13 934f      	PUSH R20
001f14 2411      	CLR  R1
001f15 2711      	CLR  R17
001f16 2722      	CLR  R18
001f17 2733      	CLR  R19
001f18 2744      	CLR  R20
001f19 2755      	CLR  R21
001f1a e290      	LDI  R25,32
                 __DIVF212:
001f1b 17ae      	CP   R26,R30
001f1c 07bf      	CPC  R27,R31
001f1d 0786      	CPC  R24,R22
001f1e 0741      	CPC  R20,R17
001f1f f030      	BRLO __DIVF213
001f20 1bae      	SUB  R26,R30
001f21 0bbf      	SBC  R27,R31
001f22 0b86      	SBC  R24,R22
001f23 0b41      	SBC  R20,R17
001f24 9408      	SEC
001f25 c001      	RJMP __DIVF214
                 __DIVF213:
001f26 9488      	CLC
                 __DIVF214:
001f27 1f55      	ROL  R21
001f28 1f22      	ROL  R18
001f29 1f33      	ROL  R19
001f2a 1c11      	ROL  R1
001f2b 1faa      	ROL  R26
001f2c 1fbb      	ROL  R27
001f2d 1f88      	ROL  R24
001f2e 1f44      	ROL  R20
001f2f 959a      	DEC  R25
001f30 f751      	BRNE __DIVF212
001f31 01f9      	MOVW R30,R18
001f32 2d61      	MOV  R22,R1
001f33 914f      	POP  R20
001f34 913f      	POP  R19
001f35 912f      	POP  R18
001f36 911f      	POP  R17
001f37 2366      	TST  R22
001f38 f032      	BRMI __DIVF215
001f39 0f55      	LSL  R21
001f3a 1fee      	ROL  R30
001f3b 1fff      	ROL  R31
001f3c 1f66      	ROL  R22
001f3d 957a      	DEC  R23
001f3e f243      	BRVS __DIVF217
                 __DIVF215:
001f3f de7f      	RCALL __ROUND_REPACK
001f40 915f      	POP  R21
001f41 9508      	RET
                 
                 __CMPF12:
001f42 2399      	TST  R25
001f43 f09a      	BRMI __CMPF120
001f44 2377      	TST  R23
001f45 f042      	BRMI __CMPF121
001f46 1797      	CP   R25,R23
001f47 f048      	BRLO __CMPF122
001f48 f429      	BRNE __CMPF121
001f49 17ae      	CP   R26,R30
001f4a 07bf      	CPC  R27,R31
001f4b 0786      	CPC  R24,R22
001f4c f020      	BRLO __CMPF122
001f4d f031      	BREQ __CMPF123
                 __CMPF121:
001f4e 9498      	CLZ
001f4f 9488      	CLC
001f50 9508      	RET
                 __CMPF122:
001f51 9498      	CLZ
001f52 9408      	SEC
001f53 9508      	RET
                 __CMPF123:
001f54 9418      	SEZ
001f55 9488      	CLC
001f56 9508      	RET
                 __CMPF120:
001f57 2377      	TST  R23
001f58 f7c2      	BRPL __CMPF122
001f59 1797      	CP   R25,R23
001f5a f398      	BRLO __CMPF121
001f5b f7a9      	BRNE __CMPF122
001f5c 17ea      	CP   R30,R26
001f5d 07fb      	CPC  R31,R27
001f5e 0768      	CPC  R22,R24
001f5f f388      	BRLO __CMPF122
001f60 f399      	BREQ __CMPF123
001f61 cfec      	RJMP __CMPF121
                 
                 __ADDW2R15:
001f62 2400      	CLR  R0
001f63 0daf      	ADD  R26,R15
001f64 1db0      	ADC  R27,R0
001f65 9508      	RET
                 
                 __SUBD21:
001f66 1bae      	SUB  R26,R30
001f67 0bbf      	SBC  R27,R31
001f68 0b86      	SBC  R24,R22
001f69 0b97      	SBC  R25,R23
001f6a 9508      	RET
                 
                 __ANEGD1:
001f6b 95f0      	COM  R31
001f6c 9560      	COM  R22
001f6d 9570      	COM  R23
001f6e 95e1      	NEG  R30
001f6f 4fff      	SBCI R31,-1
001f70 4f6f      	SBCI R22,-1
001f71 4f7f      	SBCI R23,-1
001f72 9508      	RET
                 
                 __ASRW12:
001f73 23ee      	TST  R30
001f74 2e0e      	MOV  R0,R30
001f75 01fd      	MOVW R30,R26
001f76 f021      	BREQ __ASRW12R
                 __ASRW12L:
001f77 95f5      	ASR  R31
001f78 95e7      	ROR  R30
001f79 940a      	DEC  R0
001f7a f7e1      	BRNE __ASRW12L
                 __ASRW12R:
001f7b 9508      	RET
                 
                 __LSLW2:
001f7c 0fee      	LSL  R30
001f7d 1fff      	ROL  R31
001f7e 0fee      	LSL  R30
001f7f 1fff      	ROL  R31
001f80 9508      	RET
                 
                 __CBD1:
001f81 2ffe      	MOV  R31,R30
001f82 0fff      	ADD  R31,R31
001f83 0bff      	SBC  R31,R31
001f84 2f6f      	MOV  R22,R31
001f85 2f7f      	MOV  R23,R31
001f86 9508      	RET
                 
                 __CWD1:
001f87 2f6f      	MOV  R22,R31
001f88 0f66      	ADD  R22,R22
001f89 0b66      	SBC  R22,R22
001f8a 2f76      	MOV  R23,R22
001f8b 9508      	RET
                 
                 __CWD2:
001f8c 2f8b      	MOV  R24,R27
001f8d 0f88      	ADD  R24,R24
001f8e 0b88      	SBC  R24,R24
001f8f 2f98      	MOV  R25,R24
001f90 9508      	RET
                 
                 __LNEGB1:
001f91 23ee      	TST  R30
001f92 e0e1      	LDI  R30,1
001f93 f009      	BREQ __LNEGB1F
001f94 27ee      	CLR  R30
                 __LNEGB1F:
001f95 9508      	RET
                 
                 __MULD12U:
001f96 9f7a      	MUL  R23,R26
001f97 2d70      	MOV  R23,R0
001f98 9f6b      	MUL  R22,R27
001f99 0d70      	ADD  R23,R0
001f9a 9ff8      	MUL  R31,R24
001f9b 0d70      	ADD  R23,R0
001f9c 9fe9      	MUL  R30,R25
001f9d 0d70      	ADD  R23,R0
001f9e 9f6a      	MUL  R22,R26
001f9f 2d60      	MOV  R22,R0
001fa0 0d71      	ADD  R23,R1
001fa1 9ffb      	MUL  R31,R27
001fa2 0d60      	ADD  R22,R0
001fa3 1d71      	ADC  R23,R1
001fa4 9fe8      	MUL  R30,R24
001fa5 0d60      	ADD  R22,R0
001fa6 1d71      	ADC  R23,R1
001fa7 2788      	CLR  R24
001fa8 9ffa      	MUL  R31,R26
001fa9 2df0      	MOV  R31,R0
001faa 0d61      	ADD  R22,R1
001fab 1f78      	ADC  R23,R24
001fac 9feb      	MUL  R30,R27
001fad 0df0      	ADD  R31,R0
001fae 1d61      	ADC  R22,R1
001faf 1f78      	ADC  R23,R24
001fb0 9fea      	MUL  R30,R26
001fb1 2de0      	MOV  R30,R0
001fb2 0df1      	ADD  R31,R1
001fb3 1f68      	ADC  R22,R24
001fb4 1f78      	ADC  R23,R24
001fb5 9508      	RET
                 
                 __MULD12:
001fb6 d058      	RCALL __CHKSIGND
001fb7 dfde      	RCALL __MULD12U
001fb8 f40e      	BRTC __MULD121
001fb9 dfb1      	RCALL __ANEGD1
                 __MULD121:
001fba 9508      	RET
                 
                 __DIVB21U:
001fbb 2400      	CLR  R0
001fbc e098      	LDI  R25,8
                 __DIVB21U1:
001fbd 0faa      	LSL  R26
001fbe 1c00      	ROL  R0
001fbf 1a0e      	SUB  R0,R30
001fc0 f410      	BRCC __DIVB21U2
001fc1 0e0e      	ADD  R0,R30
001fc2 c001      	RJMP __DIVB21U3
                 __DIVB21U2:
001fc3 60a1      	SBR  R26,1
                 __DIVB21U3:
001fc4 959a      	DEC  R25
001fc5 f7b9      	BRNE __DIVB21U1
001fc6 2fea      	MOV  R30,R26
001fc7 2da0      	MOV  R26,R0
001fc8 9508      	RET
                 
                 __DIVB21:
001fc9 d039      	RCALL __CHKSIGNB
001fca dff0      	RCALL __DIVB21U
001fcb f40e      	BRTC __DIVB211
001fcc 95e1      	NEG  R30
                 __DIVB211:
001fcd 9508      	RET
                 
                 __DIVD21U:
001fce 933f      	PUSH R19
001fcf 934f      	PUSH R20
001fd0 935f      	PUSH R21
001fd1 2400      	CLR  R0
001fd2 2411      	CLR  R1
001fd3 2744      	CLR  R20
001fd4 2755      	CLR  R21
001fd5 e230      	LDI  R19,32
                 __DIVD21U1:
001fd6 0faa      	LSL  R26
001fd7 1fbb      	ROL  R27
001fd8 1f88      	ROL  R24
001fd9 1f99      	ROL  R25
001fda 1c00      	ROL  R0
001fdb 1c11      	ROL  R1
001fdc 1f44      	ROL  R20
001fdd 1f55      	ROL  R21
001fde 1a0e      	SUB  R0,R30
001fdf 0a1f      	SBC  R1,R31
001fe0 0b46      	SBC  R20,R22
001fe1 0b57      	SBC  R21,R23
001fe2 f428      	BRCC __DIVD21U2
001fe3 0e0e      	ADD  R0,R30
001fe4 1e1f      	ADC  R1,R31
001fe5 1f46      	ADC  R20,R22
001fe6 1f57      	ADC  R21,R23
001fe7 c001      	RJMP __DIVD21U3
                 __DIVD21U2:
001fe8 60a1      	SBR  R26,1
                 __DIVD21U3:
001fe9 953a      	DEC  R19
001fea f759      	BRNE __DIVD21U1
001feb 01fd      	MOVW R30,R26
001fec 01bc      	MOVW R22,R24
001fed 01d0      	MOVW R26,R0
001fee 01ca      	MOVW R24,R20
001fef 915f      	POP  R21
001ff0 914f      	POP  R20
001ff1 913f      	POP  R19
001ff2 9508      	RET
                 
                 __MODB21:
001ff3 94e8      	CLT
001ff4 ffa7      	SBRS R26,7
001ff5 c002      	RJMP __MODB211
001ff6 95a1      	NEG  R26
001ff7 9468      	SET
                 __MODB211:
001ff8 fde7      	SBRC R30,7
001ff9 95e1      	NEG  R30
001ffa dfc0      	RCALL __DIVB21U
001ffb 2fea      	MOV  R30,R26
001ffc f40e      	BRTC __MODB212
001ffd 95e1      	NEG  R30
                 __MODB212:
001ffe 9508      	RET
                 
                 __MODD21U:
001fff dfce      	RCALL __DIVD21U
002000 01fd      	MOVW R30,R26
002001 01bc      	MOVW R22,R24
002002 9508      	RET
                 
                 __CHKSIGNB:
002003 94e8      	CLT
002004 ffe7      	SBRS R30,7
002005 c002      	RJMP __CHKSB1
002006 95e1      	NEG  R30
002007 9468      	SET
                 __CHKSB1:
002008 ffa7      	SBRS R26,7
002009 c004      	RJMP __CHKSB2
00200a 95a1      	NEG  R26
00200b f800      	BLD  R0,0
00200c 9403      	INC  R0
00200d fa00      	BST  R0,0
                 __CHKSB2:
00200e 9508      	RET
                 
                 __CHKSIGND:
00200f 94e8      	CLT
002010 ff77      	SBRS R23,7
002011 c002      	RJMP __CHKSD1
002012 df58      	RCALL __ANEGD1
002013 9468      	SET
                 __CHKSD1:
002014 ff97      	SBRS R25,7
002015 c00b      	RJMP __CHKSD2
002016 2400      	CLR  R0
002017 95a0      	COM  R26
002018 95b0      	COM  R27
002019 9580      	COM  R24
00201a 9590      	COM  R25
00201b 9611      	ADIW R26,1
00201c 1d80      	ADC  R24,R0
00201d 1d90      	ADC  R25,R0
00201e f800      	BLD  R0,0
00201f 9403      	INC  R0
002020 fa00      	BST  R0,0
                 __CHKSD2:
002021 9508      	RET
                 
                 __GETW1P:
002022 91ed      	LD   R30,X+
002023 91fc      	LD   R31,X
002024 9711      	SBIW R26,1
002025 9508      	RET
                 
                 __GETD1P:
002026 91ed      	LD   R30,X+
002027 91fd      	LD   R31,X+
002028 916d      	LD   R22,X+
002029 917c      	LD   R23,X
00202a 9713      	SBIW R26,3
00202b 9508      	RET
                 
                 __PUTDP1:
00202c 93ed      	ST   X+,R30
00202d 93fd      	ST   X+,R31
00202e 936d      	ST   X+,R22
00202f 937c      	ST   X,R23
002030 9508      	RET
                 
                 __GETW1PF:
002031 9005      	LPM  R0,Z+
002032 91f4      	LPM  R31,Z
002033 2de0      	MOV  R30,R0
002034 9508      	RET
                 
                 __GETD1S0:
002035 81e8      	LD   R30,Y
002036 81f9      	LDD  R31,Y+1
002037 816a      	LDD  R22,Y+2
002038 817b      	LDD  R23,Y+3
002039 9508      	RET
                 
                 __GETD2S0:
00203a 81a8      	LD   R26,Y
00203b 81b9      	LDD  R27,Y+1
00203c 818a      	LDD  R24,Y+2
00203d 819b      	LDD  R25,Y+3
00203e 9508      	RET
                 
                 __PUTD1S0:
00203f 83e8      	ST   Y,R30
002040 83f9      	STD  Y+1,R31
002041 836a      	STD  Y+2,R22
002042 837b      	STD  Y+3,R23
002043 9508      	RET
                 
                 __PUTDZ20:
002044 83a0      	ST   Z,R26
002045 83b1      	STD  Z+1,R27
002046 8382      	STD  Z+2,R24
002047 8393      	STD  Z+3,R25
002048 9508      	RET
                 
                 __PUTPARD1:
002049 937a      	ST   -Y,R23
00204a 936a      	ST   -Y,R22
00204b 93fa      	ST   -Y,R31
00204c 93ea      	ST   -Y,R30
00204d 9508      	RET
                 
                 __SWAPD12:
00204e 2e18      	MOV  R1,R24
00204f 2f86      	MOV  R24,R22
002050 2d61      	MOV  R22,R1
002051 2e19      	MOV  R1,R25
002052 2f97      	MOV  R25,R23
002053 2d71      	MOV  R23,R1
                 
                 __SWAPW12:
002054 2e1b      	MOV  R1,R27
002055 2fbf      	MOV  R27,R31
002056 2df1      	MOV  R31,R1
                 
                 __SWAPB12:
002057 2e1a      	MOV  R1,R26
002058 2fae      	MOV  R26,R30
002059 2de1      	MOV  R30,R1
00205a 9508      	RET
                 
                 __EEPROMRDD:
00205b 9612      	ADIW R26,2
00205c d002      	RCALL __EEPROMRDW
00205d 01bf      	MOVW R22,R30
00205e 9712      	SBIW R26,2
                 
                 __EEPROMRDW:
00205f 9611      	ADIW R26,1
002060 d002      	RCALL __EEPROMRDB
002061 2ffe      	MOV  R31,R30
002062 9711      	SBIW R26,1
                 
                 __EEPROMRDB:
002063 99e1      	SBIC EECR,EEWE
002064 cffe      	RJMP __EEPROMRDB
002065 93ff      	PUSH R31
002066 b7ff      	IN   R31,SREG
002067 94f8      	CLI
002068 bbae      	OUT  EEARL,R26
002069 bbbf      	OUT  EEARH,R27
00206a 9ae0      	SBI  EECR,EERE
00206b b3ed      	IN   R30,EEDR
00206c bfff      	OUT  SREG,R31
00206d 91ff      	POP  R31
00206e 9508      	RET
                 
                 __EEPROMWRD:
00206f d007      	RCALL __EEPROMWRW
002070 9612      	ADIW R26,2
002071 010f      	MOVW R0,R30
002072 01fb      	MOVW R30,R22
002073 d003      	RCALL __EEPROMWRW
002074 01f0      	MOVW R30,R0
002075 9712      	SBIW R26,2
002076 9508      	RET
                 
                 __EEPROMWRW:
002077 d007      	RCALL __EEPROMWRB
002078 9611      	ADIW R26,1
002079 93ef      	PUSH R30
00207a 2fef      	MOV  R30,R31
00207b d003      	RCALL __EEPROMWRB
00207c 91ef      	POP  R30
00207d 9711      	SBIW R26,1
00207e 9508      	RET
                 
                 __EEPROMWRB:
00207f 9be1      	SBIS EECR,EEWE
002080 c002      	RJMP __EEPROMWRB1
002081 95a8      	WDR
002082 cffc      	RJMP __EEPROMWRB
                 __EEPROMWRB1:
002083 b79f      	IN   R25,SREG
002084 94f8      	CLI
002085 bbae      	OUT  EEARL,R26
002086 bbbf      	OUT  EEARH,R27
002087 9ae0      	SBI  EECR,EERE
002088 b38d      	IN   R24,EEDR
002089 17e8      	CP   R30,R24
00208a f019      	BREQ __EEPROMWRB0
00208b bbed      	OUT  EEDR,R30
00208c 9ae2      	SBI  EECR,EEMWE
00208d 9ae1      	SBI  EECR,EEWE
                 __EEPROMWRB0:
00208e bf9f      	OUT  SREG,R25
00208f 9508      	RET
                 
                 __CPD10:
002090 9730      	SBIW R30,0
002091 4060      	SBCI R22,0
002092 4070      	SBCI R23,0
002093 9508      	RET
                 
                 __CPD21:
002094 17ae      	CP   R26,R30
002095 07bf      	CPC  R27,R31
002096 0786      	CPC  R24,R22
002097 0797      	CPC  R25,R23
002098 9508      	RET
                 
                 __SAVELOCR6:
002099 935a      	ST   -Y,R21
                 __SAVELOCR5:
00209a 934a      	ST   -Y,R20
                 __SAVELOCR4:
00209b 933a      	ST   -Y,R19
                 __SAVELOCR3:
00209c 932a      	ST   -Y,R18
                 __SAVELOCR2:
00209d 931a      	ST   -Y,R17
00209e 930a      	ST   -Y,R16
00209f 9508      	RET
                 
                 __LOADLOCR6:
0020a0 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
0020a1 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
0020a2 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
0020a3 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
0020a4 8119      	LDD  R17,Y+1
0020a5 8108      	LD   R16,Y
0020a6 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega128 register use summary:
r0 :  95 r1 :  46 r2 :   0 r3 :   0 r4 :   5 r5 :   2 r6 :   4 r7 :   4 
r8 :   4 r9 :   3 r10:   2 r11:   4 r12:   0 r13:   0 r14:   0 r15:   4 
r16:  53 r17:  77 r18:  56 r19:  43 r20:  55 r21: 102 r22: 161 r23: 147 
r24: 130 r25:  95 r26: 834 r27: 188 r28: 117 r29:   1 r30:1694 r31: 391 
x  :  59 y  : 956 z  :  64 
Registers used: 30 out of 35 (85.7%)

ATmega128 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  43 add   :  37 
adiw  :  98 and   :  10 andi  :  15 asr   :   1 bclr  :   0 bld   :   4 
brbc  :   0 brbs  :   0 brcc  :  15 brcs  :   3 break :   0 breq  : 131 
brge  :  11 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :  69 
brlt  :  12 brmi  :  12 brne  : 286 brpl  :  10 brsh  :  74 brtc  :   6 
brts  :   3 brvc  :   4 brvs  :   4 bset  :   0 bst   :   4 call  : 998 
cbi   :  20 cbr   :   1 clc   :   4 clh   :   0 cli   :   3 cln   :   0 
clr   :  65 cls   :   0 clt   :   9 clv   :   0 clz   :   2 com   :  13 
cp    :  51 cpc   :  32 cpi   : 410 cpse  :   0 dec   :  33 des   :   0 
elpm  :   0 eor   :   9 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   3 
ijmp  :   0 in    :  13 inc   :  11 jmp   : 136 ld    : 193 ldd   : 400 
ldi   : 732 lds   : 259 lpm   :  17 lsl   :  20 lsr   :   7 mov   : 110 
movw  :  92 mul   :  23 muls  :   0 mulsu :   0 neg   :   9 nop   :   0 
or    :   4 ori   :  12 out   :  55 pop   :  42 push  :  42 rcall :  86 
ret   : 198 reti  :   0 rjmp  : 435 rol   :  37 ror   :  20 sbc   :  18 
sbci  :  38 sbi   :  24 sbic  :   9 sbis  :   4 sbiw  :  70 sbr   :   4 
sbrc  :   9 sbrs  :  27 sec   :   6 seh   :   0 sei   :   0 sen   :   0 
ser   :   9 ses   :   0 set   :   9 sev   :   0 sez   :   1 sleep :   0 
spm   :   0 st    : 292 std   : 180 sts   : 103 sub   :  10 subi  : 161 
swap  :   3 tst   :  33 wdr   :   2 
Instructions used: 82 out of 117 (70.1%)

ATmega128 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x00414e  15926    792  16718  131072  12.8%
[.dseg] 0x000100 0x0005fa      0    250    250    4096   6.1%
[.eseg] 0x000000 0x000056      0     86     86    4096   2.1%

Assembly complete, 0 errors, 13 warnings
