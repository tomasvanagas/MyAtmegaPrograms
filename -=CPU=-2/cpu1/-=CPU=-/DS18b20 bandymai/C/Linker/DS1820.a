;/*****************************************************
;This program was produced by the
;CodeWizardAVR V2.04.4a Advanced
;Automatic Program Generator
;© Copyright 1998-2009 Pavel Haiduc, HP InfoTech s.r.l.
;http://www.hpinfotech.com
;
;Project :
;Version :
;Date    : 1/24/2012
;Author  : NeVaDa
;Company : Home
;Comments:
;
;
;Chip type               : ATmega2560
;Program type            : Application
;AVR Core Clock frequency: 8.000000 MHz
;Memory model            : Small
;External RAM size       : 0
;Data Stack size         : 2048
;*****************************************************/
;#include <mega2560.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x01
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x0E
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x04
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x06
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x0C
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x0E
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x02
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=smcr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <delay.h>
;
;// 1 Wire Bus functions
;#asm
;PCODE: $0000000D VOL: 0
   .equ __w1_port=0x02 ;PORTA
;PCODE: $0000000E VOL: 0
   .equ __w1_bit = 0
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
; 0000 001E #endasm
;#include <1wire.h>
;
;// DS1820 Temperature Sensor functions
;#include <ds1820.h>
;
;// maximum number of DS1820 devices
;// connected to the 1 Wire bus
;#define MAX_DS1820 20
;// number of DS1820 devices
;// connected to the 1 Wire bus
;unsigned char ds1820_devices;
;// DS1820 devices ROM code storage area,
;// 9 bytes are used for each device
;// (see the w1_search function description in the help)
;unsigned char ds1820_rom_codes[MAX_DS1820][2][9];
;
;// Alphanumeric LCD Module functions
;#asm
;PCODE: $00000011 VOL: 0
   .equ __lcd_port=0x05 ;PORTB
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
; 0000 0032 #endasm
;#include <lcd.h>
;
;char NumToIndex(char Num){
; 0000 0035 char NumToIndex(char Num){

	.CSEG
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
; 0000 0036     if(Num==0){     return '0';}
;	Num -> Y+0
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
; 0000 0037     else if(Num==1){return '1';}
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
; 0000 0038     else if(Num==2){return '2';}
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
; 0000 0039     else if(Num==3){return '3';}
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
; 0000 003A     else if(Num==4){return '4';}
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
; 0000 003B     else if(Num==5){return '5';}
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
; 0000 003C     else if(Num==6){return '6';}
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
; 0000 003D     else if(Num==7){return '7';}
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
; 0000 003E     else if(Num==8){return '8';}
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
; 0000 003F     else if(Num==9){return '9';}
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
; 0000 0040     else if(Num==10){return 'a';}
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
; 0000 0041     else if(Num==11){return 'b';}
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
; 0000 0042     else if(Num==12){return 'c';}
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
; 0000 0043     else if(Num==13){return 'd';}
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
; 0000 0044     else if(Num==14){return 'e';}
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
; 0000 0045     else if(Num==15){return 'f';}
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
; 0000 0046     else{           return '-';}
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
; 0000 0047 return 0;
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
; 0000 0048 }
;PCODE: $0000009C VOL: 0
;
;// Declare your global variables here
;
;void main(void){
; 0000 004C void main(void){
;PCODE: $0000009D VOL: 0
; 0000 004D // Declare your local variables here
; 0000 004E 
; 0000 004F // Crystal Oscillator division factor: 1
; 0000 0050 #pragma optsize-
; 0000 0051 CLKPR=0x80;
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
; 0000 0052 CLKPR=0x00;
;PCODE: $000000A0 VOL: 0
;PCODE: $000000A1 VOL: 0
; 0000 0053 #ifdef _OPTIMIZE_SIZE_
; 0000 0054 #pragma optsize+
; 0000 0055 #endif
; 0000 0056 
; 0000 0057 // Input/Output Ports initialization
; 0000 0058 // Port A initialization
; 0000 0059 // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 005A // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 005B PORTA=0x00;
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
; 0000 005C DDRA=0x00;
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
; 0000 005D 
; 0000 005E // Port B initialization
; 0000 005F // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 0060 // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 0061 PORTB=0x00;
;PCODE: $000000A6 VOL: 0
;PCODE: $000000A7 VOL: 0
; 0000 0062 DDRB=0x00;
;PCODE: $000000A8 VOL: 0
;PCODE: $000000A9 VOL: 0
; 0000 0063 
; 0000 0064 // Port C initialization
; 0000 0065 // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 0066 // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 0067 PORTC=0x00;
;PCODE: $000000AA VOL: 0
;PCODE: $000000AB VOL: 0
; 0000 0068 DDRC=0x00;
;PCODE: $000000AC VOL: 0
;PCODE: $000000AD VOL: 0
; 0000 0069 
; 0000 006A // Port D initialization
; 0000 006B // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 006C // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 006D PORTD=0x00;
;PCODE: $000000AE VOL: 0
;PCODE: $000000AF VOL: 0
; 0000 006E DDRD=0x00;
;PCODE: $000000B0 VOL: 0
;PCODE: $000000B1 VOL: 0
; 0000 006F 
; 0000 0070 // Port E initialization
; 0000 0071 // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 0072 // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 0073 PORTE=0x00;
;PCODE: $000000B2 VOL: 0
;PCODE: $000000B3 VOL: 0
; 0000 0074 DDRE=0x00;
;PCODE: $000000B4 VOL: 0
;PCODE: $000000B5 VOL: 0
; 0000 0075 
; 0000 0076 // Port F initialization
; 0000 0077 // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 0078 // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 0079 PORTF=0x00;
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
; 0000 007A DDRF=0x00;
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
; 0000 007B 
; 0000 007C // Port G initialization
; 0000 007D // Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 007E // State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 007F PORTG=0x00;
;PCODE: $000000BA VOL: 0
;PCODE: $000000BB VOL: 0
; 0000 0080 DDRG=0x00;
;PCODE: $000000BC VOL: 0
;PCODE: $000000BD VOL: 0
; 0000 0081 
; 0000 0082 // Port H initialization
; 0000 0083 // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 0084 // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 0085 PORTH=0x00;
;PCODE: $000000BE VOL: 0
;PCODE: $000000BF VOL: 0
; 0000 0086 DDRH=0x00;
;PCODE: $000000C0 VOL: 0
;PCODE: $000000C1 VOL: 0
; 0000 0087 
; 0000 0088 // Port J initialization
; 0000 0089 // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 008A // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 008B PORTJ=0x00;
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
; 0000 008C DDRJ=0x00;
;PCODE: $000000C4 VOL: 0
;PCODE: $000000C5 VOL: 0
; 0000 008D 
; 0000 008E // Port K initialization
; 0000 008F // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 0090 // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 0091 PORTK=0x00;
;PCODE: $000000C6 VOL: 0
;PCODE: $000000C7 VOL: 0
; 0000 0092 DDRK=0x00;
;PCODE: $000000C8 VOL: 0
;PCODE: $000000C9 VOL: 0
; 0000 0093 
; 0000 0094 // Port L initialization
; 0000 0095 // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 0096 // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 0097 PORTL=0x00;
;PCODE: $000000CA VOL: 0
;PCODE: $000000CB VOL: 0
; 0000 0098 DDRL=0x00;
;PCODE: $000000CC VOL: 0
;PCODE: $000000CD VOL: 0
; 0000 0099 
; 0000 009A // Timer/Counter 0 initialization
; 0000 009B // Clock source: System Clock
; 0000 009C // Clock value: Timer 0 Stopped
; 0000 009D // Mode: Normal top=FFh
; 0000 009E // OC0A output: Disconnected
; 0000 009F // OC0B output: Disconnected
; 0000 00A0 TCCR0A=0x00;
;PCODE: $000000CE VOL: 0
;PCODE: $000000CF VOL: 0
; 0000 00A1 TCCR0B=0x00;
;PCODE: $000000D0 VOL: 0
;PCODE: $000000D1 VOL: 0
; 0000 00A2 TCNT0=0x00;
;PCODE: $000000D2 VOL: 0
;PCODE: $000000D3 VOL: 0
; 0000 00A3 OCR0A=0x00;
;PCODE: $000000D4 VOL: 0
;PCODE: $000000D5 VOL: 0
; 0000 00A4 OCR0B=0x00;
;PCODE: $000000D6 VOL: 0
;PCODE: $000000D7 VOL: 0
; 0000 00A5 
; 0000 00A6 // Timer/Counter 1 initialization
; 0000 00A7 // Clock source: System Clock
; 0000 00A8 // Clock value: Timer1 Stopped
; 0000 00A9 // Mode: Normal top=FFFFh
; 0000 00AA // OC1A output: Discon.
; 0000 00AB // OC1B output: Discon.
; 0000 00AC // OC1C output: Discon.
; 0000 00AD // Noise Canceler: Off
; 0000 00AE // Input Capture on Falling Edge
; 0000 00AF // Timer1 Overflow Interrupt: Off
; 0000 00B0 // Input Capture Interrupt: Off
; 0000 00B1 // Compare A Match Interrupt: Off
; 0000 00B2 // Compare B Match Interrupt: Off
; 0000 00B3 // Compare C Match Interrupt: Off
; 0000 00B4 TCCR1A=0x00;
;PCODE: $000000D8 VOL: 0
;PCODE: $000000D9 VOL: 0
; 0000 00B5 TCCR1B=0x00;
;PCODE: $000000DA VOL: 0
;PCODE: $000000DB VOL: 0
; 0000 00B6 TCNT1H=0x00;
;PCODE: $000000DC VOL: 0
;PCODE: $000000DD VOL: 0
; 0000 00B7 TCNT1L=0x00;
;PCODE: $000000DE VOL: 0
;PCODE: $000000DF VOL: 0
; 0000 00B8 ICR1H=0x00;
;PCODE: $000000E0 VOL: 0
;PCODE: $000000E1 VOL: 0
; 0000 00B9 ICR1L=0x00;
;PCODE: $000000E2 VOL: 0
;PCODE: $000000E3 VOL: 0
; 0000 00BA OCR1AH=0x00;
;PCODE: $000000E4 VOL: 0
;PCODE: $000000E5 VOL: 0
; 0000 00BB OCR1AL=0x00;
;PCODE: $000000E6 VOL: 0
;PCODE: $000000E7 VOL: 0
; 0000 00BC OCR1BH=0x00;
;PCODE: $000000E8 VOL: 0
;PCODE: $000000E9 VOL: 0
; 0000 00BD OCR1BL=0x00;
;PCODE: $000000EA VOL: 0
;PCODE: $000000EB VOL: 0
; 0000 00BE OCR1CH=0x00;
;PCODE: $000000EC VOL: 0
;PCODE: $000000ED VOL: 0
; 0000 00BF OCR1CL=0x00;
;PCODE: $000000EE VOL: 0
;PCODE: $000000EF VOL: 0
; 0000 00C0 
; 0000 00C1 // Timer/Counter 2 initialization
; 0000 00C2 // Clock source: System Clock
; 0000 00C3 // Clock value: Timer2 Stopped
; 0000 00C4 // Mode: Normal top=FFh
; 0000 00C5 // OC2A output: Disconnected
; 0000 00C6 // OC2B output: Disconnected
; 0000 00C7 ASSR=0x00;
;PCODE: $000000F0 VOL: 0
;PCODE: $000000F1 VOL: 0
; 0000 00C8 TCCR2A=0x00;
;PCODE: $000000F2 VOL: 0
;PCODE: $000000F3 VOL: 0
; 0000 00C9 TCCR2B=0x00;
;PCODE: $000000F4 VOL: 0
;PCODE: $000000F5 VOL: 0
; 0000 00CA TCNT2=0x00;
;PCODE: $000000F6 VOL: 0
;PCODE: $000000F7 VOL: 0
; 0000 00CB OCR2A=0x00;
;PCODE: $000000F8 VOL: 0
;PCODE: $000000F9 VOL: 0
; 0000 00CC OCR2B=0x00;
;PCODE: $000000FA VOL: 0
;PCODE: $000000FB VOL: 0
; 0000 00CD 
; 0000 00CE // Timer/Counter 3 initialization
; 0000 00CF // Clock source: System Clock
; 0000 00D0 // Clock value: Timer3 Stopped
; 0000 00D1 // Mode: Normal top=FFFFh
; 0000 00D2 // OC3A output: Discon.
; 0000 00D3 // OC3B output: Discon.
; 0000 00D4 // OC3C output: Discon.
; 0000 00D5 // Noise Canceler: Off
; 0000 00D6 // Input Capture on Falling Edge
; 0000 00D7 // Timer3 Overflow Interrupt: Off
; 0000 00D8 // Input Capture Interrupt: Off
; 0000 00D9 // Compare A Match Interrupt: Off
; 0000 00DA // Compare B Match Interrupt: Off
; 0000 00DB // Compare C Match Interrupt: Off
; 0000 00DC TCCR3A=0x00;
;PCODE: $000000FC VOL: 0
;PCODE: $000000FD VOL: 0
; 0000 00DD TCCR3B=0x00;
;PCODE: $000000FE VOL: 0
;PCODE: $000000FF VOL: 0
; 0000 00DE TCNT3H=0x00;
;PCODE: $00000100 VOL: 0
;PCODE: $00000101 VOL: 0
; 0000 00DF TCNT3L=0x00;
;PCODE: $00000102 VOL: 0
;PCODE: $00000103 VOL: 0
; 0000 00E0 ICR3H=0x00;
;PCODE: $00000104 VOL: 0
;PCODE: $00000105 VOL: 0
; 0000 00E1 ICR3L=0x00;
;PCODE: $00000106 VOL: 0
;PCODE: $00000107 VOL: 0
; 0000 00E2 OCR3AH=0x00;
;PCODE: $00000108 VOL: 0
;PCODE: $00000109 VOL: 0
; 0000 00E3 OCR3AL=0x00;
;PCODE: $0000010A VOL: 0
;PCODE: $0000010B VOL: 0
; 0000 00E4 OCR3BH=0x00;
;PCODE: $0000010C VOL: 0
;PCODE: $0000010D VOL: 0
; 0000 00E5 OCR3BL=0x00;
;PCODE: $0000010E VOL: 0
;PCODE: $0000010F VOL: 0
; 0000 00E6 OCR3CH=0x00;
;PCODE: $00000110 VOL: 0
;PCODE: $00000111 VOL: 0
; 0000 00E7 OCR3CL=0x00;
;PCODE: $00000112 VOL: 0
;PCODE: $00000113 VOL: 0
; 0000 00E8 
; 0000 00E9 // Timer/Counter 4 initialization
; 0000 00EA // Clock source: System Clock
; 0000 00EB // Clock value: Timer4 Stopped
; 0000 00EC // Mode: Normal top=FFFFh
; 0000 00ED // OC4A output: Discon.
; 0000 00EE // OC4B output: Discon.
; 0000 00EF // OC4C output: Discon.
; 0000 00F0 // Noise Canceler: Off
; 0000 00F1 // Input Capture on Falling Edge
; 0000 00F2 // Timer4 Overflow Interrupt: Off
; 0000 00F3 // Input Capture Interrupt: Off
; 0000 00F4 // Compare A Match Interrupt: Off
; 0000 00F5 // Compare B Match Interrupt: Off
; 0000 00F6 // Compare C Match Interrupt: Off
; 0000 00F7 TCCR4A=0x00;
;PCODE: $00000114 VOL: 0
;PCODE: $00000115 VOL: 0
; 0000 00F8 TCCR4B=0x00;
;PCODE: $00000116 VOL: 0
;PCODE: $00000117 VOL: 0
; 0000 00F9 TCNT4H=0x00;
;PCODE: $00000118 VOL: 0
;PCODE: $00000119 VOL: 0
; 0000 00FA TCNT4L=0x00;
;PCODE: $0000011A VOL: 0
;PCODE: $0000011B VOL: 0
; 0000 00FB ICR4H=0x00;
;PCODE: $0000011C VOL: 0
;PCODE: $0000011D VOL: 0
; 0000 00FC ICR4L=0x00;
;PCODE: $0000011E VOL: 0
;PCODE: $0000011F VOL: 0
; 0000 00FD OCR4AH=0x00;
;PCODE: $00000120 VOL: 0
;PCODE: $00000121 VOL: 0
; 0000 00FE OCR4AL=0x00;
;PCODE: $00000122 VOL: 0
;PCODE: $00000123 VOL: 0
; 0000 00FF OCR4BH=0x00;
;PCODE: $00000124 VOL: 0
;PCODE: $00000125 VOL: 0
; 0000 0100 OCR4BL=0x00;
;PCODE: $00000126 VOL: 0
;PCODE: $00000127 VOL: 0
; 0000 0101 OCR4CH=0x00;
;PCODE: $00000128 VOL: 0
;PCODE: $00000129 VOL: 0
; 0000 0102 OCR4CL=0x00;
;PCODE: $0000012A VOL: 0
;PCODE: $0000012B VOL: 0
; 0000 0103 
; 0000 0104 // Timer/Counter 5 initialization
; 0000 0105 // Clock source: System Clock
; 0000 0106 // Clock value: Timer5 Stopped
; 0000 0107 // Mode: Normal top=FFFFh
; 0000 0108 // OC5A output: Discon.
; 0000 0109 // OC5B output: Discon.
; 0000 010A // OC5C output: Discon.
; 0000 010B // Noise Canceler: Off
; 0000 010C // Input Capture on Falling Edge
; 0000 010D // Timer5 Overflow Interrupt: Off
; 0000 010E // Input Capture Interrupt: Off
; 0000 010F // Compare A Match Interrupt: Off
; 0000 0110 // Compare B Match Interrupt: Off
; 0000 0111 // Compare C Match Interrupt: Off
; 0000 0112 TCCR5A=0x00;
;PCODE: $0000012C VOL: 0
;PCODE: $0000012D VOL: 0
; 0000 0113 TCCR5B=0x00;
;PCODE: $0000012E VOL: 0
;PCODE: $0000012F VOL: 0
; 0000 0114 TCNT5H=0x00;
;PCODE: $00000130 VOL: 0
;PCODE: $00000131 VOL: 0
; 0000 0115 TCNT5L=0x00;
;PCODE: $00000132 VOL: 0
;PCODE: $00000133 VOL: 0
; 0000 0116 ICR5H=0x00;
;PCODE: $00000134 VOL: 0
;PCODE: $00000135 VOL: 0
; 0000 0117 ICR5L=0x00;
;PCODE: $00000136 VOL: 0
;PCODE: $00000137 VOL: 0
; 0000 0118 OCR5AH=0x00;
;PCODE: $00000138 VOL: 0
;PCODE: $00000139 VOL: 0
; 0000 0119 OCR5AL=0x00;
;PCODE: $0000013A VOL: 0
;PCODE: $0000013B VOL: 0
; 0000 011A OCR5BH=0x00;
;PCODE: $0000013C VOL: 0
;PCODE: $0000013D VOL: 0
; 0000 011B OCR5BL=0x00;
;PCODE: $0000013E VOL: 0
;PCODE: $0000013F VOL: 0
; 0000 011C OCR5CH=0x00;
;PCODE: $00000140 VOL: 0
;PCODE: $00000141 VOL: 0
; 0000 011D OCR5CL=0x00;
;PCODE: $00000142 VOL: 0
;PCODE: $00000143 VOL: 0
; 0000 011E 
; 0000 011F // External Interrupt(s) initialization
; 0000 0120 // INT0: Off
; 0000 0121 // INT1: Off
; 0000 0122 // INT2: Off
; 0000 0123 // INT3: Off
; 0000 0124 // INT4: Off
; 0000 0125 // INT5: Off
; 0000 0126 // INT6: Off
; 0000 0127 // INT7: Off
; 0000 0128 EICRA=0x00;
;PCODE: $00000144 VOL: 0
;PCODE: $00000145 VOL: 0
; 0000 0129 EICRB=0x00;
;PCODE: $00000146 VOL: 0
;PCODE: $00000147 VOL: 0
; 0000 012A EIMSK=0x00;
;PCODE: $00000148 VOL: 0
;PCODE: $00000149 VOL: 0
; 0000 012B // PCINT0 interrupt: Off
; 0000 012C // PCINT1 interrupt: Off
; 0000 012D // PCINT2 interrupt: Off
; 0000 012E // PCINT3 interrupt: Off
; 0000 012F // PCINT4 interrupt: Off
; 0000 0130 // PCINT5 interrupt: Off
; 0000 0131 // PCINT6 interrupt: Off
; 0000 0132 // PCINT7 interrupt: Off
; 0000 0133 // PCINT8 interrupt: Off
; 0000 0134 // PCINT9 interrupt: Off
; 0000 0135 // PCINT10 interrupt: Off
; 0000 0136 // PCINT11 interrupt: Off
; 0000 0137 // PCINT12 interrupt: Off
; 0000 0138 // PCINT13 interrupt: Off
; 0000 0139 // PCINT14 interrupt: Off
; 0000 013A // PCINT15 interrupt: Off
; 0000 013B // PCINT16 interrupt: Off
; 0000 013C // PCINT17 interrupt: Off
; 0000 013D // PCINT18 interrupt: Off
; 0000 013E // PCINT19 interrupt: Off
; 0000 013F // PCINT20 interrupt: Off
; 0000 0140 // PCINT21 interrupt: Off
; 0000 0141 // PCINT22 interrupt: Off
; 0000 0142 // PCINT23 interrupt: Off
; 0000 0143 PCMSK0=0x00;
;PCODE: $0000014A VOL: 0
;PCODE: $0000014B VOL: 0
; 0000 0144 PCMSK1=0x00;
;PCODE: $0000014C VOL: 0
;PCODE: $0000014D VOL: 0
; 0000 0145 PCMSK2=0x00;
;PCODE: $0000014E VOL: 0
;PCODE: $0000014F VOL: 0
; 0000 0146 PCICR=0x00;
;PCODE: $00000150 VOL: 0
;PCODE: $00000151 VOL: 0
; 0000 0147 
; 0000 0148 // Timer/Counter 0 Interrupt(s) initialization
; 0000 0149 TIMSK0=0x00;
;PCODE: $00000152 VOL: 0
;PCODE: $00000153 VOL: 0
; 0000 014A // Timer/Counter 1 Interrupt(s) initialization
; 0000 014B TIMSK1=0x00;
;PCODE: $00000154 VOL: 0
;PCODE: $00000155 VOL: 0
; 0000 014C // Timer/Counter 2 Interrupt(s) initialization
; 0000 014D TIMSK2=0x00;
;PCODE: $00000156 VOL: 0
;PCODE: $00000157 VOL: 0
; 0000 014E // Timer/Counter 3 Interrupt(s) initialization
; 0000 014F TIMSK3=0x00;
;PCODE: $00000158 VOL: 0
;PCODE: $00000159 VOL: 0
; 0000 0150 // Timer/Counter 4 Interrupt(s) initialization
; 0000 0151 TIMSK4=0x00;
;PCODE: $0000015A VOL: 0
;PCODE: $0000015B VOL: 0
; 0000 0152 // Timer/Counter 5 Interrupt(s) initialization
; 0000 0153 TIMSK5=0x00;
;PCODE: $0000015C VOL: 0
;PCODE: $0000015D VOL: 0
; 0000 0154 
; 0000 0155 // Analog Comparator initialization
; 0000 0156 // Analog Comparator: Off
; 0000 0157 // Analog Comparator Input Capture by Timer/Counter 1: Off
; 0000 0158 ACSR=0x80;
;PCODE: $0000015E VOL: 0
;PCODE: $0000015F VOL: 0
; 0000 0159 ADCSRB=0x00;
;PCODE: $00000160 VOL: 0
;PCODE: $00000161 VOL: 0
; 0000 015A 
; 0000 015B // Determine the number of DS1820 devices
; 0000 015C // connected to the 1 Wire bus
; 0000 015D ds1820_devices=w1_search(0xf0,ds1820_rom_codes[0]);
;PCODE: $00000162 VOL: 0
;PCODE: $00000163 VOL: 0
;PCODE: $00000164 VOL: 0
;PCODE: $00000165 VOL: 0
;PCODE: $00000166 VOL: 0
;PCODE: $00000167 VOL: 0
; 0000 015E 
; 0000 015F // LCD module initialization
; 0000 0160 lcd_init(20);
;PCODE: $00000168 VOL: 0
;PCODE: $00000169 VOL: 0
;PCODE: $0000016A VOL: 0
; 0000 0161 lcd_putchar(NumToIndex(ds1820_devices));
;PCODE: $0000016B VOL: 0
;PCODE: $0000016C VOL: 0
;PCODE: $0000016D VOL: 0
;PCODE: $0000016E VOL: 0
; 0000 0162 
; 0000 0163     while(1){
;PCODE: $0000016F VOL: 0
; 0000 0164     // Place your code here
; 0000 0165 
; 0000 0166     }
;PCODE: $00000170 VOL: 0
;PCODE: $00000171 VOL: 0
; 0000 0167 }
;PCODE: $00000172 VOL: 0
;PCODE: $00000173 VOL: 0
;PCODE: $00000174 VOL: 0
