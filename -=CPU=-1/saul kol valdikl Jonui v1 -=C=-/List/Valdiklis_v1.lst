
AVRASM ver. 2.1.30  D:\TOMOSIUKS\-=CPU=-\saul kol valdikl Jonui v1 -=C=-\List\Valdiklis_v1.asm Wed Feb 15 02:11:56 2012

D:\TOMOSIUKS\-=CPU=-\saul kol valdikl Jonui v1 -=C=-\List\Valdiklis_v1.asm(1051): warning: Register r5 already defined by the .DEF directive
D:\TOMOSIUKS\-=CPU=-\saul kol valdikl Jonui v1 -=C=-\List\Valdiklis_v1.asm(1052): warning: Register r6 already defined by the .DEF directive
D:\TOMOSIUKS\-=CPU=-\saul kol valdikl Jonui v1 -=C=-\List\Valdiklis_v1.asm(1053): warning: Register r8 already defined by the .DEF directive
D:\TOMOSIUKS\-=CPU=-\saul kol valdikl Jonui v1 -=C=-\List\Valdiklis_v1.asm(1054): warning: Register r10 already defined by the .DEF directive
D:\TOMOSIUKS\-=CPU=-\saul kol valdikl Jonui v1 -=C=-\List\Valdiklis_v1.asm(1055): warning: Register r12 already defined by the .DEF directive
D:\TOMOSIUKS\-=CPU=-\saul kol valdikl Jonui v1 -=C=-\List\Valdiklis_v1.asm(1056): warning: Register r4 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V2.04.4a Advanced
                 ;(C) Copyright 1998-2009 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Chip type                : ATmega32
                 ;Program type             : Application
                 ;Clock frequency          : 8.000000 MHz
                 ;Memory model             : Small
                 ;Optimize for             : Speed
                 ;(s)printf features       : int, width
                 ;(s)scanf features        : long, width
                 ;External RAM size        : 0
                 ;Data Stack size          : 512 byte(s)
                 ;Heap size                : 0 byte(s)
                 ;Promote 'char' to 'int'  : Yes
                 ;'char' is unsigned       : Yes
                 ;8 bit enums              : Yes
                 ;global 'const' stored in FLASH: No
                 ;Enhanced core instructions    : On
                 ;Smart register allocation     : On
                 ;Automatic register allocation : On
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega32
                 	#pragma AVRPART MEMORY PROG_FLASH 32768
                 	#pragma AVRPART MEMORY EEPROM 1024
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 2048
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X+
                 	LD   R22,X
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _RefreshLcd=R5
                 	.DEF _LAST_SOLAR_INPUT_TEMP=R6
                 	.DEF _LAST_SOLAR_OUTPUT_TEMP=R8
                 	.DEF _BOILER_TEMP=R10
                 	.DEF _SOLAR_INPUT_TEMP=R12
                 	.DEF _Acceleration=R4
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;INTERRUPT VECTORS
000000 940c 01da 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 058f 	JMP  _timer0_ovf_isr
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 _k1:
00002a 2220
00002b 2b2a
00002c 5b2c
00002d 5d3d      	.DB  0x20,0x22,0x2A,0x2B,0x2C,0x5B,0x3D,0x5D
00002e 7f7c
D:\TOMOSIUKS\-=CPU=-\saul kol valdikl Jonui v1 -=C=-\List\Valdiklis_v1.asm(1086): warning: .cseg .db misalignment - padding zero byte
00002f 0000      	.DB  0x7C,0x7F,0x0
                 
                 _0xEC:
D:\TOMOSIUKS\-=CPU=-\saul kol valdikl Jonui v1 -=C=-\List\Valdiklis_v1.asm(1089): warning: .cseg .db misalignment - padding zero byte
000030 00ff      	.DB  0xFF
                 _0x0:
000031 3c20
000032 2000
000033 0020
000034 7c7c      	.DB  0x20,0x3C,0x0,0x20,0x20,0x0,0x7C,0x7C
000035 3e00
000036 2000
000037 207c
000038 2000      	.DB  0x0,0x3E,0x0,0x20,0x7C,0x20,0x0,0x20
000039 2020
00003a 2b00
00003b 2d00
00003c 2a00      	.DB  0x20,0x20,0x0,0x2B,0x0,0x2D,0x0,0x2A
00003d 0020
00003e 4153
00003f 4c55
000040 5345      	.DB  0x20,0x0,0x53,0x41,0x55,0x4C,0x45,0x53
000041 4b20
000042 4c4f
000043 4b45
000044 4f54      	.DB  0x20,0x4B,0x4F,0x4C,0x45,0x4B,0x54,0x4F
000045 2e52
000046 5600
000047 4c41
000048 4944      	.DB  0x52,0x2E,0x0,0x56,0x41,0x4C,0x44,0x49
000049 4c4b
00004a 5349
00004b 5620
00004c 2e31      	.DB  0x4B,0x4C,0x49,0x53,0x20,0x56,0x31,0x2E
00004d 2030
00004e 0020
00004f 2043
000050 4f4b      	.DB  0x30,0x20,0x20,0x0,0x43,0x20,0x4B,0x4F
000051 2e4c
000052 4554
000053 504d
000054 002e      	.DB  0x4C,0x2E,0x54,0x45,0x4D,0x50,0x2E,0x0
000055 2043
000056 4f42
000057 4c49
000058 542e      	.DB  0x43,0x20,0x42,0x4F,0x49,0x4C,0x2E,0x54
000059 4d45
00005a 0050
00005b 2043
00005c 4f4b      	.DB  0x45,0x4D,0x50,0x0,0x43,0x20,0x4B,0x4F
00005d 2e4c
00005e 5349
00005f 4a45
000060 002e      	.DB  0x4C,0x2E,0x49,0x53,0x45,0x4A,0x2E,0x0
000061 2043
000062 4f4b
000063 2e4c
000064 4549      	.DB  0x43,0x20,0x4B,0x4F,0x4C,0x2E,0x49,0x45
000065 494a
000066 004d
000067 2043
000068 4554      	.DB  0x4A,0x49,0x4D,0x0,0x43,0x20,0x54,0x45
000069 504d
00006a 532e
00006b 494b
00006c 5452      	.DB  0x4D,0x50,0x2E,0x53,0x4B,0x49,0x52,0x54
00006d 2000
00006e 2020
00006f 4b20
000070 4945      	.DB  0x0,0x20,0x20,0x20,0x20,0x4B,0x45,0x49
000071 5453
000072 3f49
000073 2d2d
000074 2a3e      	.DB  0x53,0x54,0x49,0x3F,0x2D,0x2D,0x3E,0x2A
000075 0020
000076 2f4c
000077 494d
000078 204e      	.DB  0x20,0x0,0x4C,0x2F,0x4D,0x49,0x4E,0x20
000079 5253
00007a 5541
00007b 4154
00007c 0053      	.DB  0x53,0x52,0x41,0x55,0x54,0x41,0x53,0x0
00007d 2020
00007e 3539
00007f 2043
000080 5041      	.DB  0x20,0x20,0x39,0x35,0x43,0x20,0x41,0x50
000081 4153
000082 4755
000083 2041
000084 2020      	.DB  0x53,0x41,0x55,0x47,0x41,0x20,0x20,0x20
000085 2000
000086 4e20
000087 5345
000088 5655      	.DB  0x0,0x20,0x20,0x4E,0x45,0x53,0x55,0x56
000089 4945
00008a 554b
00008b 4953
00008c 2020      	.DB  0x45,0x49,0x4B,0x55,0x53,0x49,0x20,0x20
00008d 0020
00008e 2d2d
00008f 5553
000090 4556      	.DB  0x20,0x0,0x2D,0x2D,0x53,0x55,0x56,0x45
000091 4b49
000092 2045
000093 3920
000094 4335      	.DB  0x49,0x4B,0x45,0x20,0x20,0x39,0x35,0x43
000095 2d2d
000096 2d00
000097 2d2d
000098 412d      	.DB  0x2D,0x2D,0x0,0x2D,0x2D,0x2D,0x2D,0x41
000099 5350
00009a 5541
00009b 4147
00009c 2d2d      	.DB  0x50,0x53,0x41,0x55,0x47,0x41,0x2D,0x2D
00009d 2d2d
00009e 002d
00009f 2057
0000a0 4f4d      	.DB  0x2D,0x2D,0x2D,0x0,0x57,0x20,0x4D,0x4F
0000a1 454d
0000a2 544e
0000a3 4e49
0000a4 2045      	.DB  0x4D,0x45,0x4E,0x54,0x49,0x4E,0x45,0x20
0000a5 2000
0000a6 2020
0000a7 2020
0000a8 4147      	.DB  0x0,0x20,0x20,0x20,0x20,0x20,0x47,0x41
0000a9 494c
0000aa 2041
0000ab 2020
0000ac 2020      	.DB  0x4C,0x49,0x41,0x20,0x20,0x20,0x20,0x20
0000ad 0020
0000ae 576b
0000af 0068
0000b0 4e45      	.DB  0x20,0x0,0x6B,0x57,0x68,0x0,0x45,0x4E
0000b1 5245
0000b2 2e47
0000b3 4b53
0000b4 4941      	.DB  0x45,0x52,0x47,0x2E,0x53,0x4B,0x41,0x49
0000b5 4954
0000b6 4c4b
0000b7 5349
0000b8 4500      	.DB  0x54,0x49,0x4B,0x4C,0x49,0x53,0x0,0x45
0000b9 454e
0000ba 4752
0000bb 202e
0000bc 4550      	.DB  0x4E,0x45,0x52,0x47,0x2E,0x20,0x50,0x45
0000bd 2052
0000be 4944
0000bf 4e45
0000c0 0041      	.DB  0x52,0x20,0x44,0x49,0x45,0x4E,0x41,0x0
0000c1 414d
0000c2 534b
0000c3 442e
0000c4 4549      	.DB  0x4D,0x41,0x4B,0x53,0x2E,0x44,0x49,0x45
0000c5 4f4e
0000c6 2e53
0000c7 4554
0000c8 504d      	.DB  0x4E,0x4F,0x53,0x2E,0x54,0x45,0x4D,0x50
0000c9 4300
0000ca 2020
0000cb 2020
0000cc 2020      	.DB  0x0,0x43,0x20,0x20,0x20,0x20,0x20,0x20
0000cd 5400
0000ce 4952
0000cf 414e
0000d0 414d      	.DB  0x0,0x54,0x52,0x49,0x4E,0x41,0x4D,0x41
0000d1 203a
0000d2 3030
0000d3 2530
0000d4 2020      	.DB  0x3A,0x20,0x30,0x30,0x30,0x25,0x20,0x20
0000d5 0020
0000d6 4150
0000d7 414c
0000d8 4b55      	.DB  0x20,0x0,0x50,0x41,0x4C,0x41,0x55,0x4B
0000d9 5449
0000da 2e45
0000db 2e2e
0000dc 2020      	.DB  0x49,0x54,0x45,0x2E,0x2E,0x2E,0x20,0x20
0000dd 2020
0000de 2000
0000df 2020
0000e0 4920      	.DB  0x20,0x20,0x0,0x20,0x20,0x20,0x20,0x49
0000e1 5453
0000e2 4952
0000e3 544e
0000e4 2041      	.DB  0x53,0x54,0x52,0x49,0x4E,0x54,0x41,0x20
0000e5 2020
0000e6 0020
0000e7 5653
0000e8 5241      	.DB  0x20,0x20,0x20,0x0,0x53,0x56,0x41,0x52
0000e9 5542
0000ea 2053
0000eb 5649
0000ec 4b59      	.DB  0x42,0x55,0x53,0x20,0x49,0x56,0x59,0x4B
0000ed 4149
0000ee 3a49
0000ef 5000
0000f0 5245      	.DB  0x49,0x41,0x49,0x3A,0x0,0x50,0x45,0x52
0000f1 495a
0000f2 5255
0000f3 5445
0000f4 3f49      	.DB  0x5A,0x49,0x55,0x52,0x45,0x54,0x49,0x3F
0000f5 2d2d
0000f6 2a3e
0000f7 0020
0000f8 5553      	.DB  0x2D,0x2D,0x3E,0x2A,0x20,0x0,0x53,0x55
0000f9 4556
0000fa 4b49
0000fb 2045
0000fc 3539      	.DB  0x56,0x45,0x49,0x4B,0x45,0x20,0x39,0x35
0000fd 2043
0000fe 0020
0000ff 5441
000100 524b      	.DB  0x43,0x20,0x20,0x0,0x41,0x54,0x4B,0x52
000101 5449
000102 204f
000103 3539
000104 2043      	.DB  0x49,0x54,0x4F,0x20,0x39,0x35,0x43,0x20
000105 0020
000106 4944
000107 474e
000108 204f      	.DB  0x20,0x0,0x44,0x49,0x4E,0x47,0x4F,0x20
000109 5449
00010a 4d41
00010b 4150
00010c 0020      	.DB  0x49,0x54,0x41,0x4D,0x50,0x41,0x20,0x0
00010d 454e
00010e 4152
00010f 4920
000110 5956      	.DB  0x4E,0x45,0x52,0x41,0x20,0x49,0x56,0x59
000111 494b
000112 204f
000113 0020
000114 2043      	.DB  0x4B,0x49,0x4F,0x20,0x20,0x0,0x43,0x20
000115 4153
000116 4c55
000117 002e
000118 2043      	.DB  0x53,0x41,0x55,0x4C,0x2E,0x0,0x43,0x20
000119 4f42
00011a 4c49
00011b 002e
00011c 5254      	.DB  0x42,0x4F,0x49,0x4C,0x2E,0x0,0x54,0x52
00011d 4e49
00011e 4954
00011f 4920
000120 4152      	.DB  0x49,0x4E,0x54,0x49,0x20,0x49,0x52,0x41
000121 5553
000122 3f53
000123 2020
000124 2000      	.DB  0x53,0x55,0x53,0x3F,0x20,0x20,0x0,0x20
000125 7c3c
000126 3e7c
000127 2020
000128 5420      	.DB  0x3C,0x7C,0x7C,0x3E,0x20,0x20,0x20,0x54
000129 4941
00012a 3d50
00012b 2a3e
00012c 4400      	.DB  0x41,0x49,0x50,0x3D,0x3E,0x2A,0x0,0x44
00012d 5441
00012e 3a41
00012f 0020
000130 554e      	.DB  0x41,0x54,0x41,0x3A,0x20,0x0,0x4E,0x55
000131 5453
000132 5441
000133 5459
000134 3f49      	.DB  0x53,0x54,0x41,0x54,0x59,0x54,0x49,0x3F
000135 2d20
000136 3e2d
000137 202a
000138 4c00      	.DB  0x20,0x2D,0x2D,0x3E,0x2A,0x20,0x0,0x4C
000139 4941
00013a 414b
00013b 3a53
00013c 0020      	.DB  0x41,0x49,0x4B,0x41,0x53,0x3A,0x20,0x0
00013d 414d
00013e 5554
00013f 4a4f
000140 3a41      	.DB  0x4D,0x41,0x54,0x55,0x4F,0x4A,0x41,0x3A
000141 4220
000142 494f
000143 454c
000144 2e52      	.DB  0x20,0x42,0x4F,0x49,0x4C,0x45,0x52,0x2E
000145 4d00
000146 5441
000147 4f55
000148 414a      	.DB  0x0,0x4D,0x41,0x54,0x55,0x4F,0x4A,0x41
000149 203a
00014a 2e53
00014b 4549
00014c 494a      	.DB  0x3A,0x20,0x53,0x2E,0x49,0x45,0x4A,0x49
00014d 002e
00014e 414d
00014f 5554
000150 4a4f      	.DB  0x2E,0x0,0x4D,0x41,0x54,0x55,0x4F,0x4A
000151 3a41
000152 5320
000153 492e
000154 4553      	.DB  0x41,0x3A,0x20,0x53,0x2E,0x49,0x53,0x45
000155 2e4a
000156 4d00
000157 5441
000158 4f55      	.DB  0x4A,0x2E,0x0,0x4D,0x41,0x54,0x55,0x4F
000159 414a
00015a 203a
00015b 2d2d
00015c 2d2d      	.DB  0x4A,0x41,0x3A,0x20,0x2D,0x2D,0x2D,0x2D
00015d 2d2d
00015e 0020
00015f 4554
000160 504d      	.DB  0x2D,0x2D,0x20,0x0,0x54,0x45,0x4D,0x50
000161 203a
000162 2020
000163 0020
000164 5441      	.DB  0x3A,0x20,0x20,0x20,0x20,0x0,0x41,0x54
000165 5453
000166 5441
000167 5459
000168 2049      	.DB  0x53,0x54,0x41,0x54,0x59,0x54,0x49,0x20
000169 4956
00016a 4b53
00016b 3f41
00016c 2000      	.DB  0x56,0x49,0x53,0x4B,0x41,0x3F,0x0,0x20
00016d 2020
00016e 2020
00016f 2020
000170 5420      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x54
000171 4941
000172 3d50
000173 2a3e
000174 0020      	.DB  0x41,0x49,0x50,0x3D,0x3E,0x2A,0x20,0x0
000175 2020
000176 4120
000177 5354
000178 4154      	.DB  0x20,0x20,0x20,0x41,0x54,0x53,0x54,0x41
000179 4f54
00017a 414d
00017b 2020
00017c 2020      	.DB  0x54,0x4F,0x4D,0x41,0x20,0x20,0x20,0x20
00017d 2000
00017e 2020
00017f 4150
000180 414c      	.DB  0x0,0x20,0x20,0x20,0x50,0x41,0x4C,0x41
000181 4b55
000182 5449
000183 2045
000184 2020      	.DB  0x55,0x4B,0x49,0x54,0x45,0x20,0x20,0x20
000185 0020
000186 5349
000187 554a
000188 4b4e      	.DB  0x20,0x0,0x49,0x53,0x4A,0x55,0x4E,0x4B
000189 5449
00018a 2045
00018b 5249
00018c 5620      	.DB  0x49,0x54,0x45,0x20,0x49,0x52,0x20,0x56
00018d 4c45
00018e 4920
00018f 554a
000190 4b4e      	.DB  0x45,0x4C,0x20,0x49,0x4A,0x55,0x4E,0x4B
000191 5449
000192 2045
000193 4156
000194 444c      	.DB  0x49,0x54,0x45,0x20,0x56,0x41,0x4C,0x44
000195 4b49
000196 494c
000197 4b00
000198 444f      	.DB  0x49,0x4B,0x4C,0x49,0x0,0x4B,0x4F,0x44
000199 5341
00019a 203a
00019b 2000
00019c 2020      	.DB  0x41,0x53,0x3A,0x20,0x0,0x20,0x20,0x20
00019d 4c20
00019e 4941
00019f 414b
0001a0 2053      	.DB  0x20,0x4C,0x41,0x49,0x4B,0x41,0x53,0x20
0001a1 2020
0001a2 2020
0001a3 0020
0001a4 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x0,0x20,0x20
0001a5 2020
0001a6 4142
0001a7 4749
0001a8 5345      	.DB  0x20,0x20,0x42,0x41,0x49,0x47,0x45,0x53
0001a9 2049
0001aa 2020
0001ab 2020
0001ac 2000      	.DB  0x49,0x20,0x20,0x20,0x20,0x20,0x0,0x20
0001ad 2020
0001ae 2020
0001af 4f4b
0001b0 4144      	.DB  0x20,0x20,0x20,0x20,0x4B,0x4F,0x44,0x41
0001b1 2053
0001b2 2020
0001b3 2020
0001b4 0020      	.DB  0x53,0x20,0x20,0x20,0x20,0x20,0x20,0x0
0001b5 2020
0001b6 5420
0001b7 4945
0001b8 4953      	.DB  0x20,0x20,0x20,0x54,0x45,0x49,0x53,0x49
0001b9 474e
0001ba 5341
0001bb 2020
0001bc 2020      	.DB  0x4E,0x47,0x41,0x53,0x20,0x20,0x20,0x20
0001bd 2000
0001be 4e20
0001bf 5445
0001c0 4945      	.DB  0x0,0x20,0x20,0x4E,0x45,0x54,0x45,0x49
0001c1 4953
0001c2 474e
0001c3 5341
0001c4 2020      	.DB  0x53,0x49,0x4E,0x47,0x41,0x53,0x20,0x20
0001c5 0020      	.DB  0x20,0x0
                 _0x2020003:
D:\TOMOSIUKS\-=CPU=-\saul kol valdikl Jonui v1 -=C=-\List\Valdiklis_v1.asm(1194): warning: .cseg .db misalignment - padding zero byte
0001c6 0001      	.DB  0x1
                 _0x2040107:
0001c7 4146
D:\TOMOSIUKS\-=CPU=-\saul kol valdikl Jonui v1 -=C=-\List\Valdiklis_v1.asm(1196): warning: .cseg .db misalignment - padding zero byte
0001c8 0054      	.DB  0x46,0x41,0x54
                 _0x2060003:
0001c9 c080      	.DB  0x80,0xC0
                 
                 __GLOBAL_INI_TBL:
0001ca 0011      	.DW  0x11
0001cb 0260      	.DW  _0xD3
0001cc 007c      	.DW  _0x0*2+26
                 
0001cd 0011      	.DW  0x11
0001ce 0271      	.DW  _0xD3+17
0001cf 008d      	.DW  _0x0*2+43
                 
0001d0 0001      	.DW  0x01
0001d1 036c      	.DW  _SolarColectorState_S0000010002
0001d2 0060      	.DW  _0xEC*2
                 
0001d3 0001      	.DW  0x01
0001d4 0383      	.DW  _status_G101
0001d5 038c      	.DW  _0x2020003*2
                 
0001d6 0002      	.DW  0x02
0001d7 038d      	.DW  __base_y_G103
0001d8 0392      	.DW  _0x2060003*2
                 
                 _0xFFFFFFFF:
0001d9 0000      	.DW  0
                 
                 __RESET:
0001da 94f8      	CLI
0001db 27ee      	CLR  R30
0001dc bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
0001dd e0f1      	LDI  R31,1
0001de bffb      	OUT  GICR,R31
0001df bfeb      	OUT  GICR,R30
0001e0 bfe5      	OUT  MCUCR,R30
                 
                 ;DISABLE WATCHDOG
0001e1 e1f8      	LDI  R31,0x18
0001e2 bdf1      	OUT  WDTCR,R31
0001e3 bde1      	OUT  WDTCR,R30
                 
                 ;CLEAR R2-R14
0001e4 e08d      	LDI  R24,(14-2)+1
0001e5 e0a2      	LDI  R26,2
0001e6 27bb      	CLR  R27
                 __CLEAR_REG:
0001e7 93ed      	ST   X+,R30
0001e8 958a      	DEC  R24
0001e9 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
0001ea e080      	LDI  R24,LOW(0x800)
0001eb e098      	LDI  R25,HIGH(0x800)
0001ec e6a0      	LDI  R26,0x60
                 __CLEAR_SRAM:
0001ed 93ed      	ST   X+,R30
0001ee 9701      	SBIW R24,1
0001ef f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
0001f0 e9e4      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
0001f1 e0f3      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
0001f2 9185      	LPM  R24,Z+
0001f3 9195      	LPM  R25,Z+
0001f4 9700      	SBIW R24,0
0001f5 f061      	BREQ __GLOBAL_INI_END
0001f6 91a5      	LPM  R26,Z+
0001f7 91b5      	LPM  R27,Z+
0001f8 9005      	LPM  R0,Z+
0001f9 9015      	LPM  R1,Z+
0001fa 01bf      	MOVW R22,R30
0001fb 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
0001fc 9005      	LPM  R0,Z+
0001fd 920d      	ST   X+,R0
0001fe 9701      	SBIW R24,1
0001ff f7e1      	BRNE __GLOBAL_INI_LOOP
000200 01fb      	MOVW R30,R22
000201 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;STACK POINTER INITIALIZATION
000202 e5ef      	LDI  R30,LOW(0x85F)
000203 bfed      	OUT  SPL,R30
000204 e0e8      	LDI  R30,HIGH(0x85F)
000205 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000206 e6c0      	LDI  R28,LOW(0x260)
000207 e0d2      	LDI  R29,HIGH(0x260)
                 
000208 940c 0600 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x260
                 
                 	.CSEG
                 ;/*****************************************************
                 ;Project : Saules kolektoriaus valdiklis
                 ;Version : v1.0
                 ;Date    : 2011-08-20
                 ;Author  : T.V.
                 ;
                 ;Chip type               : ATmega32
                 ;Program type            : Application
                 ;AVR Core Clock frequency: 8.000000 MHz
                 ;*****************************************************/
                 ;#include <mega32.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x80
                 	.EQU __sm_mask=0x70
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0x60
                 	.EQU __sm_ext_standby=0x70
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <delay.h>
                 ;#include <string.h>
                 ;#include <ff.h>
                 ;#include <sdcard.h>
                 ;
                 ;// Alphanumeric LCD Module functions portc
                 ;#include <lcd.h>
                 ;#asm
                    .equ __lcd_port=0x15
                 ; 0000 0015 #endasm
                 ;
                 ;//////// Mygtuku Aprasimas ////////
                 ;// " <||> | +||-||* "
                 ;#define BUTTON_DESCRIPTION1   " <"
                 ;#define BUTTON_DESCRIPTION1_0 "  "
                 ;
                 ;#define BUTTON_DESCRIPTION2   "||"
                 ;#define BUTTON_DESCRIPTION2_0 "  "
                 ;
                 ;#define BUTTON_DESCRIPTION3   ">"
                 ;#define BUTTON_DESCRIPTION3_0 " "
                 ;
                 ;#define BUTTON_DESCRIPTION4   " | "
                 ;#define BUTTON_DESCRIPTION4_0 "   "
                 ;
                 ;#define BUTTON_DESCRIPTION5   "+"
                 ;#define BUTTON_DESCRIPTION5_0 " "
                 ;
                 ;#define BUTTON_DESCRIPTION6   "||"
                 ;#define BUTTON_DESCRIPTION6_0 "  "
                 ;
                 ;#define BUTTON_DESCRIPTION7   "-"
                 ;#define BUTTON_DESCRIPTION7_0 " "
                 ;
                 ;#define BUTTON_DESCRIPTION8   "||"
                 ;#define BUTTON_DESCRIPTION8_0 "  "
                 ;
                 ;#define BUTTON_DESCRIPTION9   "* "
                 ;#define BUTTON_DESCRIPTION9_0 "  "
                 ;///////////////////////////////////
                 ;
                 ;
                 ;// PINS
                 ;#define LCD_LED PORTA.7
                 ;
                 ;#define BUTTON_INPUT1 PIND.6
                 ;#define BUTTON_INPUT2 PIND.5
                 ;#define BUTTON_INPUT3 PIND.4
                 ;#define BUTTON_INPUT4 PIND.3
                 ;#define BUTTON_INPUT5 PIND.2
                 ;
                 ;#define TERMOSWITCH_INPUT PIND.7
                 ;
                 ;#define WATER_PUMP PORTB.0
                 ;#define ANTIFREEZE_PUMP PORTB.1
                 ;
                 ;#define TEMPERATURE_BOIL PORTA.1
                 ;#define TEMPERATURE_S_INP PORTA.2
                 ;#define TEMPERATURE_S_OUT PORTA.3
                 ;
                 ;
                 ;
                 ;
                 ;
                 ;
                 ;
                 ;
                 ;
                 ;
                 ;
                 ;
                 ;#define ButtonFiltrationTimer 20 // x*cycle (cycle~1ms)
                 ;///////////////////////////////////////////////////////////////////////////////////
                 ;////////////////////////// VARIABLES //////////////////////////////////////////////
                 ;// Real Time
                 ;eeprom unsigned int RealTimeYear;
                 ;eeprom signed char RealTimeMonth, RealTimeDay, RealTimeHour, RealTimeMinute;
                 ;eeprom unsigned char RealTimeSecond;
                 ;
                 ;
                 ;// Logs
                 ;#define LOG_COUNT 90
                 ;eeprom unsigned char NewestLog;
                 ;
                 ;eeprom unsigned int  LogYear[LOG_COUNT];
                 ;eeprom unsigned char LogMonth[LOG_COUNT];
                 ;eeprom unsigned char LogDay[LOG_COUNT];
                 ;eeprom unsigned char LogHour[LOG_COUNT];
                 ;eeprom unsigned char LogMinute[LOG_COUNT];
                 ;
                 ;eeprom unsigned char LogType[LOG_COUNT];
                 ;
                 ;eeprom signed int LogData1[LOG_COUNT];
                 ;eeprom signed int LogData2[LOG_COUNT];
                 ;
                 ;// Lcd Address
                 ;signed int Address[3];
                 ;char RefreshLcd;
                 ;
                 ;
                 ;// Solar Colector Parameters
                 ;#define MAX_DIFFERENCE_SOLAR_BOILER 250
                 ;#define DEFAULT_DIFFERENCE_SOLAR_BOILER 100
                 ;#define MIN_DIFFERENCE_SOLAR_BOILER 50
                 ;#define DEFAULT_WATER_FLOW 20
                 ;
                 ;
                 ;
                 ;signed int LAST_SOLAR_INPUT_TEMP, LAST_SOLAR_OUTPUT_TEMP;
                 ;signed int BOILER_TEMP, SOLAR_INPUT_TEMP, SOLAR_OUTPUT_TEMP;
                 ;eeprom signed int LitersPerMinute;
                 ;eeprom unsigned long int SolarColectorWattHours;
                 ;eeprom unsigned long int WattHoursPerDay;
                 ;eeprom signed int MinimumAntifreezeTemp;
                 ;eeprom signed int DifferenceBoilerAndSolar;
                 ;
                 ;
                 ;
                 ;eeprom signed int MaxDayTemperature;
                 ;
                 ;char Acceleration;
                 ;
                 ;char PAGRINDINIS_LANGAS;
                 ;char Call_1Second;
                 ;///////////////////////////////////////////////////////////////////////////////////
                 ;///////////////////////////////////////////////////////////////////////////////////
                 ;#define ADC_VREF_TYPE 0x40
                 ;// Read the AD conversion result
                 ;unsigned int read_adc(unsigned char adc_input){
                 ; 0000 008C unsigned int read_adc(unsigned char adc_input){
                 
                 	.CSEG
                 _read_adc:
                 ; 0000 008D ADMUX=adc_input | (ADC_VREF_TYPE & 0xff);
                 ;	adc_input -> Y+0
00020a 81e8      	LD   R30,Y
00020b 64e0      	ORI  R30,0x40
00020c b9e7      	OUT  0x7,R30
                 ; 0000 008E // Delay needed for the stabilization of the ADC input voltage
                 ; 0000 008F delay_us(10);
                +
00020d e18b     +LDI R24 , LOW ( 27 )
                +__DELAY_USB_LOOP :
00020e 958a     +DEC R24
00020f f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 27
                 ; 0000 0090 // Start the AD conversion
                 ; 0000 0091 ADCSRA|=0x40;
000210 9a36      	SBI  0x6,6
                 ; 0000 0092 // Wait for the AD conversion to complete
                 ; 0000 0093 while ((ADCSRA & 0x10)==0);
                 _0x3:
000211 9b34      	SBIS 0x6,4
000212 cffe      	RJMP _0x3
                 ; 0000 0094 ADCSRA|=0x10;
000213 9a34      	SBI  0x6,4
                 ; 0000 0095 return ADCW;
000214 b1e4      	IN   R30,0x4
000215 b1f5      	IN   R31,0x4+1
000216 c06b      	RJMP _0x2080007
                 ; 0000 0096 }
                 ;///////////////////////////////////////////////////////////////////////////////////
                 ;////////////////////////////// FUNCTIONS //////////////////////////////////////////
                 ;signed int GetTemperature(void){
                 ; 0000 0099 signed int GetTemperature(void){
                 _GetTemperature:
                 ; 0000 009A signed int input = read_adc(0);
                 ; 0000 009B signed int Temperature;// -20.7C ~ 179.3C
                 ; 0000 009C 
                 ; 0000 009D input = input - 166;
000217 940e 208a 	CALL __SAVELOCR4
                 ;	input -> R16,R17
                 ;	Temperature -> R18,R19
000219 e0e0      	LDI  R30,LOW(0)
00021a 93ea      	ST   -Y,R30
00021b dfee      	RCALL _read_adc
00021c 018f      	MOVW R16,R30
                +
00021d 5a06     +SUBI R16 , LOW ( 166 )
00021e 4010     +SBCI R17 , HIGH ( 166 )
                 	__SUBWRN 16,17,166
                 ; 0000 009E Temperature = input*2 - 207;
00021f 01f8      	MOVW R30,R16
000220 0fee      	LSL  R30
000221 1fff      	ROL  R31
000222 5cef      	SUBI R30,LOW(207)
000223 40f0      	SBCI R31,HIGH(207)
000224 019f      	MOVW R18,R30
                 ; 0000 009F Temperature = Temperature + input/3;
000225 01d8      	MOVW R26,R16
000226 e0e3      	LDI  R30,LOW(3)
000227 e0f0      	LDI  R31,HIGH(3)
000228 940e 1ffa 	CALL __DIVW21
                +
00022a 0f2e     +ADD R18 , R30
00022b 1f3f     +ADC R19 , R31
                 	__ADDWRR 18,19,30,31
                 ; 0000 00A0 
                 ; 0000 00A1 return Temperature;
00022c 01f9      	MOVW R30,R18
00022d 940e 2091 	CALL __LOADLOCR4
00022f 9624      	ADIW R28,4
000230 9508      	RET
                 ; 0000 00A2 }
                 ;
                 ;char NumToIndex(char Num){
                 ; 0000 00A4 char NumToIndex(char Num){
                 _NumToIndex:
                 ; 0000 00A5     if(Num==0){     return '0';}
                 ;	Num -> Y+0
000231 81e8      	LD   R30,Y
000232 30e0      	CPI  R30,0
000233 f411      	BRNE _0x6
000234 e3e0      	LDI  R30,LOW(48)
000235 c04c      	RJMP _0x2080007
                 ; 0000 00A6     else if(Num==1){return '1';}
                 _0x6:
000236 81a8      	LD   R26,Y
000237 30a1      	CPI  R26,LOW(0x1)
000238 f411      	BRNE _0x8
000239 e3e1      	LDI  R30,LOW(49)
00023a c047      	RJMP _0x2080007
                 ; 0000 00A7     else if(Num==2){return '2';}
                 _0x8:
00023b 81a8      	LD   R26,Y
00023c 30a2      	CPI  R26,LOW(0x2)
00023d f411      	BRNE _0xA
00023e e3e2      	LDI  R30,LOW(50)
00023f c042      	RJMP _0x2080007
                 ; 0000 00A8     else if(Num==3){return '3';}
                 _0xA:
000240 81a8      	LD   R26,Y
000241 30a3      	CPI  R26,LOW(0x3)
000242 f411      	BRNE _0xC
000243 e3e3      	LDI  R30,LOW(51)
000244 c03d      	RJMP _0x2080007
                 ; 0000 00A9     else if(Num==4){return '4';}
                 _0xC:
000245 81a8      	LD   R26,Y
000246 30a4      	CPI  R26,LOW(0x4)
000247 f411      	BRNE _0xE
000248 e3e4      	LDI  R30,LOW(52)
000249 c038      	RJMP _0x2080007
                 ; 0000 00AA     else if(Num==5){return '5';}
                 _0xE:
00024a 81a8      	LD   R26,Y
00024b 30a5      	CPI  R26,LOW(0x5)
00024c f411      	BRNE _0x10
00024d e3e5      	LDI  R30,LOW(53)
00024e c033      	RJMP _0x2080007
                 ; 0000 00AB     else if(Num==6){return '6';}
                 _0x10:
00024f 81a8      	LD   R26,Y
000250 30a6      	CPI  R26,LOW(0x6)
000251 f411      	BRNE _0x12
000252 e3e6      	LDI  R30,LOW(54)
000253 c02e      	RJMP _0x2080007
                 ; 0000 00AC     else if(Num==7){return '7';}
                 _0x12:
000254 81a8      	LD   R26,Y
000255 30a7      	CPI  R26,LOW(0x7)
000256 f411      	BRNE _0x14
000257 e3e7      	LDI  R30,LOW(55)
000258 c029      	RJMP _0x2080007
                 ; 0000 00AD     else if(Num==8){return '8';}
                 _0x14:
000259 81a8      	LD   R26,Y
00025a 30a8      	CPI  R26,LOW(0x8)
00025b f411      	BRNE _0x16
00025c e3e8      	LDI  R30,LOW(56)
00025d c024      	RJMP _0x2080007
                 ; 0000 00AE     else if(Num==9){return '9';}
                 _0x16:
00025e 81a8      	LD   R26,Y
00025f 30a9      	CPI  R26,LOW(0x9)
000260 f411      	BRNE _0x18
000261 e3e9      	LDI  R30,LOW(57)
000262 c01f      	RJMP _0x2080007
                 ; 0000 00AF     else if(Num==10){return 'a';}
                 _0x18:
000263 81a8      	LD   R26,Y
000264 30aa      	CPI  R26,LOW(0xA)
000265 f411      	BRNE _0x1A
000266 e6e1      	LDI  R30,LOW(97)
000267 c01a      	RJMP _0x2080007
                 ; 0000 00B0     else if(Num==11){return 'b';}
                 _0x1A:
000268 81a8      	LD   R26,Y
000269 30ab      	CPI  R26,LOW(0xB)
00026a f411      	BRNE _0x1C
00026b e6e2      	LDI  R30,LOW(98)
00026c c015      	RJMP _0x2080007
                 ; 0000 00B1     else if(Num==12){return 'c';}
                 _0x1C:
00026d 81a8      	LD   R26,Y
00026e 30ac      	CPI  R26,LOW(0xC)
00026f f411      	BRNE _0x1E
000270 e6e3      	LDI  R30,LOW(99)
000271 c010      	RJMP _0x2080007
                 ; 0000 00B2     else if(Num==13){return 'd';}
                 _0x1E:
000272 81a8      	LD   R26,Y
000273 30ad      	CPI  R26,LOW(0xD)
000274 f411      	BRNE _0x20
000275 e6e4      	LDI  R30,LOW(100)
000276 c00b      	RJMP _0x2080007
                 ; 0000 00B3     else if(Num==14){return 'e';}
                 _0x20:
000277 81a8      	LD   R26,Y
000278 30ae      	CPI  R26,LOW(0xE)
000279 f411      	BRNE _0x22
00027a e6e5      	LDI  R30,LOW(101)
00027b c006      	RJMP _0x2080007
                 ; 0000 00B4     else if(Num==15){return 'f';}
                 _0x22:
00027c 81a8      	LD   R26,Y
00027d 30af      	CPI  R26,LOW(0xF)
00027e f411      	BRNE _0x24
00027f e6e6      	LDI  R30,LOW(102)
000280 c001      	RJMP _0x2080007
                 ; 0000 00B5     else{           return '-';}
                 _0x24:
000281 e2ed      	LDI  R30,LOW(45)
                 ; 0000 00B6 return 0;
                 _0x2080007:
000282 9621      	ADIW R28,1
000283 9508      	RET
                 ; 0000 00B7 }
                 ;
                 ;char IndexToNum(char Index){
                 ; 0000 00B9 char IndexToNum(char Index){
                 ; 0000 00BA     if(Index=='0'){     return 0;}
                 ;	Index -> Y+0
                 ; 0000 00BB     else if(Index=='1'){return 1;}
                 ; 0000 00BC     else if(Index=='2'){return 2;}
                 ; 0000 00BD     else if(Index=='3'){return 3;}
                 ; 0000 00BE     else if(Index=='4'){return 4;}
                 ; 0000 00BF     else if(Index=='5'){return 5;}
                 ; 0000 00C0     else if(Index=='6'){return 6;}
                 ; 0000 00C1     else if(Index=='7'){return 7;}
                 ; 0000 00C2     else if(Index=='8'){return 8;}
                 ; 0000 00C3     else if(Index=='9'){return 9;}
                 ; 0000 00C4     else if(Index=='a'){return 10;}
                 ; 0000 00C5     else if(Index=='b'){return 11;}
                 ; 0000 00C6     else if(Index=='c'){return 12;}
                 ; 0000 00C7     else if(Index=='d'){return 13;}
                 ; 0000 00C8     else if(Index=='e'){return 14;}
                 ; 0000 00C9     else if(Index=='f'){return 15;}
                 ; 0000 00CA     else{               return 16;}
                 ; 0000 00CB return 0;
                 ; 0000 00CC }
                 ;
                 ;char DayCountInMonth(unsigned int year, char month){
                 ; 0000 00CE char DayCountInMonth(unsigned int year, char month){
                 _DayCountInMonth:
                 ; 0000 00CF     if((month==1)||(month==3)||(month==5)||(month==7)||(month==8)||(month==10)||(month==12)){
                 ;	year -> Y+1
                 ;	month -> Y+0
000284 81a8      	LD   R26,Y
000285 30a1      	CPI  R26,LOW(0x1)
000286 f061      	BREQ _0x47
000287 30a3      	CPI  R26,LOW(0x3)
000288 f051      	BREQ _0x47
000289 30a5      	CPI  R26,LOW(0x5)
00028a f041      	BREQ _0x47
00028b 30a7      	CPI  R26,LOW(0x7)
00028c f031      	BREQ _0x47
00028d 30a8      	CPI  R26,LOW(0x8)
00028e f021      	BREQ _0x47
00028f 30aa      	CPI  R26,LOW(0xA)
000290 f011      	BREQ _0x47
000291 30ac      	CPI  R26,LOW(0xC)
000292 f411      	BRNE _0x46
                 _0x47:
                 ; 0000 00D0     return 31;
000293 e1ef      	LDI  R30,LOW(31)
000294 c02a      	RJMP _0x2080006
                 ; 0000 00D1     }
                 ; 0000 00D2     else if((month==4)||(month==6)||(month==9)||(month==11)){
                 _0x46:
000295 81a8      	LD   R26,Y
000296 30a4      	CPI  R26,LOW(0x4)
000297 f031      	BREQ _0x4B
000298 30a6      	CPI  R26,LOW(0x6)
000299 f021      	BREQ _0x4B
00029a 30a9      	CPI  R26,LOW(0x9)
00029b f011      	BREQ _0x4B
00029c 30ab      	CPI  R26,LOW(0xB)
00029d f411      	BRNE _0x4A
                 _0x4B:
                 ; 0000 00D3     return 30;
00029e e1ee      	LDI  R30,LOW(30)
00029f c01f      	RJMP _0x2080006
                 ; 0000 00D4     }
                 ; 0000 00D5     else if(month==2){
                 _0x4A:
0002a0 81a8      	LD   R26,Y
0002a1 30a2      	CPI  R26,LOW(0x2)
0002a2 f4d9      	BRNE _0x4E
                 ; 0000 00D6     unsigned int a;
                 ; 0000 00D7     a = year/4;
0002a3 9722      	SBIW R28,2
                 ;	year -> Y+3
                 ;	month -> Y+2
                 ;	a -> Y+0
0002a4 81eb      	LDD  R30,Y+3
0002a5 81fc      	LDD  R31,Y+3+1
0002a6 940e 1fa0 	CALL __LSRW2
0002a8 83e8      	ST   Y,R30
0002a9 83f9      	STD  Y+1,R31
                 ; 0000 00D8     a = a*4;
0002aa 81a8      	LD   R26,Y
0002ab 81b9      	LDD  R27,Y+1
0002ac e0e4      	LDI  R30,LOW(4)
0002ad 940e 1fd7 	CALL __MULB1W2U
0002af 83e8      	ST   Y,R30
0002b0 83f9      	STD  Y+1,R31
                 ; 0000 00D9         if(a==year){
0002b1 81eb      	LDD  R30,Y+3
0002b2 81fc      	LDD  R31,Y+3+1
0002b3 81a8      	LD   R26,Y
0002b4 81b9      	LDD  R27,Y+1
0002b5 17ea      	CP   R30,R26
0002b6 07fb      	CPC  R31,R27
0002b7 f419      	BRNE _0x4F
                 ; 0000 00DA         return 29;
0002b8 e1ed      	LDI  R30,LOW(29)
0002b9 9622      	ADIW R28,2
0002ba c004      	RJMP _0x2080006
                 ; 0000 00DB         }
                 ; 0000 00DC         else{
                 _0x4F:
                 ; 0000 00DD         return 28;
0002bb e1ec      	LDI  R30,LOW(28)
0002bc 9622      	ADIW R28,2
0002bd c001      	RJMP _0x2080006
                 ; 0000 00DE         }
                 ; 0000 00DF     }
                 ; 0000 00E0     else{
                 _0x4E:
                 ; 0000 00E1     return 0;
0002be e0e0      	LDI  R30,LOW(0)
                 ; 0000 00E2     }
                 ; 0000 00E3 }
                 _0x2080006:
0002bf 9623      	ADIW R28,3
0002c0 9508      	RET
                 ;
                 ;void MakeValidRealTimeDate(){
                 ; 0000 00E5 void MakeValidRealTimeDate(){
                 _MakeValidRealTimeDate:
                 ; 0000 00E6     if(RealTimeYear<2011){
0002c1 e0a0      	LDI  R26,LOW(_RealTimeYear)
0002c2 e0b0      	LDI  R27,HIGH(_RealTimeYear)
0002c3 940e 204e 	CALL __EEPROMRDW
0002c5 3deb      	CPI  R30,LOW(0x7DB)
0002c6 e0a7      	LDI  R26,HIGH(0x7DB)
0002c7 07fa      	CPC  R31,R26
0002c8 f040      	BRLO _0x323
                 ; 0000 00E7     RealTimeYear = 2011;
                 ; 0000 00E8     }
                 ; 0000 00E9     else if(RealTimeYear>9999){
0002c9 e0a0      	LDI  R26,LOW(_RealTimeYear)
0002ca e0b0      	LDI  R27,HIGH(_RealTimeYear)
0002cb 940e 204e 	CALL __EEPROMRDW
0002cd 31e0      	CPI  R30,LOW(0x2710)
0002ce e2a7      	LDI  R26,HIGH(0x2710)
0002cf 07fa      	CPC  R31,R26
0002d0 f030      	BRLO _0x54
                 ; 0000 00EA     RealTimeYear = 2011;
                 _0x323:
0002d1 e0a0      	LDI  R26,LOW(_RealTimeYear)
0002d2 e0b0      	LDI  R27,HIGH(_RealTimeYear)
0002d3 edeb      	LDI  R30,LOW(2011)
0002d4 e0f7      	LDI  R31,HIGH(2011)
0002d5 940e 2066 	CALL __EEPROMWRW
                 ; 0000 00EB     }
                 ; 0000 00EC 
                 ; 0000 00ED     if(RealTimeMonth>12){
                 _0x54:
0002d7 e0a2      	LDI  R26,LOW(_RealTimeMonth)
0002d8 e0b0      	LDI  R27,HIGH(_RealTimeMonth)
0002d9 940e 2052 	CALL __EEPROMRDB
0002db 30ed      	CPI  R30,LOW(0xD)
0002dc f024      	BRLT _0x55
                 ; 0000 00EE     RealTimeMonth = 12;
0002dd e0a2      	LDI  R26,LOW(_RealTimeMonth)
0002de e0b0      	LDI  R27,HIGH(_RealTimeMonth)
0002df e0ec      	LDI  R30,LOW(12)
0002e0 c009      	RJMP _0x324
                 ; 0000 00EF     }
                 ; 0000 00F0     else if(RealTimeMonth<1){
                 _0x55:
0002e1 e0a2      	LDI  R26,LOW(_RealTimeMonth)
0002e2 e0b0      	LDI  R27,HIGH(_RealTimeMonth)
0002e3 940e 2052 	CALL __EEPROMRDB
0002e5 30e1      	CPI  R30,LOW(0x1)
0002e6 f42c      	BRGE _0x57
                 ; 0000 00F1     RealTimeMonth = 1;
0002e7 e0a2      	LDI  R26,LOW(_RealTimeMonth)
0002e8 e0b0      	LDI  R27,HIGH(_RealTimeMonth)
0002e9 e0e1      	LDI  R30,LOW(1)
                 _0x324:
0002ea 940e 206e 	CALL __EEPROMWRB
                 ; 0000 00F2     }
                 ; 0000 00F3 
                 ; 0000 00F4     if(RealTimeDay>DayCountInMonth(RealTimeYear, RealTimeMonth)){
                 _0x57:
0002ec e0a3      	LDI  R26,LOW(_RealTimeDay)
0002ed e0b0      	LDI  R27,HIGH(_RealTimeDay)
0002ee 940e 2052 	CALL __EEPROMRDB
0002f0 93ef      	PUSH R30
0002f1 e0a0      	LDI  R26,LOW(_RealTimeYear)
0002f2 e0b0      	LDI  R27,HIGH(_RealTimeYear)
0002f3 940e 204e 	CALL __EEPROMRDW
0002f5 93fa      	ST   -Y,R31
0002f6 93ea      	ST   -Y,R30
0002f7 e0a2      	LDI  R26,LOW(_RealTimeMonth)
0002f8 e0b0      	LDI  R27,HIGH(_RealTimeMonth)
0002f9 940e 2052 	CALL __EEPROMRDB
0002fb 93ea      	ST   -Y,R30
0002fc df87      	RCALL _DayCountInMonth
0002fd 91af      	POP  R26
0002fe e0b0      	LDI  R27,0
0002ff fda7      	SBRC R26,7
000300 efbf      	SER  R27
000301 e0f0      	LDI  R31,0
000302 17ea      	CP   R30,R26
000303 07fb      	CPC  R31,R27
000304 f47c      	BRGE _0x58
                 ; 0000 00F5     RealTimeDay = DayCountInMonth(RealTimeYear, RealTimeMonth);
000305 e0a0      	LDI  R26,LOW(_RealTimeYear)
000306 e0b0      	LDI  R27,HIGH(_RealTimeYear)
000307 940e 204e 	CALL __EEPROMRDW
000309 93fa      	ST   -Y,R31
00030a 93ea      	ST   -Y,R30
00030b e0a2      	LDI  R26,LOW(_RealTimeMonth)
00030c e0b0      	LDI  R27,HIGH(_RealTimeMonth)
00030d 940e 2052 	CALL __EEPROMRDB
00030f 93ea      	ST   -Y,R30
000310 df73      	RCALL _DayCountInMonth
000311 e0a3      	LDI  R26,LOW(_RealTimeDay)
000312 e0b0      	LDI  R27,HIGH(_RealTimeDay)
000313 c009      	RJMP _0x325
                 ; 0000 00F6     }
                 ; 0000 00F7     else if(RealTimeDay<1){
                 _0x58:
000314 e0a3      	LDI  R26,LOW(_RealTimeDay)
000315 e0b0      	LDI  R27,HIGH(_RealTimeDay)
000316 940e 2052 	CALL __EEPROMRDB
000318 30e1      	CPI  R30,LOW(0x1)
000319 f42c      	BRGE _0x5A
                 ; 0000 00F8     RealTimeDay = 1;
00031a e0a3      	LDI  R26,LOW(_RealTimeDay)
00031b e0b0      	LDI  R27,HIGH(_RealTimeDay)
00031c e0e1      	LDI  R30,LOW(1)
                 _0x325:
00031d 940e 206e 	CALL __EEPROMWRB
                 ; 0000 00F9     }
                 ; 0000 00FA }
                 _0x5A:
00031f 9508      	RET
                 ;
                 ;unsigned int WhatIsTheCode(){
                 ; 0000 00FC unsigned int WhatIsTheCode(){
                 _WhatIsTheCode:
                 ; 0000 00FD return (RealTimeYear-2000)*RealTimeMonth*RealTimeDay;
000320 e0a0      	LDI  R26,LOW(_RealTimeYear)
000321 e0b0      	LDI  R27,HIGH(_RealTimeYear)
000322 940e 204e 	CALL __EEPROMRDW
000324 5de0      	SUBI R30,LOW(2000)
000325 40f7      	SBCI R31,HIGH(2000)
000326 010f      	MOVW R0,R30
000327 e0a2      	LDI  R26,LOW(_RealTimeMonth)
000328 e0b0      	LDI  R27,HIGH(_RealTimeMonth)
000329 940e 2052 	CALL __EEPROMRDB
00032b e0f0      	LDI  R31,0
00032c fde7      	SBRC R30,7
00032d efff      	SER  R31
00032e 01d0      	MOVW R26,R0
00032f 940e 1faf 	CALL __MULW12U
000331 010f      	MOVW R0,R30
000332 e0a3      	LDI  R26,LOW(_RealTimeDay)
000333 e0b0      	LDI  R27,HIGH(_RealTimeDay)
000334 940e 2052 	CALL __EEPROMRDB
000336 e0f0      	LDI  R31,0
000337 fde7      	SBRC R30,7
000338 efff      	SER  R31
000339 01d0      	MOVW R26,R0
00033a 940e 1faf 	CALL __MULW12U
00033c 9508      	RET
                 ; 0000 00FE }
                 ;
                 ;char GetOldestLogID(void){
                 ; 0000 0100 char GetOldestLogID(void){
                 _GetOldestLogID:
                 ; 0000 0101     if(NewestLog==0){
00033d e0a7      	LDI  R26,LOW(_NewestLog)
00033e e0b0      	LDI  R27,HIGH(_NewestLog)
00033f 940e 2052 	CALL __EEPROMRDB
000341 30e0      	CPI  R30,0
000342 f411      	BRNE _0x5B
                 ; 0000 0102     return LOG_COUNT-1;
000343 e5e9      	LDI  R30,LOW(89)
000344 9508      	RET
                 ; 0000 0103     }
                 ; 0000 0104 return NewestLog-1;
                 _0x5B:
000345 e0a7      	LDI  R26,LOW(_NewestLog)
000346 e0b0      	LDI  R27,HIGH(_NewestLog)
000347 940e 2052 	CALL __EEPROMRDB
000349 e0f0      	LDI  R31,0
00034a 9731      	SBIW R30,1
00034b 9508      	RET
                 ; 0000 0105 }
                 ;
                 ;char lcd_put_number(char Type, char Lenght, char IsSign,
                 ; 0000 0108 
                 ; 0000 0109                     char NumbersAfterDot,
                 ; 0000 010A 
                 ; 0000 010B                     unsigned long int Number0,
                 ; 0000 010C                     signed long int Number1){
                 _lcd_put_number:
                 ; 0000 010D     if(Lenght>0){
                 ;	Type -> Y+11
                 ;	Lenght -> Y+10
                 ;	IsSign -> Y+9
                 ;	NumbersAfterDot -> Y+8
                 ;	Number0 -> Y+4
                 ;	Number1 -> Y+0
00034c 85aa      	LDD  R26,Y+10
00034d 30a1      	CPI  R26,LOW(0x1)
00034e f410      	BRSH PC+3
00034f 940c 04a6 	JMP _0x5C
                 ; 0000 010E     unsigned long int k = 1;
                 ; 0000 010F     unsigned char i;
                 ; 0000 0110         for(i=0;i<Lenght-1;i++) k = k*10;
000351 9725      	SBIW R28,5
000352 e0e1      	LDI  R30,LOW(1)
000353 83e9      	STD  Y+1,R30
000354 e0e0      	LDI  R30,LOW(0)
000355 83ea      	STD  Y+2,R30
000356 83eb      	STD  Y+3,R30
000357 83ec      	STD  Y+4,R30
                 ;	Type -> Y+16
                 ;	Lenght -> Y+15
                 ;	IsSign -> Y+14
                 ;	NumbersAfterDot -> Y+13
                 ;	Number0 -> Y+9
                 ;	Number1 -> Y+5
                 ;	k -> Y+1
                 ;	i -> Y+0
000358 83e8      	ST   Y,R30
                 _0x5E:
000359 85ef      	LDD  R30,Y+15
00035a e0f0      	LDI  R31,0
00035b 9731      	SBIW R30,1
00035c 81a8      	LD   R26,Y
00035d e0b0      	LDI  R27,0
00035e 17ae      	CP   R26,R30
00035f 07bf      	CPC  R27,R31
000360 f494      	BRGE _0x5F
                +
000361 81e9     +LDD R30 , Y + 1
000362 81fa     +LDD R31 , Y + 1 + 1
000363 816b     +LDD R22 , Y + 1 + 2
000364 817c     +LDD R23 , Y + 1 + 3
                 	__GETD1S 1
                +
000365 e0aa     +LDI R26 , LOW ( 0xA )
000366 e0b0     +LDI R27 , HIGH ( 0xA )
000367 e080     +LDI R24 , BYTE3 ( 0xA )
000368 e090     +LDI R25 , BYTE4 ( 0xA )
                 	__GETD2N 0xA
000369 940e 1fb7 	CALL __MULD12U
                +
00036b 83e9     +STD Y + 1 , R30
00036c 83fa     +STD Y + 1 + 1 , R31
00036d 836b     +STD Y + 1 + 2 , R22
00036e 837c     +STD Y + 1 + 3 , R23
                 	__PUTD1S 1
00036f 81e8      	LD   R30,Y
000370 5fef      	SUBI R30,-LOW(1)
000371 83e8      	ST   Y,R30
000372 cfe6      	RJMP _0x5E
                 _0x5F:
                 ; 0000 0112 if(Type==0){
000373 89e8      	LDD  R30,Y+16
000374 30e0      	CPI  R30,0
000375 f011      	BREQ PC+3
000376 940c 0403 	JMP _0x60
                 ; 0000 0113         unsigned long int a;
                 ; 0000 0114         unsigned char b;
                 ; 0000 0115         a = Number0;
000378 9725      	SBIW R28,5
                 ;	Type -> Y+21
                 ;	Lenght -> Y+20
                 ;	IsSign -> Y+19
                 ;	NumbersAfterDot -> Y+18
                 ;	Number0 -> Y+14
                 ;	Number1 -> Y+10
                 ;	k -> Y+6
                 ;	i -> Y+5
                 ;	a -> Y+1
                 ;	b -> Y+0
                +
000379 85ee     +LDD R30 , Y + 14
00037a 85ff     +LDD R31 , Y + 14 + 1
00037b 8968     +LDD R22 , Y + 14 + 2
00037c 8979     +LDD R23 , Y + 14 + 3
                 	__GETD1S 14
                +
00037d 83e9     +STD Y + 1 , R30
00037e 83fa     +STD Y + 1 + 1 , R31
00037f 836b     +STD Y + 1 + 2 , R22
000380 837c     +STD Y + 1 + 3 , R23
                 	__PUTD1S 1
                 ; 0000 0116 
                 ; 0000 0117             if(IsSign==1){
000381 89ab      	LDD  R26,Y+19
000382 30a1      	CPI  R26,LOW(0x1)
000383 f421      	BRNE _0x61
                 ; 0000 0118             lcd_putchar('+');
000384 e2eb      	LDI  R30,LOW(43)
000385 93ea      	ST   -Y,R30
000386 940e 1ee8 	CALL _lcd_putchar
                 ; 0000 0119             }
                 ; 0000 011A 
                 ; 0000 011B             if(a<0){
                 _0x61:
                +
000388 81a9     +LDD R26 , Y + 1
000389 81ba     +LDD R27 , Y + 1 + 1
00038a 818b     +LDD R24 , Y + 1 + 2
00038b 819c     +LDD R25 , Y + 1 + 3
                 	__GETD2S 1
                 ; 0000 011C             a = a*(-1);
                 ; 0000 011D             }
                 ; 0000 011E 
                 ; 0000 011F             if(k*10<a){
                +
00038c 81ee     +LDD R30 , Y + 6
00038d 81ff     +LDD R31 , Y + 6 + 1
00038e 8568     +LDD R22 , Y + 6 + 2
00038f 8579     +LDD R23 , Y + 6 + 3
                 	__GETD1S 6
                +
000390 e0aa     +LDI R26 , LOW ( 0xA )
000391 e0b0     +LDI R27 , HIGH ( 0xA )
000392 e080     +LDI R24 , BYTE3 ( 0xA )
000393 e090     +LDI R25 , BYTE4 ( 0xA )
                 	__GETD2N 0xA
000394 940e 1fb7 	CALL __MULD12U
000396 01df      	MOVW R26,R30
000397 01cb      	MOVW R24,R22
                +
000398 81e9     +LDD R30 , Y + 1
000399 81fa     +LDD R31 , Y + 1 + 1
00039a 816b     +LDD R22 , Y + 1 + 2
00039b 817c     +LDD R23 , Y + 1 + 3
                 	__GETD1S 1
00039c 940e 2083 	CALL __CPD21
00039e f490      	BRSH _0x63
                 ; 0000 0120             a = k*10 - 1;
                +
00039f 81ee     +LDD R30 , Y + 6
0003a0 81ff     +LDD R31 , Y + 6 + 1
0003a1 8568     +LDD R22 , Y + 6 + 2
0003a2 8579     +LDD R23 , Y + 6 + 3
                 	__GETD1S 6
                +
0003a3 e0aa     +LDI R26 , LOW ( 0xA )
0003a4 e0b0     +LDI R27 , HIGH ( 0xA )
0003a5 e080     +LDI R24 , BYTE3 ( 0xA )
0003a6 e090     +LDI R25 , BYTE4 ( 0xA )
                 	__GETD2N 0xA
0003a7 940e 1fb7 	CALL __MULD12U
                +
0003a9 50e1     +SUBI R30 , LOW ( 1 )
0003aa 40f0     +SBCI R31 , HIGH ( 1 )
0003ab 4060     +SBCI R22 , BYTE3 ( 1 )
0003ac 4070     +SBCI R23 , BYTE4 ( 1 )
                 	__SUBD1N 1
                +
0003ad 83e9     +STD Y + 1 , R30
0003ae 83fa     +STD Y + 1 + 1 , R31
0003af 836b     +STD Y + 1 + 2 , R22
0003b0 837c     +STD Y + 1 + 3 , R23
                 	__PUTD1S 1
                 ; 0000 0121             }
                 ; 0000 0122 
                 ; 0000 0123             for(i=0;i<Lenght;i++){
                 _0x63:
0003b1 e0e0      	LDI  R30,LOW(0)
0003b2 83ed      	STD  Y+5,R30
                 _0x65:
0003b3 89ec      	LDD  R30,Y+20
0003b4 81ad      	LDD  R26,Y+5
0003b5 17ae      	CP   R26,R30
0003b6 f010      	BRLO PC+3
0003b7 940c 0400 	JMP _0x66
                 ; 0000 0124                 if(NumbersAfterDot!=0){
0003b9 89ea      	LDD  R30,Y+18
0003ba 30e0      	CPI  R30,0
0003bb f071      	BREQ _0x67
                 ; 0000 0125                     if(Lenght-NumbersAfterDot==i){
0003bc 89ac      	LDD  R26,Y+20
0003bd 27bb      	CLR  R27
0003be e0f0      	LDI  R31,0
0003bf 1bae      	SUB  R26,R30
0003c0 0bbf      	SBC  R27,R31
0003c1 81ed      	LDD  R30,Y+5
0003c2 e0f0      	LDI  R31,0
0003c3 17ea      	CP   R30,R26
0003c4 07fb      	CPC  R31,R27
0003c5 f421      	BRNE _0x68
                 ; 0000 0126                     lcd_putchar('.');
0003c6 e2ee      	LDI  R30,LOW(46)
0003c7 93ea      	ST   -Y,R30
0003c8 940e 1ee8 	CALL _lcd_putchar
                 ; 0000 0127                     }
                 ; 0000 0128                 }
                 _0x68:
                 ; 0000 0129             b = a/k;
                 _0x67:
                +
0003ca 81ee     +LDD R30 , Y + 6
0003cb 81ff     +LDD R31 , Y + 6 + 1
0003cc 8568     +LDD R22 , Y + 6 + 2
0003cd 8579     +LDD R23 , Y + 6 + 3
                 	__GETD1S 6
                +
0003ce 81a9     +LDD R26 , Y + 1
0003cf 81ba     +LDD R27 , Y + 1 + 1
0003d0 818b     +LDD R24 , Y + 1 + 2
0003d1 819c     +LDD R25 , Y + 1 + 3
                 	__GETD2S 1
0003d2 940e 1fff 	CALL __DIVD21U
0003d4 83e8      	ST   Y,R30
                 ; 0000 012A             lcd_putchar( NumToIndex( b ) );
0003d5 93ea      	ST   -Y,R30
0003d6 de5a      	RCALL _NumToIndex
0003d7 93ea      	ST   -Y,R30
0003d8 940e 1ee8 	CALL _lcd_putchar
                 ; 0000 012B             a = a - b*k;
0003da 81a8      	LD   R26,Y
0003db 27bb      	CLR  R27
                +
0003dc 81ee     +LDD R30 , Y + 6
0003dd 81ff     +LDD R31 , Y + 6 + 1
0003de 8568     +LDD R22 , Y + 6 + 2
0003df 8579     +LDD R23 , Y + 6 + 3
                 	__GETD1S 6
0003e0 940e 1faa 	CALL __CWD2
0003e2 940e 1fb7 	CALL __MULD12U
                +
0003e4 81a9     +LDD R26 , Y + 1
0003e5 81ba     +LDD R27 , Y + 1 + 1
0003e6 818b     +LDD R24 , Y + 1 + 2
0003e7 819c     +LDD R25 , Y + 1 + 3
                 	__GETD2S 1
0003e8 940e 1f8f 	CALL __SUBD21
                +
0003ea 83a9     +STD Y + 1 , R26
0003eb 83ba     +STD Y + 1 + 1 , R27
0003ec 838b     +STD Y + 1 + 2 , R24
0003ed 839c     +STD Y + 1 + 3 , R25
                 	__PUTD2S 1
                 ; 0000 012C             k = k/10;
                +
0003ee 81ae     +LDD R26 , Y + 6
0003ef 81bf     +LDD R27 , Y + 6 + 1
0003f0 8588     +LDD R24 , Y + 6 + 2
0003f1 8599     +LDD R25 , Y + 6 + 3
                 	__GETD2S 6
                +
0003f2 e0ea     +LDI R30 , LOW ( 0xA )
0003f3 e0f0     +LDI R31 , HIGH ( 0xA )
0003f4 e060     +LDI R22 , BYTE3 ( 0xA )
0003f5 e070     +LDI R23 , BYTE4 ( 0xA )
                 	__GETD1N 0xA
0003f6 940e 1fff 	CALL __DIVD21U
                +
0003f8 83ee     +STD Y + 6 , R30
0003f9 83ff     +STD Y + 6 + 1 , R31
0003fa 8768     +STD Y + 6 + 2 , R22
0003fb 8779     +STD Y + 6 + 3 , R23
                 	__PUTD1S 6
                 ; 0000 012D             }
0003fc 81ed      	LDD  R30,Y+5
0003fd 5fef      	SUBI R30,-LOW(1)
0003fe 83ed      	STD  Y+5,R30
0003ff cfb3      	RJMP _0x65
                 _0x66:
                 ; 0000 012E         return 1;
000400 e0e1      	LDI  R30,LOW(1)
000401 962a      	ADIW R28,10
000402 c0a4      	RJMP _0x2080005
                 ; 0000 012F         }
                 ; 0000 0130 
                 ; 0000 0131         else if(Type==1){
                 _0x60:
000403 89a8      	LDD  R26,Y+16
000404 30a1      	CPI  R26,LOW(0x1)
000405 f011      	BREQ PC+3
000406 940c 04a5 	JMP _0x6A
                 ; 0000 0132         signed long int a;
                 ; 0000 0133         unsigned char b;
                 ; 0000 0134         a = Number1;
000408 9725      	SBIW R28,5
                 ;	Type -> Y+21
                 ;	Lenght -> Y+20
                 ;	IsSign -> Y+19
                 ;	NumbersAfterDot -> Y+18
                 ;	Number0 -> Y+14
                 ;	Number1 -> Y+10
                 ;	k -> Y+6
                 ;	i -> Y+5
                 ;	a -> Y+1
                 ;	b -> Y+0
                +
000409 85ea     +LDD R30 , Y + 10
00040a 85fb     +LDD R31 , Y + 10 + 1
00040b 856c     +LDD R22 , Y + 10 + 2
00040c 857d     +LDD R23 , Y + 10 + 3
                 	__GETD1S 10
                +
00040d 83e9     +STD Y + 1 , R30
00040e 83fa     +STD Y + 1 + 1 , R31
00040f 836b     +STD Y + 1 + 2 , R22
000410 837c     +STD Y + 1 + 3 , R23
                 	__PUTD1S 1
                 ; 0000 0135 
                 ; 0000 0136             if(IsSign==1){
000411 89ab      	LDD  R26,Y+19
000412 30a1      	CPI  R26,LOW(0x1)
000413 f449      	BRNE _0x6B
                 ; 0000 0137                 if(a>=0){
000414 81ac      	LDD  R26,Y+4
000415 23aa      	TST  R26
000416 f012      	BRMI _0x6C
                 ; 0000 0138                 lcd_putchar('+');
000417 e2eb      	LDI  R30,LOW(43)
000418 c001      	RJMP _0x326
                 ; 0000 0139                 }
                 ; 0000 013A                 else{
                 _0x6C:
                 ; 0000 013B                 lcd_putchar('-');
000419 e2ed      	LDI  R30,LOW(45)
                 _0x326:
00041a 93ea      	ST   -Y,R30
00041b 940e 1ee8 	CALL _lcd_putchar
                 ; 0000 013C                 }
                 ; 0000 013D             }
                 ; 0000 013E 
                 ; 0000 013F             if(a<0){
                 _0x6B:
00041d 81ac      	LDD  R26,Y+4
00041e 23aa      	TST  R26
00041f f472      	BRPL _0x6E
                 ; 0000 0140             a = a*(-1);
                +
000420 81e9     +LDD R30 , Y + 1
000421 81fa     +LDD R31 , Y + 1 + 1
000422 816b     +LDD R22 , Y + 1 + 2
000423 817c     +LDD R23 , Y + 1 + 3
                 	__GETD1S 1
                +
000424 efaf     +LDI R26 , LOW ( 0xFFFFFFFF )
000425 efbf     +LDI R27 , HIGH ( 0xFFFFFFFF )
000426 ef8f     +LDI R24 , BYTE3 ( 0xFFFFFFFF )
000427 ef9f     +LDI R25 , BYTE4 ( 0xFFFFFFFF )
                 	__GETD2N 0xFFFFFFFF
000428 940e 1fe2 	CALL __MULD12
                +
00042a 83e9     +STD Y + 1 , R30
00042b 83fa     +STD Y + 1 + 1 , R31
00042c 836b     +STD Y + 1 + 2 , R22
00042d 837c     +STD Y + 1 + 3 , R23
                 	__PUTD1S 1
                 ; 0000 0141             }
                 ; 0000 0142 
                 ; 0000 0143             if(k*10<a){
                 _0x6E:
                +
00042e 81ee     +LDD R30 , Y + 6
00042f 81ff     +LDD R31 , Y + 6 + 1
000430 8568     +LDD R22 , Y + 6 + 2
000431 8579     +LDD R23 , Y + 6 + 3
                 	__GETD1S 6
                +
000432 e0aa     +LDI R26 , LOW ( 0xA )
000433 e0b0     +LDI R27 , HIGH ( 0xA )
000434 e080     +LDI R24 , BYTE3 ( 0xA )
000435 e090     +LDI R25 , BYTE4 ( 0xA )
                 	__GETD2N 0xA
000436 940e 1fb7 	CALL __MULD12U
000438 01df      	MOVW R26,R30
000439 01cb      	MOVW R24,R22
                +
00043a 81e9     +LDD R30 , Y + 1
00043b 81fa     +LDD R31 , Y + 1 + 1
00043c 816b     +LDD R22 , Y + 1 + 2
00043d 817c     +LDD R23 , Y + 1 + 3
                 	__GETD1S 1
00043e 940e 2083 	CALL __CPD21
000440 f490      	BRSH _0x6F
                 ; 0000 0144             a = k*10 - 1;
                +
000441 81ee     +LDD R30 , Y + 6
000442 81ff     +LDD R31 , Y + 6 + 1
000443 8568     +LDD R22 , Y + 6 + 2
000444 8579     +LDD R23 , Y + 6 + 3
                 	__GETD1S 6
                +
000445 e0aa     +LDI R26 , LOW ( 0xA )
000446 e0b0     +LDI R27 , HIGH ( 0xA )
000447 e080     +LDI R24 , BYTE3 ( 0xA )
000448 e090     +LDI R25 , BYTE4 ( 0xA )
                 	__GETD2N 0xA
000449 940e 1fb7 	CALL __MULD12U
                +
00044b 50e1     +SUBI R30 , LOW ( 1 )
00044c 40f0     +SBCI R31 , HIGH ( 1 )
00044d 4060     +SBCI R22 , BYTE3 ( 1 )
00044e 4070     +SBCI R23 , BYTE4 ( 1 )
                 	__SUBD1N 1
                +
00044f 83e9     +STD Y + 1 , R30
000450 83fa     +STD Y + 1 + 1 , R31
000451 836b     +STD Y + 1 + 2 , R22
000452 837c     +STD Y + 1 + 3 , R23
                 	__PUTD1S 1
                 ; 0000 0145             }
                 ; 0000 0146 
                 ; 0000 0147             for(i=0;i<Lenght;i++){
                 _0x6F:
000453 e0e0      	LDI  R30,LOW(0)
000454 83ed      	STD  Y+5,R30
                 _0x71:
000455 89ec      	LDD  R30,Y+20
000456 81ad      	LDD  R26,Y+5
000457 17ae      	CP   R26,R30
000458 f010      	BRLO PC+3
000459 940c 04a2 	JMP _0x72
                 ; 0000 0148                 if(NumbersAfterDot!=0){
00045b 89ea      	LDD  R30,Y+18
00045c 30e0      	CPI  R30,0
00045d f071      	BREQ _0x73
                 ; 0000 0149                     if(Lenght-NumbersAfterDot==i){
00045e 89ac      	LDD  R26,Y+20
00045f 27bb      	CLR  R27
000460 e0f0      	LDI  R31,0
000461 1bae      	SUB  R26,R30
000462 0bbf      	SBC  R27,R31
000463 81ed      	LDD  R30,Y+5
000464 e0f0      	LDI  R31,0
000465 17ea      	CP   R30,R26
000466 07fb      	CPC  R31,R27
000467 f421      	BRNE _0x74
                 ; 0000 014A                     lcd_putchar('.');
000468 e2ee      	LDI  R30,LOW(46)
000469 93ea      	ST   -Y,R30
00046a 940e 1ee8 	CALL _lcd_putchar
                 ; 0000 014B                     }
                 ; 0000 014C                 }
                 _0x74:
                 ; 0000 014D             b = a/k;
                 _0x73:
                +
00046c 81ee     +LDD R30 , Y + 6
00046d 81ff     +LDD R31 , Y + 6 + 1
00046e 8568     +LDD R22 , Y + 6 + 2
00046f 8579     +LDD R23 , Y + 6 + 3
                 	__GETD1S 6
                +
000470 81a9     +LDD R26 , Y + 1
000471 81ba     +LDD R27 , Y + 1 + 1
000472 818b     +LDD R24 , Y + 1 + 2
000473 819c     +LDD R25 , Y + 1 + 3
                 	__GETD2S 1
000474 940e 1fff 	CALL __DIVD21U
000476 83e8      	ST   Y,R30
                 ; 0000 014E             lcd_putchar( NumToIndex( b ) );
000477 93ea      	ST   -Y,R30
000478 ddb8      	RCALL _NumToIndex
000479 93ea      	ST   -Y,R30
00047a 940e 1ee8 	CALL _lcd_putchar
                 ; 0000 014F             a = a - b*k;
00047c 81a8      	LD   R26,Y
00047d 27bb      	CLR  R27
                +
00047e 81ee     +LDD R30 , Y + 6
00047f 81ff     +LDD R31 , Y + 6 + 1
000480 8568     +LDD R22 , Y + 6 + 2
000481 8579     +LDD R23 , Y + 6 + 3
                 	__GETD1S 6
000482 940e 1faa 	CALL __CWD2
000484 940e 1fb7 	CALL __MULD12U
                +
000486 81a9     +LDD R26 , Y + 1
000487 81ba     +LDD R27 , Y + 1 + 1
000488 818b     +LDD R24 , Y + 1 + 2
000489 819c     +LDD R25 , Y + 1 + 3
                 	__GETD2S 1
00048a 940e 1f8f 	CALL __SUBD21
                +
00048c 83a9     +STD Y + 1 , R26
00048d 83ba     +STD Y + 1 + 1 , R27
00048e 838b     +STD Y + 1 + 2 , R24
00048f 839c     +STD Y + 1 + 3 , R25
                 	__PUTD2S 1
                 ; 0000 0150             k = k/10;
                +
000490 81ae     +LDD R26 , Y + 6
000491 81bf     +LDD R27 , Y + 6 + 1
000492 8588     +LDD R24 , Y + 6 + 2
000493 8599     +LDD R25 , Y + 6 + 3
                 	__GETD2S 6
                +
000494 e0ea     +LDI R30 , LOW ( 0xA )
000495 e0f0     +LDI R31 , HIGH ( 0xA )
000496 e060     +LDI R22 , BYTE3 ( 0xA )
000497 e070     +LDI R23 , BYTE4 ( 0xA )
                 	__GETD1N 0xA
000498 940e 1fff 	CALL __DIVD21U
                +
00049a 83ee     +STD Y + 6 , R30
00049b 83ff     +STD Y + 6 + 1 , R31
00049c 8768     +STD Y + 6 + 2 , R22
00049d 8779     +STD Y + 6 + 3 , R23
                 	__PUTD1S 6
                 ; 0000 0151             }
00049e 81ed      	LDD  R30,Y+5
00049f 5fef      	SUBI R30,-LOW(1)
0004a0 83ed      	STD  Y+5,R30
0004a1 cfb3      	RJMP _0x71
                 _0x72:
                 ; 0000 0152         return 1;
0004a2 e0e1      	LDI  R30,LOW(1)
0004a3 962a      	ADIW R28,10
0004a4 c002      	RJMP _0x2080005
                 ; 0000 0153         }
                 ; 0000 0154     }
                 _0x6A:
0004a5 9625      	ADIW R28,5
                 ; 0000 0155 return 0;
                 _0x5C:
0004a6 e0e0      	LDI  R30,LOW(0)
                 _0x2080005:
0004a7 962c      	ADIW R28,12
0004a8 9508      	RET
                 ; 0000 0156 }
                 ;
                 ;char lcd_put_runing_text(   unsigned char Start_x,
                 ; 0000 0159                             unsigned char Start_y,
                 ; 0000 015A 
                 ; 0000 015B                             unsigned int Lenght,
                 ; 0000 015C                             unsigned int Position,
                 ; 0000 015D 
                 ; 0000 015E                             char flash *str){
                 _lcd_put_runing_text:
                 ; 0000 015F signed int i,a;
                 ; 0000 0160 unsigned int StrLenght = strlenf(str);
                 ; 0000 0161 lcd_gotoxy(Start_x,Start_y);
0004a9 940e 2088 	CALL __SAVELOCR6
                 ;	Start_x -> Y+13
                 ;	Start_y -> Y+12
                 ;	Lenght -> Y+10
                 ;	Position -> Y+8
                 ;	*str -> Y+6
                 ;	i -> R16,R17
                 ;	a -> R18,R19
                 ;	StrLenght -> R20,R21
0004ab 81ee      	LDD  R30,Y+6
0004ac 81ff      	LDD  R31,Y+6+1
0004ad 93fa      	ST   -Y,R31
0004ae 93ea      	ST   -Y,R30
0004af 940e 1e43 	CALL _strlenf
0004b1 01af      	MOVW R20,R30
0004b2 85ed      	LDD  R30,Y+13
0004b3 93ea      	ST   -Y,R30
0004b4 85ed      	LDD  R30,Y+13
0004b5 93ea      	ST   -Y,R30
0004b6 940e 1ebc 	CALL _lcd_gotoxy
                 ; 0000 0162 
                 ; 0000 0163     for(i=0;i<Lenght;i++){
                +
0004b8 e000     +LDI R16 , LOW ( 0 )
0004b9 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x76:
0004ba 85ea      	LDD  R30,Y+10
0004bb 85fb      	LDD  R31,Y+10+1
0004bc 170e      	CP   R16,R30
0004bd 071f      	CPC  R17,R31
0004be f518      	BRSH _0x77
                 ; 0000 0164     a = i + Position - Lenght;
0004bf 85a8      	LDD  R26,Y+8
0004c0 85b9      	LDD  R27,Y+8+1
0004c1 0fa0      	ADD  R26,R16
0004c2 1fb1      	ADC  R27,R17
0004c3 1bae      	SUB  R26,R30
0004c4 0bbf      	SBC  R27,R31
0004c5 019d      	MOVW R18,R26
                 ; 0000 0165         if(a>=0){
0004c6 2333      	TST  R19
0004c7 f09a      	BRMI _0x78
                 ; 0000 0166             if(a<StrLenght){
                +
0004c8 1724     +CP R18 , R20
0004c9 0735     +CPC R19 , R21
                 	__CPWRR 18,19,20,21
0004ca f450      	BRSH _0x79
                 ; 0000 0167             lcd_putchar(str[a]);
0004cb 01f9      	MOVW R30,R18
0004cc 81ae      	LDD  R26,Y+6
0004cd 81bf      	LDD  R27,Y+6+1
0004ce 0fea      	ADD  R30,R26
0004cf 1ffb      	ADC  R31,R27
0004d0 91e4      	LPM  R30,Z
0004d1 93ea      	ST   -Y,R30
0004d2 940e 1ee8 	CALL _lcd_putchar
                 ; 0000 0168             }
                 ; 0000 0169             else{
0004d4 c005      	RJMP _0x7A
                 _0x79:
                 ; 0000 016A                 if(i==0){
0004d5 2e00      	MOV  R0,R16
0004d6 2a01      	OR   R0,R17
0004d7 f411      	BRNE _0x7B
                 ; 0000 016B                 return 1;
0004d8 e0e1      	LDI  R30,LOW(1)
0004d9 c009      	RJMP _0x2080004
                 ; 0000 016C                 }
                 ; 0000 016D             }
                 _0x7B:
                 _0x7A:
                 ; 0000 016E         }
                 ; 0000 016F         else{
0004da c004      	RJMP _0x7C
                 _0x78:
                 ; 0000 0170         lcd_putchar(' ');
0004db e2e0      	LDI  R30,LOW(32)
0004dc 93ea      	ST   -Y,R30
0004dd 940e 1ee8 	CALL _lcd_putchar
                 ; 0000 0171         }
                 _0x7C:
                 ; 0000 0172     }
                +
0004df 5f0f     +SUBI R16 , LOW ( - 1 )
0004e0 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0004e1 cfd8      	RJMP _0x76
                 _0x77:
                 ; 0000 0173 return 0;
0004e2 e0e0      	LDI  R30,LOW(0)
                 _0x2080004:
0004e3 940e 208f 	CALL __LOADLOCR6
0004e5 962e      	ADIW R28,14
0004e6 9508      	RET
                 ; 0000 0174 }
                 ;
                 ;char lcd_cursor(unsigned char x, unsigned char y){
                 ; 0000 0176 char lcd_cursor(unsigned char x, unsigned char y){
                 _lcd_cursor:
                 ; 0000 0177 _lcd_ready();
                 ;	x -> Y+1
                 ;	y -> Y+0
0004e7 940e 1e81 	CALL __lcd_ready
                 ; 0000 0178 lcd_gotoxy(x,y);
0004e9 81e9      	LDD  R30,Y+1
0004ea 93ea      	ST   -Y,R30
0004eb 81e9      	LDD  R30,Y+1
0004ec 93ea      	ST   -Y,R30
0004ed 940e 1ebc 	CALL _lcd_gotoxy
                 ; 0000 0179 _lcd_ready();
0004ef 940e 1e81 	CALL __lcd_ready
                 ; 0000 017A _lcd_write_data(0xe);
0004f1 e0ee      	LDI  R30,LOW(14)
0004f2 93ea      	ST   -Y,R30
0004f3 940e 1e9c 	CALL __lcd_write_data
                 ; 0000 017B return 1;
0004f5 e0e1      	LDI  R30,LOW(1)
0004f6 9622      	ADIW R28,2
0004f7 9508      	RET
                 ; 0000 017C }
                 ;
                 ;static unsigned char CODE_IsEntering;
                 ;static unsigned char CODE_SuccessXYZ[3];
                 ;static unsigned char CODE_FailedXYZ[3];
                 ;static unsigned char CODE_TimeLeft;
                 ;static unsigned int  CODE_EnteringCode;
                 ;static unsigned char CODE_ExecutingDigit;
                 ;char EnterCode(char FailX,char FailY,char FailZ,
                 ; 0000 0185         char SuccessX,char SuccessY,char SuccessZ){
                 _EnterCode:
                 ; 0000 0186     if(CODE_IsEntering==0){
                 ;	FailX -> Y+5
                 ;	FailY -> Y+4
                 ;	FailZ -> Y+3
                 ;	SuccessX -> Y+2
                 ;	SuccessY -> Y+1
                 ;	SuccessZ -> Y+0
0004f8 91e0 0290 	LDS  R30,_CODE_IsEntering_G000
0004fa 30e0      	CPI  R30,0
0004fb f509      	BRNE _0x7D
                 ; 0000 0187     CODE_IsEntering = 1;
0004fc e0e1      	LDI  R30,LOW(1)
0004fd 93e0 0290 	STS  _CODE_IsEntering_G000,R30
                 ; 0000 0188 
                 ; 0000 0189     CODE_SuccessXYZ[0] = SuccessX;
0004ff 81ea      	LDD  R30,Y+2
000500 93e0 0291 	STS  _CODE_SuccessXYZ_G000,R30
                 ; 0000 018A     CODE_SuccessXYZ[1] = SuccessY;
000502 81e9      	LDD  R30,Y+1
                +
000503 93e0 0292+STS _CODE_SuccessXYZ_G000 + ( 1 ) , R30
                 	__PUTB1MN _CODE_SuccessXYZ_G000,1
                 ; 0000 018B     CODE_SuccessXYZ[2] = SuccessZ;
000505 81e8      	LD   R30,Y
                +
000506 93e0 0293+STS _CODE_SuccessXYZ_G000 + ( 2 ) , R30
                 	__PUTB1MN _CODE_SuccessXYZ_G000,2
                 ; 0000 018C 
                 ; 0000 018D     CODE_FailedXYZ[0] = FailX;
000508 81ed      	LDD  R30,Y+5
000509 93e0 0294 	STS  _CODE_FailedXYZ_G000,R30
                 ; 0000 018E     CODE_FailedXYZ[1] = FailY;
00050b 81ec      	LDD  R30,Y+4
                +
00050c 93e0 0295+STS _CODE_FailedXYZ_G000 + ( 1 ) , R30
                 	__PUTB1MN _CODE_FailedXYZ_G000,1
                 ; 0000 018F     CODE_FailedXYZ[2] = FailZ;
00050e 81eb      	LDD  R30,Y+3
                +
00050f 93e0 0296+STS _CODE_FailedXYZ_G000 + ( 2 ) , R30
                 	__PUTB1MN _CODE_FailedXYZ_G000,2
                 ; 0000 0190 
                 ; 0000 0191     CODE_TimeLeft = 99;
000511 e6e3      	LDI  R30,LOW(99)
000512 93e0 0297 	STS  _CODE_TimeLeft_G000,R30
                 ; 0000 0192     CODE_EnteringCode = 0;
000514 e0e0      	LDI  R30,LOW(0)
000515 93e0 0298 	STS  _CODE_EnteringCode_G000,R30
000517 93e0 0299 	STS  _CODE_EnteringCode_G000+1,R30
                 ; 0000 0193     CODE_ExecutingDigit = 0;
000519 93e0 029a 	STS  _CODE_ExecutingDigit_G000,R30
                 ; 0000 0194     return 1;
00051b e0e1      	LDI  R30,LOW(1)
00051c c001      	RJMP _0x2080003
                 ; 0000 0195     }
                 ; 0000 0196 return 0;
                 _0x7D:
00051d e0e0      	LDI  R30,LOW(0)
                 _0x2080003:
00051e 9626      	ADIW R28,6
00051f 9508      	RET
                 ; 0000 0197 }
                 ;
                 ;char lcd_buttons(char Left,char Right, char Plius,char Minus,
                 ; 0000 019A     char Patvirtinti, char DualButton1,char DualButton2,char DualButton3,
                 ; 0000 019B         char DualButton4){
                 _lcd_buttons:
                 ; 0000 019C 
                 ; 0000 019D     if(Left==1){
                 ;	Left -> Y+8
                 ;	Right -> Y+7
                 ;	Plius -> Y+6
                 ;	Minus -> Y+5
                 ;	Patvirtinti -> Y+4
                 ;	DualButton1 -> Y+3
                 ;	DualButton2 -> Y+2
                 ;	DualButton3 -> Y+1
                 ;	DualButton4 -> Y+0
000520 85a8      	LDD  R26,Y+8
000521 30a1      	CPI  R26,LOW(0x1)
000522 f419      	BRNE _0x7E
                 ; 0000 019E     lcd_putsf(BUTTON_DESCRIPTION1);
                +
000523 e6e2     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
000524 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
000525 c002      	RJMP _0x327
                 ; 0000 019F     }
                 ; 0000 01A0     else{
                 _0x7E:
                 ; 0000 01A1     lcd_putsf(BUTTON_DESCRIPTION1_0);
                +
000526 e6e5     +LDI R30 , LOW ( 2 * _0x0 + ( 3 ) )
000527 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 3 ) )
                 	__POINTW1FN _0x0,3
                 _0x327:
000528 93fa      	ST   -Y,R31
000529 93ea      	ST   -Y,R30
00052a 940e 1f1c 	CALL _lcd_putsf
                 ; 0000 01A2     }
                 ; 0000 01A3 
                 ; 0000 01A4     if(DualButton1==1){
00052c 81ab      	LDD  R26,Y+3
00052d 30a1      	CPI  R26,LOW(0x1)
00052e f419      	BRNE _0x80
                 ; 0000 01A5     lcd_putsf(BUTTON_DESCRIPTION2);
                +
00052f e6e8     +LDI R30 , LOW ( 2 * _0x0 + ( 6 ) )
000530 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 6 ) )
                 	__POINTW1FN _0x0,6
000531 c002      	RJMP _0x328
                 ; 0000 01A6     }
                 ; 0000 01A7     else{
                 _0x80:
                 ; 0000 01A8     lcd_putsf(BUTTON_DESCRIPTION2_0);
                +
000532 e6e5     +LDI R30 , LOW ( 2 * _0x0 + ( 3 ) )
000533 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 3 ) )
                 	__POINTW1FN _0x0,3
                 _0x328:
000534 93fa      	ST   -Y,R31
000535 93ea      	ST   -Y,R30
000536 940e 1f1c 	CALL _lcd_putsf
                 ; 0000 01A9     }
                 ; 0000 01AA 
                 ; 0000 01AB     if(Right==1){
000538 81af      	LDD  R26,Y+7
000539 30a1      	CPI  R26,LOW(0x1)
00053a f419      	BRNE _0x82
                 ; 0000 01AC     lcd_putsf(BUTTON_DESCRIPTION3);
                +
00053b e6eb     +LDI R30 , LOW ( 2 * _0x0 + ( 9 ) )
00053c e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 9 ) )
                 	__POINTW1FN _0x0,9
00053d c002      	RJMP _0x329
                 ; 0000 01AD     }
                 ; 0000 01AE     else{
                 _0x82:
                 ; 0000 01AF     lcd_putsf(BUTTON_DESCRIPTION3_0);
                +
00053e e6e6     +LDI R30 , LOW ( 2 * _0x0 + ( 4 ) )
00053f e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 4 ) )
                 	__POINTW1FN _0x0,4
                 _0x329:
000540 93fa      	ST   -Y,R31
000541 93ea      	ST   -Y,R30
000542 940e 1f1c 	CALL _lcd_putsf
                 ; 0000 01B0     }
                 ; 0000 01B1 
                 ; 0000 01B2     if(DualButton2==1){
000544 81aa      	LDD  R26,Y+2
000545 30a1      	CPI  R26,LOW(0x1)
000546 f419      	BRNE _0x84
                 ; 0000 01B3     lcd_putsf(BUTTON_DESCRIPTION4);
                +
000547 e6ed     +LDI R30 , LOW ( 2 * _0x0 + ( 11 ) )
000548 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 11 ) )
                 	__POINTW1FN _0x0,11
000549 c002      	RJMP _0x32A
                 ; 0000 01B4     }
                 ; 0000 01B5     else{
                 _0x84:
                 ; 0000 01B6     lcd_putsf(BUTTON_DESCRIPTION4_0);
                +
00054a e7e1     +LDI R30 , LOW ( 2 * _0x0 + ( 15 ) )
00054b e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 15 ) )
                 	__POINTW1FN _0x0,15
                 _0x32A:
00054c 93fa      	ST   -Y,R31
00054d 93ea      	ST   -Y,R30
00054e 940e 1f1c 	CALL _lcd_putsf
                 ; 0000 01B7     }
                 ; 0000 01B8 
                 ; 0000 01B9     if(Plius==1){
000550 81ae      	LDD  R26,Y+6
000551 30a1      	CPI  R26,LOW(0x1)
000552 f419      	BRNE _0x86
                 ; 0000 01BA     lcd_putsf(BUTTON_DESCRIPTION5);
                +
000553 e7e5     +LDI R30 , LOW ( 2 * _0x0 + ( 19 ) )
000554 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 19 ) )
                 	__POINTW1FN _0x0,19
000555 c002      	RJMP _0x32B
                 ; 0000 01BB     }
                 ; 0000 01BC     else{
                 _0x86:
                 ; 0000 01BD     lcd_putsf(BUTTON_DESCRIPTION5_0);
                +
000556 e6e6     +LDI R30 , LOW ( 2 * _0x0 + ( 4 ) )
000557 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 4 ) )
                 	__POINTW1FN _0x0,4
                 _0x32B:
000558 93fa      	ST   -Y,R31
000559 93ea      	ST   -Y,R30
00055a 940e 1f1c 	CALL _lcd_putsf
                 ; 0000 01BE     }
                 ; 0000 01BF 
                 ; 0000 01C0     if(DualButton3==1){
00055c 81a9      	LDD  R26,Y+1
00055d 30a1      	CPI  R26,LOW(0x1)
00055e f419      	BRNE _0x88
                 ; 0000 01C1     lcd_putsf(BUTTON_DESCRIPTION6);
                +
00055f e6e8     +LDI R30 , LOW ( 2 * _0x0 + ( 6 ) )
000560 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 6 ) )
                 	__POINTW1FN _0x0,6
000561 c002      	RJMP _0x32C
                 ; 0000 01C2     }
                 ; 0000 01C3     else{
                 _0x88:
                 ; 0000 01C4     lcd_putsf(BUTTON_DESCRIPTION6_0);
                +
000562 e6e5     +LDI R30 , LOW ( 2 * _0x0 + ( 3 ) )
000563 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 3 ) )
                 	__POINTW1FN _0x0,3
                 _0x32C:
000564 93fa      	ST   -Y,R31
000565 93ea      	ST   -Y,R30
000566 940e 1f1c 	CALL _lcd_putsf
                 ; 0000 01C5     }
                 ; 0000 01C6 
                 ; 0000 01C7     if(Minus==1){
000568 81ad      	LDD  R26,Y+5
000569 30a1      	CPI  R26,LOW(0x1)
00056a f419      	BRNE _0x8A
                 ; 0000 01C8     lcd_putsf(BUTTON_DESCRIPTION7);
                +
00056b e7e7     +LDI R30 , LOW ( 2 * _0x0 + ( 21 ) )
00056c e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 21 ) )
                 	__POINTW1FN _0x0,21
00056d c002      	RJMP _0x32D
                 ; 0000 01C9     }
                 ; 0000 01CA     else{
                 _0x8A:
                 ; 0000 01CB     lcd_putsf(BUTTON_DESCRIPTION7_0);
                +
00056e e6e6     +LDI R30 , LOW ( 2 * _0x0 + ( 4 ) )
00056f e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 4 ) )
                 	__POINTW1FN _0x0,4
                 _0x32D:
000570 93fa      	ST   -Y,R31
000571 93ea      	ST   -Y,R30
000572 940e 1f1c 	CALL _lcd_putsf
                 ; 0000 01CC     }
                 ; 0000 01CD 
                 ; 0000 01CE     if(DualButton4==1){
000574 81a8      	LD   R26,Y
000575 30a1      	CPI  R26,LOW(0x1)
000576 f419      	BRNE _0x8C
                 ; 0000 01CF     lcd_putsf(BUTTON_DESCRIPTION8);
                +
000577 e6e8     +LDI R30 , LOW ( 2 * _0x0 + ( 6 ) )
000578 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 6 ) )
                 	__POINTW1FN _0x0,6
000579 c002      	RJMP _0x32E
                 ; 0000 01D0     }
                 ; 0000 01D1     else{
                 _0x8C:
                 ; 0000 01D2     lcd_putsf(BUTTON_DESCRIPTION8_0);
                +
00057a e6e5     +LDI R30 , LOW ( 2 * _0x0 + ( 3 ) )
00057b e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 3 ) )
                 	__POINTW1FN _0x0,3
                 _0x32E:
00057c 93fa      	ST   -Y,R31
00057d 93ea      	ST   -Y,R30
00057e 940e 1f1c 	CALL _lcd_putsf
                 ; 0000 01D3     }
                 ; 0000 01D4 
                 ; 0000 01D5     if(Patvirtinti==1){
000580 81ac      	LDD  R26,Y+4
000581 30a1      	CPI  R26,LOW(0x1)
000582 f419      	BRNE _0x8E
                 ; 0000 01D6     lcd_putsf(BUTTON_DESCRIPTION9);
                +
000583 e7e9     +LDI R30 , LOW ( 2 * _0x0 + ( 23 ) )
000584 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 23 ) )
                 	__POINTW1FN _0x0,23
000585 c002      	RJMP _0x32F
                 ; 0000 01D7     }
                 ; 0000 01D8     else{
                 _0x8E:
                 ; 0000 01D9     lcd_putsf(BUTTON_DESCRIPTION9_0);
                +
000586 e6e5     +LDI R30 , LOW ( 2 * _0x0 + ( 3 ) )
000587 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 3 ) )
                 	__POINTW1FN _0x0,3
                 _0x32F:
000588 93fa      	ST   -Y,R31
000589 93ea      	ST   -Y,R30
00058a 940e 1f1c 	CALL _lcd_putsf
                 ; 0000 01DA     }
                 ; 0000 01DB 
                 ; 0000 01DC return 1;
00058c e0e1      	LDI  R30,LOW(1)
00058d 9629      	ADIW R28,9
00058e 9508      	RET
                 ; 0000 01DD }
                 ;
                 ;/*
                 ;flash char * flash error_msg[]={
                 ;"",
                 ;"FR_DISK_ERR",
                 ;"FR_INT_ERR",
                 ;"FR_INT_ERR",
                 ;"FR_NOT_READY",
                 ;"FR_NO_FILE",
                 ;"FR_NO_PATH",
                 ;"FR_INVALID_NAME",
                 ;"FR_DENIED",
                 ;"FR_EXIST",
                 ;"FR_INVALID_OBJECT",
                 ;"FR_WRITE_PROTECTED",
                 ;"FR_INVALID_DRIVE",
                 ;"FR_NOT_ENABLED",
                 ;"FR_NO_FILESYSTEM",
                 ;"FR_MKFS_ABORTED",
                 ;"FR_TIMEOUT"
                 ;};
                 ;*/
                 ;
                 ;/*
                 ;void error(FRESULT res){
                 ;    if((res>=FR_DISK_ERR) && (res<=FR_TIMEOUT)){
                 ;    lcd_clear();
                 ;    lcd_puts("FS ERROR:");
                 ;    lcd_putsf(error_msg[res]);
                 ;    delay_ms(1000);
                 ;    }
                 ;}
                 ;*/
                 ;
                 ;static unsigned char DataToSent[200];
                 ;static unsigned char ReceivedData[200];
                 ;void SendMBus(){
                 ; 0000 0202 void SendMBus(){
                 ; 0000 0203 unsigned int lenght;
                 ; 0000 0204 unsigned char i,a,b;
                 ; 0000 0205 char character_bits[8];
                 ; 0000 0206 char character;
                 ; 0000 0207 lenght = strlen(DataToSent);
                 ;	lenght -> R16,R17
                 ;	i -> R19
                 ;	a -> R18
                 ;	b -> R21
                 ;	character_bits -> Y+6
                 ;	character -> R20
                 ; 0000 0208 DDRA.4 = 1;
                 ; 0000 0209     for(i=0;i<lenght;i++){
                 ; 0000 020A     character = DataToSent[i];
                 ; 0000 020B     b = 128;
                 ; 0000 020C 
                 ; 0000 020D     PORTA.4 = 1;
                 ; 0000 020E 
                 ; 0000 020F         for(a=7;a>=0;a--){
                 ; 0000 0210             if(character>=b){
                 ; 0000 0211             character_bits[a] = 1;
                 ; 0000 0212             }
                 ; 0000 0213             else{
                 ; 0000 0214             character_bits[a] = 0;
                 ; 0000 0215             }
                 ; 0000 0216         b = b/2;
                 ; 0000 0217         }
                 ; 0000 0218 
                 ; 0000 0219         for(a=0;a<8;a++){
                 ; 0000 021A             if(character_bits[a]==1){
                 ; 0000 021B             PORTA.4 = 1;
                 ; 0000 021C             }
                 ; 0000 021D             else{
                 ; 0000 021E             PORTA.4 = 0;
                 ; 0000 021F             }
                 ; 0000 0220         }
                 ; 0000 0221 
                 ; 0000 0222     PORTA.4 = 1;
                 ; 0000 0223     delay_us(100);
                 ; 0000 0224     PORTA.4 = 0;
                 ; 0000 0225     }
                 ; 0000 0226 DDRA.4 = 0;
                 ; 0000 0227 }
                 ;
                 ;void GetMBus(void){
                 ; 0000 0229 void GetMBus(void){
                 ; 0000 022A unsigned int i,a,character,b;
                 ; 0000 022B     for(i=0;i<200;i++){
                 ;	i -> R16,R17
                 ;	a -> R18,R19
                 ;	character -> R20,R21
                 ;	b -> Y+6
                 ; 0000 022C         while(PINA.4==0);
                 ; 0000 022D         while(PINA.4==1);
                 ; 0000 022E     character = 0;
                 ; 0000 022F     b = 1;
                 ; 0000 0230         for(a=0;a<8;a++){
                 ; 0000 0231             if(PINA.4==1){
                 ; 0000 0232             character = character + b;
                 ; 0000 0233             }
                 ; 0000 0234         b = b*2;
                 ; 0000 0235         delay_us(100);
                 ; 0000 0236         }
                 ; 0000 0237 
                 ; 0000 0238         while(PINA.4==1);
                 ; 0000 0239         while(PINA.4==0);
                 ; 0000 023A     }
                 ; 0000 023B }
                 ;///////////////////////////////////////////////////////////////////////////////////
                 ;///////////////////////////////////////////////////////////////////////////////////
                 ;
                 ;
                 ;// Timer 0 overflow interrupt service routine
                 ;interrupt [TIM0_OVF] void timer0_ovf_isr(void){
                 ; 0000 0241 interrupt [12] void timer0_ovf_isr(void){
                 _timer0_ovf_isr:
00058f 920a      	ST   -Y,R0
000590 921a      	ST   -Y,R1
000591 92fa      	ST   -Y,R15
000592 936a      	ST   -Y,R22
000593 937a      	ST   -Y,R23
000594 938a      	ST   -Y,R24
000595 939a      	ST   -Y,R25
000596 93aa      	ST   -Y,R26
000597 93ba      	ST   -Y,R27
000598 93ea      	ST   -Y,R30
000599 93fa      	ST   -Y,R31
00059a b7ef      	IN   R30,SREG
00059b 93ea      	ST   -Y,R30
                 ; 0000 0242 static signed int InteruptTimer, MissTimer;
                 ; 0000 0243 InteruptTimer++;
00059c e6a3      	LDI  R26,LOW(_InteruptTimer_S000000F000)
00059d e0b3      	LDI  R27,HIGH(_InteruptTimer_S000000F000)
00059e 91ed      	LD   R30,X+
00059f 91fd      	LD   R31,X+
0005a0 9631      	ADIW R30,1
0005a1 93fe      	ST   -X,R31
0005a2 93ee      	ST   -X,R30
0005a3 9731      	SBIW R30,1
                 ; 0000 0244 /////////////////////////// 1 Second Callback ///////////////////////////////////////
                 ; 0000 0245     if(InteruptTimer>=495){// Periodas
0005a4 91a0 0363 	LDS  R26,_InteruptTimer_S000000F000
0005a6 91b0 0364 	LDS  R27,_InteruptTimer_S000000F000+1
0005a8 3eaf      	CPI  R26,LOW(0x1EF)
0005a9 e0e1      	LDI  R30,HIGH(0x1EF)
0005aa 07be      	CPC  R27,R30
0005ab f124      	BRLT _0xBE
                 ; 0000 0246     Call_1Second++;
0005ac 91e0 028f 	LDS  R30,_Call_1Second
0005ae 5fef      	SUBI R30,-LOW(1)
0005af 93e0 028f 	STS  _Call_1Second,R30
                 ; 0000 0247     InteruptTimer = 0;
0005b1 e0e0      	LDI  R30,LOW(0)
0005b2 93e0 0363 	STS  _InteruptTimer_S000000F000,R30
0005b4 93e0 0364 	STS  _InteruptTimer_S000000F000+1,R30
                 ; 0000 0248     MissTimer++;
0005b6 e6a5      	LDI  R26,LOW(_MissTimer_S000000F000)
0005b7 e0b3      	LDI  R27,HIGH(_MissTimer_S000000F000)
0005b8 91ed      	LD   R30,X+
0005b9 91fd      	LD   R31,X+
0005ba 9631      	ADIW R30,1
0005bb 93fe      	ST   -X,R31
0005bc 93ee      	ST   -X,R30
                 ; 0000 0249         if(MissTimer>=1000){
0005bd 91a0 0365 	LDS  R26,_MissTimer_S000000F000
0005bf 91b0 0366 	LDS  R27,_MissTimer_S000000F000+1
0005c1 3ea8      	CPI  R26,LOW(0x3E8)
0005c2 e0e3      	LDI  R30,HIGH(0x3E8)
0005c3 07be      	CPC  R27,R30
0005c4 f05c      	BRLT _0xBF
                 ; 0000 024A         InteruptTimer = 50;// -(Tukstantosios periodo dalys)
0005c5 e3e2      	LDI  R30,LOW(50)
0005c6 e0f0      	LDI  R31,HIGH(50)
0005c7 93e0 0363 	STS  _InteruptTimer_S000000F000,R30
0005c9 93f0 0364 	STS  _InteruptTimer_S000000F000+1,R31
                 ; 0000 024B         MissTimer = 0;
0005cb e0e0      	LDI  R30,LOW(0)
0005cc 93e0 0365 	STS  _MissTimer_S000000F000,R30
0005ce 93e0 0366 	STS  _MissTimer_S000000F000+1,R30
                 ; 0000 024C         }
                 ; 0000 024D     }
                 _0xBF:
                 ; 0000 024E /////////////////////////////////////////////////////////////////////////////////////
                 ; 0000 024F static unsigned int RefreshTimer;
                 _0xBE:
                 ; 0000 0250 RefreshTimer++;
0005d0 e6a7      	LDI  R26,LOW(_RefreshTimer_S000000F000)
0005d1 e0b3      	LDI  R27,HIGH(_RefreshTimer_S000000F000)
0005d2 91ed      	LD   R30,X+
0005d3 91fd      	LD   R31,X+
0005d4 9631      	ADIW R30,1
0005d5 93fe      	ST   -X,R31
0005d6 93ee      	ST   -X,R30
                 ; 0000 0251     if(RefreshTimer>=20){
0005d7 91a0 0367 	LDS  R26,_RefreshTimer_S000000F000
0005d9 91b0 0368 	LDS  R27,_RefreshTimer_S000000F000+1
0005db 9754      	SBIW R26,20
0005dc f038      	BRLO _0xC0
                 ; 0000 0252     RefreshTimer = 0;
0005dd e0e0      	LDI  R30,LOW(0)
0005de 93e0 0367 	STS  _RefreshTimer_S000000F000,R30
0005e0 93e0 0368 	STS  _RefreshTimer_S000000F000+1,R30
                 ; 0000 0253     RefreshLcd = 1;
0005e2 e0e1      	LDI  R30,LOW(1)
0005e3 2e5e      	MOV  R5,R30
                 ; 0000 0254     }
                 ; 0000 0255 
                 ; 0000 0256 static unsigned char MemoryTimer;
                 _0xC0:
                 ; 0000 0257 MemoryTimer++;
0005e4 91e0 0369 	LDS  R30,_MemoryTimer_S000000F000
0005e6 5fef      	SUBI R30,-LOW(1)
0005e7 93e0 0369 	STS  _MemoryTimer_S000000F000,R30
                 ; 0000 0258     if(MemoryTimer>=5){
0005e9 91a0 0369 	LDS  R26,_MemoryTimer_S000000F000
0005eb 30a5      	CPI  R26,LOW(0x5)
0005ec f028      	BRLO _0xC1
                 ; 0000 0259     disk_timerproc();
0005ed 940e 1e4e 	CALL _disk_timerproc
                 ; 0000 025A     MemoryTimer = 0;
0005ef e0e0      	LDI  R30,LOW(0)
0005f0 93e0 0369 	STS  _MemoryTimer_S000000F000,R30
                 ; 0000 025B     }
                 ; 0000 025C 
                 ; 0000 025D }
                 _0xC1:
0005f2 91e9      	LD   R30,Y+
0005f3 bfef      	OUT  SREG,R30
0005f4 91f9      	LD   R31,Y+
0005f5 91e9      	LD   R30,Y+
0005f6 91b9      	LD   R27,Y+
0005f7 91a9      	LD   R26,Y+
0005f8 9199      	LD   R25,Y+
0005f9 9189      	LD   R24,Y+
0005fa 9179      	LD   R23,Y+
0005fb 9169      	LD   R22,Y+
0005fc 90f9      	LD   R15,Y+
0005fd 9019      	LD   R1,Y+
0005fe 9009      	LD   R0,Y+
0005ff 9518      	RETI
                 ;
                 ;//FILINFO file_info;
                 ;
                 ;
                 ;void main(void){
                 ; 0000 0262 void main(void){
                 _main:
                 ; 0000 0263 // Input/Output Ports initialization
                 ; 0000 0264 // Port A initialization
                 ; 0000 0265 // Func7=Out Func6=In Func5=In Func4=In Func3=Out Func2=Out Func1=Out Func0=In
                 ; 0000 0266 // State7=T State6=T State5=T State4=T State3=T State2=T State1=0 State0=0
                 ; 0000 0267 PORTA=0x00;
000600 e0e0      	LDI  R30,LOW(0)
000601 bbeb      	OUT  0x1B,R30
                 ; 0000 0268 DDRA=0b10001110;
000602 e8ee      	LDI  R30,LOW(142)
000603 bbea      	OUT  0x1A,R30
                 ; 0000 0269 
                 ; 0000 026A // Port B initialization
                 ; 0000 026B // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=Out Func0=Out
                 ; 0000 026C // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
                 ; 0000 026D PORTB=0x00;
000604 e0e0      	LDI  R30,LOW(0)
000605 bbe8      	OUT  0x18,R30
                 ; 0000 026E DDRB=0b00000011;
000606 e0e3      	LDI  R30,LOW(3)
000607 bbe7      	OUT  0x17,R30
                 ; 0000 026F 
                 ; 0000 0270 // Port C initialization
                 ; 0000 0271 // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
                 ; 0000 0272 // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
                 ; 0000 0273 PORTC=0x00;
000608 e0e0      	LDI  R30,LOW(0)
000609 bbe5      	OUT  0x15,R30
                 ; 0000 0274 DDRC=0b00000000;
00060a bbe4      	OUT  0x14,R30
                 ; 0000 0275 
                 ; 0000 0276 // Port D initialization
                 ; 0000 0277 // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
                 ; 0000 0278 // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
                 ; 0000 0279 PORTD=0x00;
00060b bbe2      	OUT  0x12,R30
                 ; 0000 027A DDRD=0b00000000;
00060c bbe1      	OUT  0x11,R30
                 ; 0000 027B 
                 ; 0000 027C // Timer/Counter 0 initialization
                 ; 0000 027D // Clock source: System Clock
                 ; 0000 027E // Clock value: 125.000 kHz
                 ; 0000 027F // Mode: Normal top=FFh
                 ; 0000 0280 // OC0 output: Disconnected
                 ; 0000 0281 TCCR0=0x03;
00060d e0e3      	LDI  R30,LOW(3)
00060e bfe3      	OUT  0x33,R30
                 ; 0000 0282 TCNT0=0x00;
00060f e0e0      	LDI  R30,LOW(0)
000610 bfe2      	OUT  0x32,R30
                 ; 0000 0283 OCR0=0x00;
000611 bfec      	OUT  0x3C,R30
                 ; 0000 0284 
                 ; 0000 0285 // Timer/Counter 1 initialization
                 ; 0000 0286 // Clock source: System Clock
                 ; 0000 0287 // Clock value: Timer1 Stopped
                 ; 0000 0288 // Mode: Normal top=FFFFh
                 ; 0000 0289 // OC1A output: Discon.
                 ; 0000 028A // OC1B output: Discon.
                 ; 0000 028B // Noise Canceler: Off
                 ; 0000 028C // Input Capture on Falling Edge
                 ; 0000 028D // Timer1 Overflow Interrupt: Off
                 ; 0000 028E // Input Capture Interrupt: Off
                 ; 0000 028F // Compare A Match Interrupt: Off
                 ; 0000 0290 // Compare B Match Interrupt: Off
                 ; 0000 0291 TCCR1A=0x00;
000612 bdef      	OUT  0x2F,R30
                 ; 0000 0292 TCCR1B=0x00;
000613 bdee      	OUT  0x2E,R30
                 ; 0000 0293 TCNT1H=0x00;
000614 bded      	OUT  0x2D,R30
                 ; 0000 0294 TCNT1L=0x00;
000615 bdec      	OUT  0x2C,R30
                 ; 0000 0295 ICR1H=0x00;
000616 bde7      	OUT  0x27,R30
                 ; 0000 0296 ICR1L=0x00;
000617 bde6      	OUT  0x26,R30
                 ; 0000 0297 OCR1AH=0x00;
000618 bdeb      	OUT  0x2B,R30
                 ; 0000 0298 OCR1AL=0x00;
000619 bdea      	OUT  0x2A,R30
                 ; 0000 0299 OCR1BH=0x00;
00061a bde9      	OUT  0x29,R30
                 ; 0000 029A OCR1BL=0x00;
00061b bde8      	OUT  0x28,R30
                 ; 0000 029B 
                 ; 0000 029C // Timer/Counter 2 initialization
                 ; 0000 029D // Clock source: System Clock
                 ; 0000 029E // Clock value: Timer2 Stopped
                 ; 0000 029F // Mode: Normal top=FFh
                 ; 0000 02A0 // OC2 output: Disconnected
                 ; 0000 02A1 ASSR=0x00;
00061c bde2      	OUT  0x22,R30
                 ; 0000 02A2 TCCR2=0x00;
00061d bde5      	OUT  0x25,R30
                 ; 0000 02A3 TCNT2=0x00;
00061e bde4      	OUT  0x24,R30
                 ; 0000 02A4 OCR2=0x00;
00061f bde3      	OUT  0x23,R30
                 ; 0000 02A5 
                 ; 0000 02A6 // External Interrupt(s) initialization
                 ; 0000 02A7 // INT0: Off
                 ; 0000 02A8 // INT1: Off
                 ; 0000 02A9 // INT2: Off
                 ; 0000 02AA MCUCR=0x00;
000620 bfe5      	OUT  0x35,R30
                 ; 0000 02AB MCUCSR=0x00;
000621 bfe4      	OUT  0x34,R30
                 ; 0000 02AC 
                 ; 0000 02AD 
                 ; 0000 02AE // Timer(s)/Counter(s) Interrupt(s) initialization
                 ; 0000 02AF TIMSK=0x01;
000622 e0e1      	LDI  R30,LOW(1)
000623 bfe9      	OUT  0x39,R30
                 ; 0000 02B0 
                 ; 0000 02B1 // Analog Comparator initialization
                 ; 0000 02B2 // Analog Comparator: Off
                 ; 0000 02B3 // Analog Comparator Input Capture by Timer/Counter 1: Off
                 ; 0000 02B4 ACSR=0x80;
000624 e8e0      	LDI  R30,LOW(128)
000625 b9e8      	OUT  0x8,R30
                 ; 0000 02B5 SFIOR=0x00;
000626 e0e0      	LDI  R30,LOW(0)
000627 bfe0      	OUT  0x30,R30
                 ; 0000 02B6 
                 ; 0000 02B7 // ADC initialization
                 ; 0000 02B8 // ADC Clock frequency: 62.500 kHz
                 ; 0000 02B9 // ADC Voltage Reference: Int., cap. on AREF
                 ; 0000 02BA // ADC Auto Trigger Source: Free Running
                 ; 0000 02BB ADMUX=ADC_VREF_TYPE & 0xff;
000628 e4e0      	LDI  R30,LOW(64)
000629 b9e7      	OUT  0x7,R30
                 ; 0000 02BC ADCSRA=0xA7;
00062a eae7      	LDI  R30,LOW(167)
00062b b9e6      	OUT  0x6,R30
                 ; 0000 02BD SFIOR&=0x1F;
00062c b7e0      	IN   R30,0x30
00062d 71ef      	ANDI R30,LOW(0x1F)
00062e bfe0      	OUT  0x30,R30
                 ; 0000 02BE 
                 ; 0000 02BF // LCD module initialization
                 ; 0000 02C0 lcd_init(16);
00062f e1e0      	LDI  R30,LOW(16)
000630 93ea      	ST   -Y,R30
000631 940e 1f3d 	CALL _lcd_init
                 ; 0000 02C1 
                 ; 0000 02C2 // Global enable interrupts
                 ; 0000 02C3 #asm("sei")
000633 9478      	sei
                 ; 0000 02C4 
                 ; 0000 02C5 
                 ; 0000 02C6 
                 ; 0000 02C7 
                 ; 0000 02C8 
                 ; 0000 02C9 
                 ; 0000 02CA 
                 ; 0000 02CB 
                 ; 0000 02CC 
                 ; 0000 02CD 
                 ; 0000 02CE 
                 ; 0000 02CF // Uzfiksuoti kada buvo issijunges valdiklis
                 ; 0000 02D0     if(LogType[GetOldestLogID()]==99){
000634 dd08      	RCALL _GetOldestLogID
000635 e0f0      	LDI  R31,0
000636 5dec      	SUBI R30,LOW(-_LogType)
000637 4ffd      	SBCI R31,HIGH(-_LogType)
000638 01df      	MOVW R26,R30
000639 940e 2052 	CALL __EEPROMRDB
00063b 36e3      	CPI  R30,LOW(0x63)
00063c f469      	BRNE _0xC2
                 ; 0000 02D1     LogType[GetOldestLogID()] = 3;
00063d dcff      	RCALL _GetOldestLogID
00063e e0f0      	LDI  R31,0
00063f 5dec      	SUBI R30,LOW(-_LogType)
000640 4ffd      	SBCI R31,HIGH(-_LogType)
000641 01df      	MOVW R26,R30
000642 e0e3      	LDI  R30,LOW(3)
000643 940e 206e 	CALL __EEPROMWRB
                 ; 0000 02D2     NewestLog = GetOldestLogID();
000645 dcf7      	RCALL _GetOldestLogID
000646 e0a7      	LDI  R26,LOW(_NewestLog)
000647 e0b0      	LDI  R27,HIGH(_NewestLog)
000648 940e 206e 	CALL __EEPROMWRB
                 ; 0000 02D3     }
                 ; 0000 02D4 
                 ; 0000 02D5     if((LitersPerMinute>=100)||(LitersPerMinute<=0)){
                 _0xC2:
00064a eea6      	LDI  R26,LOW(_LitersPerMinute)
00064b e0b3      	LDI  R27,HIGH(_LitersPerMinute)
00064c 940e 204e 	CALL __EEPROMRDW
00064e 36e4      	CPI  R30,LOW(0x64)
00064f e0a0      	LDI  R26,HIGH(0x64)
000650 07fa      	CPC  R31,R26
000651 f424      	BRGE _0xC4
000652 01df      	MOVW R26,R30
000653 940e 207f 	CALL __CPW02
000655 f034      	BRLT _0xC3
                 _0xC4:
                 ; 0000 02D6     LitersPerMinute = DEFAULT_WATER_FLOW;
000656 eea6      	LDI  R26,LOW(_LitersPerMinute)
000657 e0b3      	LDI  R27,HIGH(_LitersPerMinute)
000658 e1e4      	LDI  R30,LOW(20)
000659 e0f0      	LDI  R31,HIGH(20)
00065a 940e 2066 	CALL __EEPROMWRW
                 ; 0000 02D7     }
                 ; 0000 02D8 
                 ; 0000 02D9 
                 ; 0000 02DA MinimumAntifreezeTemp = 350;
                 _0xC3:
00065c efa0      	LDI  R26,LOW(_MinimumAntifreezeTemp)
00065d e0b3      	LDI  R27,HIGH(_MinimumAntifreezeTemp)
00065e e5ee      	LDI  R30,LOW(350)
00065f e0f1      	LDI  R31,HIGH(350)
000660 940e 2066 	CALL __EEPROMWRW
                 ; 0000 02DB 
                 ; 0000 02DC     if((DifferenceBoilerAndSolar<MIN_DIFFERENCE_SOLAR_BOILER)||
                 ; 0000 02DD     (DifferenceBoilerAndSolar>MAX_DIFFERENCE_SOLAR_BOILER)){
000662 efa2      	LDI  R26,LOW(_DifferenceBoilerAndSolar)
000663 e0b3      	LDI  R27,HIGH(_DifferenceBoilerAndSolar)
000664 940e 204e 	CALL __EEPROMRDW
000666 01df      	MOVW R26,R30
000667 97f2      	SBIW R30,50
000668 f02c      	BRLT _0xC7
000669 01fd      	MOVW R30,R26
00066a 3feb      	CPI  R30,LOW(0xFB)
00066b e0a0      	LDI  R26,HIGH(0xFB)
00066c 07fa      	CPC  R31,R26
00066d f034      	BRLT _0xC6
                 _0xC7:
                 ; 0000 02DE     DifferenceBoilerAndSolar = DEFAULT_DIFFERENCE_SOLAR_BOILER;
00066e efa2      	LDI  R26,LOW(_DifferenceBoilerAndSolar)
00066f e0b3      	LDI  R27,HIGH(_DifferenceBoilerAndSolar)
000670 e6e4      	LDI  R30,LOW(100)
000671 e0f0      	LDI  R31,HIGH(100)
000672 940e 2066 	CALL __EEPROMWRW
                 ; 0000 02DF     }
                 ; 0000 02E0 
                 ; 0000 02E1     if((MaxDayTemperature<=-1000)||
                 _0xC6:
                 ; 0000 02E2     (MaxDayTemperature>=1000)){
000674 efa4      	LDI  R26,LOW(_MaxDayTemperature)
000675 e0b3      	LDI  R27,HIGH(_MaxDayTemperature)
000676 940e 204e 	CALL __EEPROMRDW
000678 010f      	MOVW R0,R30
000679 01df      	MOVW R26,R30
00067a e1e8      	LDI  R30,LOW(64536)
00067b effc      	LDI  R31,HIGH(64536)
00067c 17ea      	CP   R30,R26
00067d 07fb      	CPC  R31,R27
00067e f42c      	BRGE _0xCA
00067f 01f0      	MOVW R30,R0
000680 3ee8      	CPI  R30,LOW(0x3E8)
000681 e0a3      	LDI  R26,HIGH(0x3E8)
000682 07fa      	CPC  R31,R26
000683 f034      	BRLT _0xC9
                 _0xCA:
                 ; 0000 02E3     MaxDayTemperature = 0;
000684 efa4      	LDI  R26,LOW(_MaxDayTemperature)
000685 e0b3      	LDI  R27,HIGH(_MaxDayTemperature)
000686 e0e0      	LDI  R30,LOW(0)
000687 e0f0      	LDI  R31,HIGH(0)
000688 940e 2066 	CALL __EEPROMWRW
                 ; 0000 02E4     }
                 ; 0000 02E5 
                 ; 0000 02E6     if(WattHoursPerDay==4294967295){
                 _0xC9:
00068a eeac      	LDI  R26,LOW(_WattHoursPerDay)
00068b e0b3      	LDI  R27,HIGH(_WattHoursPerDay)
00068c 940e 204a 	CALL __EEPROMRDD
                +
00068e 3fef     +CPI R30 , LOW ( 0xFFFFFFFF )
00068f efaf     +LDI R26 , HIGH ( 0xFFFFFFFF )
000690 07fa     +CPC R31 , R26
000691 efaf     +LDI R26 , BYTE3 ( 0xFFFFFFFF )
000692 076a     +CPC R22 , R26
000693 efaf     +LDI R26 , BYTE4 ( 0xFFFFFFFF )
000694 077a     +CPC R23 , R26
                 	__CPD1N 0xFFFFFFFF
000695 f441      	BRNE _0xCC
                 ; 0000 02E7     WattHoursPerDay = 0;
000696 eeac      	LDI  R26,LOW(_WattHoursPerDay)
000697 e0b3      	LDI  R27,HIGH(_WattHoursPerDay)
                +
000698 e0e0     +LDI R30 , LOW ( 0x0 )
000699 e0f0     +LDI R31 , HIGH ( 0x0 )
00069a e060     +LDI R22 , BYTE3 ( 0x0 )
00069b e070     +LDI R23 , BYTE4 ( 0x0 )
                 	__GETD1N 0x0
00069c 940e 205e 	CALL __EEPROMWRD
                 ; 0000 02E8     }
                 ; 0000 02E9 
                 ; 0000 02EA     if(SolarColectorWattHours==4294967295){
                 _0xCC:
00069e eea8      	LDI  R26,LOW(_SolarColectorWattHours)
00069f e0b3      	LDI  R27,HIGH(_SolarColectorWattHours)
0006a0 940e 204a 	CALL __EEPROMRDD
                +
0006a2 3fef     +CPI R30 , LOW ( 0xFFFFFFFF )
0006a3 efaf     +LDI R26 , HIGH ( 0xFFFFFFFF )
0006a4 07fa     +CPC R31 , R26
0006a5 efaf     +LDI R26 , BYTE3 ( 0xFFFFFFFF )
0006a6 076a     +CPC R22 , R26
0006a7 efaf     +LDI R26 , BYTE4 ( 0xFFFFFFFF )
0006a8 077a     +CPC R23 , R26
                 	__CPD1N 0xFFFFFFFF
0006a9 f441      	BRNE _0xCD
                 ; 0000 02EB     SolarColectorWattHours = 0;
0006aa eea8      	LDI  R26,LOW(_SolarColectorWattHours)
0006ab e0b3      	LDI  R27,HIGH(_SolarColectorWattHours)
                +
0006ac e0e0     +LDI R30 , LOW ( 0x0 )
0006ad e0f0     +LDI R31 , HIGH ( 0x0 )
0006ae e060     +LDI R22 , BYTE3 ( 0x0 )
0006af e070     +LDI R23 , BYTE4 ( 0x0 )
                 	__GETD1N 0x0
0006b0 940e 205e 	CALL __EEPROMWRD
                 ; 0000 02EC     }
                 ; 0000 02ED 
                 ; 0000 02EE     if((RealTimeHour<0)||(RealTimeHour>=24)||
                 _0xCD:
                 ; 0000 02EF     (RealTimeMinute<0)||(RealTimeMinute>=60)){
0006b2 e0a4      	LDI  R26,LOW(_RealTimeHour)
0006b3 e0b0      	LDI  R27,HIGH(_RealTimeHour)
0006b4 940e 2052 	CALL __EEPROMRDB
0006b6 30e0      	CPI  R30,0
0006b7 f074      	BRLT _0xCF
0006b8 31e8      	CPI  R30,LOW(0x18)
0006b9 f464      	BRGE _0xCF
0006ba e0a5      	LDI  R26,LOW(_RealTimeMinute)
0006bb e0b0      	LDI  R27,HIGH(_RealTimeMinute)
0006bc 940e 2052 	CALL __EEPROMRDB
0006be 30e0      	CPI  R30,0
0006bf f034      	BRLT _0xCF
0006c0 e0a5      	LDI  R26,LOW(_RealTimeMinute)
0006c1 e0b0      	LDI  R27,HIGH(_RealTimeMinute)
0006c2 940e 2052 	CALL __EEPROMRDB
0006c4 33ec      	CPI  R30,LOW(0x3C)
0006c5 f04c      	BRLT _0xCE
                 _0xCF:
                 ; 0000 02F0     RealTimeHour = 0;
0006c6 e0a4      	LDI  R26,LOW(_RealTimeHour)
0006c7 e0b0      	LDI  R27,HIGH(_RealTimeHour)
0006c8 e0e0      	LDI  R30,LOW(0)
0006c9 940e 206e 	CALL __EEPROMWRB
                 ; 0000 02F1     RealTimeMinute = 0;
0006cb e0a5      	LDI  R26,LOW(_RealTimeMinute)
0006cc e0b0      	LDI  R27,HIGH(_RealTimeMinute)
0006cd 940e 206e 	CALL __EEPROMWRB
                 ; 0000 02F2     }
                 ; 0000 02F3 
                 ; 0000 02F4 
                 ; 0000 02F5 MakeValidRealTimeDate();
                 _0xCE:
0006cf dbf1      	RCALL _MakeValidRealTimeDate
                 ; 0000 02F6 
                 ; 0000 02F7 LCD_LED = 1;
0006d0 9adf      	SBI  0x1B,7
                 ; 0000 02F8 
                 ; 0000 02F9 // Hello
                 ; 0000 02FA lcd_clear();
0006d1 940e 1ed0 	CALL _lcd_clear
                 ; 0000 02FB lcd_puts("SAULES KOLEKTOR.");
                +
0006d3 e6e0     +LDI R30 , LOW ( _0xD3 + ( 0 ) )
0006d4 e0f2     +LDI R31 , HIGH ( _0xD3 + ( 0 ) )
                 	__POINTW1MN _0xD3,0
0006d5 93fa      	ST   -Y,R31
0006d6 93ea      	ST   -Y,R30
0006d7 940e 1f0f 	CALL _lcd_puts
                 ; 0000 02FC lcd_puts("VALDIKLIS V1.0  ");
                +
0006d9 e7e1     +LDI R30 , LOW ( _0xD3 + ( 17 ) )
0006da e0f2     +LDI R31 , HIGH ( _0xD3 + ( 17 ) )
                 	__POINTW1MN _0xD3,17
0006db 93fa      	ST   -Y,R31
0006dc 93ea      	ST   -Y,R30
0006dd 940e 1f0f 	CALL _lcd_puts
                 ; 0000 02FD delay_ms(1000);
0006df eee8      	LDI  R30,LOW(1000)
0006e0 e0f3      	LDI  R31,HIGH(1000)
0006e1 93fa      	ST   -Y,R31
0006e2 93ea      	ST   -Y,R30
0006e3 940e 1f7e 	CALL _delay_ms
                 ; 0000 02FE 
                 ; 0000 02FF 
                 ; 0000 0300 
                 ; 0000 0301 
                 ; 0000 0302 /*
                 ; 0000 0303 // FAT function result
                 ; 0000 0304 static FRESULT res;
                 ; 0000 0305 // will hold the information for logical drive 0:
                 ; 0000 0306 static FATFS fat;
                 ; 0000 0307 // pointer to the FATFS type structure
                 ; 0000 0308 static FATFS *pfat;
                 ; 0000 0309 // number of free clusters on logical drive 0:
                 ; 0000 030A static unsigned long free_clusters;
                 ; 0000 030B // number of free kbytes on logical drive 0:
                 ; 0000 030C static unsigned long free_kbytes;
                 ; 0000 030D // root directory path for logical drive 0:
                 ; 0000 030E static char root_path[]="0:/";
                 ; 0000 030F */
                 ; 0000 0310 
                 ; 0000 0311 
                 ; 0000 0312 
                 ; 0000 0313 // point to the FATFS structure that holds
                 ; 0000 0314 //information for the logical drive 0:
                 ; 0000 0315 //pfat=&fat;
                 ; 0000 0316 
                 ; 0000 0317 /*
                 ; 0000 0318 // mount logical drive 0:
                 ; 0000 0319 lcd_clear();
                 ; 0000 031A if ((res=f_mount(0,pfat))==FR_OK)
                 ; 0000 031B    lcd_puts("Logical drive 0:Mounted OK");
                 ; 0000 031C else
                 ; 0000 031D    // an error occured, display it and stop
                 ; 0000 031E    error(res);
                 ; 0000 031F delay_ms(2000);
                 ; 0000 0320 */
                 ; 0000 0321 
                 ; 0000 0322 /*
                 ; 0000 0323 lcd_clear();
                 ; 0000 0324 static unsigned char disk_status;
                 ; 0000 0325 disk_status = disk_initialize(0);
                 ; 0000 0326     if(disk_status & STA_NOINIT) lcd_puts("Disk init failed");
                 ; 0000 0327     else if(disk_status & STA_NODISK) lcd_puts("Card not present");
                 ; 0000 0328     else if(disk_status & STA_PROTECT) lcd_puts("Card write\nprotected");
                 ; 0000 0329     else lcd_puts("Init OK");
                 ; 0000 032A delay_ms(2000);
                 ; 0000 032B */
                 ; 0000 032C 
                 ; 0000 032D 
                 ; 0000 032E 
                 ; 0000 032F 
                 ; 0000 0330 
                 ; 0000 0331 /*
                 ; 0000 0332 lcd_clear();
                 ; 0000 0333     if((res=f_getfree(root_path,&free_clusters,&pfat))==FR_OK){
                 ; 0000 0334     free_kbytes=free_clusters
                 ; 0000 0335     pfat->csize/2;
                 ; 0000 0336     lcd_puts("Free space:     ");
                 ; 0000 0337     lcd_put_number(0,6,0,0,free_kbytes,0);
                 ; 0000 0338     lcd_puts("kB");
                 ; 0000 0339     }
                 ; 0000 033A     else
                 ; 0000 033B     error(res);
                 ; 0000 033C 
                 ; 0000 033D delay_ms(3000);
                 ; 0000 033E */
                 ; 0000 033F 
                 ; 0000 0340 
                 ; 0000 0341 
                 ; 0000 0342 
                 ; 0000 0343     while(1){
                 _0xD4:
                 ; 0000 0344     //////////////////////////////////////////////////////////////////////////////////
                 ; 0000 0345     ////////////////////////////// TERMODAVIKLIAI ////////////////////////////////////
                 ; 0000 0346     //////////////////////////////////////////////////////////////////////////////////
                 ; 0000 0347     static unsigned char TERMOSWICH;
                 ; 0000 0348         if(TERMOSWITCH_INPUT==1){
0006e5 9b87      	SBIS 0x10,7
0006e6 c01c      	RJMP _0xD7
                 ; 0000 0349             if(TERMOSWICH==0){
0006e7 91e0 036a 	LDS  R30,_TERMOSWICH_S0000010001
0006e9 30e0      	CPI  R30,0
0006ea f4b9      	BRNE _0xD8
                 ; 0000 034A             TERMOSWICH = 1;
0006eb e0e1      	LDI  R30,LOW(1)
0006ec 93e0 036a 	STS  _TERMOSWICH_S0000010001,R30
                 ; 0000 034B             Address[0] = 4;
0006ee e0e4      	LDI  R30,LOW(4)
0006ef e0f0      	LDI  R31,HIGH(4)
0006f0 93e0 0286 	STS  _Address,R30
0006f2 93f0 0287 	STS  _Address+1,R31
                 ; 0000 034C             Address[1] = 0;
                +
0006f4 e8e8     +LDI R30 , LOW ( _Address + ( 2 ) )
0006f5 e0f2     +LDI R31 , HIGH ( _Address + ( 2 ) )
                 	__POINTW1MN _Address,2
0006f6 e0a0      	LDI  R26,LOW(0)
0006f7 e0b0      	LDI  R27,HIGH(0)
0006f8 83a0      	STD  Z+0,R26
0006f9 83b1      	STD  Z+1,R27
                 ; 0000 034D             Address[2] = 0;
                +
0006fa e8ea     +LDI R30 , LOW ( _Address + ( 4 ) )
0006fb e0f2     +LDI R31 , HIGH ( _Address + ( 4 ) )
                 	__POINTW1MN _Address,4
0006fc 83a0      	STD  Z+0,R26
0006fd 83b1      	STD  Z+1,R27
                 ; 0000 034E             ANTIFREEZE_PUMP = 1;
0006fe 9ac1      	SBI  0x18,1
                 ; 0000 034F             WATER_PUMP = 1;
0006ff 9ac0      	SBI  0x18,0
                 ; 0000 0350             Acceleration = 5;
000700 e0e5      	LDI  R30,LOW(5)
000701 2e4e      	MOV  R4,R30
                 ; 0000 0351             }
                 ; 0000 0352         }
                 _0xD8:
                 ; 0000 0353         else{
000702 c003      	RJMP _0xDD
                 _0xD7:
                 ; 0000 0354         TERMOSWICH = 0;
000703 e0e0      	LDI  R30,LOW(0)
000704 93e0 036a 	STS  _TERMOSWICH_S0000010001,R30
                 ; 0000 0355         }
                 _0xDD:
                 ; 0000 0356     //////////////////////////////////////////////////////////////////////////////////
                 ; 0000 0357     //////////////////////////////////////////////////////////////////////////////////
                 ; 0000 0358     //////////////////////////////////////////////////////////////////////////////////
                 ; 0000 0359 
                 ; 0000 035A 
                 ; 0000 035B 
                 ; 0000 035C     //////////////////////////////////////////////////////////////////////////////////
                 ; 0000 035D     //////////////////////////// Funkcija kas 1 secunde //////////////////////////////
                 ; 0000 035E     //////////////////////////////////////////////////////////////////////////////////
                 ; 0000 035F     static unsigned char Called_1Second;
                 ; 0000 0360         if(Call_1Second>=1){
000706 91a0 028f 	LDS  R26,_Call_1Second
000708 30a1      	CPI  R26,LOW(0x1)
000709 f410      	BRSH PC+3
00070a 940c 07bb 	JMP _0xDE
                 ; 0000 0361         Called_1Second = 1;
00070c e0e1      	LDI  R30,LOW(1)
00070d 93e0 036b 	STS  _Called_1Second_S0000010001,R30
                 ; 0000 0362         Call_1Second--;
00070f 91e0 028f 	LDS  R30,_Call_1Second
000711 50e1      	SUBI R30,LOW(1)
000712 93e0 028f 	STS  _Call_1Second,R30
                 ; 0000 0363 
                 ; 0000 0364         // Realus laikas
                 ; 0000 0365             if(RealTimeSecond>=59){
000714 e0a6      	LDI  R26,LOW(_RealTimeSecond)
000715 e0b0      	LDI  R27,HIGH(_RealTimeSecond)
000716 940e 2052 	CALL __EEPROMRDB
000718 33eb      	CPI  R30,LOW(0x3B)
000719 f410      	BRSH PC+3
00071a 940c 07a1 	JMP _0xDF
                 ; 0000 0366             RealTimeSecond = 0;
00071c e0a6      	LDI  R26,LOW(_RealTimeSecond)
00071d e0b0      	LDI  R27,HIGH(_RealTimeSecond)
00071e e0e0      	LDI  R30,LOW(0)
00071f 940e 206e 	CALL __EEPROMWRB
                 ; 0000 0367 
                 ; 0000 0368                 if(RealTimeMinute>=59){
000721 e0a5      	LDI  R26,LOW(_RealTimeMinute)
000722 e0b0      	LDI  R27,HIGH(_RealTimeMinute)
000723 940e 2052 	CALL __EEPROMRDB
000725 33eb      	CPI  R30,LOW(0x3B)
000726 f414      	BRGE PC+3
000727 940c 0798 	JMP _0xE0
                 ; 0000 0369                 RealTimeMinute = 0;
000729 e0a5      	LDI  R26,LOW(_RealTimeMinute)
00072a e0b0      	LDI  R27,HIGH(_RealTimeMinute)
00072b e0e0      	LDI  R30,LOW(0)
00072c 940e 206e 	CALL __EEPROMWRB
                 ; 0000 036A                     if(RealTimeHour>=23){
00072e e0a4      	LDI  R26,LOW(_RealTimeHour)
00072f e0b0      	LDI  R27,HIGH(_RealTimeHour)
000730 940e 2052 	CALL __EEPROMRDB
000732 31e7      	CPI  R30,LOW(0x17)
000733 f414      	BRGE PC+3
000734 940c 078f 	JMP _0xE1
                 ; 0000 036B                     RealTimeHour = 0;
000736 e0a4      	LDI  R26,LOW(_RealTimeHour)
000737 e0b0      	LDI  R27,HIGH(_RealTimeHour)
000738 e0e0      	LDI  R30,LOW(0)
000739 940e 206e 	CALL __EEPROMWRB
                 ; 0000 036C                     MaxDayTemperature = SOLAR_OUTPUT_TEMP;
00073b 91e0 028c 	LDS  R30,_SOLAR_OUTPUT_TEMP
00073d 91f0 028d 	LDS  R31,_SOLAR_OUTPUT_TEMP+1
00073f efa4      	LDI  R26,LOW(_MaxDayTemperature)
000740 e0b3      	LDI  R27,HIGH(_MaxDayTemperature)
000741 940e 2066 	CALL __EEPROMWRW
                 ; 0000 036D                     WattHoursPerDay = 0;
000743 eeac      	LDI  R26,LOW(_WattHoursPerDay)
000744 e0b3      	LDI  R27,HIGH(_WattHoursPerDay)
                +
000745 e0e0     +LDI R30 , LOW ( 0x0 )
000746 e0f0     +LDI R31 , HIGH ( 0x0 )
000747 e060     +LDI R22 , BYTE3 ( 0x0 )
000748 e070     +LDI R23 , BYTE4 ( 0x0 )
                 	__GETD1N 0x0
000749 940e 205e 	CALL __EEPROMWRD
                 ; 0000 036E 
                 ; 0000 036F                         if(DayCountInMonth(RealTimeYear,RealTimeMonth)<=RealTimeDay){
00074b e0a0      	LDI  R26,LOW(_RealTimeYear)
00074c e0b0      	LDI  R27,HIGH(_RealTimeYear)
00074d 940e 204e 	CALL __EEPROMRDW
00074f 93fa      	ST   -Y,R31
000750 93ea      	ST   -Y,R30
000751 e0a2      	LDI  R26,LOW(_RealTimeMonth)
000752 e0b0      	LDI  R27,HIGH(_RealTimeMonth)
000753 940e 2052 	CALL __EEPROMRDB
000755 93ea      	ST   -Y,R30
000756 db2d      	RCALL _DayCountInMonth
000757 2e0e      	MOV  R0,R30
000758 e0a3      	LDI  R26,LOW(_RealTimeDay)
000759 e0b0      	LDI  R27,HIGH(_RealTimeDay)
00075a 940e 2052 	CALL __EEPROMRDB
00075c 2da0      	MOV  R26,R0
00075d e0b0      	LDI  R27,0
00075e e0f0      	LDI  R31,0
00075f fde7      	SBRC R30,7
000760 efff      	SER  R31
000761 17ea      	CP   R30,R26
000762 07fb      	CPC  R31,R27
000763 f114      	BRLT _0xE2
                 ; 0000 0370                         RealTimeDay = 1;
000764 e0a3      	LDI  R26,LOW(_RealTimeDay)
000765 e0b0      	LDI  R27,HIGH(_RealTimeDay)
000766 e0e1      	LDI  R30,LOW(1)
000767 940e 206e 	CALL __EEPROMWRB
                 ; 0000 0371 
                 ; 0000 0372                             if(RealTimeMonth>=12){
000769 e0a2      	LDI  R26,LOW(_RealTimeMonth)
00076a e0b0      	LDI  R27,HIGH(_RealTimeMonth)
00076b 940e 2052 	CALL __EEPROMRDB
00076d 30ec      	CPI  R30,LOW(0xC)
00076e f074      	BRLT _0xE3
                 ; 0000 0373                             RealTimeMonth = 1;
00076f e0a2      	LDI  R26,LOW(_RealTimeMonth)
000770 e0b0      	LDI  R27,HIGH(_RealTimeMonth)
000771 e0e1      	LDI  R30,LOW(1)
000772 940e 206e 	CALL __EEPROMWRB
                 ; 0000 0374                             RealTimeYear++;
000774 e0a0      	LDI  R26,LOW(_RealTimeYear)
000775 e0b0      	LDI  R27,HIGH(_RealTimeYear)
000776 940e 204e 	CALL __EEPROMRDW
000778 9631      	ADIW R30,1
000779 940e 2066 	CALL __EEPROMWRW
00077b 9731      	SBIW R30,1
                 ; 0000 0375                             }
                 ; 0000 0376                             else{
00077c c008      	RJMP _0xE4
                 _0xE3:
                 ; 0000 0377                             RealTimeMonth++;
00077d e0a2      	LDI  R26,LOW(_RealTimeMonth)
00077e e0b0      	LDI  R27,HIGH(_RealTimeMonth)
00077f 940e 2052 	CALL __EEPROMRDB
000781 5fef      	SUBI R30,-LOW(1)
000782 940e 206e 	CALL __EEPROMWRB
000784 50e1      	SUBI R30,LOW(1)
                 ; 0000 0378                             }
                 _0xE4:
                 ; 0000 0379 
                 ; 0000 037A                         }
                 ; 0000 037B                         else{
000785 c008      	RJMP _0xE5
                 _0xE2:
                 ; 0000 037C                         RealTimeDay++;
000786 e0a3      	LDI  R26,LOW(_RealTimeDay)
000787 e0b0      	LDI  R27,HIGH(_RealTimeDay)
000788 940e 2052 	CALL __EEPROMRDB
00078a 5fef      	SUBI R30,-LOW(1)
00078b 940e 206e 	CALL __EEPROMWRB
00078d 50e1      	SUBI R30,LOW(1)
                 ; 0000 037D                         }
                 _0xE5:
                 ; 0000 037E                     }
                 ; 0000 037F                     else{
00078e c008      	RJMP _0xE6
                 _0xE1:
                 ; 0000 0380                     RealTimeHour++;
00078f e0a4      	LDI  R26,LOW(_RealTimeHour)
000790 e0b0      	LDI  R27,HIGH(_RealTimeHour)
000791 940e 2052 	CALL __EEPROMRDB
000793 5fef      	SUBI R30,-LOW(1)
000794 940e 206e 	CALL __EEPROMWRB
000796 50e1      	SUBI R30,LOW(1)
                 ; 0000 0381                     }
                 _0xE6:
                 ; 0000 0382                 }
                 ; 0000 0383                 else{
000797 c008      	RJMP _0xE7
                 _0xE0:
                 ; 0000 0384                 RealTimeMinute++;
000798 e0a5      	LDI  R26,LOW(_RealTimeMinute)
000799 e0b0      	LDI  R27,HIGH(_RealTimeMinute)
00079a 940e 2052 	CALL __EEPROMRDB
00079c 5fef      	SUBI R30,-LOW(1)
00079d 940e 206e 	CALL __EEPROMWRB
00079f 50e1      	SUBI R30,LOW(1)
                 ; 0000 0385                 }
                 _0xE7:
                 ; 0000 0386             }
                 ; 0000 0387             else{
0007a0 c008      	RJMP _0xE8
                 _0xDF:
                 ; 0000 0388             RealTimeSecond++;
0007a1 e0a6      	LDI  R26,LOW(_RealTimeSecond)
0007a2 e0b0      	LDI  R27,HIGH(_RealTimeSecond)
0007a3 940e 2052 	CALL __EEPROMRDB
0007a5 5fef      	SUBI R30,-LOW(1)
0007a6 940e 206e 	CALL __EEPROMWRB
0007a8 50e1      	SUBI R30,LOW(1)
                 ; 0000 0389             }
                 _0xE8:
                 ; 0000 038A         /////////
                 ; 0000 038B             if(CODE_TimeLeft>0){
0007a9 91a0 0297 	LDS  R26,_CODE_TimeLeft_G000
0007ab 30a1      	CPI  R26,LOW(0x1)
0007ac f028      	BRLO _0xE9
                 ; 0000 038C             CODE_TimeLeft--;
0007ad 91e0 0297 	LDS  R30,_CODE_TimeLeft_G000
0007af 50e1      	SUBI R30,LOW(1)
0007b0 93e0 0297 	STS  _CODE_TimeLeft_G000,R30
                 ; 0000 038D             }
                 ; 0000 038E 
                 ; 0000 038F             if(PAGRINDINIS_LANGAS<120){
                 _0xE9:
0007b2 91a0 028e 	LDS  R26,_PAGRINDINIS_LANGAS
0007b4 37a8      	CPI  R26,LOW(0x78)
0007b5 f428      	BRSH _0xEA
                 ; 0000 0390             PAGRINDINIS_LANGAS++;
0007b6 91e0 028e 	LDS  R30,_PAGRINDINIS_LANGAS
0007b8 5fef      	SUBI R30,-LOW(1)
0007b9 93e0 028e 	STS  _PAGRINDINIS_LANGAS,R30
                 ; 0000 0391             }
                 ; 0000 0392         }
                 _0xEA:
                 ; 0000 0393     //////////////////////////////////////////////////////////////////////////////////
                 ; 0000 0394     //////////////////////////////////////////////////////////////////////////////////
                 ; 0000 0395     //////////////////////////////////////////////////////////////////////////////////
                 ; 0000 0396 
                 ; 0000 0397 
                 ; 0000 0398 
                 ; 0000 0399     //////////////////////////////////////////////////////////////////////////////////
                 ; 0000 039A     ////////////////////////////// Temperaturu Gavimas////////////////////////////////
                 ; 0000 039B     //////////////////////////////////////////////////////////////////////////////////
                 ; 0000 039C         if(Called_1Second==1){
                 _0xDE:
0007bb 91a0 036b 	LDS  R26,_Called_1Second_S0000010001
0007bd 30a1      	CPI  R26,LOW(0x1)
0007be f011      	BREQ PC+3
0007bf 940c 083f 	JMP _0xEB
                 ; 0000 039D         static signed char SolarColectorState=-1;
                 
                 	.DSEG
                 
                 	.CSEG
                 ; 0000 039E             if(SolarColectorState==-1){
0007c1 91a0 036c 	LDS  R26,_SolarColectorState_S0000010002
0007c3 3faf      	CPI  R26,LOW(0xFF)
0007c4 f409      	BRNE _0xED
                 ; 0000 039F             TEMPERATURE_BOIL = 1;
0007c5 c071      	RJMP _0x331
                 ; 0000 03A0             TEMPERATURE_S_INP = 0;
                 ; 0000 03A1             TEMPERATURE_S_OUT = 0;
                 ; 0000 03A2             }
                 ; 0000 03A3             else if(SolarColectorState==10){
                 _0xED:
0007c6 91a0 036c 	LDS  R26,_SolarColectorState_S0000010002
0007c8 30aa      	CPI  R26,LOW(0xA)
0007c9 f489      	BRNE _0xF5
                 ; 0000 03A4             BOILER_TEMP = GetTemperature();
0007ca da4c      	RCALL _GetTemperature
0007cb 015f      	MOVW R10,R30
                 ; 0000 03A5                 if(BOILER_TEMP>999){
0007cc eee7      	LDI  R30,LOW(999)
0007cd e0f3      	LDI  R31,HIGH(999)
0007ce 15ea      	CP   R30,R10
0007cf 05fb      	CPC  R31,R11
0007d0 f40c      	BRGE _0xF6
                 ; 0000 03A6                 BOILER_TEMP = 999;
0007d1 c005      	RJMP _0x332
                 ; 0000 03A7                 }
                 ; 0000 03A8                 else if(BOILER_TEMP<-999){
                 _0xF6:
0007d2 e1e9      	LDI  R30,LOW(64537)
0007d3 effc      	LDI  R31,HIGH(64537)
0007d4 16ae      	CP   R10,R30
0007d5 06bf      	CPC  R11,R31
0007d6 f40c      	BRGE _0xF8
                 ; 0000 03A9                 BOILER_TEMP = -999;
                 _0x332:
0007d7 015f      	MOVW R10,R30
                 ; 0000 03AA                 }
                 ; 0000 03AB 
                 ; 0000 03AC             TEMPERATURE_BOIL = 0;
                 _0xF8:
0007d8 98d9      	CBI  0x1B,1
                 ; 0000 03AD             TEMPERATURE_S_INP = 1;
0007d9 9ada      	SBI  0x1B,2
                 ; 0000 03AE             TEMPERATURE_S_OUT = 0;
0007da c05e      	RJMP _0x333
                 ; 0000 03AF             }
                 ; 0000 03B0             else if(SolarColectorState==20){
                 _0xF5:
0007db 91a0 036c 	LDS  R26,_SolarColectorState_S0000010002
0007dd 31a4      	CPI  R26,LOW(0x14)
0007de f4f9      	BRNE _0x100
                 ; 0000 03B1             LAST_SOLAR_INPUT_TEMP = SOLAR_INPUT_TEMP;
0007df 0136      	MOVW R6,R12
                 ; 0000 03B2             SOLAR_INPUT_TEMP = GetTemperature();
0007e0 da36      	RCALL _GetTemperature
0007e1 016f      	MOVW R12,R30
                 ; 0000 03B3                 if(SOLAR_INPUT_TEMP>999){
0007e2 eee7      	LDI  R30,LOW(999)
0007e3 e0f3      	LDI  R31,HIGH(999)
0007e4 15ec      	CP   R30,R12
0007e5 05fd      	CPC  R31,R13
0007e6 f40c      	BRGE _0x101
                 ; 0000 03B4                 SOLAR_INPUT_TEMP = 999;
0007e7 c005      	RJMP _0x334
                 ; 0000 03B5                 }
                 ; 0000 03B6                 else if(SOLAR_INPUT_TEMP<-999){
                 _0x101:
0007e8 e1e9      	LDI  R30,LOW(64537)
0007e9 effc      	LDI  R31,HIGH(64537)
0007ea 16ce      	CP   R12,R30
0007eb 06df      	CPC  R13,R31
0007ec f40c      	BRGE _0x103
                 ; 0000 03B7                 SOLAR_INPUT_TEMP = -999;
                 _0x334:
0007ed 016f      	MOVW R12,R30
                 ; 0000 03B8                 }
                 ; 0000 03B9 
                 ; 0000 03BA                 if(MaxDayTemperature<SOLAR_INPUT_TEMP){
                 _0x103:
0007ee efa4      	LDI  R26,LOW(_MaxDayTemperature)
0007ef e0b3      	LDI  R27,HIGH(_MaxDayTemperature)
0007f0 940e 204e 	CALL __EEPROMRDW
0007f2 15ec      	CP   R30,R12
0007f3 05fd      	CPC  R31,R13
0007f4 f42c      	BRGE _0x104
                 ; 0000 03BB                 MaxDayTemperature = SOLAR_INPUT_TEMP;
0007f5 01f6      	MOVW R30,R12
0007f6 efa4      	LDI  R26,LOW(_MaxDayTemperature)
0007f7 e0b3      	LDI  R27,HIGH(_MaxDayTemperature)
0007f8 940e 2066 	CALL __EEPROMWRW
                 ; 0000 03BC                 }
                 ; 0000 03BD 
                 ; 0000 03BE             TEMPERATURE_BOIL = 0;
                 _0x104:
0007fa 98d9      	CBI  0x1B,1
                 ; 0000 03BF             TEMPERATURE_S_INP = 0;
0007fb 98da      	CBI  0x1B,2
                 ; 0000 03C0             TEMPERATURE_S_OUT = 1;
0007fc 9adb      	SBI  0x1B,3
                 ; 0000 03C1             }
                 ; 0000 03C2             else if(SolarColectorState==30){
0007fd c03c      	RJMP _0x10B
                 _0x100:
0007fe 91a0 036c 	LDS  R26,_SolarColectorState_S0000010002
000800 31ae      	CPI  R26,LOW(0x1E)
000801 f5c1      	BRNE _0x10C
                 ; 0000 03C3             SolarColectorState = 0;
000802 e0e0      	LDI  R30,LOW(0)
000803 93e0 036c 	STS  _SolarColectorState_S0000010002,R30
                 ; 0000 03C4 
                 ; 0000 03C5             LAST_SOLAR_OUTPUT_TEMP = SOLAR_OUTPUT_TEMP;
                +
000805 9080 028c+LDS R8 , 0 + ( _SOLAR_OUTPUT_TEMP )
000807 9090 028d+LDS R9 , 0 + ( _SOLAR_OUTPUT_TEMP ) + 1
                 	__GETWRMN 8,9,0,_SOLAR_OUTPUT_TEMP
                 ; 0000 03C6             SOLAR_OUTPUT_TEMP = GetTemperature();
000809 da0d      	RCALL _GetTemperature
00080a 93e0 028c 	STS  _SOLAR_OUTPUT_TEMP,R30
00080c 93f0 028d 	STS  _SOLAR_OUTPUT_TEMP+1,R31
                 ; 0000 03C7                 if(SOLAR_OUTPUT_TEMP>999){
00080e 91a0 028c 	LDS  R26,_SOLAR_OUTPUT_TEMP
000810 91b0 028d 	LDS  R27,_SOLAR_OUTPUT_TEMP+1
000812 3ea8      	CPI  R26,LOW(0x3E8)
000813 e0e3      	LDI  R30,HIGH(0x3E8)
000814 07be      	CPC  R27,R30
000815 f01c      	BRLT _0x10D
                 ; 0000 03C8                 SOLAR_OUTPUT_TEMP = 999;
000816 eee7      	LDI  R30,LOW(999)
000817 e0f3      	LDI  R31,HIGH(999)
000818 c00a      	RJMP _0x335
                 ; 0000 03C9                 }
                 ; 0000 03CA                 else if(SOLAR_OUTPUT_TEMP<-999){
                 _0x10D:
000819 91a0 028c 	LDS  R26,_SOLAR_OUTPUT_TEMP
00081b 91b0 028d 	LDS  R27,_SOLAR_OUTPUT_TEMP+1
00081d 31a9      	CPI  R26,LOW(0xFC19)
00081e efec      	LDI  R30,HIGH(0xFC19)
00081f 07be      	CPC  R27,R30
000820 f434      	BRGE _0x10F
                 ; 0000 03CB                 SOLAR_OUTPUT_TEMP = -999;
000821 e1e9      	LDI  R30,LOW(64537)
000822 effc      	LDI  R31,HIGH(64537)
                 _0x335:
000823 93e0 028c 	STS  _SOLAR_OUTPUT_TEMP,R30
000825 93f0 028d 	STS  _SOLAR_OUTPUT_TEMP+1,R31
                 ; 0000 03CC                 }
                 ; 0000 03CD 
                 ; 0000 03CE                 if(MaxDayTemperature<SOLAR_OUTPUT_TEMP){
                 _0x10F:
000827 efa4      	LDI  R26,LOW(_MaxDayTemperature)
000828 e0b3      	LDI  R27,HIGH(_MaxDayTemperature)
000829 940e 204e 	CALL __EEPROMRDW
00082b 01df      	MOVW R26,R30
00082c 91e0 028c 	LDS  R30,_SOLAR_OUTPUT_TEMP
00082e 91f0 028d 	LDS  R31,_SOLAR_OUTPUT_TEMP+1
000830 17ae      	CP   R26,R30
000831 07bf      	CPC  R27,R31
000832 f424      	BRGE _0x110
                 ; 0000 03CF                 MaxDayTemperature = SOLAR_OUTPUT_TEMP;
000833 efa4      	LDI  R26,LOW(_MaxDayTemperature)
000834 e0b3      	LDI  R27,HIGH(_MaxDayTemperature)
000835 940e 2066 	CALL __EEPROMWRW
                 ; 0000 03D0                 }
                 ; 0000 03D1 
                 ; 0000 03D2             TEMPERATURE_BOIL = 1;
                 _0x110:
                 _0x331:
000837 9ad9      	SBI  0x1B,1
                 ; 0000 03D3             TEMPERATURE_S_INP = 0;
000838 98da      	CBI  0x1B,2
                 ; 0000 03D4             TEMPERATURE_S_OUT = 0;
                 _0x333:
000839 98db      	CBI  0x1B,3
                 ; 0000 03D5             }
                 ; 0000 03D6         SolarColectorState++;
                 _0x10C:
                 _0x10B:
00083a 91e0 036c 	LDS  R30,_SolarColectorState_S0000010002
00083c 5fef      	SUBI R30,-LOW(1)
00083d 93e0 036c 	STS  _SolarColectorState_S0000010002,R30
                 ; 0000 03D7         }
                 ; 0000 03D8     //////////////////////////////////////////////////////////////////////////////////
                 ; 0000 03D9     //////////////////////////////////////////////////////////////////////////////////
                 ; 0000 03DA     //////////////////////////////////////////////////////////////////////////////////
                 ; 0000 03DB 
                 ; 0000 03DC 
                 ; 0000 03DD 
                 ; 0000 03DE     //////////////////////////////////////////////////////////////////////////////////
                 ; 0000 03DF     ////////////////////////////////// Perjungti Siurblius ///////////////////////////
                 ; 0000 03E0     //////////////////////////////////////////////////////////////////////////////////
                 ; 0000 03E1         if(Called_1Second==1){
                 _0xEB:
00083f 91a0 036b 	LDS  R26,_Called_1Second_S0000010001
000841 30a1      	CPI  R26,LOW(0x1)
000842 f011      	BREQ PC+3
000843 940c 0893 	JMP _0x117
                 ; 0000 03E2 
                 ; 0000 03E3             if(SOLAR_OUTPUT_TEMP>LAST_SOLAR_OUTPUT_TEMP){
000845 91a0 028c 	LDS  R26,_SOLAR_OUTPUT_TEMP
000847 91b0 028d 	LDS  R27,_SOLAR_OUTPUT_TEMP+1
000849 168a      	CP   R8,R26
00084a 069b      	CPC  R9,R27
00084b f42c      	BRGE _0x118
                 ; 0000 03E4                 if(Acceleration<5){
00084c e0e5      	LDI  R30,LOW(5)
00084d 164e      	CP   R4,R30
00084e f408      	BRSH _0x119
                 ; 0000 03E5                 Acceleration++;
00084f 9443      	INC  R4
                 ; 0000 03E6                 }
                 ; 0000 03E7             }
                 _0x119:
                 ; 0000 03E8             else{
000850 c004      	RJMP _0x11A
                 _0x118:
                 ; 0000 03E9                 if(Acceleration>0){
000851 e0e0      	LDI  R30,LOW(0)
000852 15e4      	CP   R30,R4
000853 f408      	BRSH _0x11B
                 ; 0000 03EA                 Acceleration--;
000854 944a      	DEC  R4
                 ; 0000 03EB                 }
                 ; 0000 03EC             }
                 _0x11B:
                 _0x11A:
                 ; 0000 03ED 
                 ; 0000 03EE             if(SOLAR_OUTPUT_TEMP>DifferenceBoilerAndSolar+BOILER_TEMP){
000855 efa2      	LDI  R26,LOW(_DifferenceBoilerAndSolar)
000856 e0b3      	LDI  R27,HIGH(_DifferenceBoilerAndSolar)
000857 940e 204e 	CALL __EEPROMRDW
000859 0dea      	ADD  R30,R10
00085a 1dfb      	ADC  R31,R11
00085b 91a0 028c 	LDS  R26,_SOLAR_OUTPUT_TEMP
00085d 91b0 028d 	LDS  R27,_SOLAR_OUTPUT_TEMP+1
00085f 17ea      	CP   R30,R26
000860 07fb      	CPC  R31,R27
000861 f424      	BRGE _0x11C
                 ; 0000 03EF             WATER_PUMP = 1;
000862 9ac0      	SBI  0x18,0
                 ; 0000 03F0             Acceleration = 5;
000863 e0e5      	LDI  R30,LOW(5)
000864 2e4e      	MOV  R4,R30
                 ; 0000 03F1             }
                 ; 0000 03F2             else{
000865 c001      	RJMP _0x11F
                 _0x11C:
                 ; 0000 03F3             WATER_PUMP = 0;
000866 98c0      	CBI  0x18,0
                 ; 0000 03F4             }
                 _0x11F:
                 ; 0000 03F5 
                 ; 0000 03F6             if(Acceleration>=5){
000867 e0e5      	LDI  R30,LOW(5)
000868 164e      	CP   R4,R30
000869 f078      	BRLO _0x122
                 ; 0000 03F7                 if(SOLAR_OUTPUT_TEMP>=MinimumAntifreezeTemp){
00086a efa0      	LDI  R26,LOW(_MinimumAntifreezeTemp)
00086b e0b3      	LDI  R27,HIGH(_MinimumAntifreezeTemp)
00086c 940e 204e 	CALL __EEPROMRDW
00086e 91a0 028c 	LDS  R26,_SOLAR_OUTPUT_TEMP
000870 91b0 028d 	LDS  R27,_SOLAR_OUTPUT_TEMP+1
000872 17ae      	CP   R26,R30
000873 07bf      	CPC  R27,R31
000874 f014      	BRLT _0x123
                 ; 0000 03F8                 ANTIFREEZE_PUMP = 1;
000875 9ac1      	SBI  0x18,1
                 ; 0000 03F9                 }
                 ; 0000 03FA                 else{
000876 c001      	RJMP _0x126
                 _0x123:
                 ; 0000 03FB                 ANTIFREEZE_PUMP = 0;
000877 98c1      	CBI  0x18,1
                 ; 0000 03FC                 }
                 _0x126:
                 ; 0000 03FD             }
                 ; 0000 03FE             else if(Acceleration<=0){
000878 c003      	RJMP _0x129
                 _0x122:
000879 2044      	TST  R4
00087a f409      	BRNE _0x12A
                 ; 0000 03FF             ANTIFREEZE_PUMP = 0;
00087b 98c1      	CBI  0x18,1
                 ; 0000 0400             }
                 ; 0000 0401 
                 ; 0000 0402             if((SOLAR_OUTPUT_TEMP>=850)||(SOLAR_INPUT_TEMP>=850)){
                 _0x12A:
                 _0x129:
00087c 91a0 028c 	LDS  R26,_SOLAR_OUTPUT_TEMP
00087e 91b0 028d 	LDS  R27,_SOLAR_OUTPUT_TEMP+1
000880 35a2      	CPI  R26,LOW(0x352)
000881 e0e3      	LDI  R30,HIGH(0x352)
000882 07be      	CPC  R27,R30
000883 f42c      	BRGE _0x12E
000884 e5e2      	LDI  R30,LOW(850)
000885 e0f3      	LDI  R31,HIGH(850)
000886 16ce      	CP   R12,R30
000887 06df      	CPC  R13,R31
000888 f024      	BRLT _0x12D
                 _0x12E:
                 ; 0000 0403             ANTIFREEZE_PUMP = 1;
000889 9ac1      	SBI  0x18,1
                 ; 0000 0404             WATER_PUMP = 1;
00088a 9ac0      	SBI  0x18,0
                 ; 0000 0405             Acceleration = 5;
00088b e0e5      	LDI  R30,LOW(5)
00088c 2e4e      	MOV  R4,R30
                 ; 0000 0406             }
                 ; 0000 0407 
                 ; 0000 0408             if(TERMOSWITCH_INPUT==1){
                 _0x12D:
00088d 9b87      	SBIS 0x10,7
00088e c004      	RJMP _0x134
                 ; 0000 0409             ANTIFREEZE_PUMP = 1;
00088f 9ac1      	SBI  0x18,1
                 ; 0000 040A             WATER_PUMP = 1;
000890 9ac0      	SBI  0x18,0
                 ; 0000 040B             Acceleration = 5;
000891 e0e5      	LDI  R30,LOW(5)
000892 2e4e      	MOV  R4,R30
                 ; 0000 040C             }
                 ; 0000 040D         }
                 _0x134:
                 ; 0000 040E     //////////////////////////////////////////////////////////////////////////////////
                 ; 0000 040F     //////////////////////////////////////////////////////////////////////////////////
                 ; 0000 0410     //////////////////////////////////////////////////////////////////////////////////
                 ; 0000 0411 
                 ; 0000 0412 
                 ; 0000 0413 
                 ; 0000 0414     //////////////////////////////////////////////////////////////////////////////////
                 ; 0000 0415     ///////////////////////// Atlikto darbo ir galios apskaiciavimas /////////////////
                 ; 0000 0416     //////////////////////////////////////////////////////////////////////////////////
                 ; 0000 0417         if(Called_1Second==1){
                 _0x117:
000893 91a0 036b 	LDS  R26,_Called_1Second_S0000010001
000895 30a1      	CPI  R26,LOW(0x1)
000896 f011      	BREQ PC+3
000897 940c 091d 	JMP _0x139
                 ; 0000 0418         static unsigned char CHECK_JOB_POWER;
                 ; 0000 0419         CHECK_JOB_POWER++;
000899 91e0 036d 	LDS  R30,_CHECK_JOB_POWER_S0000010002
00089b 5fef      	SUBI R30,-LOW(1)
00089c 93e0 036d 	STS  _CHECK_JOB_POWER_S0000010002,R30
                 ; 0000 041A             if(CHECK_JOB_POWER>=30){
00089e 91a0 036d 	LDS  R26,_CHECK_JOB_POWER_S0000010002
0008a0 31ae      	CPI  R26,LOW(0x1E)
0008a1 f410      	BRSH PC+3
0008a2 940c 091d 	JMP _0x13A
                 ; 0000 041B             static signed int SolarPower;
                 ; 0000 041C             int InputTemperature = (LAST_SOLAR_INPUT_TEMP+SOLAR_INPUT_TEMP)/2;
                 ; 0000 041D             int OutputTemperature = (LAST_SOLAR_OUTPUT_TEMP+SOLAR_OUTPUT_TEMP)/2;
                 ; 0000 041E             int TemperatureDifference = OutputTemperature - InputTemperature;
                 ; 0000 041F 
                 ; 0000 0420 
                 ; 0000 0421                 if(TemperatureDifference>0){
0008a4 9726      	SBIW R28,6
                 ;	InputTemperature -> Y+4
                 ;	OutputTemperature -> Y+2
                 ;	TemperatureDifference -> Y+0
0008a5 01d6      	MOVW R26,R12
0008a6 0da6      	ADD  R26,R6
0008a7 1db7      	ADC  R27,R7
0008a8 e0e2      	LDI  R30,LOW(2)
0008a9 e0f0      	LDI  R31,HIGH(2)
0008aa 940e 1ffa 	CALL __DIVW21
0008ac 83ec      	STD  Y+4,R30
0008ad 83fd      	STD  Y+4+1,R31
0008ae 91a0 028c 	LDS  R26,_SOLAR_OUTPUT_TEMP
0008b0 91b0 028d 	LDS  R27,_SOLAR_OUTPUT_TEMP+1
0008b2 0da8      	ADD  R26,R8
0008b3 1db9      	ADC  R27,R9
0008b4 e0e2      	LDI  R30,LOW(2)
0008b5 e0f0      	LDI  R31,HIGH(2)
0008b6 940e 1ffa 	CALL __DIVW21
0008b8 83ea      	STD  Y+2,R30
0008b9 83fb      	STD  Y+2+1,R31
0008ba 81ac      	LDD  R26,Y+4
0008bb 81bd      	LDD  R27,Y+4+1
0008bc 1bea      	SUB  R30,R26
0008bd 0bfb      	SBC  R31,R27
0008be 83e8      	ST   Y,R30
0008bf 83f9      	STD  Y+1,R31
0008c0 81a8      	LD   R26,Y
0008c1 81b9      	LDD  R27,Y+1
0008c2 940e 207f 	CALL __CPW02
0008c4 f014      	BRLT PC+3
0008c5 940c 0914 	JMP _0x13B
                 ; 0000 0422                     if(ANTIFREEZE_PUMP==1){
0008c7 9bc1      	SBIS 0x18,1
0008c8 c045      	RJMP _0x13C
                 ; 0000 0423                     unsigned int Job;
                 ; 0000 0424 
                 ; 0000 0425                     Job = (LitersPerMinute*TemperatureDifference)/170;
0008c9 9722      	SBIW R28,2
                 ;	InputTemperature -> Y+6
                 ;	OutputTemperature -> Y+4
                 ;	TemperatureDifference -> Y+2
                 ;	Job -> Y+0
0008ca eea6      	LDI  R26,LOW(_LitersPerMinute)
0008cb e0b3      	LDI  R27,HIGH(_LitersPerMinute)
0008cc 940e 204e 	CALL __EEPROMRDW
0008ce 81aa      	LDD  R26,Y+2
0008cf 81bb      	LDD  R27,Y+2+1
0008d0 940e 1fdd 	CALL __MULW12
0008d2 01df      	MOVW R26,R30
0008d3 eaea      	LDI  R30,LOW(170)
0008d4 e0f0      	LDI  R31,HIGH(170)
0008d5 940e 1ffa 	CALL __DIVW21
0008d7 83e8      	ST   Y,R30
0008d8 83f9      	STD  Y+1,R31
                 ; 0000 0426                     SolarColectorWattHours += Job;
0008d9 eea8      	LDI  R26,LOW(_SolarColectorWattHours)
0008da e0b3      	LDI  R27,HIGH(_SolarColectorWattHours)
0008db 940e 204a 	CALL __EEPROMRDD
0008dd 01df      	MOVW R26,R30
0008de 01cb      	MOVW R24,R22
0008df 81e8      	LD   R30,Y
0008e0 81f9      	LDD  R31,Y+1
0008e1 2766      	CLR  R22
0008e2 2777      	CLR  R23
0008e3 940e 1f8a 	CALL __ADDD12
0008e5 eea8      	LDI  R26,LOW(_SolarColectorWattHours)
0008e6 e0b3      	LDI  R27,HIGH(_SolarColectorWattHours)
0008e7 940e 205e 	CALL __EEPROMWRD
                 ; 0000 0427                     WattHoursPerDay += Job;
0008e9 eeac      	LDI  R26,LOW(_WattHoursPerDay)
0008ea e0b3      	LDI  R27,HIGH(_WattHoursPerDay)
0008eb 940e 204a 	CALL __EEPROMRDD
0008ed 01df      	MOVW R26,R30
0008ee 01cb      	MOVW R24,R22
0008ef 81e8      	LD   R30,Y
0008f0 81f9      	LDD  R31,Y+1
0008f1 2766      	CLR  R22
0008f2 2777      	CLR  R23
0008f3 940e 1f8a 	CALL __ADDD12
0008f5 eeac      	LDI  R26,LOW(_WattHoursPerDay)
0008f6 e0b3      	LDI  R27,HIGH(_WattHoursPerDay)
0008f7 940e 205e 	CALL __EEPROMWRD
                 ; 0000 0428 
                 ; 0000 0429 
                 ; 0000 042A                     SolarPower = ((LitersPerMinute*TemperatureDifference)/3)*2;
0008f9 eea6      	LDI  R26,LOW(_LitersPerMinute)
0008fa e0b3      	LDI  R27,HIGH(_LitersPerMinute)
0008fb 940e 204e 	CALL __EEPROMRDW
0008fd 81aa      	LDD  R26,Y+2
0008fe 81bb      	LDD  R27,Y+2+1
0008ff 940e 1fdd 	CALL __MULW12
000901 01df      	MOVW R26,R30
000902 e0e3      	LDI  R30,LOW(3)
000903 e0f0      	LDI  R31,HIGH(3)
000904 940e 1ffa 	CALL __DIVW21
000906 0fee      	LSL  R30
000907 1fff      	ROL  R31
000908 93e0 036e 	STS  _SolarPower_S0000010003,R30
00090a 93f0 036f 	STS  _SolarPower_S0000010003+1,R31
                 ; 0000 042B                     }
00090c 9622      	ADIW R28,2
                 ; 0000 042C                     else{
00090d c005      	RJMP _0x13D
                 _0x13C:
                 ; 0000 042D                     SolarPower = 0;
00090e e0e0      	LDI  R30,LOW(0)
00090f 93e0 036e 	STS  _SolarPower_S0000010003,R30
000911 93e0 036f 	STS  _SolarPower_S0000010003+1,R30
                 ; 0000 042E                     }
                 _0x13D:
                 ; 0000 042F                 }
                 ; 0000 0430                 else{
000913 c005      	RJMP _0x13E
                 _0x13B:
                 ; 0000 0431                 SolarPower = 0;
000914 e0e0      	LDI  R30,LOW(0)
000915 93e0 036e 	STS  _SolarPower_S0000010003,R30
000917 93e0 036f 	STS  _SolarPower_S0000010003+1,R30
                 ; 0000 0432                 }
                 _0x13E:
                 ; 0000 0433 
                 ; 0000 0434             CHECK_JOB_POWER = 0;
000919 e0e0      	LDI  R30,LOW(0)
00091a 93e0 036d 	STS  _CHECK_JOB_POWER_S0000010002,R30
                 ; 0000 0435             }
00091c 9626      	ADIW R28,6
                 ; 0000 0436         }
                 _0x13A:
                 ; 0000 0437     //////////////////////////////////////////////////////////////////////////////////
                 ; 0000 0438     //////////////////////////////////////////////////////////////////////////////////
                 ; 0000 0439     //////////////////////////////////////////////////////////////////////////////////
                 ; 0000 043A 
                 ; 0000 043B 
                 ; 0000 043C 
                 ; 0000 043D     //////////////////////////////////////////////////////////////////////////////////
                 ; 0000 043E     /////////////////////////////////// Ivykiai //////////////////////////////////////
                 ; 0000 043F     //////////////////////////////////////////////////////////////////////////////////
                 ; 0000 0440     static char LOGS_Termoswich;
                 _0x139:
                 ; 0000 0441     // 95C Apsauga isijungiant
                 ; 0000 0442         if(LOGS_Termoswich==0){
00091d 91e0 0370 	LDS  R30,_LOGS_Termoswich_S0000010001
00091f 30e0      	CPI  R30,0
000920 f011      	BREQ PC+3
000921 940c 099d 	JMP _0x13F
                 ; 0000 0443             if(TERMOSWITCH_INPUT==1){
000923 9b87      	SBIS 0x10,7
000924 c078      	RJMP _0x140
                 ; 0000 0444             char id;
                 ; 0000 0445             id = GetOldestLogID();
000925 9721      	SBIW R28,1
                 ;	id -> Y+0
000926 da16      	RCALL _GetOldestLogID
000927 83e8      	ST   Y,R30
                 ; 0000 0446             LOGS_Termoswich = 1;
000928 e0e1      	LDI  R30,LOW(1)
000929 93e0 0370 	STS  _LOGS_Termoswich_S0000010001,R30
                 ; 0000 0447 
                 ; 0000 0448             LogYear[id] = RealTimeYear;
00092b 81e8      	LD   R30,Y
00092c e0a8      	LDI  R26,LOW(_LogYear)
00092d e0b0      	LDI  R27,HIGH(_LogYear)
00092e e0f0      	LDI  R31,0
00092f 0fee      	LSL  R30
000930 1fff      	ROL  R31
000931 0fea      	ADD  R30,R26
000932 1ffb      	ADC  R31,R27
000933 010f      	MOVW R0,R30
000934 e0a0      	LDI  R26,LOW(_RealTimeYear)
000935 e0b0      	LDI  R27,HIGH(_RealTimeYear)
000936 940e 204e 	CALL __EEPROMRDW
000938 01d0      	MOVW R26,R0
000939 940e 2066 	CALL __EEPROMWRW
                 ; 0000 0449             LogMonth[id] = RealTimeMonth;
00093b 81e8      	LD   R30,Y
00093c e0f0      	LDI  R31,0
00093d 54e4      	SUBI R30,LOW(-_LogMonth)
00093e 4fff      	SBCI R31,HIGH(-_LogMonth)
00093f 010f      	MOVW R0,R30
000940 e0a2      	LDI  R26,LOW(_RealTimeMonth)
000941 e0b0      	LDI  R27,HIGH(_RealTimeMonth)
000942 940e 2052 	CALL __EEPROMRDB
000944 01d0      	MOVW R26,R0
000945 940e 206e 	CALL __EEPROMWRB
                 ; 0000 044A             LogDay[id] = RealTimeDay;
000947 81e8      	LD   R30,Y
000948 e0f0      	LDI  R31,0
000949 5eea      	SUBI R30,LOW(-_LogDay)
00094a 4ffe      	SBCI R31,HIGH(-_LogDay)
00094b 010f      	MOVW R0,R30
00094c e0a3      	LDI  R26,LOW(_RealTimeDay)
00094d e0b0      	LDI  R27,HIGH(_RealTimeDay)
00094e 940e 2052 	CALL __EEPROMRDB
000950 01d0      	MOVW R26,R0
000951 940e 206e 	CALL __EEPROMWRB
                 ; 0000 044B             LogHour[id] = RealTimeHour;
000953 81e8      	LD   R30,Y
000954 e0f0      	LDI  R31,0
000955 59e0      	SUBI R30,LOW(-_LogHour)
000956 4ffe      	SBCI R31,HIGH(-_LogHour)
000957 010f      	MOVW R0,R30
000958 e0a4      	LDI  R26,LOW(_RealTimeHour)
000959 e0b0      	LDI  R27,HIGH(_RealTimeHour)
00095a 940e 2052 	CALL __EEPROMRDB
00095c 01d0      	MOVW R26,R0
00095d 940e 206e 	CALL __EEPROMWRB
                 ; 0000 044C             LogMinute[id] = RealTimeMinute;
00095f 81e8      	LD   R30,Y
000960 e0f0      	LDI  R31,0
000961 53e6      	SUBI R30,LOW(-_LogMinute)
000962 4ffe      	SBCI R31,HIGH(-_LogMinute)
000963 010f      	MOVW R0,R30
000964 e0a5      	LDI  R26,LOW(_RealTimeMinute)
000965 e0b0      	LDI  R27,HIGH(_RealTimeMinute)
000966 940e 2052 	CALL __EEPROMRDB
000968 01d0      	MOVW R26,R0
000969 940e 206e 	CALL __EEPROMWRB
                 ; 0000 044D 
                 ; 0000 044E             LogType[id] = 1;
00096b 81a8      	LD   R26,Y
00096c e0b0      	LDI  R27,0
00096d 5dac      	SUBI R26,LOW(-_LogType)
00096e 4fbd      	SBCI R27,HIGH(-_LogType)
00096f e0e1      	LDI  R30,LOW(1)
000970 940e 206e 	CALL __EEPROMWRB
                 ; 0000 044F 
                 ; 0000 0450             LogData1[id] = SOLAR_OUTPUT_TEMP/10;
000972 81e8      	LD   R30,Y
000973 e7ae      	LDI  R26,LOW(_LogData1)
000974 e0b2      	LDI  R27,HIGH(_LogData1)
000975 e0f0      	LDI  R31,0
000976 0fee      	LSL  R30
000977 1fff      	ROL  R31
000978 0fea      	ADD  R30,R26
000979 1ffb      	ADC  R31,R27
00097a 01bf      	MOVW R22,R30
00097b 91a0 028c 	LDS  R26,_SOLAR_OUTPUT_TEMP
00097d 91b0 028d 	LDS  R27,_SOLAR_OUTPUT_TEMP+1
00097f e0ea      	LDI  R30,LOW(10)
000980 e0f0      	LDI  R31,HIGH(10)
000981 940e 1ffa 	CALL __DIVW21
000983 01db      	MOVW R26,R22
000984 940e 2066 	CALL __EEPROMWRW
                 ; 0000 0451             LogData2[id] = BOILER_TEMP/10;
000986 81e8      	LD   R30,Y
000987 e3a2      	LDI  R26,LOW(_LogData2)
000988 e0b3      	LDI  R27,HIGH(_LogData2)
000989 e0f0      	LDI  R31,0
00098a 0fee      	LSL  R30
00098b 1fff      	ROL  R31
00098c 0fea      	ADD  R30,R26
00098d 1ffb      	ADC  R31,R27
00098e 01bf      	MOVW R22,R30
00098f 01d5      	MOVW R26,R10
000990 e0ea      	LDI  R30,LOW(10)
000991 e0f0      	LDI  R31,HIGH(10)
000992 940e 1ffa 	CALL __DIVW21
000994 01db      	MOVW R26,R22
000995 940e 2066 	CALL __EEPROMWRW
                 ; 0000 0452 
                 ; 0000 0453             NewestLog = id;
000997 81e8      	LD   R30,Y
000998 e0a7      	LDI  R26,LOW(_NewestLog)
000999 e0b0      	LDI  R27,HIGH(_NewestLog)
00099a 940e 206e 	CALL __EEPROMWRB
                 ; 0000 0454             }
00099c 9621      	ADIW R28,1
                 ; 0000 0455         }
                 _0x140:
                 ; 0000 0456 
                 ; 0000 0457     // 95C Apsauga issijungiant
                 ; 0000 0458         if(LOGS_Termoswich==1){
                 _0x13F:
00099d 91a0 0370 	LDS  R26,_LOGS_Termoswich_S0000010001
00099f 30a1      	CPI  R26,LOW(0x1)
0009a0 f011      	BREQ PC+3
0009a1 940c 0a1d 	JMP _0x141
                 ; 0000 0459             if(TERMOSWITCH_INPUT==0){
0009a3 9987      	SBIC 0x10,7
0009a4 c078      	RJMP _0x142
                 ; 0000 045A             char id;
                 ; 0000 045B             id = GetOldestLogID();
0009a5 9721      	SBIW R28,1
                 ;	id -> Y+0
0009a6 d996      	RCALL _GetOldestLogID
0009a7 83e8      	ST   Y,R30
                 ; 0000 045C             LOGS_Termoswich = 0;
0009a8 e0e0      	LDI  R30,LOW(0)
0009a9 93e0 0370 	STS  _LOGS_Termoswich_S0000010001,R30
                 ; 0000 045D 
                 ; 0000 045E             LogYear[id] = RealTimeYear;
0009ab 81e8      	LD   R30,Y
0009ac e0a8      	LDI  R26,LOW(_LogYear)
0009ad e0b0      	LDI  R27,HIGH(_LogYear)
0009ae e0f0      	LDI  R31,0
0009af 0fee      	LSL  R30
0009b0 1fff      	ROL  R31
0009b1 0fea      	ADD  R30,R26
0009b2 1ffb      	ADC  R31,R27
0009b3 010f      	MOVW R0,R30
0009b4 e0a0      	LDI  R26,LOW(_RealTimeYear)
0009b5 e0b0      	LDI  R27,HIGH(_RealTimeYear)
0009b6 940e 204e 	CALL __EEPROMRDW
0009b8 01d0      	MOVW R26,R0
0009b9 940e 2066 	CALL __EEPROMWRW
                 ; 0000 045F             LogMonth[id] = RealTimeMonth;
0009bb 81e8      	LD   R30,Y
0009bc e0f0      	LDI  R31,0
0009bd 54e4      	SUBI R30,LOW(-_LogMonth)
0009be 4fff      	SBCI R31,HIGH(-_LogMonth)
0009bf 010f      	MOVW R0,R30
0009c0 e0a2      	LDI  R26,LOW(_RealTimeMonth)
0009c1 e0b0      	LDI  R27,HIGH(_RealTimeMonth)
0009c2 940e 2052 	CALL __EEPROMRDB
0009c4 01d0      	MOVW R26,R0
0009c5 940e 206e 	CALL __EEPROMWRB
                 ; 0000 0460             LogDay[id] = RealTimeDay;
0009c7 81e8      	LD   R30,Y
0009c8 e0f0      	LDI  R31,0
0009c9 5eea      	SUBI R30,LOW(-_LogDay)
0009ca 4ffe      	SBCI R31,HIGH(-_LogDay)
0009cb 010f      	MOVW R0,R30
0009cc e0a3      	LDI  R26,LOW(_RealTimeDay)
0009cd e0b0      	LDI  R27,HIGH(_RealTimeDay)
0009ce 940e 2052 	CALL __EEPROMRDB
0009d0 01d0      	MOVW R26,R0
0009d1 940e 206e 	CALL __EEPROMWRB
                 ; 0000 0461             LogHour[id] = RealTimeHour;
0009d3 81e8      	LD   R30,Y
0009d4 e0f0      	LDI  R31,0
0009d5 59e0      	SUBI R30,LOW(-_LogHour)
0009d6 4ffe      	SBCI R31,HIGH(-_LogHour)
0009d7 010f      	MOVW R0,R30
0009d8 e0a4      	LDI  R26,LOW(_RealTimeHour)
0009d9 e0b0      	LDI  R27,HIGH(_RealTimeHour)
0009da 940e 2052 	CALL __EEPROMRDB
0009dc 01d0      	MOVW R26,R0
0009dd 940e 206e 	CALL __EEPROMWRB
                 ; 0000 0462             LogMinute[id] = RealTimeMinute;
0009df 81e8      	LD   R30,Y
0009e0 e0f0      	LDI  R31,0
0009e1 53e6      	SUBI R30,LOW(-_LogMinute)
0009e2 4ffe      	SBCI R31,HIGH(-_LogMinute)
0009e3 010f      	MOVW R0,R30
0009e4 e0a5      	LDI  R26,LOW(_RealTimeMinute)
0009e5 e0b0      	LDI  R27,HIGH(_RealTimeMinute)
0009e6 940e 2052 	CALL __EEPROMRDB
0009e8 01d0      	MOVW R26,R0
0009e9 940e 206e 	CALL __EEPROMWRB
                 ; 0000 0463 
                 ; 0000 0464             LogType[id] = 2;
0009eb 81a8      	LD   R26,Y
0009ec e0b0      	LDI  R27,0
0009ed 5dac      	SUBI R26,LOW(-_LogType)
0009ee 4fbd      	SBCI R27,HIGH(-_LogType)
0009ef e0e2      	LDI  R30,LOW(2)
0009f0 940e 206e 	CALL __EEPROMWRB
                 ; 0000 0465 
                 ; 0000 0466             LogData1[id] = SOLAR_OUTPUT_TEMP/10;
0009f2 81e8      	LD   R30,Y
0009f3 e7ae      	LDI  R26,LOW(_LogData1)
0009f4 e0b2      	LDI  R27,HIGH(_LogData1)
0009f5 e0f0      	LDI  R31,0
0009f6 0fee      	LSL  R30
0009f7 1fff      	ROL  R31
0009f8 0fea      	ADD  R30,R26
0009f9 1ffb      	ADC  R31,R27
0009fa 01bf      	MOVW R22,R30
0009fb 91a0 028c 	LDS  R26,_SOLAR_OUTPUT_TEMP
0009fd 91b0 028d 	LDS  R27,_SOLAR_OUTPUT_TEMP+1
0009ff e0ea      	LDI  R30,LOW(10)
000a00 e0f0      	LDI  R31,HIGH(10)
000a01 940e 1ffa 	CALL __DIVW21
000a03 01db      	MOVW R26,R22
000a04 940e 2066 	CALL __EEPROMWRW
                 ; 0000 0467             LogData2[id] = BOILER_TEMP/10;
000a06 81e8      	LD   R30,Y
000a07 e3a2      	LDI  R26,LOW(_LogData2)
000a08 e0b3      	LDI  R27,HIGH(_LogData2)
000a09 e0f0      	LDI  R31,0
000a0a 0fee      	LSL  R30
000a0b 1fff      	ROL  R31
000a0c 0fea      	ADD  R30,R26
000a0d 1ffb      	ADC  R31,R27
000a0e 01bf      	MOVW R22,R30
000a0f 01d5      	MOVW R26,R10
000a10 e0ea      	LDI  R30,LOW(10)
000a11 e0f0      	LDI  R31,HIGH(10)
000a12 940e 1ffa 	CALL __DIVW21
000a14 01db      	MOVW R26,R22
000a15 940e 2066 	CALL __EEPROMWRW
                 ; 0000 0468 
                 ; 0000 0469             NewestLog = id;
000a17 81e8      	LD   R30,Y
000a18 e0a7      	LDI  R26,LOW(_NewestLog)
000a19 e0b0      	LDI  R27,HIGH(_NewestLog)
000a1a 940e 206e 	CALL __EEPROMWRB
                 ; 0000 046A             }
000a1c 9621      	ADIW R28,1
                 ; 0000 046B         }
                 _0x142:
                 ; 0000 046C 
                 ; 0000 046D     // Atnaujinti issijungimo irasa
                 ; 0000 046E         if(Called_1Second==1){
                 _0x141:
000a1d 91a0 036b 	LDS  R26,_Called_1Second_S0000010001
000a1f 30a1      	CPI  R26,LOW(0x1)
000a20 f011      	BREQ PC+3
000a21 940c 0a96 	JMP _0x143
                 ; 0000 046F         char id;
                 ; 0000 0470         id = GetOldestLogID();
000a23 9721      	SBIW R28,1
                 ;	id -> Y+0
000a24 d918      	RCALL _GetOldestLogID
000a25 83e8      	ST   Y,R30
                 ; 0000 0471         LOGS_Termoswich = 0;
000a26 e0e0      	LDI  R30,LOW(0)
000a27 93e0 0370 	STS  _LOGS_Termoswich_S0000010001,R30
                 ; 0000 0472 
                 ; 0000 0473         LogYear[id] = RealTimeYear;
000a29 81e8      	LD   R30,Y
000a2a e0a8      	LDI  R26,LOW(_LogYear)
000a2b e0b0      	LDI  R27,HIGH(_LogYear)
000a2c e0f0      	LDI  R31,0
000a2d 0fee      	LSL  R30
000a2e 1fff      	ROL  R31
000a2f 0fea      	ADD  R30,R26
000a30 1ffb      	ADC  R31,R27
000a31 010f      	MOVW R0,R30
000a32 e0a0      	LDI  R26,LOW(_RealTimeYear)
000a33 e0b0      	LDI  R27,HIGH(_RealTimeYear)
000a34 940e 204e 	CALL __EEPROMRDW
000a36 01d0      	MOVW R26,R0
000a37 940e 2066 	CALL __EEPROMWRW
                 ; 0000 0474         LogMonth[id] = RealTimeMonth;
000a39 81e8      	LD   R30,Y
000a3a e0f0      	LDI  R31,0
000a3b 54e4      	SUBI R30,LOW(-_LogMonth)
000a3c 4fff      	SBCI R31,HIGH(-_LogMonth)
000a3d 010f      	MOVW R0,R30
000a3e e0a2      	LDI  R26,LOW(_RealTimeMonth)
000a3f e0b0      	LDI  R27,HIGH(_RealTimeMonth)
000a40 940e 2052 	CALL __EEPROMRDB
000a42 01d0      	MOVW R26,R0
000a43 940e 206e 	CALL __EEPROMWRB
                 ; 0000 0475         LogDay[id] = RealTimeDay;
000a45 81e8      	LD   R30,Y
000a46 e0f0      	LDI  R31,0
000a47 5eea      	SUBI R30,LOW(-_LogDay)
000a48 4ffe      	SBCI R31,HIGH(-_LogDay)
000a49 010f      	MOVW R0,R30
000a4a e0a3      	LDI  R26,LOW(_RealTimeDay)
000a4b e0b0      	LDI  R27,HIGH(_RealTimeDay)
000a4c 940e 2052 	CALL __EEPROMRDB
000a4e 01d0      	MOVW R26,R0
000a4f 940e 206e 	CALL __EEPROMWRB
                 ; 0000 0476         LogHour[id] = RealTimeHour;
000a51 81e8      	LD   R30,Y
000a52 e0f0      	LDI  R31,0
000a53 59e0      	SUBI R30,LOW(-_LogHour)
000a54 4ffe      	SBCI R31,HIGH(-_LogHour)
000a55 010f      	MOVW R0,R30
000a56 e0a4      	LDI  R26,LOW(_RealTimeHour)
000a57 e0b0      	LDI  R27,HIGH(_RealTimeHour)
000a58 940e 2052 	CALL __EEPROMRDB
000a5a 01d0      	MOVW R26,R0
000a5b 940e 206e 	CALL __EEPROMWRB
                 ; 0000 0477         LogMinute[id] = RealTimeMinute;
000a5d 81e8      	LD   R30,Y
000a5e e0f0      	LDI  R31,0
000a5f 53e6      	SUBI R30,LOW(-_LogMinute)
000a60 4ffe      	SBCI R31,HIGH(-_LogMinute)
000a61 010f      	MOVW R0,R30
000a62 e0a5      	LDI  R26,LOW(_RealTimeMinute)
000a63 e0b0      	LDI  R27,HIGH(_RealTimeMinute)
000a64 940e 2052 	CALL __EEPROMRDB
000a66 01d0      	MOVW R26,R0
000a67 940e 206e 	CALL __EEPROMWRB
                 ; 0000 0478 
                 ; 0000 0479         LogType[id] = 99;
000a69 81a8      	LD   R26,Y
000a6a e0b0      	LDI  R27,0
000a6b 5dac      	SUBI R26,LOW(-_LogType)
000a6c 4fbd      	SBCI R27,HIGH(-_LogType)
000a6d e6e3      	LDI  R30,LOW(99)
000a6e 940e 206e 	CALL __EEPROMWRB
                 ; 0000 047A 
                 ; 0000 047B         LogData1[id] = SOLAR_OUTPUT_TEMP/10;
000a70 81e8      	LD   R30,Y
000a71 e7ae      	LDI  R26,LOW(_LogData1)
000a72 e0b2      	LDI  R27,HIGH(_LogData1)
000a73 e0f0      	LDI  R31,0
000a74 0fee      	LSL  R30
000a75 1fff      	ROL  R31
000a76 0fea      	ADD  R30,R26
000a77 1ffb      	ADC  R31,R27
000a78 01bf      	MOVW R22,R30
000a79 91a0 028c 	LDS  R26,_SOLAR_OUTPUT_TEMP
000a7b 91b0 028d 	LDS  R27,_SOLAR_OUTPUT_TEMP+1
000a7d e0ea      	LDI  R30,LOW(10)
000a7e e0f0      	LDI  R31,HIGH(10)
000a7f 940e 1ffa 	CALL __DIVW21
000a81 01db      	MOVW R26,R22
000a82 940e 2066 	CALL __EEPROMWRW
                 ; 0000 047C         LogData2[id] = BOILER_TEMP/10;
000a84 81e8      	LD   R30,Y
000a85 e3a2      	LDI  R26,LOW(_LogData2)
000a86 e0b3      	LDI  R27,HIGH(_LogData2)
000a87 e0f0      	LDI  R31,0
000a88 0fee      	LSL  R30
000a89 1fff      	ROL  R31
000a8a 0fea      	ADD  R30,R26
000a8b 1ffb      	ADC  R31,R27
000a8c 01bf      	MOVW R22,R30
000a8d 01d5      	MOVW R26,R10
000a8e e0ea      	LDI  R30,LOW(10)
000a8f e0f0      	LDI  R31,HIGH(10)
000a90 940e 1ffa 	CALL __DIVW21
000a92 01db      	MOVW R26,R22
000a93 940e 2066 	CALL __EEPROMWRW
                 ; 0000 047D         }
000a95 9621      	ADIW R28,1
                 ; 0000 047E     //////////////////////////////////////////////////////////////////////////////////
                 ; 0000 047F     //////////////////////////////////////////////////////////////////////////////////
                 ; 0000 0480     //////////////////////////////////////////////////////////////////////////////////
                 ; 0000 0481 
                 ; 0000 0482 
                 ; 0000 0483 
                 ; 0000 0484     //////////////////////////////////////////////////////////////////////////////////
                 ; 0000 0485     /////////////////////////////////////// Mygtukai /////////////////////////////////
                 ; 0000 0486     //////////////////////////////////////////////////////////////////////////////////
                 ; 0000 0487     static char BUTTON[5], ButtonFilter[5];
                 _0x143:
                 ; 0000 0488     static char DUAL_BUTTON[4], DualButtonFilter[4];
                 ; 0000 0489 
                 ; 0000 048A     // 1 Mygtukas
                 ; 0000 048B         if(BUTTON_INPUT1==1){
000a96 9b86      	SBIS 0x10,6
000a97 c011      	RJMP _0x144
                 ; 0000 048C         PAGRINDINIS_LANGAS = 0;
000a98 e0e0      	LDI  R30,LOW(0)
000a99 93e0 028e 	STS  _PAGRINDINIS_LANGAS,R30
                 ; 0000 048D             if(DualButtonFilter[0]<ButtonFiltrationTimer){
000a9b 91a0 037f 	LDS  R26,_DualButtonFilter_S0000010001
000a9d 31a4      	CPI  R26,LOW(0x14)
000a9e f448      	BRSH _0x145
                 ; 0000 048E                 if(ButtonFilter[0]<ButtonFiltrationTimer){
000a9f 91a0 0376 	LDS  R26,_ButtonFilter_S0000010001
000aa1 31a4      	CPI  R26,LOW(0x14)
000aa2 f428      	BRSH _0x146
                 ; 0000 048F                 ButtonFilter[0]++;
000aa3 91e0 0376 	LDS  R30,_ButtonFilter_S0000010001
000aa5 5fef      	SUBI R30,-LOW(1)
000aa6 93e0 0376 	STS  _ButtonFilter_S0000010001,R30
                 ; 0000 0490                 }
                 ; 0000 0491             }
                 _0x146:
                 ; 0000 0492         }
                 _0x145:
                 ; 0000 0493         else{
000aa8 c00f      	RJMP _0x147
                 _0x144:
                 ; 0000 0494             if(ButtonFilter[0]>=ButtonFiltrationTimer){
000aa9 91a0 0376 	LDS  R26,_ButtonFilter_S0000010001
000aab 31a4      	CPI  R26,LOW(0x14)
000aac f028      	BRLO _0x148
                 ; 0000 0495             BUTTON[0] = 1;
000aad e0e1      	LDI  R30,LOW(1)
000aae 93e0 0371 	STS  _BUTTON_S0000010001,R30
                 ; 0000 0496             RefreshLcd = 1;
000ab0 2e5e      	MOV  R5,R30
                 ; 0000 0497             }
                 ; 0000 0498             else{
000ab1 c003      	RJMP _0x149
                 _0x148:
                 ; 0000 0499             BUTTON[0] = 0;
000ab2 e0e0      	LDI  R30,LOW(0)
000ab3 93e0 0371 	STS  _BUTTON_S0000010001,R30
                 ; 0000 049A             }
                 _0x149:
                 ; 0000 049B         ButtonFilter[0] = 0;
000ab5 e0e0      	LDI  R30,LOW(0)
000ab6 93e0 0376 	STS  _ButtonFilter_S0000010001,R30
                 ; 0000 049C         }
                 _0x147:
                 ; 0000 049D 
                 ; 0000 049E     // 1 ir 2 Mygtukas
                 ; 0000 049F         if((BUTTON_INPUT1==1)&&(BUTTON_INPUT2==1)){
000ab8 9b86      	SBIS 0x10,6
000ab9 c002      	RJMP _0x14B
000aba 9985      	SBIC 0x10,5
000abb c001      	RJMP _0x14C
                 _0x14B:
000abc c00f      	RJMP _0x14A
                 _0x14C:
                 ; 0000 04A0         ButtonFilter[0] = 0;
000abd e0e0      	LDI  R30,LOW(0)
000abe 93e0 0376 	STS  _ButtonFilter_S0000010001,R30
                 ; 0000 04A1         ButtonFilter[1] = 0;
                +
000ac0 93e0 0377+STS _ButtonFilter_S0000010001 + ( 1 ) , R30
                 	__PUTB1MN _ButtonFilter_S0000010001,1
                 ; 0000 04A2             if(DualButtonFilter[0]<ButtonFiltrationTimer){
000ac2 91a0 037f 	LDS  R26,_DualButtonFilter_S0000010001
000ac4 31a4      	CPI  R26,LOW(0x14)
000ac5 f428      	BRSH _0x14D
                 ; 0000 04A3             DualButtonFilter[0]++;
000ac6 91e0 037f 	LDS  R30,_DualButtonFilter_S0000010001
000ac8 5fef      	SUBI R30,-LOW(1)
000ac9 93e0 037f 	STS  _DualButtonFilter_S0000010001,R30
                 ; 0000 04A4             }
                 ; 0000 04A5         }
                 _0x14D:
                 ; 0000 04A6         else if((BUTTON_INPUT1==0)&&(BUTTON_INPUT2==0)){
000acb c01a      	RJMP _0x14E
                 _0x14A:
000acc e0a0      	LDI  R26,0
000acd 9986      	SBIC 0x10,6
000ace e0a1      	LDI  R26,1
000acf 30a0      	CPI  R26,LOW(0x0)
000ad0 f429      	BRNE _0x150
000ad1 e0a0      	LDI  R26,0
000ad2 9985      	SBIC 0x10,5
000ad3 e0a1      	LDI  R26,1
000ad4 30a0      	CPI  R26,LOW(0x0)
000ad5 f009      	BREQ _0x151
                 _0x150:
000ad6 c00f      	RJMP _0x14F
                 _0x151:
                 ; 0000 04A7             if(DualButtonFilter[0]>=ButtonFiltrationTimer){
000ad7 91a0 037f 	LDS  R26,_DualButtonFilter_S0000010001
000ad9 31a4      	CPI  R26,LOW(0x14)
000ada f028      	BRLO _0x152
                 ; 0000 04A8             DUAL_BUTTON[0] = 1;
000adb e0e1      	LDI  R30,LOW(1)
000adc 93e0 037b 	STS  _DUAL_BUTTON_S0000010001,R30
                 ; 0000 04A9             RefreshLcd = 1;
000ade 2e5e      	MOV  R5,R30
                 ; 0000 04AA             }
                 ; 0000 04AB             else{
000adf c003      	RJMP _0x153
                 _0x152:
                 ; 0000 04AC             DUAL_BUTTON[0] = 0;
000ae0 e0e0      	LDI  R30,LOW(0)
000ae1 93e0 037b 	STS  _DUAL_BUTTON_S0000010001,R30
                 ; 0000 04AD             }
                 _0x153:
                 ; 0000 04AE         DualButtonFilter[0] = 0;
000ae3 e0e0      	LDI  R30,LOW(0)
000ae4 93e0 037f 	STS  _DualButtonFilter_S0000010001,R30
                 ; 0000 04AF         }
                 ; 0000 04B0 
                 ; 0000 04B1     // 2 Mygtukas
                 ; 0000 04B2         if(BUTTON_INPUT2==1){
                 _0x14F:
                 _0x14E:
000ae6 9b85      	SBIS 0x10,5
000ae7 c011      	RJMP _0x154
                 ; 0000 04B3         PAGRINDINIS_LANGAS = 0;
000ae8 e0e0      	LDI  R30,LOW(0)
000ae9 93e0 028e 	STS  _PAGRINDINIS_LANGAS,R30
                 ; 0000 04B4             if(DualButtonFilter[0]<ButtonFiltrationTimer){
000aeb 91a0 037f 	LDS  R26,_DualButtonFilter_S0000010001
000aed 31a4      	CPI  R26,LOW(0x14)
000aee f448      	BRSH _0x155
                 ; 0000 04B5                 if(ButtonFilter[1]<ButtonFiltrationTimer){
                +
000aef 91a0 0377+LDS R26 , _ButtonFilter_S0000010001 + ( 1 )
                 	__GETB2MN _ButtonFilter_S0000010001,1
000af1 31a4      	CPI  R26,LOW(0x14)
000af2 f428      	BRSH _0x156
                 ; 0000 04B6                 ButtonFilter[1]++;
                +
000af3 91e0 0377+LDS R30 , _ButtonFilter_S0000010001 + ( 1 )
                 	__GETB1MN _ButtonFilter_S0000010001,1
000af5 5fef      	SUBI R30,-LOW(1)
                +
000af6 93e0 0377+STS _ButtonFilter_S0000010001 + ( 1 ) , R30
                 	__PUTB1MN _ButtonFilter_S0000010001,1
                 ; 0000 04B7                 }
                 ; 0000 04B8             }
                 _0x156:
                 ; 0000 04B9         }
                 _0x155:
                 ; 0000 04BA         else{
000af8 c00f      	RJMP _0x157
                 _0x154:
                 ; 0000 04BB             if(ButtonFilter[1]>=ButtonFiltrationTimer){
                +
000af9 91a0 0377+LDS R26 , _ButtonFilter_S0000010001 + ( 1 )
                 	__GETB2MN _ButtonFilter_S0000010001,1
000afb 31a4      	CPI  R26,LOW(0x14)
000afc f028      	BRLO _0x158
                 ; 0000 04BC             BUTTON[1] = 1;
000afd e0e1      	LDI  R30,LOW(1)
                +
000afe 93e0 0372+STS _BUTTON_S0000010001 + ( 1 ) , R30
                 	__PUTB1MN _BUTTON_S0000010001,1
                 ; 0000 04BD             RefreshLcd = 1;
000b00 2e5e      	MOV  R5,R30
                 ; 0000 04BE             }
                 ; 0000 04BF             else{
000b01 c003      	RJMP _0x159
                 _0x158:
                 ; 0000 04C0             BUTTON[1] = 0;
000b02 e0e0      	LDI  R30,LOW(0)
                +
000b03 93e0 0372+STS _BUTTON_S0000010001 + ( 1 ) , R30
                 	__PUTB1MN _BUTTON_S0000010001,1
                 ; 0000 04C1             }
                 _0x159:
                 ; 0000 04C2         ButtonFilter[1] = 0;
000b05 e0e0      	LDI  R30,LOW(0)
                +
000b06 93e0 0377+STS _ButtonFilter_S0000010001 + ( 1 ) , R30
                 	__PUTB1MN _ButtonFilter_S0000010001,1
                 ; 0000 04C3         }
                 _0x157:
                 ; 0000 04C4 
                 ; 0000 04C5     // 2 ir 3 Mygtukas
                 ; 0000 04C6         if((BUTTON_INPUT2==1)&&(BUTTON_INPUT3==1)){
000b08 9b85      	SBIS 0x10,5
000b09 c002      	RJMP _0x15B
000b0a 9984      	SBIC 0x10,4
000b0b c001      	RJMP _0x15C
                 _0x15B:
000b0c c00f      	RJMP _0x15A
                 _0x15C:
                 ; 0000 04C7         ButtonFilter[1] = 0;
000b0d e0e0      	LDI  R30,LOW(0)
                +
000b0e 93e0 0377+STS _ButtonFilter_S0000010001 + ( 1 ) , R30
                 	__PUTB1MN _ButtonFilter_S0000010001,1
                 ; 0000 04C8         ButtonFilter[2] = 0;
                +
000b10 93e0 0378+STS _ButtonFilter_S0000010001 + ( 2 ) , R30
                 	__PUTB1MN _ButtonFilter_S0000010001,2
                 ; 0000 04C9             if(DualButtonFilter[1]<ButtonFiltrationTimer){
                +
000b12 91a0 0380+LDS R26 , _DualButtonFilter_S0000010001 + ( 1 )
                 	__GETB2MN _DualButtonFilter_S0000010001,1
000b14 31a4      	CPI  R26,LOW(0x14)
000b15 f428      	BRSH _0x15D
                 ; 0000 04CA             DualButtonFilter[1]++;
                +
000b16 91e0 0380+LDS R30 , _DualButtonFilter_S0000010001 + ( 1 )
                 	__GETB1MN _DualButtonFilter_S0000010001,1
000b18 5fef      	SUBI R30,-LOW(1)
                +
000b19 93e0 0380+STS _DualButtonFilter_S0000010001 + ( 1 ) , R30
                 	__PUTB1MN _DualButtonFilter_S0000010001,1
                 ; 0000 04CB             }
                 ; 0000 04CC         }
                 _0x15D:
                 ; 0000 04CD         else if((BUTTON_INPUT2==0)&&(BUTTON_INPUT3==0)){
000b1b c01a      	RJMP _0x15E
                 _0x15A:
000b1c e0a0      	LDI  R26,0
000b1d 9985      	SBIC 0x10,5
000b1e e0a1      	LDI  R26,1
000b1f 30a0      	CPI  R26,LOW(0x0)
000b20 f429      	BRNE _0x160
000b21 e0a0      	LDI  R26,0
000b22 9984      	SBIC 0x10,4
000b23 e0a1      	LDI  R26,1
000b24 30a0      	CPI  R26,LOW(0x0)
000b25 f009      	BREQ _0x161
                 _0x160:
000b26 c00f      	RJMP _0x15F
                 _0x161:
                 ; 0000 04CE             if(DualButtonFilter[1]>=ButtonFiltrationTimer){
                +
000b27 91a0 0380+LDS R26 , _DualButtonFilter_S0000010001 + ( 1 )
                 	__GETB2MN _DualButtonFilter_S0000010001,1
000b29 31a4      	CPI  R26,LOW(0x14)
000b2a f028      	BRLO _0x162
                 ; 0000 04CF             DUAL_BUTTON[1] = 1;
000b2b e0e1      	LDI  R30,LOW(1)
                +
000b2c 93e0 037c+STS _DUAL_BUTTON_S0000010001 + ( 1 ) , R30
                 	__PUTB1MN _DUAL_BUTTON_S0000010001,1
                 ; 0000 04D0             RefreshLcd = 1;
000b2e 2e5e      	MOV  R5,R30
                 ; 0000 04D1             }
                 ; 0000 04D2             else{
000b2f c003      	RJMP _0x163
                 _0x162:
                 ; 0000 04D3             DUAL_BUTTON[1] = 0;
000b30 e0e0      	LDI  R30,LOW(0)
                +
000b31 93e0 037c+STS _DUAL_BUTTON_S0000010001 + ( 1 ) , R30
                 	__PUTB1MN _DUAL_BUTTON_S0000010001,1
                 ; 0000 04D4             }
                 _0x163:
                 ; 0000 04D5         DualButtonFilter[1] = 0;
000b33 e0e0      	LDI  R30,LOW(0)
                +
000b34 93e0 0380+STS _DualButtonFilter_S0000010001 + ( 1 ) , R30
                 	__PUTB1MN _DualButtonFilter_S0000010001,1
                 ; 0000 04D6         }
                 ; 0000 04D7 
                 ; 0000 04D8     // 3 Mygtukas
                 ; 0000 04D9         if(BUTTON_INPUT3==1){
                 _0x15F:
                 _0x15E:
000b36 9b84      	SBIS 0x10,4
000b37 c00d      	RJMP _0x164
                 ; 0000 04DA         PAGRINDINIS_LANGAS = 0;
000b38 e0e0      	LDI  R30,LOW(0)
000b39 93e0 028e 	STS  _PAGRINDINIS_LANGAS,R30
                 ; 0000 04DB             if(ButtonFilter[2]<ButtonFiltrationTimer){
                +
000b3b 91a0 0378+LDS R26 , _ButtonFilter_S0000010001 + ( 2 )
                 	__GETB2MN _ButtonFilter_S0000010001,2
000b3d 31a4      	CPI  R26,LOW(0x14)
000b3e f428      	BRSH _0x165
                 ; 0000 04DC             ButtonFilter[2]++;
                +
000b3f 91e0 0378+LDS R30 , _ButtonFilter_S0000010001 + ( 2 )
                 	__GETB1MN _ButtonFilter_S0000010001,2
000b41 5fef      	SUBI R30,-LOW(1)
                +
000b42 93e0 0378+STS _ButtonFilter_S0000010001 + ( 2 ) , R30
                 	__PUTB1MN _ButtonFilter_S0000010001,2
                 ; 0000 04DD             }
                 ; 0000 04DE         }
                 _0x165:
                 ; 0000 04DF         else{
000b44 c00f      	RJMP _0x166
                 _0x164:
                 ; 0000 04E0             if(ButtonFilter[2]>=ButtonFiltrationTimer){
                +
000b45 91a0 0378+LDS R26 , _ButtonFilter_S0000010001 + ( 2 )
                 	__GETB2MN _ButtonFilter_S0000010001,2
000b47 31a4      	CPI  R26,LOW(0x14)
000b48 f028      	BRLO _0x167
                 ; 0000 04E1             BUTTON[2] = 1;
000b49 e0e1      	LDI  R30,LOW(1)
                +
000b4a 93e0 0373+STS _BUTTON_S0000010001 + ( 2 ) , R30
                 	__PUTB1MN _BUTTON_S0000010001,2
                 ; 0000 04E2             RefreshLcd = 1;
000b4c 2e5e      	MOV  R5,R30
                 ; 0000 04E3             }
                 ; 0000 04E4             else{
000b4d c003      	RJMP _0x168
                 _0x167:
                 ; 0000 04E5             BUTTON[2] = 0;
000b4e e0e0      	LDI  R30,LOW(0)
                +
000b4f 93e0 0373+STS _BUTTON_S0000010001 + ( 2 ) , R30
                 	__PUTB1MN _BUTTON_S0000010001,2
                 ; 0000 04E6             }
                 _0x168:
                 ; 0000 04E7         ButtonFilter[2] = 0;
000b51 e0e0      	LDI  R30,LOW(0)
                +
000b52 93e0 0378+STS _ButtonFilter_S0000010001 + ( 2 ) , R30
                 	__PUTB1MN _ButtonFilter_S0000010001,2
                 ; 0000 04E8         }
                 _0x166:
                 ; 0000 04E9 
                 ; 0000 04EA     // 3 ir 4 Mygtukas
                 ; 0000 04EB         if((BUTTON_INPUT3==1)&&(BUTTON_INPUT4==1)){
000b54 9b84      	SBIS 0x10,4
000b55 c002      	RJMP _0x16A
000b56 9983      	SBIC 0x10,3
000b57 c001      	RJMP _0x16B
                 _0x16A:
000b58 c00f      	RJMP _0x169
                 _0x16B:
                 ; 0000 04EC         ButtonFilter[2] = 0;
000b59 e0e0      	LDI  R30,LOW(0)
                +
000b5a 93e0 0378+STS _ButtonFilter_S0000010001 + ( 2 ) , R30
                 	__PUTB1MN _ButtonFilter_S0000010001,2
                 ; 0000 04ED         ButtonFilter[3] = 0;
                +
000b5c 93e0 0379+STS _ButtonFilter_S0000010001 + ( 3 ) , R30
                 	__PUTB1MN _ButtonFilter_S0000010001,3
                 ; 0000 04EE             if(DualButtonFilter[2]<ButtonFiltrationTimer){
                +
000b5e 91a0 0381+LDS R26 , _DualButtonFilter_S0000010001 + ( 2 )
                 	__GETB2MN _DualButtonFilter_S0000010001,2
000b60 31a4      	CPI  R26,LOW(0x14)
000b61 f428      	BRSH _0x16C
                 ; 0000 04EF             DualButtonFilter[2]++;
                +
000b62 91e0 0381+LDS R30 , _DualButtonFilter_S0000010001 + ( 2 )
                 	__GETB1MN _DualButtonFilter_S0000010001,2
000b64 5fef      	SUBI R30,-LOW(1)
                +
000b65 93e0 0381+STS _DualButtonFilter_S0000010001 + ( 2 ) , R30
                 	__PUTB1MN _DualButtonFilter_S0000010001,2
                 ; 0000 04F0             }
                 ; 0000 04F1         }
                 _0x16C:
                 ; 0000 04F2         else if((BUTTON_INPUT3==0)&&(BUTTON_INPUT4==0)){
000b67 c01a      	RJMP _0x16D
                 _0x169:
000b68 e0a0      	LDI  R26,0
000b69 9984      	SBIC 0x10,4
000b6a e0a1      	LDI  R26,1
000b6b 30a0      	CPI  R26,LOW(0x0)
000b6c f429      	BRNE _0x16F
000b6d e0a0      	LDI  R26,0
000b6e 9983      	SBIC 0x10,3
000b6f e0a1      	LDI  R26,1
000b70 30a0      	CPI  R26,LOW(0x0)
000b71 f009      	BREQ _0x170
                 _0x16F:
000b72 c00f      	RJMP _0x16E
                 _0x170:
                 ; 0000 04F3             if(DualButtonFilter[2]>=ButtonFiltrationTimer){
                +
000b73 91a0 0381+LDS R26 , _DualButtonFilter_S0000010001 + ( 2 )
                 	__GETB2MN _DualButtonFilter_S0000010001,2
000b75 31a4      	CPI  R26,LOW(0x14)
000b76 f028      	BRLO _0x171
                 ; 0000 04F4             DUAL_BUTTON[2] = 1;
000b77 e0e1      	LDI  R30,LOW(1)
                +
000b78 93e0 037d+STS _DUAL_BUTTON_S0000010001 + ( 2 ) , R30
                 	__PUTB1MN _DUAL_BUTTON_S0000010001,2
                 ; 0000 04F5             RefreshLcd = 1;
000b7a 2e5e      	MOV  R5,R30
                 ; 0000 04F6             }
                 ; 0000 04F7             else{
000b7b c003      	RJMP _0x172
                 _0x171:
                 ; 0000 04F8             DUAL_BUTTON[2] = 0;
000b7c e0e0      	LDI  R30,LOW(0)
                +
000b7d 93e0 037d+STS _DUAL_BUTTON_S0000010001 + ( 2 ) , R30
                 	__PUTB1MN _DUAL_BUTTON_S0000010001,2
                 ; 0000 04F9             }
                 _0x172:
                 ; 0000 04FA         DualButtonFilter[2] = 0;
000b7f e0e0      	LDI  R30,LOW(0)
                +
000b80 93e0 0381+STS _DualButtonFilter_S0000010001 + ( 2 ) , R30
                 	__PUTB1MN _DualButtonFilter_S0000010001,2
                 ; 0000 04FB         }
                 ; 0000 04FC 
                 ; 0000 04FD     // 4 Mygtukas
                 ; 0000 04FE         if(BUTTON_INPUT4==1){
                 _0x16E:
                 _0x16D:
000b82 9b83      	SBIS 0x10,3
000b83 c00d      	RJMP _0x173
                 ; 0000 04FF         PAGRINDINIS_LANGAS = 0;
000b84 e0e0      	LDI  R30,LOW(0)
000b85 93e0 028e 	STS  _PAGRINDINIS_LANGAS,R30
                 ; 0000 0500             if(ButtonFilter[3]<ButtonFiltrationTimer){
                +
000b87 91a0 0379+LDS R26 , _ButtonFilter_S0000010001 + ( 3 )
                 	__GETB2MN _ButtonFilter_S0000010001,3
000b89 31a4      	CPI  R26,LOW(0x14)
000b8a f428      	BRSH _0x174
                 ; 0000 0501             ButtonFilter[3]++;
                +
000b8b 91e0 0379+LDS R30 , _ButtonFilter_S0000010001 + ( 3 )
                 	__GETB1MN _ButtonFilter_S0000010001,3
000b8d 5fef      	SUBI R30,-LOW(1)
                +
000b8e 93e0 0379+STS _ButtonFilter_S0000010001 + ( 3 ) , R30
                 	__PUTB1MN _ButtonFilter_S0000010001,3
                 ; 0000 0502             }
                 ; 0000 0503         }
                 _0x174:
                 ; 0000 0504         else{
000b90 c00f      	RJMP _0x175
                 _0x173:
                 ; 0000 0505             if(ButtonFilter[3]>=ButtonFiltrationTimer){
                +
000b91 91a0 0379+LDS R26 , _ButtonFilter_S0000010001 + ( 3 )
                 	__GETB2MN _ButtonFilter_S0000010001,3
000b93 31a4      	CPI  R26,LOW(0x14)
000b94 f028      	BRLO _0x176
                 ; 0000 0506             BUTTON[3] = 1;
000b95 e0e1      	LDI  R30,LOW(1)
                +
000b96 93e0 0374+STS _BUTTON_S0000010001 + ( 3 ) , R30
                 	__PUTB1MN _BUTTON_S0000010001,3
                 ; 0000 0507             RefreshLcd = 1;
000b98 2e5e      	MOV  R5,R30
                 ; 0000 0508             }
                 ; 0000 0509             else{
000b99 c003      	RJMP _0x177
                 _0x176:
                 ; 0000 050A             BUTTON[3] = 0;
000b9a e0e0      	LDI  R30,LOW(0)
                +
000b9b 93e0 0374+STS _BUTTON_S0000010001 + ( 3 ) , R30
                 	__PUTB1MN _BUTTON_S0000010001,3
                 ; 0000 050B             }
                 _0x177:
                 ; 0000 050C         ButtonFilter[3] = 0;
000b9d e0e0      	LDI  R30,LOW(0)
                +
000b9e 93e0 0379+STS _ButtonFilter_S0000010001 + ( 3 ) , R30
                 	__PUTB1MN _ButtonFilter_S0000010001,3
                 ; 0000 050D         }
                 _0x175:
                 ; 0000 050E 
                 ; 0000 050F     // 4 ir 5 Mygtukas
                 ; 0000 0510         if((BUTTON_INPUT4==1)&&(BUTTON_INPUT5==1)){
000ba0 9b83      	SBIS 0x10,3
000ba1 c002      	RJMP _0x179
000ba2 9982      	SBIC 0x10,2
000ba3 c001      	RJMP _0x17A
                 _0x179:
000ba4 c00f      	RJMP _0x178
                 _0x17A:
                 ; 0000 0511         ButtonFilter[3] = 0;
000ba5 e0e0      	LDI  R30,LOW(0)
                +
000ba6 93e0 0379+STS _ButtonFilter_S0000010001 + ( 3 ) , R30
                 	__PUTB1MN _ButtonFilter_S0000010001,3
                 ; 0000 0512         ButtonFilter[4] = 0;
                +
000ba8 93e0 037a+STS _ButtonFilter_S0000010001 + ( 4 ) , R30
                 	__PUTB1MN _ButtonFilter_S0000010001,4
                 ; 0000 0513             if(DualButtonFilter[3]<ButtonFiltrationTimer){
                +
000baa 91a0 0382+LDS R26 , _DualButtonFilter_S0000010001 + ( 3 )
                 	__GETB2MN _DualButtonFilter_S0000010001,3
000bac 31a4      	CPI  R26,LOW(0x14)
000bad f428      	BRSH _0x17B
                 ; 0000 0514             DualButtonFilter[3]++;
                +
000bae 91e0 0382+LDS R30 , _DualButtonFilter_S0000010001 + ( 3 )
                 	__GETB1MN _DualButtonFilter_S0000010001,3
000bb0 5fef      	SUBI R30,-LOW(1)
                +
000bb1 93e0 0382+STS _DualButtonFilter_S0000010001 + ( 3 ) , R30
                 	__PUTB1MN _DualButtonFilter_S0000010001,3
                 ; 0000 0515             }
                 ; 0000 0516         }
                 _0x17B:
                 ; 0000 0517         else if((BUTTON_INPUT4==0)&&(BUTTON_INPUT5==0)){
000bb3 c01a      	RJMP _0x17C
                 _0x178:
000bb4 e0a0      	LDI  R26,0
000bb5 9983      	SBIC 0x10,3
000bb6 e0a1      	LDI  R26,1
000bb7 30a0      	CPI  R26,LOW(0x0)
000bb8 f429      	BRNE _0x17E
000bb9 e0a0      	LDI  R26,0
000bba 9982      	SBIC 0x10,2
000bbb e0a1      	LDI  R26,1
000bbc 30a0      	CPI  R26,LOW(0x0)
000bbd f009      	BREQ _0x17F
                 _0x17E:
000bbe c00f      	RJMP _0x17D
                 _0x17F:
                 ; 0000 0518             if(DualButtonFilter[3]>=ButtonFiltrationTimer){
                +
000bbf 91a0 0382+LDS R26 , _DualButtonFilter_S0000010001 + ( 3 )
                 	__GETB2MN _DualButtonFilter_S0000010001,3
000bc1 31a4      	CPI  R26,LOW(0x14)
000bc2 f028      	BRLO _0x180
                 ; 0000 0519             DUAL_BUTTON[3] = 1;
000bc3 e0e1      	LDI  R30,LOW(1)
                +
000bc4 93e0 037e+STS _DUAL_BUTTON_S0000010001 + ( 3 ) , R30
                 	__PUTB1MN _DUAL_BUTTON_S0000010001,3
                 ; 0000 051A             RefreshLcd = 1;
000bc6 2e5e      	MOV  R5,R30
                 ; 0000 051B             }
                 ; 0000 051C             else{
000bc7 c003      	RJMP _0x181
                 _0x180:
                 ; 0000 051D             DUAL_BUTTON[3] = 0;
000bc8 e0e0      	LDI  R30,LOW(0)
                +
000bc9 93e0 037e+STS _DUAL_BUTTON_S0000010001 + ( 3 ) , R30
                 	__PUTB1MN _DUAL_BUTTON_S0000010001,3
                 ; 0000 051E             }
                 _0x181:
                 ; 0000 051F         DualButtonFilter[3] = 0;
000bcb e0e0      	LDI  R30,LOW(0)
                +
000bcc 93e0 0382+STS _DualButtonFilter_S0000010001 + ( 3 ) , R30
                 	__PUTB1MN _DualButtonFilter_S0000010001,3
                 ; 0000 0520         }
                 ; 0000 0521 
                 ; 0000 0522     // 5 Mygtukas
                 ; 0000 0523         if(BUTTON_INPUT5==1){
                 _0x17D:
                 _0x17C:
000bce 9b82      	SBIS 0x10,2
000bcf c00d      	RJMP _0x182
                 ; 0000 0524         PAGRINDINIS_LANGAS = 0;
000bd0 e0e0      	LDI  R30,LOW(0)
000bd1 93e0 028e 	STS  _PAGRINDINIS_LANGAS,R30
                 ; 0000 0525             if(ButtonFilter[4]<ButtonFiltrationTimer){
                +
000bd3 91a0 037a+LDS R26 , _ButtonFilter_S0000010001 + ( 4 )
                 	__GETB2MN _ButtonFilter_S0000010001,4
000bd5 31a4      	CPI  R26,LOW(0x14)
000bd6 f428      	BRSH _0x183
                 ; 0000 0526             ButtonFilter[4]++;
                +
000bd7 91e0 037a+LDS R30 , _ButtonFilter_S0000010001 + ( 4 )
                 	__GETB1MN _ButtonFilter_S0000010001,4
000bd9 5fef      	SUBI R30,-LOW(1)
                +
000bda 93e0 037a+STS _ButtonFilter_S0000010001 + ( 4 ) , R30
                 	__PUTB1MN _ButtonFilter_S0000010001,4
                 ; 0000 0527             }
                 ; 0000 0528         }
                 _0x183:
                 ; 0000 0529         else{
000bdc c00f      	RJMP _0x184
                 _0x182:
                 ; 0000 052A             if(ButtonFilter[4]>=ButtonFiltrationTimer){
                +
000bdd 91a0 037a+LDS R26 , _ButtonFilter_S0000010001 + ( 4 )
                 	__GETB2MN _ButtonFilter_S0000010001,4
000bdf 31a4      	CPI  R26,LOW(0x14)
000be0 f028      	BRLO _0x185
                 ; 0000 052B             BUTTON[4] = 1;
000be1 e0e1      	LDI  R30,LOW(1)
                +
000be2 93e0 0375+STS _BUTTON_S0000010001 + ( 4 ) , R30
                 	__PUTB1MN _BUTTON_S0000010001,4
                 ; 0000 052C             RefreshLcd = 1;
000be4 2e5e      	MOV  R5,R30
                 ; 0000 052D             }
                 ; 0000 052E             else{
000be5 c003      	RJMP _0x186
                 _0x185:
                 ; 0000 052F             BUTTON[4] = 0;
000be6 e0e0      	LDI  R30,LOW(0)
                +
000be7 93e0 0375+STS _BUTTON_S0000010001 + ( 4 ) , R30
                 	__PUTB1MN _BUTTON_S0000010001,4
                 ; 0000 0530             }
                 _0x186:
                 ; 0000 0531         ButtonFilter[4] = 0;
000be9 e0e0      	LDI  R30,LOW(0)
                +
000bea 93e0 037a+STS _ButtonFilter_S0000010001 + ( 4 ) , R30
                 	__PUTB1MN _ButtonFilter_S0000010001,4
                 ; 0000 0532         }
                 _0x184:
                 ; 0000 0533 
                 ; 0000 0534     //////////////////////////////////////////////////////////////////////////////////
                 ; 0000 0535     //////////////////////////////////////////////////////////////////////////////////
                 ; 0000 0536     //////////////////////////////////////////////////////////////////////////////////
                 ; 0000 0537 
                 ; 0000 0538     //////////////////////////////////////////////////////////////////////////////////
                 ; 0000 0539     ///////////////////////////// LCD ////////////////////////////////////////////////
                 ; 0000 053A     //////////////////////////////////////////////////////////////////////////////////
                 ; 0000 053B     // LCD LED
                 ; 0000 053C /*        if(PAGRINDINIS_LANGAS<15){
                 ; 0000 053D //            if(LCD_LED==0){
                 ; 0000 053E             LCD_LED = 1;
                 ; 0000 053F //            }
                 ; 0000 0540         }
                 ; 0000 0541         else{
                 ; 0000 0542 //            if(LCD_LED==1){
                 ; 0000 0543             LCD_LED = 0;
                 ; 0000 0544 //            }
                 ; 0000 0545         } */
                 ; 0000 0546 
                 ; 0000 0547     // Grazinti i pradini langa
                 ; 0000 0548         if(TERMOSWITCH_INPUT==1){
000bec 9b87      	SBIS 0x10,7
000bed c015      	RJMP _0x187
                 ; 0000 0549             if(PAGRINDINIS_LANGAS>=30){
000bee 91a0 028e 	LDS  R26,_PAGRINDINIS_LANGAS
000bf0 31ae      	CPI  R26,LOW(0x1E)
000bf1 f080      	BRLO _0x188
                 ; 0000 054A             Address[0] = 4;
000bf2 e0e4      	LDI  R30,LOW(4)
000bf3 e0f0      	LDI  R31,HIGH(4)
000bf4 93e0 0286 	STS  _Address,R30
000bf6 93f0 0287 	STS  _Address+1,R31
                 ; 0000 054B             Address[1] = 0;
                +
000bf8 e8e8     +LDI R30 , LOW ( _Address + ( 2 ) )
000bf9 e0f2     +LDI R31 , HIGH ( _Address + ( 2 ) )
                 	__POINTW1MN _Address,2
000bfa e0a0      	LDI  R26,LOW(0)
000bfb e0b0      	LDI  R27,HIGH(0)
000bfc 83a0      	STD  Z+0,R26
000bfd 83b1      	STD  Z+1,R27
                 ; 0000 054C             Address[2] = 0;
                +
000bfe e8ea     +LDI R30 , LOW ( _Address + ( 4 ) )
000bff e0f2     +LDI R31 , HIGH ( _Address + ( 4 ) )
                 	__POINTW1MN _Address,4
000c00 83a0      	STD  Z+0,R26
000c01 83b1      	STD  Z+1,R27
                 ; 0000 054D             }
                 ; 0000 054E         }
                 _0x188:
                 ; 0000 054F         else{
000c02 c013      	RJMP _0x189
                 _0x187:
                 ; 0000 0550             if(PAGRINDINIS_LANGAS>=120){
000c03 91a0 028e 	LDS  R26,_PAGRINDINIS_LANGAS
000c05 37a8      	CPI  R26,LOW(0x78)
000c06 f078      	BRLO _0x18A
                 ; 0000 0551             Address[0] = 0;
000c07 e0e0      	LDI  R30,LOW(0)
000c08 93e0 0286 	STS  _Address,R30
000c0a 93e0 0287 	STS  _Address+1,R30
                 ; 0000 0552             Address[1] = 0;
                +
000c0c e8e8     +LDI R30 , LOW ( _Address + ( 2 ) )
000c0d e0f2     +LDI R31 , HIGH ( _Address + ( 2 ) )
                 	__POINTW1MN _Address,2
000c0e e0a0      	LDI  R26,LOW(0)
000c0f e0b0      	LDI  R27,HIGH(0)
000c10 83a0      	STD  Z+0,R26
000c11 83b1      	STD  Z+1,R27
                 ; 0000 0553             Address[2] = 0;
                +
000c12 e8ea     +LDI R30 , LOW ( _Address + ( 4 ) )
000c13 e0f2     +LDI R31 , HIGH ( _Address + ( 4 ) )
                 	__POINTW1MN _Address,4
000c14 83a0      	STD  Z+0,R26
000c15 83b1      	STD  Z+1,R27
                 ; 0000 0554             }
                 ; 0000 0555         }
                 _0x18A:
                 _0x189:
                 ; 0000 0556 
                 ; 0000 0557     // Pagrindiniame meniu vaikscioti kairen desinen
                 ; 0000 0558         if(Address[1]==0){// Jei y == 0, tai pagrindinis meniu
                +
000c16 91e0 0288+LDS R30 , _Address + ( 2 )
000c18 91f0 0289+LDS R31 , _Address + ( 2 ) + 1
                 	__GETW1MN _Address,2
000c1a 9730      	SBIW R30,0
000c1b f011      	BREQ PC+3
000c1c 940c 0c6d 	JMP _0x18B
                 ; 0000 0559             if(Address[2]==0){
                +
000c1e 91e0 028a+LDS R30 , _Address + ( 4 )
000c20 91f0 028b+LDS R31 , _Address + ( 4 ) + 1
                 	__GETW1MN _Address,4
000c22 9730      	SBIW R30,0
000c23 f011      	BREQ PC+3
000c24 940c 0c6d 	JMP _0x18C
                 ; 0000 055A 
                 ; 0000 055B                 if(DUAL_BUTTON[0]==1){
000c26 91a0 037b 	LDS  R26,_DUAL_BUTTON_S0000010001
000c28 30a1      	CPI  R26,LOW(0x1)
000c29 f471      	BRNE _0x18D
                 ; 0000 055C                     if(TERMOSWITCH_INPUT==0){
000c2a 9987      	SBIC 0x10,7
000c2b c006      	RJMP _0x18E
                 ; 0000 055D                     Address[0] = 0;
000c2c e0e0      	LDI  R30,LOW(0)
000c2d 93e0 0286 	STS  _Address,R30
000c2f 93e0 0287 	STS  _Address+1,R30
                 ; 0000 055E                     }
                 ; 0000 055F                     else{
000c31 c006      	RJMP _0x18F
                 _0x18E:
                 ; 0000 0560                     Address[0] = 3;
000c32 e0e3      	LDI  R30,LOW(3)
000c33 e0f0      	LDI  R31,HIGH(3)
000c34 93e0 0286 	STS  _Address,R30
000c36 93f0 0287 	STS  _Address+1,R31
                 ; 0000 0561                     }
                 _0x18F:
                 ; 0000 0562                 }
                 ; 0000 0563 
                 ; 0000 0564                 if(BUTTON[0]==1){
                 _0x18D:
000c38 91a0 0371 	LDS  R26,_BUTTON_S0000010001
000c3a 30a1      	CPI  R26,LOW(0x1)
000c3b f4c1      	BRNE _0x190
                 ; 0000 0565                     if(Address[0]>0){
000c3c 91a0 0286 	LDS  R26,_Address
000c3e 91b0 0287 	LDS  R27,_Address+1
000c40 940e 207f 	CALL __CPW02
000c42 f454      	BRGE _0x191
                 ; 0000 0566                     Address[0]--;
000c43 e8a6      	LDI  R26,LOW(_Address)
000c44 e0b2      	LDI  R27,HIGH(_Address)
000c45 91ed      	LD   R30,X+
000c46 91fd      	LD   R31,X+
000c47 9731      	SBIW R30,1
000c48 93fe      	ST   -X,R31
000c49 93ee      	ST   -X,R30
                 ; 0000 0567                     RefreshLcd = 1;
000c4a e0e1      	LDI  R30,LOW(1)
000c4b 2e5e      	MOV  R5,R30
                 ; 0000 0568                     }
                 ; 0000 0569                     else{
000c4c c006      	RJMP _0x192
                 _0x191:
                 ; 0000 056A                     Address[0] = 13;
000c4d e0ed      	LDI  R30,LOW(13)
000c4e e0f0      	LDI  R31,HIGH(13)
000c4f 93e0 0286 	STS  _Address,R30
000c51 93f0 0287 	STS  _Address+1,R31
                 ; 0000 056B                     }
                 _0x192:
                 ; 0000 056C                 }
                 ; 0000 056D                 else if(BUTTON[1]==1){
000c53 c019      	RJMP _0x193
                 _0x190:
                +
000c54 91a0 0372+LDS R26 , _BUTTON_S0000010001 + ( 1 )
                 	__GETB2MN _BUTTON_S0000010001,1
000c56 30a1      	CPI  R26,LOW(0x1)
000c57 f4a9      	BRNE _0x194
                 ; 0000 056E                     if(Address[0]<13){
000c58 91a0 0286 	LDS  R26,_Address
000c5a 91b0 0287 	LDS  R27,_Address+1
000c5c 971d      	SBIW R26,13
000c5d f454      	BRGE _0x195
                 ; 0000 056F                     Address[0]++;
000c5e e8a6      	LDI  R26,LOW(_Address)
000c5f e0b2      	LDI  R27,HIGH(_Address)
000c60 91ed      	LD   R30,X+
000c61 91fd      	LD   R31,X+
000c62 9631      	ADIW R30,1
000c63 93fe      	ST   -X,R31
000c64 93ee      	ST   -X,R30
                 ; 0000 0570                     RefreshLcd = 1;
000c65 e0e1      	LDI  R30,LOW(1)
000c66 2e5e      	MOV  R5,R30
                 ; 0000 0571                     }
                 ; 0000 0572                     else{
000c67 c005      	RJMP _0x196
                 _0x195:
                 ; 0000 0573                     Address[0] = 0;
000c68 e0e0      	LDI  R30,LOW(0)
000c69 93e0 0286 	STS  _Address,R30
000c6b 93e0 0287 	STS  _Address+1,R30
                 ; 0000 0574                     }
                 _0x196:
                 ; 0000 0575                 }
                 ; 0000 0576             }
                 _0x194:
                 _0x193:
                 ; 0000 0577         }
                 _0x18C:
                 ; 0000 0578 
                 ; 0000 0579         if(RefreshLcd==1){
                 _0x18B:
000c6d e0e1      	LDI  R30,LOW(1)
000c6e 15e5      	CP   R30,R5
000c6f f431      	BRNE _0x197
                 ; 0000 057A         _lcd_ready();
000c70 940e 1e81 	CALL __lcd_ready
                 ; 0000 057B         lcd_clear();
000c72 940e 1ed0 	CALL _lcd_clear
                 ; 0000 057C         _lcd_ready();
000c74 940e 1e81 	CALL __lcd_ready
                 ; 0000 057D         }
                 ; 0000 057E 
                 ; 0000 057F     ///////////////////////////////////////////////////////////
                 ; 0000 0580     // x.  y.  z.
                 ; 0000 0581     // 0. Kolektoriaus isejimo ir boilerio temperaturos
                 ; 0000 0582     // 1. Kolektoriaus isejimo ir iejimo temperaturos
                 ; 0000 0583     // 2. Temperaturu skirtumo lentele
                 ; 0000 0584     // 3. Vandens srauto lentele
                 ; 0000 0585     // 4. 95C Apsaugos lentele
                 ; 0000 0586     // 5. Momentines galios lentele
                 ; 0000 0587     // 6. Energijos skaitiklio lentele
                 ; 0000 0588     // 7. Energijos skaitiklis per viena diena
                 ; 0000 0589     // 8. Maksimali dienos temperatura
                 ; 0000 058A     // 9. Svarbiu ivykiu lentele
                 ; 0000 058B     // 10. Datos lentele
                 ; 0000 058C     // 11. Laiko lentele
                 ; 0000 058D     // 12. Matuojama temperatura
                 ; 0000 058E     // 13. Atstatyti viska
                 ; 0000 058F     ///////////////////////////////////////////////////////////
                 ; 0000 0590 
                 ; 0000 0591 
                 ; 0000 0592         if(CODE_IsEntering==0){
                 _0x197:
000c76 91e0 0290 	LDS  R30,_CODE_IsEntering_G000
000c78 30e0      	CPI  R30,0
000c79 f011      	BREQ PC+3
000c7a 940c 1b58 	JMP _0x198
                 ; 0000 0593             if(Address[0]==0){
000c7c 91e0 0286 	LDS  R30,_Address
000c7e 91f0 0287 	LDS  R31,_Address+1
000c80 9730      	SBIW R30,0
000c81 f011      	BREQ PC+3
000c82 940c 0cc5 	JMP _0x199
                 ; 0000 0594                 if(Address[1]==0){
                +
000c84 91e0 0288+LDS R30 , _Address + ( 2 )
000c86 91f0 0289+LDS R31 , _Address + ( 2 ) + 1
                 	__GETW1MN _Address,2
000c88 9730      	SBIW R30,0
000c89 f5c9      	BRNE _0x19A
                 ; 0000 0595                     if(RefreshLcd==1){
000c8a e0e1      	LDI  R30,LOW(1)
000c8b 15e5      	CP   R30,R5
000c8c f5b1      	BRNE _0x19B
                 ; 0000 0596                     // 1 Eilute
                 ; 0000 0597                     lcd_put_number(1,3,1,1,0,SOLAR_OUTPUT_TEMP);
000c8d 93ea      	ST   -Y,R30
000c8e e0e3      	LDI  R30,LOW(3)
000c8f 93ea      	ST   -Y,R30
000c90 e0e1      	LDI  R30,LOW(1)
000c91 93ea      	ST   -Y,R30
000c92 93ea      	ST   -Y,R30
                +
000c93 e0e0     +LDI R30 , LOW ( 0x0 )
000c94 e0f0     +LDI R31 , HIGH ( 0x0 )
000c95 e060     +LDI R22 , BYTE3 ( 0x0 )
000c96 e070     +LDI R23 , BYTE4 ( 0x0 )
                 	__GETD1N 0x0
000c97 940e 2045 	CALL __PUTPARD1
000c99 91e0 028c 	LDS  R30,_SOLAR_OUTPUT_TEMP
000c9b 91f0 028d 	LDS  R31,_SOLAR_OUTPUT_TEMP+1
000c9d 940e 1fa5 	CALL __CWD1
000c9f 940e 2045 	CALL __PUTPARD1
000ca1 940e 034c 	CALL _lcd_put_number
                 ; 0000 0598                     lcd_putsf("C KOL.TEMP.");
                +
000ca3 e9ee     +LDI R30 , LOW ( 2 * _0x0 + ( 60 ) )
000ca4 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 60 ) )
                 	__POINTW1FN _0x0,60
000ca5 93fa      	ST   -Y,R31
000ca6 93ea      	ST   -Y,R30
000ca7 940e 1f1c 	CALL _lcd_putsf
                 ; 0000 0599 
                 ; 0000 059A 
                 ; 0000 059B                     // 2 Eilute
                 ; 0000 059C                     lcd_put_number(1,3,1,1,0,BOILER_TEMP);
000ca9 e0e1      	LDI  R30,LOW(1)
000caa 93ea      	ST   -Y,R30
000cab e0e3      	LDI  R30,LOW(3)
000cac 93ea      	ST   -Y,R30
000cad e0e1      	LDI  R30,LOW(1)
000cae 93ea      	ST   -Y,R30
000caf 93ea      	ST   -Y,R30
                +
000cb0 e0e0     +LDI R30 , LOW ( 0x0 )
000cb1 e0f0     +LDI R31 , HIGH ( 0x0 )
000cb2 e060     +LDI R22 , BYTE3 ( 0x0 )
000cb3 e070     +LDI R23 , BYTE4 ( 0x0 )
                 	__GETD1N 0x0
000cb4 940e 2045 	CALL __PUTPARD1
000cb6 01f5      	MOVW R30,R10
000cb7 940e 1fa5 	CALL __CWD1
000cb9 940e 2045 	CALL __PUTPARD1
000cbb 940e 034c 	CALL _lcd_put_number
                 ; 0000 059D                     lcd_putsf("C BOIL.TEMP");
                +
000cbd eaea     +LDI R30 , LOW ( 2 * _0x0 + ( 72 ) )
000cbe e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 72 ) )
                 	__POINTW1FN _0x0,72
000cbf 93fa      	ST   -Y,R31
000cc0 93ea      	ST   -Y,R30
000cc1 940e 1f1c 	CALL _lcd_putsf
                 ; 0000 059E                     }
                 ; 0000 059F                 }
                 _0x19B:
                 ; 0000 05A0             }
                 _0x19A:
                 ; 0000 05A1             else if(Address[0]==1){
000cc3 940c 1b57 	JMP  _0x19C
                 _0x199:
000cc5 91a0 0286 	LDS  R26,_Address
000cc7 91b0 0287 	LDS  R27,_Address+1
000cc9 9711      	SBIW R26,1
000cca f011      	BREQ PC+3
000ccb 940c 0d0e 	JMP _0x19D
                 ; 0000 05A2                 if(Address[1]==0){
                +
000ccd 91e0 0288+LDS R30 , _Address + ( 2 )
000ccf 91f0 0289+LDS R31 , _Address + ( 2 ) + 1
                 	__GETW1MN _Address,2
000cd1 9730      	SBIW R30,0
000cd2 f5c9      	BRNE _0x19E
                 ; 0000 05A3                     if(RefreshLcd==1){
000cd3 e0e1      	LDI  R30,LOW(1)
000cd4 15e5      	CP   R30,R5
000cd5 f5b1      	BRNE _0x19F
                 ; 0000 05A4                     // 1 Eilute
                 ; 0000 05A5                     lcd_put_number(1,3,1,1,0,SOLAR_OUTPUT_TEMP);
000cd6 93ea      	ST   -Y,R30
000cd7 e0e3      	LDI  R30,LOW(3)
000cd8 93ea      	ST   -Y,R30
000cd9 e0e1      	LDI  R30,LOW(1)
000cda 93ea      	ST   -Y,R30
000cdb 93ea      	ST   -Y,R30
                +
000cdc e0e0     +LDI R30 , LOW ( 0x0 )
000cdd e0f0     +LDI R31 , HIGH ( 0x0 )
000cde e060     +LDI R22 , BYTE3 ( 0x0 )
000cdf e070     +LDI R23 , BYTE4 ( 0x0 )
                 	__GETD1N 0x0
000ce0 940e 2045 	CALL __PUTPARD1
000ce2 91e0 028c 	LDS  R30,_SOLAR_OUTPUT_TEMP
000ce4 91f0 028d 	LDS  R31,_SOLAR_OUTPUT_TEMP+1
000ce6 940e 1fa5 	CALL __CWD1
000ce8 940e 2045 	CALL __PUTPARD1
000cea 940e 034c 	CALL _lcd_put_number
                 ; 0000 05A6                     lcd_putsf("C KOL.ISEJ.");
                +
000cec ebe6     +LDI R30 , LOW ( 2 * _0x0 + ( 84 ) )
000ced e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 84 ) )
                 	__POINTW1FN _0x0,84
000cee 93fa      	ST   -Y,R31
000cef 93ea      	ST   -Y,R30
000cf0 940e 1f1c 	CALL _lcd_putsf
                 ; 0000 05A7 
                 ; 0000 05A8                     // 2 Eilute
                 ; 0000 05A9                     lcd_put_number(1,3,1,1,0,SOLAR_INPUT_TEMP);
000cf2 e0e1      	LDI  R30,LOW(1)
000cf3 93ea      	ST   -Y,R30
000cf4 e0e3      	LDI  R30,LOW(3)
000cf5 93ea      	ST   -Y,R30
000cf6 e0e1      	LDI  R30,LOW(1)
000cf7 93ea      	ST   -Y,R30
000cf8 93ea      	ST   -Y,R30
                +
000cf9 e0e0     +LDI R30 , LOW ( 0x0 )
000cfa e0f0     +LDI R31 , HIGH ( 0x0 )
000cfb e060     +LDI R22 , BYTE3 ( 0x0 )
000cfc e070     +LDI R23 , BYTE4 ( 0x0 )
                 	__GETD1N 0x0
000cfd 940e 2045 	CALL __PUTPARD1
000cff 01f6      	MOVW R30,R12
000d00 940e 1fa5 	CALL __CWD1
000d02 940e 2045 	CALL __PUTPARD1
000d04 940e 034c 	CALL _lcd_put_number
                 ; 0000 05AA                     lcd_putsf("C KOL.IEJIM");
                +
000d06 ece2     +LDI R30 , LOW ( 2 * _0x0 + ( 96 ) )
000d07 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 96 ) )
                 	__POINTW1FN _0x0,96
000d08 93fa      	ST   -Y,R31
000d09 93ea      	ST   -Y,R30
000d0a 940e 1f1c 	CALL _lcd_putsf
                 ; 0000 05AB                     }
                 ; 0000 05AC                 }
                 _0x19F:
                 ; 0000 05AD             }
                 _0x19E:
                 ; 0000 05AE             else if(Address[0]==2){
000d0c 940c 1b57 	JMP  _0x1A0
                 _0x19D:
000d0e 91a0 0286 	LDS  R26,_Address
000d10 91b0 0287 	LDS  R27,_Address+1
000d12 9712      	SBIW R26,2
000d13 f011      	BREQ PC+3
000d14 940c 0ed4 	JMP _0x1A1
                 ; 0000 05AF             /////////////////////////////////////////////////////////////////////
                 ; 0000 05B0                 if(RefreshLcd==1){
000d16 e0e1      	LDI  R30,LOW(1)
000d17 15e5      	CP   R30,R5
000d18 f4f1      	BRNE _0x1A2
                 ; 0000 05B1                 lcd_put_number(0,3,0,1,DifferenceBoilerAndSolar,0);
000d19 e0e0      	LDI  R30,LOW(0)
000d1a 93ea      	ST   -Y,R30
000d1b e0e3      	LDI  R30,LOW(3)
000d1c 93ea      	ST   -Y,R30
000d1d e0e0      	LDI  R30,LOW(0)
000d1e 93ea      	ST   -Y,R30
000d1f e0e1      	LDI  R30,LOW(1)
000d20 93ea      	ST   -Y,R30
000d21 efa2      	LDI  R26,LOW(_DifferenceBoilerAndSolar)
000d22 e0b3      	LDI  R27,HIGH(_DifferenceBoilerAndSolar)
000d23 940e 204e 	CALL __EEPROMRDW
000d25 940e 1fa5 	CALL __CWD1
000d27 940e 2045 	CALL __PUTPARD1
                +
000d29 e0e0     +LDI R30 , LOW ( 0x0 )
000d2a e0f0     +LDI R31 , HIGH ( 0x0 )
000d2b e060     +LDI R22 , BYTE3 ( 0x0 )
000d2c e070     +LDI R23 , BYTE4 ( 0x0 )
                 	__GETD1N 0x0
000d2d 940e 2045 	CALL __PUTPARD1
000d2f 940e 034c 	CALL _lcd_put_number
                 ; 0000 05B2                 lcd_putsf("C TEMP.SKIRT");
                +
000d31 ecee     +LDI R30 , LOW ( 2 * _0x0 + ( 108 ) )
000d32 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 108 ) )
                 	__POINTW1FN _0x0,108
000d33 93fa      	ST   -Y,R31
000d34 93ea      	ST   -Y,R30
000d35 940e 1f1c 	CALL _lcd_putsf
                 ; 0000 05B3                 }
                 ; 0000 05B4 
                 ; 0000 05B5                 if(Address[1]==0){
                 _0x1A2:
                +
000d37 91e0 0288+LDS R30 , _Address + ( 2 )
000d39 91f0 0289+LDS R31 , _Address + ( 2 ) + 1
                 	__GETW1MN _Address,2
000d3b 9730      	SBIW R30,0
000d3c f4a1      	BRNE _0x1A3
                 ; 0000 05B6                     if(RefreshLcd==1){
000d3d e0e1      	LDI  R30,LOW(1)
000d3e 15e5      	CP   R30,R5
000d3f f431      	BRNE _0x1A4
                 ; 0000 05B7                     lcd_putsf("    KEISTI?-->* ");
                +
000d40 edeb     +LDI R30 , LOW ( 2 * _0x0 + ( 121 ) )
000d41 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 121 ) )
                 	__POINTW1FN _0x0,121
000d42 93fa      	ST   -Y,R31
000d43 93ea      	ST   -Y,R30
000d44 940e 1f1c 	CALL _lcd_putsf
                 ; 0000 05B8                     }
                 ; 0000 05B9 
                 ; 0000 05BA                     if(BUTTON[4]==1){
                 _0x1A4:
                +
000d46 91a0 0375+LDS R26 , _BUTTON_S0000010001 + ( 4 )
                 	__GETB2MN _BUTTON_S0000010001,4
000d48 30a1      	CPI  R26,LOW(0x1)
000d49 f431      	BRNE _0x1A5
                 ; 0000 05BB                     Address[1] = 1;
                +
000d4a e8e8     +LDI R30 , LOW ( _Address + ( 2 ) )
000d4b e0f2     +LDI R31 , HIGH ( _Address + ( 2 ) )
                 	__POINTW1MN _Address,2
000d4c e0a1      	LDI  R26,LOW(1)
000d4d e0b0      	LDI  R27,HIGH(1)
000d4e 83a0      	STD  Z+0,R26
000d4f 83b1      	STD  Z+1,R27
                 ; 0000 05BC                     }
                 ; 0000 05BD                 }
                 _0x1A5:
                 ; 0000 05BE 
                 ; 0000 05BF 
                 ; 0000 05C0                 ///// 1 Skirtumo skaicius /////
                 ; 0000 05C1                 else if(Address[1]==1){
000d50 c181      	RJMP _0x1A6
                 _0x1A3:
                +
000d51 91e0 0288+LDS R30 , _Address + ( 2 )
000d53 91f0 0289+LDS R31 , _Address + ( 2 ) + 1
                 	__GETW1MN _Address,2
000d55 30e1      	CPI  R30,LOW(0x1)
000d56 e0a0      	LDI  R26,HIGH(0x1)
000d57 07fa      	CPC  R31,R26
000d58 f011      	BREQ PC+3
000d59 940c 0dd3 	JMP _0x1A7
                 ; 0000 05C2                 // Mygtuku aprasymas ir kursorius
                 ; 0000 05C3                     if(RefreshLcd==1){
000d5b e0e1      	LDI  R30,LOW(1)
000d5c 15e5      	CP   R30,R5
000d5d f591      	BRNE _0x1A8
                 ; 0000 05C4                         if(DifferenceBoilerAndSolar>MAX_DIFFERENCE_SOLAR_BOILER-100){
000d5e efa2      	LDI  R26,LOW(_DifferenceBoilerAndSolar)
000d5f e0b3      	LDI  R27,HIGH(_DifferenceBoilerAndSolar)
000d60 940e 204e 	CALL __EEPROMRDW
000d62 39e7      	CPI  R30,LOW(0x97)
000d63 e0a0      	LDI  R26,HIGH(0x97)
000d64 07fa      	CPC  R31,R26
000d65 f034      	BRLT _0x1A9
                 ; 0000 05C5                         lcd_buttons(0,1,0,1,1, 0,0,0,0);
000d66 e0e0      	LDI  R30,LOW(0)
000d67 93ea      	ST   -Y,R30
000d68 e0e1      	LDI  R30,LOW(1)
000d69 93ea      	ST   -Y,R30
000d6a e0e0      	LDI  R30,LOW(0)
000d6b c013      	RJMP _0x336
                 ; 0000 05C6                         }
                 ; 0000 05C7                         else if(DifferenceBoilerAndSolar<MIN_DIFFERENCE_SOLAR_BOILER+100){
                 _0x1A9:
000d6c efa2      	LDI  R26,LOW(_DifferenceBoilerAndSolar)
000d6d e0b3      	LDI  R27,HIGH(_DifferenceBoilerAndSolar)
000d6e 940e 204e 	CALL __EEPROMRDW
000d70 39e6      	CPI  R30,LOW(0x96)
000d71 e0a0      	LDI  R26,HIGH(0x96)
000d72 07fa      	CPC  R31,R26
000d73 f43c      	BRGE _0x1AB
                 ; 0000 05C8                         lcd_buttons(0,1,1,0,1, 0,0,0,0);
000d74 e0e0      	LDI  R30,LOW(0)
000d75 93ea      	ST   -Y,R30
000d76 e0e1      	LDI  R30,LOW(1)
000d77 93ea      	ST   -Y,R30
000d78 93ea      	ST   -Y,R30
000d79 e0e0      	LDI  R30,LOW(0)
000d7a c006      	RJMP _0x337
                 ; 0000 05C9                         }
                 ; 0000 05CA                         else{
                 _0x1AB:
                 ; 0000 05CB                         lcd_buttons(0,1,1,1,1, 0,0,0,0);
000d7b e0e0      	LDI  R30,LOW(0)
000d7c 93ea      	ST   -Y,R30
000d7d e0e1      	LDI  R30,LOW(1)
000d7e 93ea      	ST   -Y,R30
                 _0x336:
000d7f 93ea      	ST   -Y,R30
000d80 e0e1      	LDI  R30,LOW(1)
                 _0x337:
000d81 93ea      	ST   -Y,R30
000d82 e0e1      	LDI  R30,LOW(1)
000d83 93ea      	ST   -Y,R30
000d84 e0e0      	LDI  R30,LOW(0)
000d85 93ea      	ST   -Y,R30
000d86 93ea      	ST   -Y,R30
000d87 93ea      	ST   -Y,R30
000d88 93ea      	ST   -Y,R30
000d89 940e 0520 	CALL _lcd_buttons
                 ; 0000 05CC                         }
                 ; 0000 05CD                     lcd_cursor(0,0);
000d8b e0e0      	LDI  R30,LOW(0)
000d8c 93ea      	ST   -Y,R30
000d8d 93ea      	ST   -Y,R30
000d8e 940e 04e7 	CALL _lcd_cursor
                 ; 0000 05CE                     }
                 ; 0000 05CF                 ////////////
                 ; 0000 05D0 
                 ; 0000 05D1 
                 ; 0000 05D2                 // Adreso valdymui
                 ; 0000 05D3                     if(BUTTON[1]==1){
                 _0x1A8:
                +
000d90 91a0 0372+LDS R26 , _BUTTON_S0000010001 + ( 1 )
                 	__GETB2MN _BUTTON_S0000010001,1
000d92 30a1      	CPI  R26,LOW(0x1)
000d93 f439      	BRNE _0x1AD
                 ; 0000 05D4                     Address[1]++;
                +
000d94 e8a8     +LDI R26 , LOW ( _Address + ( 2 ) )
000d95 e0b2     +LDI R27 , HIGH ( _Address + ( 2 ) )
                 	__POINTW2MN _Address,2
000d96 91ed      	LD   R30,X+
000d97 91fd      	LD   R31,X+
000d98 9631      	ADIW R30,1
000d99 93fe      	ST   -X,R31
000d9a 93ee      	ST   -X,R30
                 ; 0000 05D5                     }
                 ; 0000 05D6                 //////////////////
                 ; 0000 05D7 
                 ; 0000 05D8 
                 ; 0000 05D9                 // Patvirtinti
                 ; 0000 05DA                     if(BUTTON[4]==1){
                 _0x1AD:
                +
000d9b 91a0 0375+LDS R26 , _BUTTON_S0000010001 + ( 4 )
                 	__GETB2MN _BUTTON_S0000010001,4
000d9d 30a1      	CPI  R26,LOW(0x1)
000d9e f431      	BRNE _0x1AE
                 ; 0000 05DB                     Address[1] = 0;
                +
000d9f e8e8     +LDI R30 , LOW ( _Address + ( 2 ) )
000da0 e0f2     +LDI R31 , HIGH ( _Address + ( 2 ) )
                 	__POINTW1MN _Address,2
000da1 e0a0      	LDI  R26,LOW(0)
000da2 e0b0      	LDI  R27,HIGH(0)
000da3 83a0      	STD  Z+0,R26
000da4 83b1      	STD  Z+1,R27
                 ; 0000 05DC                     }
                 ; 0000 05DD                 //////////////
                 ; 0000 05DE 
                 ; 0000 05DF 
                 ; 0000 05E0                 // 1 Skirtumo skaiciaus keitimas
                 ; 0000 05E1                     if(BUTTON[2]==1){
                 _0x1AE:
                +
000da5 91a0 0373+LDS R26 , _BUTTON_S0000010001 + ( 2 )
                 	__GETB2MN _BUTTON_S0000010001,2
000da7 30a1      	CPI  R26,LOW(0x1)
000da8 f499      	BRNE _0x1AF
                 ; 0000 05E2                         if(DifferenceBoilerAndSolar<=MAX_DIFFERENCE_SOLAR_BOILER-100){
000da9 efa2      	LDI  R26,LOW(_DifferenceBoilerAndSolar)
000daa e0b3      	LDI  R27,HIGH(_DifferenceBoilerAndSolar)
000dab 940e 204e 	CALL __EEPROMRDW
000dad 39e7      	CPI  R30,LOW(0x97)
000dae e0a0      	LDI  R26,HIGH(0x97)
000daf 07fa      	CPC  R31,R26
000db0 f454      	BRGE _0x1B0
                 ; 0000 05E3                         DifferenceBoilerAndSolar = DifferenceBoilerAndSolar + 100;
000db1 efa2      	LDI  R26,LOW(_DifferenceBoilerAndSolar)
000db2 e0b3      	LDI  R27,HIGH(_DifferenceBoilerAndSolar)
000db3 940e 204e 	CALL __EEPROMRDW
000db5 59ec      	SUBI R30,LOW(-100)
000db6 4fff      	SBCI R31,HIGH(-100)
000db7 efa2      	LDI  R26,LOW(_DifferenceBoilerAndSolar)
000db8 e0b3      	LDI  R27,HIGH(_DifferenceBoilerAndSolar)
000db9 940e 2066 	CALL __EEPROMWRW
                 ; 0000 05E4                         }
                 ; 0000 05E5                     }
                 _0x1B0:
                 ; 0000 05E6                     else if(BUTTON[3]==1){
000dbb c016      	RJMP _0x1B1
                 _0x1AF:
                +
000dbc 91a0 0374+LDS R26 , _BUTTON_S0000010001 + ( 3 )
                 	__GETB2MN _BUTTON_S0000010001,3
000dbe 30a1      	CPI  R26,LOW(0x1)
000dbf f491      	BRNE _0x1B2
                 ; 0000 05E7                         if(DifferenceBoilerAndSolar>=MIN_DIFFERENCE_SOLAR_BOILER+100){
000dc0 efa2      	LDI  R26,LOW(_DifferenceBoilerAndSolar)
000dc1 e0b3      	LDI  R27,HIGH(_DifferenceBoilerAndSolar)
000dc2 940e 204e 	CALL __EEPROMRDW
000dc4 39e6      	CPI  R30,LOW(0x96)
000dc5 e0a0      	LDI  R26,HIGH(0x96)
000dc6 07fa      	CPC  R31,R26
000dc7 f054      	BRLT _0x1B3
                 ; 0000 05E8                         DifferenceBoilerAndSolar = DifferenceBoilerAndSolar - 100;
000dc8 efa2      	LDI  R26,LOW(_DifferenceBoilerAndSolar)
000dc9 e0b3      	LDI  R27,HIGH(_DifferenceBoilerAndSolar)
000dca 940e 204e 	CALL __EEPROMRDW
000dcc 56e4      	SUBI R30,LOW(100)
000dcd 40f0      	SBCI R31,HIGH(100)
000dce efa2      	LDI  R26,LOW(_DifferenceBoilerAndSolar)
000dcf e0b3      	LDI  R27,HIGH(_DifferenceBoilerAndSolar)
000dd0 940e 2066 	CALL __EEPROMWRW
                 ; 0000 05E9                         }
                 ; 0000 05EA                     }
                 _0x1B3:
                 ; 0000 05EB                 ///////////////////
                 ; 0000 05EC                 }
                 _0x1B2:
                 _0x1B1:
                 ; 0000 05ED             ///////////////////////////////
                 ; 0000 05EE 
                 ; 0000 05EF 
                 ; 0000 05F0             ///// 2 Skirtumo skaicius /////
                 ; 0000 05F1                 else if(Address[1]==2){
000dd2 c0ff      	RJMP _0x1B4
                 _0x1A7:
                +
000dd3 91e0 0288+LDS R30 , _Address + ( 2 )
000dd5 91f0 0289+LDS R31 , _Address + ( 2 ) + 1
                 	__GETW1MN _Address,2
000dd7 30e2      	CPI  R30,LOW(0x2)
000dd8 e0a0      	LDI  R26,HIGH(0x2)
000dd9 07fa      	CPC  R31,R26
000dda f011      	BREQ PC+3
000ddb 940c 0e57 	JMP _0x1B5
                 ; 0000 05F2                 // Mygtuku aprasymas ir kursorius
                 ; 0000 05F3                     if(RefreshLcd==1){
000ddd e0e1      	LDI  R30,LOW(1)
000dde 15e5      	CP   R30,R5
000ddf f571      	BRNE _0x1B6
                 ; 0000 05F4                         if(DifferenceBoilerAndSolar>MAX_DIFFERENCE_SOLAR_BOILER-10){
000de0 efa2      	LDI  R26,LOW(_DifferenceBoilerAndSolar)
000de1 e0b3      	LDI  R27,HIGH(_DifferenceBoilerAndSolar)
000de2 940e 204e 	CALL __EEPROMRDW
000de4 3fe1      	CPI  R30,LOW(0xF1)
000de5 e0a0      	LDI  R26,HIGH(0xF1)
000de6 07fa      	CPC  R31,R26
000de7 f02c      	BRLT _0x1B7
                 ; 0000 05F5                         lcd_buttons(1,1,0,1,1, 0,0,0,0);
000de8 e0e1      	LDI  R30,LOW(1)
000de9 93ea      	ST   -Y,R30
000dea 93ea      	ST   -Y,R30
000deb e0e0      	LDI  R30,LOW(0)
000dec c00f      	RJMP _0x338
                 ; 0000 05F6                         }
                 ; 0000 05F7                         else if(DifferenceBoilerAndSolar<MIN_DIFFERENCE_SOLAR_BOILER+10){
                 _0x1B7:
000ded efa2      	LDI  R26,LOW(_DifferenceBoilerAndSolar)
000dee e0b3      	LDI  R27,HIGH(_DifferenceBoilerAndSolar)
000def 940e 204e 	CALL __EEPROMRDW
000df1 97fc      	SBIW R30,60
000df2 f434      	BRGE _0x1B9
                 ; 0000 05F8                         lcd_buttons(1,1,1,0,1, 0,0,0,0);
000df3 e0e1      	LDI  R30,LOW(1)
000df4 93ea      	ST   -Y,R30
000df5 93ea      	ST   -Y,R30
000df6 93ea      	ST   -Y,R30
000df7 e0e0      	LDI  R30,LOW(0)
000df8 c005      	RJMP _0x339
                 ; 0000 05F9                         }
                 ; 0000 05FA                         else{
                 _0x1B9:
                 ; 0000 05FB                         lcd_buttons(1,1,1,1,1, 0,0,0,0);
000df9 e0e1      	LDI  R30,LOW(1)
000dfa 93ea      	ST   -Y,R30
000dfb 93ea      	ST   -Y,R30
                 _0x338:
000dfc 93ea      	ST   -Y,R30
000dfd e0e1      	LDI  R30,LOW(1)
                 _0x339:
000dfe 93ea      	ST   -Y,R30
000dff e0e1      	LDI  R30,LOW(1)
000e00 93ea      	ST   -Y,R30
000e01 e0e0      	LDI  R30,LOW(0)
000e02 93ea      	ST   -Y,R30
000e03 93ea      	ST   -Y,R30
000e04 93ea      	ST   -Y,R30
000e05 93ea      	ST   -Y,R30
000e06 940e 0520 	CALL _lcd_buttons
                 ; 0000 05FC                         }
                 ; 0000 05FD                     lcd_cursor(1,0);
000e08 e0e1      	LDI  R30,LOW(1)
000e09 93ea      	ST   -Y,R30
000e0a e0e0      	LDI  R30,LOW(0)
000e0b 93ea      	ST   -Y,R30
000e0c 940e 04e7 	CALL _lcd_cursor
                 ; 0000 05FE                     }
                 ; 0000 05FF                 ////////////
                 ; 0000 0600 
                 ; 0000 0601                 // Adreso valdymui
                 ; 0000 0602                     if(BUTTON[0]==1){
                 _0x1B6:
000e0e 91a0 0371 	LDS  R26,_BUTTON_S0000010001
000e10 30a1      	CPI  R26,LOW(0x1)
000e11 f431      	BRNE _0x1BB
                 ; 0000 0603                     Address[1]--;
                +
000e12 e8a8     +LDI R26 , LOW ( _Address + ( 2 ) )
000e13 e0b2     +LDI R27 , HIGH ( _Address + ( 2 ) )
                 	__POINTW2MN _Address,2
000e14 91ed      	LD   R30,X+
000e15 91fd      	LD   R31,X+
000e16 9731      	SBIW R30,1
000e17 c009      	RJMP _0x33A
                 ; 0000 0604                     }
                 ; 0000 0605                     else if(BUTTON[1]==1){
                 _0x1BB:
                +
000e18 91a0 0372+LDS R26 , _BUTTON_S0000010001 + ( 1 )
                 	__GETB2MN _BUTTON_S0000010001,1
000e1a 30a1      	CPI  R26,LOW(0x1)
000e1b f439      	BRNE _0x1BD
                 ; 0000 0606                     Address[1]++;
                +
000e1c e8a8     +LDI R26 , LOW ( _Address + ( 2 ) )
000e1d e0b2     +LDI R27 , HIGH ( _Address + ( 2 ) )
                 	__POINTW2MN _Address,2
000e1e 91ed      	LD   R30,X+
000e1f 91fd      	LD   R31,X+
000e20 9631      	ADIW R30,1
                 _0x33A:
000e21 93fe      	ST   -X,R31
000e22 93ee      	ST   -X,R30
                 ; 0000 0607                     }
                 ; 0000 0608                 //////////////////
                 ; 0000 0609 
                 ; 0000 060A 
                 ; 0000 060B                 // Patvirtinti
                 ; 0000 060C                     if(BUTTON[4]==1){
                 _0x1BD:
                +
000e23 91a0 0375+LDS R26 , _BUTTON_S0000010001 + ( 4 )
                 	__GETB2MN _BUTTON_S0000010001,4
000e25 30a1      	CPI  R26,LOW(0x1)
000e26 f431      	BRNE _0x1BE
                 ; 0000 060D                     Address[1] = 0;
                +
000e27 e8e8     +LDI R30 , LOW ( _Address + ( 2 ) )
000e28 e0f2     +LDI R31 , HIGH ( _Address + ( 2 ) )
                 	__POINTW1MN _Address,2
000e29 e0a0      	LDI  R26,LOW(0)
000e2a e0b0      	LDI  R27,HIGH(0)
000e2b 83a0      	STD  Z+0,R26
000e2c 83b1      	STD  Z+1,R27
                 ; 0000 060E                     }
                 ; 0000 060F                 //////////////
                 ; 0000 0610 
                 ; 0000 0611 
                 ; 0000 0612                 // 2 Skirtumo skaiciaus keitimas
                 ; 0000 0613                     if(BUTTON[2]==1){
                 _0x1BE:
                +
000e2d 91a0 0373+LDS R26 , _BUTTON_S0000010001 + ( 2 )
                 	__GETB2MN _BUTTON_S0000010001,2
000e2f 30a1      	CPI  R26,LOW(0x1)
000e30 f491      	BRNE _0x1BF
                 ; 0000 0614                         if(DifferenceBoilerAndSolar<=MAX_DIFFERENCE_SOLAR_BOILER-10){
000e31 efa2      	LDI  R26,LOW(_DifferenceBoilerAndSolar)
000e32 e0b3      	LDI  R27,HIGH(_DifferenceBoilerAndSolar)
000e33 940e 204e 	CALL __EEPROMRDW
000e35 3fe1      	CPI  R30,LOW(0xF1)
000e36 e0a0      	LDI  R26,HIGH(0xF1)
000e37 07fa      	CPC  R31,R26
000e38 f44c      	BRGE _0x1C0
                 ; 0000 0615                         DifferenceBoilerAndSolar = DifferenceBoilerAndSolar + 10;
000e39 efa2      	LDI  R26,LOW(_DifferenceBoilerAndSolar)
000e3a e0b3      	LDI  R27,HIGH(_DifferenceBoilerAndSolar)
000e3b 940e 204e 	CALL __EEPROMRDW
000e3d 963a      	ADIW R30,10
000e3e efa2      	LDI  R26,LOW(_DifferenceBoilerAndSolar)
000e3f e0b3      	LDI  R27,HIGH(_DifferenceBoilerAndSolar)
000e40 940e 2066 	CALL __EEPROMWRW
                 ; 0000 0616                         }
                 ; 0000 0617                     }
                 _0x1C0:
                 ; 0000 0618                     else if(BUTTON[3]==1){
000e42 c013      	RJMP _0x1C1
                 _0x1BF:
                +
000e43 91a0 0374+LDS R26 , _BUTTON_S0000010001 + ( 3 )
                 	__GETB2MN _BUTTON_S0000010001,3
000e45 30a1      	CPI  R26,LOW(0x1)
000e46 f479      	BRNE _0x1C2
                 ; 0000 0619                         if(DifferenceBoilerAndSolar>=MIN_DIFFERENCE_SOLAR_BOILER+10){
000e47 efa2      	LDI  R26,LOW(_DifferenceBoilerAndSolar)
000e48 e0b3      	LDI  R27,HIGH(_DifferenceBoilerAndSolar)
000e49 940e 204e 	CALL __EEPROMRDW
000e4b 97fc      	SBIW R30,60
000e4c f04c      	BRLT _0x1C3
                 ; 0000 061A                         DifferenceBoilerAndSolar = DifferenceBoilerAndSolar - 10;
000e4d efa2      	LDI  R26,LOW(_DifferenceBoilerAndSolar)
000e4e e0b3      	LDI  R27,HIGH(_DifferenceBoilerAndSolar)
000e4f 940e 204e 	CALL __EEPROMRDW
000e51 973a      	SBIW R30,10
000e52 efa2      	LDI  R26,LOW(_DifferenceBoilerAndSolar)
000e53 e0b3      	LDI  R27,HIGH(_DifferenceBoilerAndSolar)
000e54 940e 2066 	CALL __EEPROMWRW
                 ; 0000 061B                         }
                 ; 0000 061C                     }
                 _0x1C3:
                 ; 0000 061D                 ////////////////////
                 ; 0000 061E                 }
                 _0x1C2:
                 _0x1C1:
                 ; 0000 061F             ///////////////////////////////
                 ; 0000 0620 
                 ; 0000 0621 
                 ; 0000 0622             ///// 3 Skirtumo skaicius /////
                 ; 0000 0623                 else if(Address[1]==3){
000e56 c07b      	RJMP _0x1C4
                 _0x1B5:
                +
000e57 91e0 0288+LDS R30 , _Address + ( 2 )
000e59 91f0 0289+LDS R31 , _Address + ( 2 ) + 1
                 	__GETW1MN _Address,2
000e5b 30e3      	CPI  R30,LOW(0x3)
000e5c e0a0      	LDI  R26,HIGH(0x3)
000e5d 07fa      	CPC  R31,R26
000e5e f011      	BREQ PC+3
000e5f 940c 0ed2 	JMP _0x1C5
                 ; 0000 0624                 // Mygtuku aprasymas ir kursorius
                 ; 0000 0625                     if(RefreshLcd==1){
000e61 e0e1      	LDI  R30,LOW(1)
000e62 15e5      	CP   R30,R5
000e63 f591      	BRNE _0x1C6
                 ; 0000 0626                         if(DifferenceBoilerAndSolar>MAX_DIFFERENCE_SOLAR_BOILER-1){
000e64 efa2      	LDI  R26,LOW(_DifferenceBoilerAndSolar)
000e65 e0b3      	LDI  R27,HIGH(_DifferenceBoilerAndSolar)
000e66 940e 204e 	CALL __EEPROMRDW
000e68 3fea      	CPI  R30,LOW(0xFA)
000e69 e0a0      	LDI  R26,HIGH(0xFA)
000e6a 07fa      	CPC  R31,R26
000e6b f02c      	BRLT _0x1C7
                 ; 0000 0627                         lcd_buttons(1,0,0,1,1, 0,0,0,0);
000e6c e0e1      	LDI  R30,LOW(1)
000e6d 93ea      	ST   -Y,R30
000e6e e0e0      	LDI  R30,LOW(0)
000e6f 93ea      	ST   -Y,R30
000e70 c013      	RJMP _0x33B
                 ; 0000 0628                         }
                 ; 0000 0629                         else if(DifferenceBoilerAndSolar<MIN_DIFFERENCE_SOLAR_BOILER+1){
                 _0x1C7:
000e71 efa2      	LDI  R26,LOW(_DifferenceBoilerAndSolar)
000e72 e0b3      	LDI  R27,HIGH(_DifferenceBoilerAndSolar)
000e73 940e 204e 	CALL __EEPROMRDW
000e75 97f3      	SBIW R30,51
000e76 f444      	BRGE _0x1C9
                 ; 0000 062A                         lcd_buttons(1,0,1,0,1, 0,0,0,0);
000e77 e0e1      	LDI  R30,LOW(1)
000e78 93ea      	ST   -Y,R30
000e79 e0e0      	LDI  R30,LOW(0)
000e7a 93ea      	ST   -Y,R30
000e7b e0e1      	LDI  R30,LOW(1)
000e7c 93ea      	ST   -Y,R30
000e7d e0e0      	LDI  R30,LOW(0)
000e7e c007      	RJMP _0x33C
                 ; 0000 062B                         }
                 ; 0000 062C                         else{
                 _0x1C9:
                 ; 0000 062D                         lcd_buttons(1,0,1,1,1, 0,0,0,0);
000e7f e0e1      	LDI  R30,LOW(1)
000e80 93ea      	ST   -Y,R30
000e81 e0e0      	LDI  R30,LOW(0)
000e82 93ea      	ST   -Y,R30
000e83 e0e1      	LDI  R30,LOW(1)
                 _0x33B:
000e84 93ea      	ST   -Y,R30
000e85 e0e1      	LDI  R30,LOW(1)
                 _0x33C:
000e86 93ea      	ST   -Y,R30
000e87 e0e1      	LDI  R30,LOW(1)
000e88 93ea      	ST   -Y,R30
000e89 e0e0      	LDI  R30,LOW(0)
000e8a 93ea      	ST   -Y,R30
000e8b 93ea      	ST   -Y,R30
000e8c 93ea      	ST   -Y,R30
000e8d 93ea      	ST   -Y,R30
000e8e 940e 0520 	CALL _lcd_buttons
                 ; 0000 062E                         }
                 ; 0000 062F                     lcd_cursor(3,0);
000e90 e0e3      	LDI  R30,LOW(3)
000e91 93ea      	ST   -Y,R30
000e92 e0e0      	LDI  R30,LOW(0)
000e93 93ea      	ST   -Y,R30
000e94 940e 04e7 	CALL _lcd_cursor
                 ; 0000 0630                     }
                 ; 0000 0631                 ////////////
                 ; 0000 0632 
                 ; 0000 0633 
                 ; 0000 0634                 // Adreso valdymui
                 ; 0000 0635                     if(BUTTON[0]==1){
                 _0x1C6:
000e96 91a0 0371 	LDS  R26,_BUTTON_S0000010001
000e98 30a1      	CPI  R26,LOW(0x1)
000e99 f439      	BRNE _0x1CB
                 ; 0000 0636                     Address[1]--;
                +
000e9a e8a8     +LDI R26 , LOW ( _Address + ( 2 ) )
000e9b e0b2     +LDI R27 , HIGH ( _Address + ( 2 ) )
                 	__POINTW2MN _Address,2
000e9c 91ed      	LD   R30,X+
000e9d 91fd      	LD   R31,X+
000e9e 9731      	SBIW R30,1
000e9f 93fe      	ST   -X,R31
000ea0 93ee      	ST   -X,R30
                 ; 0000 0637                     }
                 ; 0000 0638                 //////////////////
                 ; 0000 0639 
                 ; 0000 063A 
                 ; 0000 063B                 // Patvirtinti
                 ; 0000 063C                     if(BUTTON[4]==1){
                 _0x1CB:
                +
000ea1 91a0 0375+LDS R26 , _BUTTON_S0000010001 + ( 4 )
                 	__GETB2MN _BUTTON_S0000010001,4
000ea3 30a1      	CPI  R26,LOW(0x1)
000ea4 f431      	BRNE _0x1CC
                 ; 0000 063D                     Address[1] = 0;
                +
000ea5 e8e8     +LDI R30 , LOW ( _Address + ( 2 ) )
000ea6 e0f2     +LDI R31 , HIGH ( _Address + ( 2 ) )
                 	__POINTW1MN _Address,2
000ea7 e0a0      	LDI  R26,LOW(0)
000ea8 e0b0      	LDI  R27,HIGH(0)
000ea9 83a0      	STD  Z+0,R26
000eaa 83b1      	STD  Z+1,R27
                 ; 0000 063E                     }
                 ; 0000 063F                 //////////////
                 ; 0000 0640 
                 ; 0000 0641                 // Skirtumo keitimas
                 ; 0000 0642                     if(BUTTON[2]==1){
                 _0x1CC:
                +
000eab 91a0 0373+LDS R26 , _BUTTON_S0000010001 + ( 2 )
                 	__GETB2MN _BUTTON_S0000010001,2
000ead 30a1      	CPI  R26,LOW(0x1)
000eae f489      	BRNE _0x1CD
                 ; 0000 0643                         if(DifferenceBoilerAndSolar<=MAX_DIFFERENCE_SOLAR_BOILER-1){
000eaf efa2      	LDI  R26,LOW(_DifferenceBoilerAndSolar)
000eb0 e0b3      	LDI  R27,HIGH(_DifferenceBoilerAndSolar)
000eb1 940e 204e 	CALL __EEPROMRDW
000eb3 3fea      	CPI  R30,LOW(0xFA)
000eb4 e0a0      	LDI  R26,HIGH(0xFA)
000eb5 07fa      	CPC  R31,R26
000eb6 f444      	BRGE _0x1CE
                 ; 0000 0644                         DifferenceBoilerAndSolar++;
000eb7 efa2      	LDI  R26,LOW(_DifferenceBoilerAndSolar)
000eb8 e0b3      	LDI  R27,HIGH(_DifferenceBoilerAndSolar)
000eb9 940e 204e 	CALL __EEPROMRDW
000ebb 9631      	ADIW R30,1
000ebc 940e 2066 	CALL __EEPROMWRW
000ebe 9731      	SBIW R30,1
                 ; 0000 0645                         }
                 ; 0000 0646                     }
                 _0x1CE:
                 ; 0000 0647                     else if(BUTTON[3]==1){
000ebf c012      	RJMP _0x1CF
                 _0x1CD:
                +
000ec0 91a0 0374+LDS R26 , _BUTTON_S0000010001 + ( 3 )
                 	__GETB2MN _BUTTON_S0000010001,3
000ec2 30a1      	CPI  R26,LOW(0x1)
000ec3 f471      	BRNE _0x1D0
                 ; 0000 0648                         if(DifferenceBoilerAndSolar>=MIN_DIFFERENCE_SOLAR_BOILER+1){
000ec4 efa2      	LDI  R26,LOW(_DifferenceBoilerAndSolar)
000ec5 e0b3      	LDI  R27,HIGH(_DifferenceBoilerAndSolar)
000ec6 940e 204e 	CALL __EEPROMRDW
000ec8 97f3      	SBIW R30,51
000ec9 f044      	BRLT _0x1D1
                 ; 0000 0649                         DifferenceBoilerAndSolar--;
000eca efa2      	LDI  R26,LOW(_DifferenceBoilerAndSolar)
000ecb e0b3      	LDI  R27,HIGH(_DifferenceBoilerAndSolar)
000ecc 940e 204e 	CALL __EEPROMRDW
000ece 9731      	SBIW R30,1
000ecf 940e 2066 	CALL __EEPROMWRW
000ed1 9631      	ADIW R30,1
                 ; 0000 064A                         }
                 ; 0000 064B                     }
                 _0x1D1:
                 ; 0000 064C                 ////////////////////
                 ; 0000 064D                 }
                 _0x1D0:
                 _0x1CF:
                 ; 0000 064E             ///////////////////////////////
                 ; 0000 064F 
                 ; 0000 0650 
                 ; 0000 0651             /////////////////////////////////////////////////////////////////////
                 ; 0000 0652             }
                 _0x1C5:
                 _0x1C4:
                 _0x1B4:
                 _0x1A6:
                 ; 0000 0653             else if(Address[0]==3){
000ed2 940c 1b57 	JMP  _0x1D2
                 _0x1A1:
000ed4 91a0 0286 	LDS  R26,_Address
000ed6 91b0 0287 	LDS  R27,_Address+1
000ed8 9713      	SBIW R26,3
000ed9 f011      	BREQ PC+3
000eda 940c 106e 	JMP _0x1D3
                 ; 0000 0654             /////////////////////////////////////////////////////////////////////
                 ; 0000 0655             /*    if(RefreshLcd==1){
                 ; 0000 0656                 lcd_put_number(0,2,0,1,LitersPerMinute,0);
                 ; 0000 0657                 lcd_putsf(   "L/MIN SRAUTAS");
                 ; 0000 0658                 }
                 ; 0000 0659 
                 ; 0000 065A 
                 ; 0000 065B 
                 ; 0000 065C                 if(Address[1]==0){
                 ; 0000 065D                     if(RefreshLcd==1){
                 ; 0000 065E                     lcd_putsf("    KEISTI?-->* ");
                 ; 0000 065F                     }
                 ; 0000 0660 
                 ; 0000 0661                     if(BUTTON[4]==1){
                 ; 0000 0662                     EnterCode(3,0,0,3,1,0);
                 ; 0000 0663                     }
                 ; 0000 0664                 }
                 ; 0000 0665                 else if(Address[1]==1){
                 ; 0000 0666 
                 ; 0000 0667 
                 ; 0000 0668                 // Mygtukai
                 ; 0000 0669                     if(LitersPerMinute>=90){
                 ; 0000 066A                     lcd_buttons(0,1,0,1,1, 0,0,0,0);
                 ; 0000 066B                     }
                 ; 0000 066C                     else if(LitersPerMinute<=10){
                 ; 0000 066D                     lcd_buttons(0,1,1,0,1, 0,0,0,0);
                 ; 0000 066E                     }
                 ; 0000 066F                     else{
                 ; 0000 0670                     lcd_buttons(0,1,1,1,1, 0,0,0,0);
                 ; 0000 0671                     }
                 ; 0000 0672                 ///////////
                 ; 0000 0673 
                 ; 0000 0674                 // Kursorius
                 ; 0000 0675                 lcd_cursor(0,0);
                 ; 0000 0676                 ////////////
                 ; 0000 0677                 }
                 ; 0000 0678                 else if(Address[1]==2){
                 ; 0000 0679 
                 ; 0000 067A 
                 ; 0000 067B 
                 ; 0000 067C                 // Mygtukai
                 ; 0000 067D                     if(LitersPerMinute>=99){
                 ; 0000 067E                     lcd_buttons(1,0,0,1,1, 0,0,0,0);
                 ; 0000 067F                     }
                 ; 0000 0680                     else if(LitersPerMinute<=1){
                 ; 0000 0681                     lcd_buttons(1,0,1,0,1, 0,0,0,0);
                 ; 0000 0682                     }
                 ; 0000 0683                     else{
                 ; 0000 0684                     lcd_buttons(1,0,1,1,1, 0,0,0,0);
                 ; 0000 0685                     }
                 ; 0000 0686                 ///////////
                 ; 0000 0687 
                 ; 0000 0688                 // Kursorius
                 ; 0000 0689                 lcd_cursor(2,0);
                 ; 0000 068A                 ////////////
                 ; 0000 068B                 }*/
                 ; 0000 068C 
                 ; 0000 068D 
                 ; 0000 068E 
                 ; 0000 068F 
                 ; 0000 0690 
                 ; 0000 0691 
                 ; 0000 0692                 if(Address[2]==0){
                +
000edc 91e0 028a+LDS R30 , _Address + ( 4 )
000ede 91f0 028b+LDS R31 , _Address + ( 4 ) + 1
                 	__GETW1MN _Address,4
000ee0 9730      	SBIW R30,0
000ee1 f4c1      	BRNE _0x1D4
                 ; 0000 0693                     if(Address[1]==0){
                +
000ee2 91e0 0288+LDS R30 , _Address + ( 2 )
000ee4 91f0 0289+LDS R31 , _Address + ( 2 ) + 1
                 	__GETW1MN _Address,2
000ee6 9730      	SBIW R30,0
000ee7 f489      	BRNE _0x1D5
                 ; 0000 0694                         if(BUTTON[4]==1){
                +
000ee8 91a0 0375+LDS R26 , _BUTTON_S0000010001 + ( 4 )
                 	__GETB2MN _BUTTON_S0000010001,4
000eea 30a1      	CPI  R26,LOW(0x1)
000eeb f469      	BRNE _0x1D6
                 ; 0000 0695                         EnterCode(3,0,0,3,0,1);
000eec e0e3      	LDI  R30,LOW(3)
000eed 93ea      	ST   -Y,R30
000eee e0e0      	LDI  R30,LOW(0)
000eef 93ea      	ST   -Y,R30
000ef0 93ea      	ST   -Y,R30
000ef1 e0e3      	LDI  R30,LOW(3)
000ef2 93ea      	ST   -Y,R30
000ef3 e0e0      	LDI  R30,LOW(0)
000ef4 93ea      	ST   -Y,R30
000ef5 e0e1      	LDI  R30,LOW(1)
000ef6 93ea      	ST   -Y,R30
000ef7 940e 04f8 	CALL _EnterCode
                 ; 0000 0696                         }
                 ; 0000 0697                     }
                 _0x1D6:
                 ; 0000 0698                 }
                 _0x1D5:
                 ; 0000 0699                 else{
000ef9 c09a      	RJMP _0x1D7
                 _0x1D4:
                 ; 0000 069A                     if(BUTTON[4]==1){
                +
000efa 91a0 0375+LDS R26 , _BUTTON_S0000010001 + ( 4 )
                 	__GETB2MN _BUTTON_S0000010001,4
000efc 30a1      	CPI  R26,LOW(0x1)
000efd f451      	BRNE _0x1D8
                 ; 0000 069B                     Address[1] = 0;
                +
000efe e8e8     +LDI R30 , LOW ( _Address + ( 2 ) )
000eff e0f2     +LDI R31 , HIGH ( _Address + ( 2 ) )
                 	__POINTW1MN _Address,2
000f00 e0a0      	LDI  R26,LOW(0)
000f01 e0b0      	LDI  R27,HIGH(0)
000f02 83a0      	STD  Z+0,R26
000f03 83b1      	STD  Z+1,R27
                 ; 0000 069C                     Address[2] = 0;
                +
000f04 e8ea     +LDI R30 , LOW ( _Address + ( 4 ) )
000f05 e0f2     +LDI R31 , HIGH ( _Address + ( 4 ) )
                 	__POINTW1MN _Address,4
000f06 83a0      	STD  Z+0,R26
000f07 83b1      	STD  Z+1,R27
                 ; 0000 069D                     }
                 ; 0000 069E 
                 ; 0000 069F                     if(BUTTON[0]==1){
                 _0x1D8:
000f08 91a0 0371 	LDS  R26,_BUTTON_S0000010001
000f0a 30a1      	CPI  R26,LOW(0x1)
000f0b f471      	BRNE _0x1D9
                 ; 0000 06A0                         if(Address[2]>1){
                +
000f0c 91a0 028a+LDS R26 , _Address + ( 4 )
000f0e 91b0 028b+LDS R27 , _Address + ( 4 ) + 1
                 	__GETW2MN _Address,4
000f10 9712      	SBIW R26,2
000f11 f03c      	BRLT _0x1DA
                 ; 0000 06A1                         Address[2]--;
                +
000f12 e8aa     +LDI R26 , LOW ( _Address + ( 4 ) )
000f13 e0b2     +LDI R27 , HIGH ( _Address + ( 4 ) )
                 	__POINTW2MN _Address,4
000f14 91ed      	LD   R30,X+
000f15 91fd      	LD   R31,X+
000f16 9731      	SBIW R30,1
000f17 93fe      	ST   -X,R31
000f18 93ee      	ST   -X,R30
                 ; 0000 06A2                         }
                 ; 0000 06A3                     }
                 _0x1DA:
                 ; 0000 06A4                     else if(BUTTON[1]==1){
000f19 c011      	RJMP _0x1DB
                 _0x1D9:
                +
000f1a 91a0 0372+LDS R26 , _BUTTON_S0000010001 + ( 1 )
                 	__GETB2MN _BUTTON_S0000010001,1
000f1c 30a1      	CPI  R26,LOW(0x1)
000f1d f469      	BRNE _0x1DC
                 ; 0000 06A5                         if(Address[2]<2){
                +
000f1e 91a0 028a+LDS R26 , _Address + ( 4 )
000f20 91b0 028b+LDS R27 , _Address + ( 4 ) + 1
                 	__GETW2MN _Address,4
000f22 9712      	SBIW R26,2
000f23 f43c      	BRGE _0x1DD
                 ; 0000 06A6                         Address[2]++;
                +
000f24 e8aa     +LDI R26 , LOW ( _Address + ( 4 ) )
000f25 e0b2     +LDI R27 , HIGH ( _Address + ( 4 ) )
                 	__POINTW2MN _Address,4
000f26 91ed      	LD   R30,X+
000f27 91fd      	LD   R31,X+
000f28 9631      	ADIW R30,1
000f29 93fe      	ST   -X,R31
000f2a 93ee      	ST   -X,R30
                 ; 0000 06A7                         }
                 ; 0000 06A8                     }
                 _0x1DD:
                 ; 0000 06A9 
                 ; 0000 06AA                     if(BUTTON[2]==1){
                 _0x1DC:
                 _0x1DB:
                +
000f2b 91a0 0373+LDS R26 , _BUTTON_S0000010001 + ( 2 )
                 	__GETB2MN _BUTTON_S0000010001,2
000f2d 30a1      	CPI  R26,LOW(0x1)
000f2e f599      	BRNE _0x1DE
                 ; 0000 06AB                         if(Address[2]==1){
                +
000f2f 91e0 028a+LDS R30 , _Address + ( 4 )
000f31 91f0 028b+LDS R31 , _Address + ( 4 ) + 1
                 	__GETW1MN _Address,4
000f33 30e1      	CPI  R30,LOW(0x1)
000f34 e0a0      	LDI  R26,HIGH(0x1)
000f35 07fa      	CPC  R31,R26
000f36 f491      	BRNE _0x1DF
                 ; 0000 06AC                             if(LitersPerMinute<90){
000f37 eea6      	LDI  R26,LOW(_LitersPerMinute)
000f38 e0b3      	LDI  R27,HIGH(_LitersPerMinute)
000f39 940e 204e 	CALL __EEPROMRDW
000f3b 35ea      	CPI  R30,LOW(0x5A)
000f3c e0a0      	LDI  R26,HIGH(0x5A)
000f3d 07fa      	CPC  R31,R26
000f3e f44c      	BRGE _0x1E0
                 ; 0000 06AD                             LitersPerMinute = LitersPerMinute + 10;
000f3f eea6      	LDI  R26,LOW(_LitersPerMinute)
000f40 e0b3      	LDI  R27,HIGH(_LitersPerMinute)
000f41 940e 204e 	CALL __EEPROMRDW
000f43 963a      	ADIW R30,10
000f44 eea6      	LDI  R26,LOW(_LitersPerMinute)
000f45 e0b3      	LDI  R27,HIGH(_LitersPerMinute)
000f46 940e 2066 	CALL __EEPROMWRW
                 ; 0000 06AE                             }
                 ; 0000 06AF                         }
                 _0x1E0:
                 ; 0000 06B0                         else if(Address[2]==2){
000f48 c018      	RJMP _0x1E1
                 _0x1DF:
                +
000f49 91e0 028a+LDS R30 , _Address + ( 4 )
000f4b 91f0 028b+LDS R31 , _Address + ( 4 ) + 1
                 	__GETW1MN _Address,4
000f4d 30e2      	CPI  R30,LOW(0x2)
000f4e e0a0      	LDI  R26,HIGH(0x2)
000f4f 07fa      	CPC  R31,R26
000f50 f481      	BRNE _0x1E2
                 ; 0000 06B1                             if(LitersPerMinute<99){
000f51 eea6      	LDI  R26,LOW(_LitersPerMinute)
000f52 e0b3      	LDI  R27,HIGH(_LitersPerMinute)
000f53 940e 204e 	CALL __EEPROMRDW
000f55 36e3      	CPI  R30,LOW(0x63)
000f56 e0a0      	LDI  R26,HIGH(0x63)
000f57 07fa      	CPC  R31,R26
000f58 f444      	BRGE _0x1E3
                 ; 0000 06B2                             LitersPerMinute++;
000f59 eea6      	LDI  R26,LOW(_LitersPerMinute)
000f5a e0b3      	LDI  R27,HIGH(_LitersPerMinute)
000f5b 940e 204e 	CALL __EEPROMRDW
000f5d 9631      	ADIW R30,1
000f5e 940e 2066 	CALL __EEPROMWRW
000f60 9731      	SBIW R30,1
                 ; 0000 06B3                             }
                 ; 0000 06B4                         }
                 _0x1E3:
                 ; 0000 06B5                     }
                 _0x1E2:
                 _0x1E1:
                 ; 0000 06B6                     else if(BUTTON[3]==1){
000f61 c032      	RJMP _0x1E4
                 _0x1DE:
                +
000f62 91a0 0374+LDS R26 , _BUTTON_S0000010001 + ( 3 )
                 	__GETB2MN _BUTTON_S0000010001,3
000f64 30a1      	CPI  R26,LOW(0x1)
000f65 f571      	BRNE _0x1E5
                 ; 0000 06B7                         if(Address[2]==1){
                +
000f66 91e0 028a+LDS R30 , _Address + ( 4 )
000f68 91f0 028b+LDS R31 , _Address + ( 4 ) + 1
                 	__GETW1MN _Address,4
000f6a 30e1      	CPI  R30,LOW(0x1)
000f6b e0a0      	LDI  R26,HIGH(0x1)
000f6c 07fa      	CPC  R31,R26
000f6d f481      	BRNE _0x1E6
                 ; 0000 06B8                             if(LitersPerMinute>10){
000f6e eea6      	LDI  R26,LOW(_LitersPerMinute)
000f6f e0b3      	LDI  R27,HIGH(_LitersPerMinute)
000f70 940e 204e 	CALL __EEPROMRDW
000f72 973b      	SBIW R30,11
000f73 f04c      	BRLT _0x1E7
                 ; 0000 06B9                             LitersPerMinute = LitersPerMinute - 10;
000f74 eea6      	LDI  R26,LOW(_LitersPerMinute)
000f75 e0b3      	LDI  R27,HIGH(_LitersPerMinute)
000f76 940e 204e 	CALL __EEPROMRDW
000f78 973a      	SBIW R30,10
000f79 eea6      	LDI  R26,LOW(_LitersPerMinute)
000f7a e0b3      	LDI  R27,HIGH(_LitersPerMinute)
000f7b 940e 2066 	CALL __EEPROMWRW
                 ; 0000 06BA                             }
                 ; 0000 06BB                         }
                 _0x1E7:
                 ; 0000 06BC                         else if(Address[2]==2){
000f7d c016      	RJMP _0x1E8
                 _0x1E6:
                +
000f7e 91e0 028a+LDS R30 , _Address + ( 4 )
000f80 91f0 028b+LDS R31 , _Address + ( 4 ) + 1
                 	__GETW1MN _Address,4
000f82 30e2      	CPI  R30,LOW(0x2)
000f83 e0a0      	LDI  R26,HIGH(0x2)
000f84 07fa      	CPC  R31,R26
000f85 f471      	BRNE _0x1E9
                 ; 0000 06BD                             if(LitersPerMinute>1){
000f86 eea6      	LDI  R26,LOW(_LitersPerMinute)
000f87 e0b3      	LDI  R27,HIGH(_LitersPerMinute)
000f88 940e 204e 	CALL __EEPROMRDW
000f8a 9732      	SBIW R30,2
000f8b f044      	BRLT _0x1EA
                 ; 0000 06BE                             LitersPerMinute--;
000f8c eea6      	LDI  R26,LOW(_LitersPerMinute)
000f8d e0b3      	LDI  R27,HIGH(_LitersPerMinute)
000f8e 940e 204e 	CALL __EEPROMRDW
000f90 9731      	SBIW R30,1
000f91 940e 2066 	CALL __EEPROMWRW
000f93 9631      	ADIW R30,1
                 ; 0000 06BF                             }
                 ; 0000 06C0                         }
                 _0x1EA:
                 ; 0000 06C1                     }
                 _0x1E9:
                 _0x1E8:
                 ; 0000 06C2                 }
                 _0x1E5:
                 _0x1E4:
                 _0x1D7:
                 ; 0000 06C3 
                 ; 0000 06C4                 if(RefreshLcd==1){
000f94 e0e1      	LDI  R30,LOW(1)
000f95 15e5      	CP   R30,R5
000f96 f011      	BREQ PC+3
000f97 940c 106c 	JMP _0x1EB
                 ; 0000 06C5                     if(Address[2]==0){
                +
000f99 91e0 028a+LDS R30 , _Address + ( 4 )
000f9b 91f0 028b+LDS R31 , _Address + ( 4 ) + 1
                 	__GETW1MN _Address,4
000f9d 9730      	SBIW R30,0
000f9e f559      	BRNE _0x1EC
                 ; 0000 06C6                         if(Address[1]==0){
                +
000f9f 91e0 0288+LDS R30 , _Address + ( 2 )
000fa1 91f0 0289+LDS R31 , _Address + ( 2 ) + 1
                 	__GETW1MN _Address,2
000fa3 9730      	SBIW R30,0
000fa4 f521      	BRNE _0x1ED
                 ; 0000 06C7                         lcd_put_number(0,2,0,1,LitersPerMinute,0);
000fa5 e0e0      	LDI  R30,LOW(0)
000fa6 93ea      	ST   -Y,R30
000fa7 e0e2      	LDI  R30,LOW(2)
000fa8 93ea      	ST   -Y,R30
000fa9 e0e0      	LDI  R30,LOW(0)
000faa 93ea      	ST   -Y,R30
000fab e0e1      	LDI  R30,LOW(1)
000fac 93ea      	ST   -Y,R30
000fad eea6      	LDI  R26,LOW(_LitersPerMinute)
000fae e0b3      	LDI  R27,HIGH(_LitersPerMinute)
000faf 940e 204e 	CALL __EEPROMRDW
000fb1 940e 1fa5 	CALL __CWD1
000fb3 940e 2045 	CALL __PUTPARD1
                +
000fb5 e0e0     +LDI R30 , LOW ( 0x0 )
000fb6 e0f0     +LDI R31 , HIGH ( 0x0 )
000fb7 e060     +LDI R22 , BYTE3 ( 0x0 )
000fb8 e070     +LDI R23 , BYTE4 ( 0x0 )
                 	__GETD1N 0x0
000fb9 940e 2045 	CALL __PUTPARD1
000fbb 940e 034c 	CALL _lcd_put_number
                 ; 0000 06C8                         lcd_putsf(   "L/MIN SRAUTAS");
                +
000fbd eeec     +LDI R30 , LOW ( 2 * _0x0 + ( 138 ) )
000fbe e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 138 ) )
                 	__POINTW1FN _0x0,138
000fbf 93fa      	ST   -Y,R31
000fc0 93ea      	ST   -Y,R30
000fc1 940e 1f1c 	CALL _lcd_putsf
                 ; 0000 06C9                         lcd_putsf("    KEISTI?-->* ");
                +
000fc3 edeb     +LDI R30 , LOW ( 2 * _0x0 + ( 121 ) )
000fc4 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 121 ) )
                 	__POINTW1FN _0x0,121
000fc5 93fa      	ST   -Y,R31
000fc6 93ea      	ST   -Y,R30
000fc7 940e 1f1c 	CALL _lcd_putsf
                 ; 0000 06CA                         }
                 ; 0000 06CB                     }
                 _0x1ED:
                 ; 0000 06CC                     else{
000fc9 c0a2      	RJMP _0x1EE
                 _0x1EC:
                 ; 0000 06CD                     lcd_put_number(0,2,0,1,LitersPerMinute,0);
000fca e0e0      	LDI  R30,LOW(0)
000fcb 93ea      	ST   -Y,R30
000fcc e0e2      	LDI  R30,LOW(2)
000fcd 93ea      	ST   -Y,R30
000fce e0e0      	LDI  R30,LOW(0)
000fcf 93ea      	ST   -Y,R30
000fd0 e0e1      	LDI  R30,LOW(1)
000fd1 93ea      	ST   -Y,R30
000fd2 eea6      	LDI  R26,LOW(_LitersPerMinute)
000fd3 e0b3      	LDI  R27,HIGH(_LitersPerMinute)
000fd4 940e 204e 	CALL __EEPROMRDW
000fd6 940e 1fa5 	CALL __CWD1
000fd8 940e 2045 	CALL __PUTPARD1
                +
000fda e0e0     +LDI R30 , LOW ( 0x0 )
000fdb e0f0     +LDI R31 , HIGH ( 0x0 )
000fdc e060     +LDI R22 , BYTE3 ( 0x0 )
000fdd e070     +LDI R23 , BYTE4 ( 0x0 )
                 	__GETD1N 0x0
000fde 940e 2045 	CALL __PUTPARD1
000fe0 940e 034c 	CALL _lcd_put_number
                 ; 0000 06CE                     lcd_putsf("L/MIN SRAUTAS");
                +
000fe2 eeec     +LDI R30 , LOW ( 2 * _0x0 + ( 138 ) )
000fe3 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 138 ) )
                 	__POINTW1FN _0x0,138
000fe4 93fa      	ST   -Y,R31
000fe5 93ea      	ST   -Y,R30
000fe6 940e 1f1c 	CALL _lcd_putsf
                 ; 0000 06CF 
                 ; 0000 06D0                         if(Address[2]==1){
                +
000fe8 91e0 028a+LDS R30 , _Address + ( 4 )
000fea 91f0 028b+LDS R31 , _Address + ( 4 ) + 1
                 	__GETW1MN _Address,4
000fec 30e1      	CPI  R30,LOW(0x1)
000fed e0a0      	LDI  R26,HIGH(0x1)
000fee 07fa      	CPC  R31,R26
000fef f591      	BRNE _0x1EF
                 ; 0000 06D1                         lcd_gotoxy(0,1);
000ff0 e0e0      	LDI  R30,LOW(0)
000ff1 93ea      	ST   -Y,R30
000ff2 e0e1      	LDI  R30,LOW(1)
000ff3 93ea      	ST   -Y,R30
000ff4 940e 1ebc 	CALL _lcd_gotoxy
                 ; 0000 06D2                             if(LitersPerMinute>=90){
000ff6 eea6      	LDI  R26,LOW(_LitersPerMinute)
000ff7 e0b3      	LDI  R27,HIGH(_LitersPerMinute)
000ff8 940e 204e 	CALL __EEPROMRDW
000ffa 35ea      	CPI  R30,LOW(0x5A)
000ffb e0a0      	LDI  R26,HIGH(0x5A)
000ffc 07fa      	CPC  R31,R26
000ffd f034      	BRLT _0x1F0
                 ; 0000 06D3                             lcd_buttons(0,1,0,1,1, 0,0,0,0);
000ffe e0e0      	LDI  R30,LOW(0)
000fff 93ea      	ST   -Y,R30
001000 e0e1      	LDI  R30,LOW(1)
001001 93ea      	ST   -Y,R30
001002 e0e0      	LDI  R30,LOW(0)
001003 c011      	RJMP _0x33D
                 ; 0000 06D4                             }
                 ; 0000 06D5                             else if(LitersPerMinute<=10){
                 _0x1F0:
001004 eea6      	LDI  R26,LOW(_LitersPerMinute)
001005 e0b3      	LDI  R27,HIGH(_LitersPerMinute)
001006 940e 204e 	CALL __EEPROMRDW
001008 973b      	SBIW R30,11
001009 f43c      	BRGE _0x1F2
                 ; 0000 06D6                             lcd_buttons(0,1,1,0,1, 0,0,0,0);
00100a e0e0      	LDI  R30,LOW(0)
00100b 93ea      	ST   -Y,R30
00100c e0e1      	LDI  R30,LOW(1)
00100d 93ea      	ST   -Y,R30
00100e 93ea      	ST   -Y,R30
00100f e0e0      	LDI  R30,LOW(0)
001010 c006      	RJMP _0x33E
                 ; 0000 06D7                             }
                 ; 0000 06D8                             else{
                 _0x1F2:
                 ; 0000 06D9                             lcd_buttons(0,1,1,1,1, 0,0,0,0);
001011 e0e0      	LDI  R30,LOW(0)
001012 93ea      	ST   -Y,R30
001013 e0e1      	LDI  R30,LOW(1)
001014 93ea      	ST   -Y,R30
                 _0x33D:
001015 93ea      	ST   -Y,R30
001016 e0e1      	LDI  R30,LOW(1)
                 _0x33E:
001017 93ea      	ST   -Y,R30
001018 e0e1      	LDI  R30,LOW(1)
001019 93ea      	ST   -Y,R30
00101a e0e0      	LDI  R30,LOW(0)
00101b 93ea      	ST   -Y,R30
00101c 93ea      	ST   -Y,R30
00101d 93ea      	ST   -Y,R30
00101e 93ea      	ST   -Y,R30
00101f 940e 0520 	CALL _lcd_buttons
                 ; 0000 06DA                             }
                 ; 0000 06DB 
                 ; 0000 06DC                         }
                 ; 0000 06DD                         else{
001021 c032      	RJMP _0x1F4
                 _0x1EF:
                 ; 0000 06DE                         lcd_gotoxy(0,1);
001022 e0e0      	LDI  R30,LOW(0)
001023 93ea      	ST   -Y,R30
001024 e0e1      	LDI  R30,LOW(1)
001025 93ea      	ST   -Y,R30
001026 940e 1ebc 	CALL _lcd_gotoxy
                 ; 0000 06DF                             if(LitersPerMinute>=99){
001028 eea6      	LDI  R26,LOW(_LitersPerMinute)
001029 e0b3      	LDI  R27,HIGH(_LitersPerMinute)
00102a 940e 204e 	CALL __EEPROMRDW
00102c 36e3      	CPI  R30,LOW(0x63)
00102d e0a0      	LDI  R26,HIGH(0x63)
00102e 07fa      	CPC  R31,R26
00102f f02c      	BRLT _0x1F5
                 ; 0000 06E0                             lcd_buttons(1,0,0,1,1, 0,0,0,0);
001030 e0e1      	LDI  R30,LOW(1)
001031 93ea      	ST   -Y,R30
001032 e0e0      	LDI  R30,LOW(0)
001033 93ea      	ST   -Y,R30
001034 c013      	RJMP _0x33F
                 ; 0000 06E1                             }
                 ; 0000 06E2                             else if(LitersPerMinute<=1){
                 _0x1F5:
001035 eea6      	LDI  R26,LOW(_LitersPerMinute)
001036 e0b3      	LDI  R27,HIGH(_LitersPerMinute)
001037 940e 204e 	CALL __EEPROMRDW
001039 9732      	SBIW R30,2
00103a f444      	BRGE _0x1F7
                 ; 0000 06E3                             lcd_buttons(1,0,1,0,1, 0,0,0,0);
00103b e0e1      	LDI  R30,LOW(1)
00103c 93ea      	ST   -Y,R30
00103d e0e0      	LDI  R30,LOW(0)
00103e 93ea      	ST   -Y,R30
00103f e0e1      	LDI  R30,LOW(1)
001040 93ea      	ST   -Y,R30
001041 e0e0      	LDI  R30,LOW(0)
001042 c007      	RJMP _0x340
                 ; 0000 06E4                             }
                 ; 0000 06E5                             else{
                 _0x1F7:
                 ; 0000 06E6                             lcd_buttons(1,0,1,1,1, 0,0,0,0);
001043 e0e1      	LDI  R30,LOW(1)
001044 93ea      	ST   -Y,R30
001045 e0e0      	LDI  R30,LOW(0)
001046 93ea      	ST   -Y,R30
001047 e0e1      	LDI  R30,LOW(1)
                 _0x33F:
001048 93ea      	ST   -Y,R30
001049 e0e1      	LDI  R30,LOW(1)
                 _0x340:
00104a 93ea      	ST   -Y,R30
00104b e0e1      	LDI  R30,LOW(1)
00104c 93ea      	ST   -Y,R30
00104d e0e0      	LDI  R30,LOW(0)
00104e 93ea      	ST   -Y,R30
00104f 93ea      	ST   -Y,R30
001050 93ea      	ST   -Y,R30
001051 93ea      	ST   -Y,R30
001052 940e 0520 	CALL _lcd_buttons
                 ; 0000 06E7                             }
                 ; 0000 06E8                         }
                 _0x1F4:
                 ; 0000 06E9 
                 ; 0000 06EA                         if(Address[2]==1){
                +
001054 91e0 028a+LDS R30 , _Address + ( 4 )
001056 91f0 028b+LDS R31 , _Address + ( 4 ) + 1
                 	__GETW1MN _Address,4
001058 30e1      	CPI  R30,LOW(0x1)
001059 e0a0      	LDI  R26,HIGH(0x1)
00105a 07fa      	CPC  R31,R26
00105b f411      	BRNE _0x1F9
                 ; 0000 06EB                         lcd_cursor(0,0);
00105c e0e0      	LDI  R30,LOW(0)
00105d c009      	RJMP _0x341
                 ; 0000 06EC                         }
                 ; 0000 06ED                         else if(Address[2]==2){
                 _0x1F9:
                +
00105e 91e0 028a+LDS R30 , _Address + ( 4 )
001060 91f0 028b+LDS R31 , _Address + ( 4 ) + 1
                 	__GETW1MN _Address,4
001062 30e2      	CPI  R30,LOW(0x2)
001063 e0a0      	LDI  R26,HIGH(0x2)
001064 07fa      	CPC  R31,R26
001065 f431      	BRNE _0x1FB
                 ; 0000 06EE                         lcd_cursor(2,0);
001066 e0e2      	LDI  R30,LOW(2)
                 _0x341:
001067 93ea      	ST   -Y,R30
001068 e0e0      	LDI  R30,LOW(0)
001069 93ea      	ST   -Y,R30
00106a 940e 04e7 	CALL _lcd_cursor
                 ; 0000 06EF                         }
                 ; 0000 06F0                     }
                 _0x1FB:
                 _0x1EE:
                 ; 0000 06F1                 }
                 ; 0000 06F2             /////////////////////////////////////////////////////////////////////
                 ; 0000 06F3             }
                 _0x1EB:
                 ; 0000 06F4             else if(Address[0]==4){
00106c 940c 1b57 	JMP  _0x1FC
                 _0x1D3:
00106e 91a0 0286 	LDS  R26,_Address
001070 91b0 0287 	LDS  R27,_Address+1
001072 9714      	SBIW R26,4
001073 f4e1      	BRNE _0x1FD
                 ; 0000 06F5                 if(RefreshLcd==1){
001074 e0e1      	LDI  R30,LOW(1)
001075 15e5      	CP   R30,R5
001076 f4b9      	BRNE _0x1FE
                 ; 0000 06F6                     if(TERMOSWITCH_INPUT==0){
001077 9987      	SBIC 0x10,7
001078 c009      	RJMP _0x1FF
                 ; 0000 06F7                     lcd_putsf("  95C APSAUGA   ");
                +
001079 efea     +LDI R30 , LOW ( 2 * _0x0 + ( 152 ) )
00107a e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 152 ) )
                 	__POINTW1FN _0x0,152
00107b 93fa      	ST   -Y,R31
00107c 93ea      	ST   -Y,R30
00107d 940e 1f1c 	CALL _lcd_putsf
                 ; 0000 06F8                     lcd_putsf("  NESUVEIKUSI   ");
                +
00107f e0eb     +LDI R30 , LOW ( 2 * _0x0 + ( 169 ) )
001080 e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 169 ) )
                 	__POINTW1FN _0x0,169
001081 c008      	RJMP _0x342
                 ; 0000 06F9                     }
                 ; 0000 06FA                     else{
                 _0x1FF:
                 ; 0000 06FB                     lcd_putsf("--SUVEIKE  95C--");
                +
001082 e1ec     +LDI R30 , LOW ( 2 * _0x0 + ( 186 ) )
001083 e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 186 ) )
                 	__POINTW1FN _0x0,186
001084 93fa      	ST   -Y,R31
001085 93ea      	ST   -Y,R30
001086 940e 1f1c 	CALL _lcd_putsf
                 ; 0000 06FC                     lcd_putsf("----APSAUGA-----");
                +
001088 e2ed     +LDI R30 , LOW ( 2 * _0x0 + ( 203 ) )
001089 e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 203 ) )
                 	__POINTW1FN _0x0,203
                 _0x342:
00108a 93fa      	ST   -Y,R31
00108b 93ea      	ST   -Y,R30
00108c 940e 1f1c 	CALL _lcd_putsf
                 ; 0000 06FD                     }
                 ; 0000 06FE                 }
                 ; 0000 06FF             }
                 _0x1FE:
                 ; 0000 0700             else if(Address[0]==5){
00108e 940c 1b57 	JMP  _0x201
                 _0x1FD:
001090 91a0 0286 	LDS  R26,_Address
001092 91b0 0287 	LDS  R27,_Address+1
001094 9715      	SBIW R26,5
001095 f011      	BREQ PC+3
001096 940c 10e0 	JMP _0x202
                 ; 0000 0701                 if(Address[1]==0){
                +
001098 91e0 0288+LDS R30 , _Address + ( 2 )
00109a 91f0 0289+LDS R31 , _Address + ( 2 ) + 1
                 	__GETW1MN _Address,2
00109c 9730      	SBIW R30,0
00109d f011      	BREQ PC+3
00109e 940c 10de 	JMP _0x203
                 ; 0000 0702                     if(RefreshLcd==1){
0010a0 e0e1      	LDI  R30,LOW(1)
0010a1 15e5      	CP   R30,R5
0010a2 f5d9      	BRNE _0x204
                 ; 0000 0703                         if(SolarPower>9999){
0010a3 91a0 036e 	LDS  R26,_SolarPower_S0000010003
0010a5 91b0 036f 	LDS  R27,_SolarPower_S0000010003+1
0010a7 31a0      	CPI  R26,LOW(0x2710)
0010a8 e2e7      	LDI  R30,HIGH(0x2710)
0010a9 07be      	CPC  R27,R30
0010aa f03c      	BRLT _0x205
                 ; 0000 0704                         SolarPower = 9999;
0010ab e0ef      	LDI  R30,LOW(9999)
0010ac e2f7      	LDI  R31,HIGH(9999)
0010ad 93e0 036e 	STS  _SolarPower_S0000010003,R30
0010af 93f0 036f 	STS  _SolarPower_S0000010003+1,R31
                 ; 0000 0705                         }
                 ; 0000 0706                         else if(SolarPower<0){
0010b1 c009      	RJMP _0x206
                 _0x205:
0010b2 91a0 036f 	LDS  R26,_SolarPower_S0000010003+1
0010b4 23aa      	TST  R26
0010b5 f42a      	BRPL _0x207
                 ; 0000 0707                         SolarPower = 0;
0010b6 e0e0      	LDI  R30,LOW(0)
0010b7 93e0 036e 	STS  _SolarPower_S0000010003,R30
0010b9 93e0 036f 	STS  _SolarPower_S0000010003+1,R30
                 ; 0000 0708                         }
                 ; 0000 0709                     lcd_put_number(0,4,0,0,SolarPower,0);
                 _0x207:
                 _0x206:
0010bb e0e0      	LDI  R30,LOW(0)
0010bc 93ea      	ST   -Y,R30
0010bd e0e4      	LDI  R30,LOW(4)
0010be 93ea      	ST   -Y,R30
0010bf e0e0      	LDI  R30,LOW(0)
0010c0 93ea      	ST   -Y,R30
0010c1 93ea      	ST   -Y,R30
0010c2 91e0 036e 	LDS  R30,_SolarPower_S0000010003
0010c4 91f0 036f 	LDS  R31,_SolarPower_S0000010003+1
0010c6 940e 1fa5 	CALL __CWD1
0010c8 940e 2045 	CALL __PUTPARD1
                +
0010ca e0e0     +LDI R30 , LOW ( 0x0 )
0010cb e0f0     +LDI R31 , HIGH ( 0x0 )
0010cc e060     +LDI R22 , BYTE3 ( 0x0 )
0010cd e070     +LDI R23 , BYTE4 ( 0x0 )
                 	__GETD1N 0x0
0010ce 940e 2045 	CALL __PUTPARD1
0010d0 940e 034c 	CALL _lcd_put_number
                 ; 0000 070A                         lcd_putsf("W MOMENTINE ");
                +
0010d2 e3ee     +LDI R30 , LOW ( 2 * _0x0 + ( 220 ) )
0010d3 e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 220 ) )
                 	__POINTW1FN _0x0,220
0010d4 93fa      	ST   -Y,R31
0010d5 93ea      	ST   -Y,R30
0010d6 940e 1f1c 	CALL _lcd_putsf
                 ; 0000 070B                     lcd_putsf("     GALIA      ");
                +
0010d8 e4eb     +LDI R30 , LOW ( 2 * _0x0 + ( 233 ) )
0010d9 e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 233 ) )
                 	__POINTW1FN _0x0,233
0010da 93fa      	ST   -Y,R31
0010db 93ea      	ST   -Y,R30
0010dc 940e 1f1c 	CALL _lcd_putsf
                 ; 0000 070C                     }
                 ; 0000 070D                 }
                 _0x204:
                 ; 0000 070E             }
                 _0x203:
                 ; 0000 070F             else if(Address[0]==6){
0010de 940c 1b57 	JMP  _0x208
                 _0x202:
0010e0 91a0 0286 	LDS  R26,_Address
0010e2 91b0 0287 	LDS  R27,_Address+1
0010e4 9716      	SBIW R26,6
0010e5 f599      	BRNE _0x209
                 ; 0000 0710                 if(Address[1]==0){
                +
0010e6 91e0 0288+LDS R30 , _Address + ( 2 )
0010e8 91f0 0289+LDS R31 , _Address + ( 2 ) + 1
                 	__GETW1MN _Address,2
0010ea 9730      	SBIW R30,0
0010eb f559      	BRNE _0x20A
                 ; 0000 0711                     if(RefreshLcd==1){
0010ec e0e1      	LDI  R30,LOW(1)
0010ed 15e5      	CP   R30,R5
0010ee f541      	BRNE _0x20B
                 ; 0000 0712                     lcd_putsf("  ");
                +
0010ef e6e5     +LDI R30 , LOW ( 2 * _0x0 + ( 3 ) )
0010f0 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 3 ) )
                 	__POINTW1FN _0x0,3
0010f1 93fa      	ST   -Y,R31
0010f2 93ea      	ST   -Y,R30
0010f3 940e 1f1c 	CALL _lcd_putsf
                 ; 0000 0713                     lcd_put_number(0,10,0,3,SolarColectorWattHours,0);
0010f5 e0e0      	LDI  R30,LOW(0)
0010f6 93ea      	ST   -Y,R30
0010f7 e0ea      	LDI  R30,LOW(10)
0010f8 93ea      	ST   -Y,R30
0010f9 e0e0      	LDI  R30,LOW(0)
0010fa 93ea      	ST   -Y,R30
0010fb e0e3      	LDI  R30,LOW(3)
0010fc 93ea      	ST   -Y,R30
0010fd eea8      	LDI  R26,LOW(_SolarColectorWattHours)
0010fe e0b3      	LDI  R27,HIGH(_SolarColectorWattHours)
0010ff 940e 204a 	CALL __EEPROMRDD
001101 940e 2045 	CALL __PUTPARD1
                +
001103 e0e0     +LDI R30 , LOW ( 0x0 )
001104 e0f0     +LDI R31 , HIGH ( 0x0 )
001105 e060     +LDI R22 , BYTE3 ( 0x0 )
001106 e070     +LDI R23 , BYTE4 ( 0x0 )
                 	__GETD1N 0x0
001107 940e 2045 	CALL __PUTPARD1
001109 940e 034c 	CALL _lcd_put_number
                 ; 0000 0714                     lcd_putsf("kWh");
                +
00110b e5ec     +LDI R30 , LOW ( 2 * _0x0 + ( 250 ) )
00110c e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 250 ) )
                 	__POINTW1FN _0x0,250
00110d 93fa      	ST   -Y,R31
00110e 93ea      	ST   -Y,R30
00110f 940e 1f1c 	CALL _lcd_putsf
                 ; 0000 0715                     lcd_putsf("ENERG.SKAITIKLIS");
                +
001111 e6e0     +LDI R30 , LOW ( 2 * _0x0 + ( 254 ) )
001112 e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 254 ) )
                 	__POINTW1FN _0x0,254
001113 93fa      	ST   -Y,R31
001114 93ea      	ST   -Y,R30
001115 940e 1f1c 	CALL _lcd_putsf
                 ; 0000 0716                     }
                 ; 0000 0717                 }
                 _0x20B:
                 ; 0000 0718             }
                 _0x20A:
                 ; 0000 0719             else if(Address[0]==7){
001117 940c 1b57 	JMP  _0x20C
                 _0x209:
001119 91a0 0286 	LDS  R26,_Address
00111b 91b0 0287 	LDS  R27,_Address+1
00111d 9717      	SBIW R26,7
00111e f599      	BRNE _0x20D
                 ; 0000 071A                 if(Address[1]==0){
                +
00111f 91e0 0288+LDS R30 , _Address + ( 2 )
001121 91f0 0289+LDS R31 , _Address + ( 2 ) + 1
                 	__GETW1MN _Address,2
001123 9730      	SBIW R30,0
001124 f559      	BRNE _0x20E
                 ; 0000 071B                     if(RefreshLcd==1){
001125 e0e1      	LDI  R30,LOW(1)
001126 15e5      	CP   R30,R5
001127 f541      	BRNE _0x20F
                 ; 0000 071C                     lcd_putsf("  ");
                +
001128 e6e5     +LDI R30 , LOW ( 2 * _0x0 + ( 3 ) )
001129 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 3 ) )
                 	__POINTW1FN _0x0,3
00112a 93fa      	ST   -Y,R31
00112b 93ea      	ST   -Y,R30
00112c 940e 1f1c 	CALL _lcd_putsf
                 ; 0000 071D                     lcd_put_number(0,10,0,3,WattHoursPerDay,0);
00112e e0e0      	LDI  R30,LOW(0)
00112f 93ea      	ST   -Y,R30
001130 e0ea      	LDI  R30,LOW(10)
001131 93ea      	ST   -Y,R30
001132 e0e0      	LDI  R30,LOW(0)
001133 93ea      	ST   -Y,R30
001134 e0e3      	LDI  R30,LOW(3)
001135 93ea      	ST   -Y,R30
001136 eeac      	LDI  R26,LOW(_WattHoursPerDay)
001137 e0b3      	LDI  R27,HIGH(_WattHoursPerDay)
001138 940e 204a 	CALL __EEPROMRDD
00113a 940e 2045 	CALL __PUTPARD1
                +
00113c e0e0     +LDI R30 , LOW ( 0x0 )
00113d e0f0     +LDI R31 , HIGH ( 0x0 )
00113e e060     +LDI R22 , BYTE3 ( 0x0 )
00113f e070     +LDI R23 , BYTE4 ( 0x0 )
                 	__GETD1N 0x0
001140 940e 2045 	CALL __PUTPARD1
001142 940e 034c 	CALL _lcd_put_number
                 ; 0000 071E                     lcd_putsf("kWh");
                +
001144 e5ec     +LDI R30 , LOW ( 2 * _0x0 + ( 250 ) )
001145 e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 250 ) )
                 	__POINTW1FN _0x0,250
001146 93fa      	ST   -Y,R31
001147 93ea      	ST   -Y,R30
001148 940e 1f1c 	CALL _lcd_putsf
                 ; 0000 071F                     lcd_putsf("ENERG. PER DIENA");
                +
00114a e7e1     +LDI R30 , LOW ( 2 * _0x0 + ( 271 ) )
00114b e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 271 ) )
                 	__POINTW1FN _0x0,271
00114c 93fa      	ST   -Y,R31
00114d 93ea      	ST   -Y,R30
00114e 940e 1f1c 	CALL _lcd_putsf
                 ; 0000 0720                     }
                 ; 0000 0721                 }
                 _0x20F:
                 ; 0000 0722             }
                 _0x20E:
                 ; 0000 0723             else if(Address[0]==8){//+
001150 940c 1b57 	JMP  _0x210
                 _0x20D:
001152 91a0 0286 	LDS  R26,_Address
001154 91b0 0287 	LDS  R27,_Address+1
001156 9718      	SBIW R26,8
001157 f5a1      	BRNE _0x211
                 ; 0000 0724                 if(Address[1]==0){
                +
001158 91e0 0288+LDS R30 , _Address + ( 2 )
00115a 91f0 0289+LDS R31 , _Address + ( 2 ) + 1
                 	__GETW1MN _Address,2
00115c 9730      	SBIW R30,0
00115d f561      	BRNE _0x212
                 ; 0000 0725                     if(RefreshLcd==1){
00115e e0e1      	LDI  R30,LOW(1)
00115f 15e5      	CP   R30,R5
001160 f549      	BRNE _0x213
                 ; 0000 0726                     lcd_putsf("MAKS.DIENOS.TEMP");
                +
001161 e8e2     +LDI R30 , LOW ( 2 * _0x0 + ( 288 ) )
001162 e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 288 ) )
                 	__POINTW1FN _0x0,288
001163 93fa      	ST   -Y,R31
001164 93ea      	ST   -Y,R30
001165 940e 1f1c 	CALL _lcd_putsf
                 ; 0000 0727                     lcd_putsf("    ");
                +
001167 e5e7     +LDI R30 , LOW ( 2 * _0x0 + ( 245 ) )
001168 e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 245 ) )
                 	__POINTW1FN _0x0,245
001169 93fa      	ST   -Y,R31
00116a 93ea      	ST   -Y,R30
00116b 940e 1f1c 	CALL _lcd_putsf
                 ; 0000 0728                     lcd_put_number(1,3,1,1,0,MaxDayTemperature);
00116d e0e1      	LDI  R30,LOW(1)
00116e 93ea      	ST   -Y,R30
00116f e0e3      	LDI  R30,LOW(3)
001170 93ea      	ST   -Y,R30
001171 e0e1      	LDI  R30,LOW(1)
001172 93ea      	ST   -Y,R30
001173 93ea      	ST   -Y,R30
                +
001174 e0e0     +LDI R30 , LOW ( 0x0 )
001175 e0f0     +LDI R31 , HIGH ( 0x0 )
001176 e060     +LDI R22 , BYTE3 ( 0x0 )
001177 e070     +LDI R23 , BYTE4 ( 0x0 )
                 	__GETD1N 0x0
001178 940e 2045 	CALL __PUTPARD1
00117a efa4      	LDI  R26,LOW(_MaxDayTemperature)
00117b e0b3      	LDI  R27,HIGH(_MaxDayTemperature)
00117c 940e 204e 	CALL __EEPROMRDW
00117e 940e 1fa5 	CALL __CWD1
001180 940e 2045 	CALL __PUTPARD1
001182 940e 034c 	CALL _lcd_put_number
                 ; 0000 0729                     lcd_putsf("C      ");
                +
001184 e9e3     +LDI R30 , LOW ( 2 * _0x0 + ( 305 ) )
001185 e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 305 ) )
                 	__POINTW1FN _0x0,305
001186 93fa      	ST   -Y,R31
001187 93ea      	ST   -Y,R30
001188 940e 1f1c 	CALL _lcd_putsf
                 ; 0000 072A                     }
                 ; 0000 072B                 }
                 _0x213:
                 ; 0000 072C             }
                 _0x212:
                 ; 0000 072D             else if(Address[0]==9){
00118a 940c 1b57 	JMP  _0x214
                 _0x211:
00118c 91a0 0286 	LDS  R26,_Address
00118e 91b0 0287 	LDS  R27,_Address+1
001190 9719      	SBIW R26,9
001191 f011      	BREQ PC+3
001192 940c 1540 	JMP _0x215
                 ; 0000 072E 
                 ; 0000 072F                 if(Address[1]==0){
                +
001194 91e0 0288+LDS R30 , _Address + ( 2 )
001196 91f0 0289+LDS R31 , _Address + ( 2 ) + 1
                 	__GETW1MN _Address,2
001198 9730      	SBIW R30,0
001199 f489      	BRNE _0x216
                 ; 0000 0730                     if(Address[2]==0){
                +
00119a 91e0 028a+LDS R30 , _Address + ( 4 )
00119c 91f0 028b+LDS R31 , _Address + ( 4 ) + 1
                 	__GETW1MN _Address,4
00119e 9730      	SBIW R30,0
00119f f451      	BRNE _0x217
                 ; 0000 0731                         if(BUTTON[4]==1){
                +
0011a0 91a0 0375+LDS R26 , _BUTTON_S0000010001 + ( 4 )
                 	__GETB2MN _BUTTON_S0000010001,4
0011a2 30a1      	CPI  R26,LOW(0x1)
0011a3 f431      	BRNE _0x218
                 ; 0000 0732                         Address[1] = 1;
                +
0011a4 e8e8     +LDI R30 , LOW ( _Address + ( 2 ) )
0011a5 e0f2     +LDI R31 , HIGH ( _Address + ( 2 ) )
                 	__POINTW1MN _Address,2
0011a6 e0a1      	LDI  R26,LOW(1)
0011a7 e0b0      	LDI  R27,HIGH(1)
0011a8 83a0      	STD  Z+0,R26
0011a9 83b1      	STD  Z+1,R27
                 ; 0000 0733                         }
                 ; 0000 0734                     }
                 _0x218:
                 ; 0000 0735                 }
                 _0x217:
                 ; 0000 0736                 else{
0011aa c1a4      	RJMP _0x219
                 _0x216:
                 ; 0000 0737                     if(Address[1]!=LOG_COUNT+1){
                +
0011ab 91e0 0288+LDS R30 , _Address + ( 2 )
0011ad 91f0 0289+LDS R31 , _Address + ( 2 ) + 1
                 	__GETW1MN _Address,2
0011af 35eb      	CPI  R30,LOW(0x5B)
0011b0 e0a0      	LDI  R26,HIGH(0x5B)
0011b1 07fa      	CPC  R31,R26
0011b2 f411      	BRNE PC+3
0011b3 940c 124e 	JMP _0x21A
                 ; 0000 0738                         if(Address[2]==0){
                +
0011b5 91e0 028a+LDS R30 , _Address + ( 4 )
0011b7 91f0 028b+LDS R31 , _Address + ( 4 ) + 1
                 	__GETW1MN _Address,4
0011b9 9730      	SBIW R30,0
0011ba f011      	BREQ PC+3
0011bb 940c 122b 	JMP _0x21B
                 ; 0000 0739 
                 ; 0000 073A                             if(DUAL_BUTTON[0]==1){
0011bd 91a0 037b 	LDS  R26,_DUAL_BUTTON_S0000010001
0011bf 30a1      	CPI  R26,LOW(0x1)
0011c0 f431      	BRNE _0x21C
                 ; 0000 073B                             Address[1] = 0;
                +
0011c1 e8e8     +LDI R30 , LOW ( _Address + ( 2 ) )
0011c2 e0f2     +LDI R31 , HIGH ( _Address + ( 2 ) )
                 	__POINTW1MN _Address,2
0011c3 e0a0      	LDI  R26,LOW(0)
0011c4 e0b0      	LDI  R27,HIGH(0)
0011c5 83a0      	STD  Z+0,R26
0011c6 83b1      	STD  Z+1,R27
                 ; 0000 073C                             }
                 ; 0000 073D 
                 ; 0000 073E                             if(BUTTON[0]==1){
                 _0x21C:
0011c7 91a0 0371 	LDS  R26,_BUTTON_S0000010001
0011c9 30a1      	CPI  R26,LOW(0x1)
0011ca f4a9      	BRNE _0x21D
                 ; 0000 073F                                 if(Address[1]>1){
                +
0011cb 91a0 0288+LDS R26 , _Address + ( 2 )
0011cd 91b0 0289+LDS R27 , _Address + ( 2 ) + 1
                 	__GETW2MN _Address,2
0011cf 9712      	SBIW R26,2
0011d0 f044      	BRLT _0x21E
                 ; 0000 0740                                 Address[1]--;
                +
0011d1 e8a8     +LDI R26 , LOW ( _Address + ( 2 ) )
0011d2 e0b2     +LDI R27 , HIGH ( _Address + ( 2 ) )
                 	__POINTW2MN _Address,2
0011d3 91ed      	LD   R30,X+
0011d4 91fd      	LD   R31,X+
0011d5 9731      	SBIW R30,1
0011d6 93fe      	ST   -X,R31
0011d7 93ee      	ST   -X,R30
                 ; 0000 0741                                 }
                 ; 0000 0742                                 else{
0011d8 c006      	RJMP _0x21F
                 _0x21E:
                 ; 0000 0743                                 Address[1] = LOG_COUNT+1;
                +
0011d9 e8e8     +LDI R30 , LOW ( _Address + ( 2 ) )
0011da e0f2     +LDI R31 , HIGH ( _Address + ( 2 ) )
                 	__POINTW1MN _Address,2
0011db e5ab      	LDI  R26,LOW(91)
0011dc e0b0      	LDI  R27,HIGH(91)
0011dd 83a0      	STD  Z+0,R26
0011de 83b1      	STD  Z+1,R27
                 ; 0000 0744                                 }
                 _0x21F:
                 ; 0000 0745                             }
                 ; 0000 0746                             else if(BUTTON[1]==1){
0011df c01a      	RJMP _0x220
                 _0x21D:
                +
0011e0 91a0 0372+LDS R26 , _BUTTON_S0000010001 + ( 1 )
                 	__GETB2MN _BUTTON_S0000010001,1
0011e2 30a1      	CPI  R26,LOW(0x1)
0011e3 f4b1      	BRNE _0x221
                 ; 0000 0747                                 if(Address[1]<LOG_COUNT+1){
                +
0011e4 91a0 0288+LDS R26 , _Address + ( 2 )
0011e6 91b0 0289+LDS R27 , _Address + ( 2 ) + 1
                 	__GETW2MN _Address,2
0011e8 35ab      	CPI  R26,LOW(0x5B)
0011e9 e0e0      	LDI  R30,HIGH(0x5B)
0011ea 07be      	CPC  R27,R30
0011eb f444      	BRGE _0x222
                 ; 0000 0748                                 Address[1]++;
                +
0011ec e8a8     +LDI R26 , LOW ( _Address + ( 2 ) )
0011ed e0b2     +LDI R27 , HIGH ( _Address + ( 2 ) )
                 	__POINTW2MN _Address,2
0011ee 91ed      	LD   R30,X+
0011ef 91fd      	LD   R31,X+
0011f0 9631      	ADIW R30,1
0011f1 93fe      	ST   -X,R31
0011f2 93ee      	ST   -X,R30
                 ; 0000 0749                                 }
                 ; 0000 074A                                 else{
0011f3 c006      	RJMP _0x223
                 _0x222:
                 ; 0000 074B                                 Address[1] = 1;
                +
0011f4 e8e8     +LDI R30 , LOW ( _Address + ( 2 ) )
0011f5 e0f2     +LDI R31 , HIGH ( _Address + ( 2 ) )
                 	__POINTW1MN _Address,2
0011f6 e0a1      	LDI  R26,LOW(1)
0011f7 e0b0      	LDI  R27,HIGH(1)
0011f8 83a0      	STD  Z+0,R26
0011f9 83b1      	STD  Z+1,R27
                 ; 0000 074C                                 }
                 _0x223:
                 ; 0000 074D                             }
                 ; 0000 074E 
                 ; 0000 074F                             if(BUTTON[4]==1){
                 _0x221:
                 _0x220:
                +
0011fa 91a0 0375+LDS R26 , _BUTTON_S0000010001 + ( 4 )
                 	__GETB2MN _BUTTON_S0000010001,4
0011fc 30a1      	CPI  R26,LOW(0x1)
0011fd f561      	BRNE _0x224
                 ; 0000 0750                             signed int a;
                 ; 0000 0751                             a = NewestLog + Address[1] - 1;
0011fe 9722      	SBIW R28,2
                 ;	a -> Y+0
0011ff e0a7      	LDI  R26,LOW(_NewestLog)
001200 e0b0      	LDI  R27,HIGH(_NewestLog)
001201 940e 2052 	CALL __EEPROMRDB
001203 e0f0      	LDI  R31,0
001204 01df      	MOVW R26,R30
                +
001205 91e0 0288+LDS R30 , _Address + ( 2 )
001207 91f0 0289+LDS R31 , _Address + ( 2 ) + 1
                 	__GETW1MN _Address,2
001209 0fae      	ADD  R26,R30
00120a 1fbf      	ADC  R27,R31
00120b 9711      	SBIW R26,1
00120c 83a8      	ST   Y,R26
00120d 83b9      	STD  Y+1,R27
                 ; 0000 0752                                 if(a>=LOG_COUNT){
00120e 35aa      	CPI  R26,LOW(0x5A)
00120f e0e0      	LDI  R30,HIGH(0x5A)
001210 07be      	CPC  R27,R30
001211 f034      	BRLT _0x225
                 ; 0000 0753                                 a = a - LOG_COUNT;
001212 81e8      	LD   R30,Y
001213 81f9      	LDD  R31,Y+1
001214 55ea      	SUBI R30,LOW(90)
001215 40f0      	SBCI R31,HIGH(90)
001216 83e8      	ST   Y,R30
001217 83f9      	STD  Y+1,R31
                 ; 0000 0754                                 }
                 ; 0000 0755                                 if((LogType[a]>=1)&&(LogType[a]<=50)){
                 _0x225:
001218 81a8      	LD   R26,Y
001219 81b9      	LDD  R27,Y+1
00121a 5dac      	SUBI R26,LOW(-_LogType)
00121b 4fbd      	SBCI R27,HIGH(-_LogType)
00121c 940e 2052 	CALL __EEPROMRDB
00121e 30e1      	CPI  R30,LOW(0x1)
00121f f010      	BRLO _0x227
001220 33e3      	CPI  R30,LOW(0x33)
001221 f008      	BRLO _0x228
                 _0x227:
001222 c006      	RJMP _0x226
                 _0x228:
                 ; 0000 0756                                 Address[2] = 1;
                +
001223 e8ea     +LDI R30 , LOW ( _Address + ( 4 ) )
001224 e0f2     +LDI R31 , HIGH ( _Address + ( 4 ) )
                 	__POINTW1MN _Address,4
001225 e0a1      	LDI  R26,LOW(1)
001226 e0b0      	LDI  R27,HIGH(1)
001227 83a0      	STD  Z+0,R26
001228 83b1      	STD  Z+1,R27
                 ; 0000 0757                                 }
                 ; 0000 0758                             }
                 _0x226:
001229 9622      	ADIW R28,2
                 ; 0000 0759 
                 ; 0000 075A                         }
                 _0x224:
                 ; 0000 075B                         else{
00122a c022      	RJMP _0x229
                 _0x21B:
                 ; 0000 075C                             if(DUAL_BUTTON[0]==1){
00122b 91a0 037b 	LDS  R26,_DUAL_BUTTON_S0000010001
00122d 30a1      	CPI  R26,LOW(0x1)
00122e f431      	BRNE _0x22A
                 ; 0000 075D                             Address[2] = 0;
                +
00122f e8ea     +LDI R30 , LOW ( _Address + ( 4 ) )
001230 e0f2     +LDI R31 , HIGH ( _Address + ( 4 ) )
                 	__POINTW1MN _Address,4
001231 e0a0      	LDI  R26,LOW(0)
001232 e0b0      	LDI  R27,HIGH(0)
001233 83a0      	STD  Z+0,R26
001234 83b1      	STD  Z+1,R27
                 ; 0000 075E                             }
                 ; 0000 075F 
                 ; 0000 0760                             if(BUTTON[4]==1){
                 _0x22A:
                +
001235 91a0 0375+LDS R26 , _BUTTON_S0000010001 + ( 4 )
                 	__GETB2MN _BUTTON_S0000010001,4
001237 30a1      	CPI  R26,LOW(0x1)
001238 f4a1      	BRNE _0x22B
                 ; 0000 0761                                 if(Address[2]<4){
                +
001239 91a0 028a+LDS R26 , _Address + ( 4 )
00123b 91b0 028b+LDS R27 , _Address + ( 4 ) + 1
                 	__GETW2MN _Address,4
00123d 9714      	SBIW R26,4
00123e f444      	BRGE _0x22C
                 ; 0000 0762                                 Address[2]++;
                +
00123f e8aa     +LDI R26 , LOW ( _Address + ( 4 ) )
001240 e0b2     +LDI R27 , HIGH ( _Address + ( 4 ) )
                 	__POINTW2MN _Address,4
001241 91ed      	LD   R30,X+
001242 91fd      	LD   R31,X+
001243 9631      	ADIW R30,1
001244 93fe      	ST   -X,R31
001245 93ee      	ST   -X,R30
                 ; 0000 0763                                 }
                 ; 0000 0764                                 else{
001246 c006      	RJMP _0x22D
                 _0x22C:
                 ; 0000 0765                                 Address[2] = 0;
                +
001247 e8ea     +LDI R30 , LOW ( _Address + ( 4 ) )
001248 e0f2     +LDI R31 , HIGH ( _Address + ( 4 ) )
                 	__POINTW1MN _Address,4
001249 e0a0      	LDI  R26,LOW(0)
00124a e0b0      	LDI  R27,HIGH(0)
00124b 83a0      	STD  Z+0,R26
00124c 83b1      	STD  Z+1,R27
                 ; 0000 0766                                 }
                 _0x22D:
                 ; 0000 0767                             }
                 ; 0000 0768                         }
                 _0x22B:
                 _0x229:
                 ; 0000 0769                     }
                 ; 0000 076A                     else{
00124d c101      	RJMP _0x22E
                 _0x21A:
                 ; 0000 076B                         if(Address[2]==0){
                +
00124e 91e0 028a+LDS R30 , _Address + ( 4 )
001250 91f0 028b+LDS R31 , _Address + ( 4 ) + 1
                 	__GETW1MN _Address,4
001252 9730      	SBIW R30,0
001253 f011      	BREQ PC+3
001254 940c 12a6 	JMP _0x22F
                 ; 0000 076C                             if(DUAL_BUTTON[0]==1){
001256 91a0 037b 	LDS  R26,_DUAL_BUTTON_S0000010001
001258 30a1      	CPI  R26,LOW(0x1)
001259 f431      	BRNE _0x230
                 ; 0000 076D                             Address[1] = 0;
                +
00125a e8e8     +LDI R30 , LOW ( _Address + ( 2 ) )
00125b e0f2     +LDI R31 , HIGH ( _Address + ( 2 ) )
                 	__POINTW1MN _Address,2
00125c e0a0      	LDI  R26,LOW(0)
00125d e0b0      	LDI  R27,HIGH(0)
00125e 83a0      	STD  Z+0,R26
00125f 83b1      	STD  Z+1,R27
                 ; 0000 076E                             }
                 ; 0000 076F 
                 ; 0000 0770                             if(BUTTON[0]==1){
                 _0x230:
001260 91a0 0371 	LDS  R26,_BUTTON_S0000010001
001262 30a1      	CPI  R26,LOW(0x1)
001263 f4a9      	BRNE _0x231
                 ; 0000 0771                                 if(Address[1]>1){
                +
001264 91a0 0288+LDS R26 , _Address + ( 2 )
001266 91b0 0289+LDS R27 , _Address + ( 2 ) + 1
                 	__GETW2MN _Address,2
001268 9712      	SBIW R26,2
001269 f044      	BRLT _0x232
                 ; 0000 0772                                 Address[1]--;
                +
00126a e8a8     +LDI R26 , LOW ( _Address + ( 2 ) )
00126b e0b2     +LDI R27 , HIGH ( _Address + ( 2 ) )
                 	__POINTW2MN _Address,2
00126c 91ed      	LD   R30,X+
00126d 91fd      	LD   R31,X+
00126e 9731      	SBIW R30,1
00126f 93fe      	ST   -X,R31
001270 93ee      	ST   -X,R30
                 ; 0000 0773                                 }
                 ; 0000 0774                                 else{
001271 c006      	RJMP _0x233
                 _0x232:
                 ; 0000 0775                                 Address[1] = 1;
                +
001272 e8e8     +LDI R30 , LOW ( _Address + ( 2 ) )
001273 e0f2     +LDI R31 , HIGH ( _Address + ( 2 ) )
                 	__POINTW1MN _Address,2
001274 e0a1      	LDI  R26,LOW(1)
001275 e0b0      	LDI  R27,HIGH(1)
001276 83a0      	STD  Z+0,R26
001277 83b1      	STD  Z+1,R27
                 ; 0000 0776                                 }
                 _0x233:
                 ; 0000 0777                             }
                 ; 0000 0778                             else if(BUTTON[1]==1){
001278 c01a      	RJMP _0x234
                 _0x231:
                +
001279 91a0 0372+LDS R26 , _BUTTON_S0000010001 + ( 1 )
                 	__GETB2MN _BUTTON_S0000010001,1
00127b 30a1      	CPI  R26,LOW(0x1)
00127c f4b1      	BRNE _0x235
                 ; 0000 0779                                 if(Address[1]<LOG_COUNT+1){
                +
00127d 91a0 0288+LDS R26 , _Address + ( 2 )
00127f 91b0 0289+LDS R27 , _Address + ( 2 ) + 1
                 	__GETW2MN _Address,2
001281 35ab      	CPI  R26,LOW(0x5B)
001282 e0e0      	LDI  R30,HIGH(0x5B)
001283 07be      	CPC  R27,R30
001284 f444      	BRGE _0x236
                 ; 0000 077A                                 Address[1]++;
                +
001285 e8a8     +LDI R26 , LOW ( _Address + ( 2 ) )
001286 e0b2     +LDI R27 , HIGH ( _Address + ( 2 ) )
                 	__POINTW2MN _Address,2
001287 91ed      	LD   R30,X+
001288 91fd      	LD   R31,X+
001289 9631      	ADIW R30,1
00128a 93fe      	ST   -X,R31
00128b 93ee      	ST   -X,R30
                 ; 0000 077B                                 }
                 ; 0000 077C                                 else{
00128c c006      	RJMP _0x237
                 _0x236:
                 ; 0000 077D                                 Address[1] = 1;
                +
00128d e8e8     +LDI R30 , LOW ( _Address + ( 2 ) )
00128e e0f2     +LDI R31 , HIGH ( _Address + ( 2 ) )
                 	__POINTW1MN _Address,2
00128f e0a1      	LDI  R26,LOW(1)
001290 e0b0      	LDI  R27,HIGH(1)
001291 83a0      	STD  Z+0,R26
001292 83b1      	STD  Z+1,R27
                 ; 0000 077E                                 }
                 _0x237:
                 ; 0000 077F                             }
                 ; 0000 0780 
                 ; 0000 0781                             if(BUTTON[4]==1){
                 _0x235:
                 _0x234:
                +
001293 91a0 0375+LDS R26 , _BUTTON_S0000010001 + ( 4 )
                 	__GETB2MN _BUTTON_S0000010001,4
001295 30a1      	CPI  R26,LOW(0x1)
001296 f471      	BRNE _0x238
                 ; 0000 0782                             EnterCode(9,LOG_COUNT+1,0,9,LOG_COUNT+1,1);
001297 e0e9      	LDI  R30,LOW(9)
001298 93ea      	ST   -Y,R30
001299 e5eb      	LDI  R30,LOW(91)
00129a 93ea      	ST   -Y,R30
00129b e0e0      	LDI  R30,LOW(0)
00129c 93ea      	ST   -Y,R30
00129d e0e9      	LDI  R30,LOW(9)
00129e 93ea      	ST   -Y,R30
00129f e5eb      	LDI  R30,LOW(91)
0012a0 93ea      	ST   -Y,R30
0012a1 e0e1      	LDI  R30,LOW(1)
0012a2 93ea      	ST   -Y,R30
0012a3 940e 04f8 	CALL _EnterCode
                 ; 0000 0783                             }
                 ; 0000 0784                         }
                 _0x238:
                 ; 0000 0785                         else{
0012a5 c0a9      	RJMP _0x239
                 _0x22F:
                 ; 0000 0786                         unsigned int i;
                 ; 0000 0787                         NewestLog = 0;
0012a6 9722      	SBIW R28,2
                 ;	i -> Y+0
0012a7 e0a7      	LDI  R26,LOW(_NewestLog)
0012a8 e0b0      	LDI  R27,HIGH(_NewestLog)
0012a9 e0e0      	LDI  R30,LOW(0)
0012aa 940e 206e 	CALL __EEPROMWRB
                 ; 0000 0788                         lcd_clear();
0012ac 940e 1ed0 	CALL _lcd_clear
                 ; 0000 0789                         lcd_putsf("TRINAMA: 000%   ");
                +
0012ae e9eb     +LDI R30 , LOW ( 2 * _0x0 + ( 313 ) )
0012af e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 313 ) )
                 	__POINTW1FN _0x0,313
0012b0 93fa      	ST   -Y,R31
0012b1 93ea      	ST   -Y,R30
0012b2 940e 1f1c 	CALL _lcd_putsf
                 ; 0000 078A                         lcd_putsf("PALAUKITE...    ");
                +
0012b4 eaec     +LDI R30 , LOW ( 2 * _0x0 + ( 330 ) )
0012b5 e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 330 ) )
                 	__POINTW1FN _0x0,330
0012b6 93fa      	ST   -Y,R31
0012b7 93ea      	ST   -Y,R30
0012b8 940e 1f1c 	CALL _lcd_putsf
                 ; 0000 078B                             for(i=0;i<LOG_COUNT;i++){
0012ba e0e0      	LDI  R30,LOW(0)
0012bb 83e8      	STD  Y+0,R30
0012bc 83e9      	STD  Y+0+1,R30
                 _0x23B:
0012bd 81a8      	LD   R26,Y
0012be 81b9      	LDD  R27,Y+1
0012bf 35aa      	CPI  R26,LOW(0x5A)
0012c0 e0e0      	LDI  R30,HIGH(0x5A)
0012c1 07be      	CPC  R27,R30
0012c2 f010      	BRLO PC+3
0012c3 940c 1336 	JMP _0x23C
                 ; 0000 078C                             unsigned int a;
                 ; 0000 078D 
                 ; 0000 078E                             LogYear[i] = 0;
0012c5 9722      	SBIW R28,2
                 ;	i -> Y+2
                 ;	a -> Y+0
0012c6 81ea      	LDD  R30,Y+2
0012c7 81fb      	LDD  R31,Y+2+1
0012c8 e0a8      	LDI  R26,LOW(_LogYear)
0012c9 e0b0      	LDI  R27,HIGH(_LogYear)
0012ca 0fee      	LSL  R30
0012cb 1fff      	ROL  R31
0012cc 0fae      	ADD  R26,R30
0012cd 1fbf      	ADC  R27,R31
0012ce e0e0      	LDI  R30,LOW(0)
0012cf e0f0      	LDI  R31,HIGH(0)
0012d0 940e 2066 	CALL __EEPROMWRW
                 ; 0000 078F                             LogMonth[i] = 0;
0012d2 81aa      	LDD  R26,Y+2
0012d3 81bb      	LDD  R27,Y+2+1
0012d4 54a4      	SUBI R26,LOW(-_LogMonth)
0012d5 4fbf      	SBCI R27,HIGH(-_LogMonth)
0012d6 940e 206e 	CALL __EEPROMWRB
                 ; 0000 0790                             LogDay[i] = 0;
0012d8 81aa      	LDD  R26,Y+2
0012d9 81bb      	LDD  R27,Y+2+1
0012da 5eaa      	SUBI R26,LOW(-_LogDay)
0012db 4fbe      	SBCI R27,HIGH(-_LogDay)
0012dc 940e 206e 	CALL __EEPROMWRB
                 ; 0000 0791                             LogHour[i] = 0;
0012de 81aa      	LDD  R26,Y+2
0012df 81bb      	LDD  R27,Y+2+1
0012e0 59a0      	SUBI R26,LOW(-_LogHour)
0012e1 4fbe      	SBCI R27,HIGH(-_LogHour)
0012e2 940e 206e 	CALL __EEPROMWRB
                 ; 0000 0792                             LogMinute[i] = 0;
0012e4 81aa      	LDD  R26,Y+2
0012e5 81bb      	LDD  R27,Y+2+1
0012e6 53a6      	SUBI R26,LOW(-_LogMinute)
0012e7 4fbe      	SBCI R27,HIGH(-_LogMinute)
0012e8 940e 206e 	CALL __EEPROMWRB
                 ; 0000 0793 
                 ; 0000 0794                             LogType[i] = 0;
0012ea 81aa      	LDD  R26,Y+2
0012eb 81bb      	LDD  R27,Y+2+1
0012ec 5dac      	SUBI R26,LOW(-_LogType)
0012ed 4fbd      	SBCI R27,HIGH(-_LogType)
0012ee 940e 206e 	CALL __EEPROMWRB
                 ; 0000 0795 
                 ; 0000 0796                             LogData1[i] = 0;
0012f0 81ea      	LDD  R30,Y+2
0012f1 81fb      	LDD  R31,Y+2+1
0012f2 e7ae      	LDI  R26,LOW(_LogData1)
0012f3 e0b2      	LDI  R27,HIGH(_LogData1)
0012f4 0fee      	LSL  R30
0012f5 1fff      	ROL  R31
0012f6 0fae      	ADD  R26,R30
0012f7 1fbf      	ADC  R27,R31
0012f8 e0e0      	LDI  R30,LOW(0)
0012f9 e0f0      	LDI  R31,HIGH(0)
0012fa 940e 2066 	CALL __EEPROMWRW
                 ; 0000 0797                             LogData2[i] = 0;
0012fc 81ea      	LDD  R30,Y+2
0012fd 81fb      	LDD  R31,Y+2+1
0012fe e3a2      	LDI  R26,LOW(_LogData2)
0012ff e0b3      	LDI  R27,HIGH(_LogData2)
001300 0fee      	LSL  R30
001301 1fff      	ROL  R31
001302 0fae      	ADD  R26,R30
001303 1fbf      	ADC  R27,R31
001304 e0e0      	LDI  R30,LOW(0)
001305 e0f0      	LDI  R31,HIGH(0)
001306 940e 2066 	CALL __EEPROMWRW
                 ; 0000 0798 
                 ; 0000 0799                             a = (i*100)/LOG_COUNT;
001308 81aa      	LDD  R26,Y+2
001309 81bb      	LDD  R27,Y+2+1
00130a e6e4      	LDI  R30,LOW(100)
00130b 940e 1fd7 	CALL __MULB1W2U
00130d 01df      	MOVW R26,R30
00130e e5ea      	LDI  R30,LOW(90)
00130f e0f0      	LDI  R31,HIGH(90)
001310 940e 1fe7 	CALL __DIVW21U
001312 83e8      	ST   Y,R30
001313 83f9      	STD  Y+1,R31
                 ; 0000 079A                             lcd_gotoxy(9,0);
001314 e0e9      	LDI  R30,LOW(9)
001315 93ea      	ST   -Y,R30
001316 e0e0      	LDI  R30,LOW(0)
001317 93ea      	ST   -Y,R30
001318 940e 1ebc 	CALL _lcd_gotoxy
                 ; 0000 079B                             lcd_put_number(0,3,0,0,a,0);
00131a e0e0      	LDI  R30,LOW(0)
00131b 93ea      	ST   -Y,R30
00131c e0e3      	LDI  R30,LOW(3)
00131d 93ea      	ST   -Y,R30
00131e e0e0      	LDI  R30,LOW(0)
00131f 93ea      	ST   -Y,R30
001320 93ea      	ST   -Y,R30
001321 81ec      	LDD  R30,Y+4
001322 81fd      	LDD  R31,Y+4+1
001323 2766      	CLR  R22
001324 2777      	CLR  R23
001325 940e 2045 	CALL __PUTPARD1
                +
001327 e0e0     +LDI R30 , LOW ( 0x0 )
001328 e0f0     +LDI R31 , HIGH ( 0x0 )
001329 e060     +LDI R22 , BYTE3 ( 0x0 )
00132a e070     +LDI R23 , BYTE4 ( 0x0 )
                 	__GETD1N 0x0
00132b 940e 2045 	CALL __PUTPARD1
00132d 940e 034c 	CALL _lcd_put_number
                 ; 0000 079C                             }
00132f 9622      	ADIW R28,2
001330 81e8      	LD   R30,Y
001331 81f9      	LDD  R31,Y+1
001332 9631      	ADIW R30,1
001333 83e8      	ST   Y,R30
001334 83f9      	STD  Y+1,R31
001335 cf87      	RJMP _0x23B
                 _0x23C:
                 ; 0000 079D                         Address[1] = 0;
                +
001336 e8e8     +LDI R30 , LOW ( _Address + ( 2 ) )
001337 e0f2     +LDI R31 , HIGH ( _Address + ( 2 ) )
                 	__POINTW1MN _Address,2
001338 e0a0      	LDI  R26,LOW(0)
001339 e0b0      	LDI  R27,HIGH(0)
00133a 83a0      	STD  Z+0,R26
00133b 83b1      	STD  Z+1,R27
                 ; 0000 079E                         Address[2] = 0;
                +
00133c e8ea     +LDI R30 , LOW ( _Address + ( 4 ) )
00133d e0f2     +LDI R31 , HIGH ( _Address + ( 4 ) )
                 	__POINTW1MN _Address,4
00133e 83a0      	STD  Z+0,R26
00133f 83b1      	STD  Z+1,R27
                 ; 0000 079F 
                 ; 0000 07A0                         lcd_clear();
001340 940e 1ed0 	CALL _lcd_clear
                 ; 0000 07A1                         lcd_putsf("    ISTRINTA    ");
                +
001342 ebed     +LDI R30 , LOW ( 2 * _0x0 + ( 347 ) )
001343 e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 347 ) )
                 	__POINTW1FN _0x0,347
001344 93fa      	ST   -Y,R31
001345 93ea      	ST   -Y,R30
001346 940e 1f1c 	CALL _lcd_putsf
                 ; 0000 07A2                         delay_ms(1000);
001348 eee8      	LDI  R30,LOW(1000)
001349 e0f3      	LDI  R31,HIGH(1000)
00134a 93fa      	ST   -Y,R31
00134b 93ea      	ST   -Y,R30
00134c 940e 1f7e 	CALL _delay_ms
                 ; 0000 07A3                         }
00134e 9622      	ADIW R28,2
                 _0x239:
                 ; 0000 07A4                     }
                 _0x22E:
                 ; 0000 07A5                 }
                 _0x219:
                 ; 0000 07A6 
                 ; 0000 07A7 
                 ; 0000 07A8 
                 ; 0000 07A9                 if(RefreshLcd==1){
00134f e0e1      	LDI  R30,LOW(1)
001350 15e5      	CP   R30,R5
001351 f011      	BREQ PC+3
001352 940c 153f 	JMP _0x23D
                 ; 0000 07AA                     if(Address[1]==0){
                +
001354 91e0 0288+LDS R30 , _Address + ( 2 )
001356 91f0 0289+LDS R31 , _Address + ( 2 ) + 1
                 	__GETW1MN _Address,2
001358 9730      	SBIW R30,0
001359 f449      	BRNE _0x23E
                 ; 0000 07AB                     lcd_putsf("SVARBUS IVYKIAI:");
                +
00135a ecee     +LDI R30 , LOW ( 2 * _0x0 + ( 364 ) )
00135b e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 364 ) )
                 	__POINTW1FN _0x0,364
00135c 93fa      	ST   -Y,R31
00135d 93ea      	ST   -Y,R30
00135e 940e 1f1c 	CALL _lcd_putsf
                 ; 0000 07AC                     lcd_putsf("PERZIURETI?-->* ");
                +
001360 edef     +LDI R30 , LOW ( 2 * _0x0 + ( 381 ) )
001361 e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 381 ) )
                 	__POINTW1FN _0x0,381
001362 c1d8      	RJMP _0x343
                 ; 0000 07AD                     }
                 ; 0000 07AE                     else{
                 _0x23E:
                 ; 0000 07AF                         if(Address[1]!=LOG_COUNT+1){
                +
001363 91e0 0288+LDS R30 , _Address + ( 2 )
001365 91f0 0289+LDS R31 , _Address + ( 2 ) + 1
                 	__GETW1MN _Address,2
001367 35eb      	CPI  R30,LOW(0x5B)
001368 e0a0      	LDI  R26,HIGH(0x5B)
001369 07fa      	CPC  R31,R26
00136a f411      	BRNE PC+3
00136b 940c 152d 	JMP _0x240
                 ; 0000 07B0                         signed int a;
                 ; 0000 07B1                         a = NewestLog + Address[1] - 1;
00136d 9722      	SBIW R28,2
                 ;	a -> Y+0
00136e e0a7      	LDI  R26,LOW(_NewestLog)
00136f e0b0      	LDI  R27,HIGH(_NewestLog)
001370 940e 2052 	CALL __EEPROMRDB
001372 e0f0      	LDI  R31,0
001373 01df      	MOVW R26,R30
                +
001374 91e0 0288+LDS R30 , _Address + ( 2 )
001376 91f0 0289+LDS R31 , _Address + ( 2 ) + 1
                 	__GETW1MN _Address,2
001378 0fae      	ADD  R26,R30
001379 1fbf      	ADC  R27,R31
00137a 9711      	SBIW R26,1
00137b 83a8      	ST   Y,R26
00137c 83b9      	STD  Y+1,R27
                 ; 0000 07B2                             if(a>=LOG_COUNT){
00137d 35aa      	CPI  R26,LOW(0x5A)
00137e e0e0      	LDI  R30,HIGH(0x5A)
00137f 07be      	CPC  R27,R30
001380 f034      	BRLT _0x241
                 ; 0000 07B3                             a = a - LOG_COUNT;
001381 81e8      	LD   R30,Y
001382 81f9      	LDD  R31,Y+1
001383 55ea      	SUBI R30,LOW(90)
001384 40f0      	SBCI R31,HIGH(90)
001385 83e8      	ST   Y,R30
001386 83f9      	STD  Y+1,R31
                 ; 0000 07B4                             }
                 ; 0000 07B5 
                 ; 0000 07B6 
                 ; 0000 07B7                             if(Address[1]>=10){
                 _0x241:
                +
001387 91a0 0288+LDS R26 , _Address + ( 2 )
001389 91b0 0289+LDS R27 , _Address + ( 2 ) + 1
                 	__GETW2MN _Address,2
00138b 971a      	SBIW R26,10
00138c f064      	BRLT _0x242
                 ; 0000 07B8                             lcd_putchar(NumToIndex( Address[1]/10 ));
                +
00138d 91a0 0288+LDS R26 , _Address + ( 2 )
00138f 91b0 0289+LDS R27 , _Address + ( 2 ) + 1
                 	__GETW2MN _Address,2
001391 e0ea      	LDI  R30,LOW(10)
001392 e0f0      	LDI  R31,HIGH(10)
001393 940e 1ffa 	CALL __DIVW21
001395 93ea      	ST   -Y,R30
001396 940e 0231 	CALL _NumToIndex
001398 c001      	RJMP _0x344
                 ; 0000 07B9                             }
                 ; 0000 07BA                             else{
                 _0x242:
                 ; 0000 07BB                             lcd_putchar(' ');
001399 e2e0      	LDI  R30,LOW(32)
                 _0x344:
00139a 93ea      	ST   -Y,R30
00139b 940e 1ee8 	CALL _lcd_putchar
                 ; 0000 07BC                             }
                 ; 0000 07BD                         lcd_putchar(NumToIndex(Address[1]-(Address[1]/10)*10) );
                +
00139d 91a0 0288+LDS R26 , _Address + ( 2 )
00139f 91b0 0289+LDS R27 , _Address + ( 2 ) + 1
                 	__GETW2MN _Address,2
0013a1 e0ea      	LDI  R30,LOW(10)
0013a2 e0f0      	LDI  R31,HIGH(10)
0013a3 940e 1ffa 	CALL __DIVW21
0013a5 e0aa      	LDI  R26,LOW(10)
0013a6 e0b0      	LDI  R27,HIGH(10)
0013a7 940e 1fdd 	CALL __MULW12
                +
0013a9 91a0 0288+LDS R26 , _Address + ( 2 )
0013ab 91b0 0289+LDS R27 , _Address + ( 2 ) + 1
                 	__GETW2MN _Address,2
0013ad 1bae      	SUB  R26,R30
0013ae 0bbf      	SBC  R27,R31
0013af 93aa      	ST   -Y,R26
0013b0 940e 0231 	CALL _NumToIndex
0013b2 93ea      	ST   -Y,R30
0013b3 940e 1ee8 	CALL _lcd_putchar
                 ; 0000 07BE                         lcd_putchar('.');
0013b5 e2ee      	LDI  R30,LOW(46)
0013b6 93ea      	ST   -Y,R30
0013b7 940e 1ee8 	CALL _lcd_putchar
                 ; 0000 07BF 
                 ; 0000 07C0                             if(Address[2]==0){
                +
0013b9 91e0 028a+LDS R30 , _Address + ( 4 )
0013bb 91f0 028b+LDS R31 , _Address + ( 4 ) + 1
                 	__GETW1MN _Address,4
0013bd 9730      	SBIW R30,0
0013be f011      	BREQ PC+3
0013bf 940c 1409 	JMP _0x244
                 ; 0000 07C1                             char IvykisYra = 1;
                 ; 0000 07C2                                 if(LogType[a]==1){
0013c1 9721      	SBIW R28,1
0013c2 e0e1      	LDI  R30,LOW(1)
0013c3 83e8      	ST   Y,R30
                 ;	a -> Y+1
                 ;	IvykisYra -> Y+0
0013c4 81a9      	LDD  R26,Y+1
0013c5 81ba      	LDD  R27,Y+1+1
0013c6 5dac      	SUBI R26,LOW(-_LogType)
0013c7 4fbd      	SBCI R27,HIGH(-_LogType)
0013c8 940e 2052 	CALL __EEPROMRDB
0013ca 30e1      	CPI  R30,LOW(0x1)
0013cb f419      	BRNE _0x245
                 ; 0000 07C3                                 lcd_putsf("SUVEIKE 95C  ");
                +
0013cc efe0     +LDI R30 , LOW ( 2 * _0x0 + ( 398 ) )
0013cd e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 398 ) )
                 	__POINTW1FN _0x0,398
0013ce c01a      	RJMP _0x345
                 ; 0000 07C4                                 }
                 ; 0000 07C5                                 else if(LogType[a]==2){
                 _0x245:
0013cf 81a9      	LDD  R26,Y+1
0013d0 81ba      	LDD  R27,Y+1+1
0013d1 5dac      	SUBI R26,LOW(-_LogType)
0013d2 4fbd      	SBCI R27,HIGH(-_LogType)
0013d3 940e 2052 	CALL __EEPROMRDB
0013d5 30e2      	CPI  R30,LOW(0x2)
0013d6 f419      	BRNE _0x247
                 ; 0000 07C6                                 lcd_putsf("ATKRITO 95C  ");
                +
0013d7 efee     +LDI R30 , LOW ( 2 * _0x0 + ( 412 ) )
0013d8 e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 412 ) )
                 	__POINTW1FN _0x0,412
0013d9 c00f      	RJMP _0x345
                 ; 0000 07C7                                 }
                 ; 0000 07C8                                 else if(LogType[a]==3){
                 _0x247:
0013da 81a9      	LDD  R26,Y+1
0013db 81ba      	LDD  R27,Y+1+1
0013dc 5dac      	SUBI R26,LOW(-_LogType)
0013dd 4fbd      	SBCI R27,HIGH(-_LogType)
0013de 940e 2052 	CALL __EEPROMRDB
0013e0 30e3      	CPI  R30,LOW(0x3)
0013e1 f419      	BRNE _0x249
                 ; 0000 07C9                                 lcd_putsf("DINGO ITAMPA ");
                +
0013e2 e0ec     +LDI R30 , LOW ( 2 * _0x0 + ( 426 ) )
0013e3 e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 426 ) )
                 	__POINTW1FN _0x0,426
0013e4 c004      	RJMP _0x345
                 ; 0000 07CA                                 }
                 ; 0000 07CB                                 else{
                 _0x249:
                 ; 0000 07CC                                 IvykisYra = 0;
0013e5 e0e0      	LDI  R30,LOW(0)
0013e6 83e8      	ST   Y,R30
                 ; 0000 07CD                                 lcd_putsf("NERA IVYKIO  ");
                +
0013e7 e1ea     +LDI R30 , LOW ( 2 * _0x0 + ( 440 ) )
0013e8 e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 440 ) )
                 	__POINTW1FN _0x0,440
                 _0x345:
0013e9 93fa      	ST   -Y,R31
0013ea 93ea      	ST   -Y,R30
0013eb 940e 1f1c 	CALL _lcd_putsf
                 ; 0000 07CE                                 }
                 ; 0000 07CF 
                 ; 0000 07D0                                 if(IvykisYra==1){
0013ed 81a8      	LD   R26,Y
0013ee 30a1      	CPI  R26,LOW(0x1)
0013ef f441      	BRNE _0x24B
                 ; 0000 07D1                                 lcd_buttons(1,1,0,0,1, 1,0,0,0);
0013f0 e0e1      	LDI  R30,LOW(1)
0013f1 93ea      	ST   -Y,R30
0013f2 93ea      	ST   -Y,R30
0013f3 e0e0      	LDI  R30,LOW(0)
0013f4 93ea      	ST   -Y,R30
0013f5 93ea      	ST   -Y,R30
0013f6 e0e1      	LDI  R30,LOW(1)
0013f7 c006      	RJMP _0x346
                 ; 0000 07D2                                 }
                 ; 0000 07D3                                 else{
                 _0x24B:
                 ; 0000 07D4                                 lcd_buttons(1,1,0,0,0, 1,0,0,0);
0013f8 e0e1      	LDI  R30,LOW(1)
0013f9 93ea      	ST   -Y,R30
0013fa 93ea      	ST   -Y,R30
0013fb e0e0      	LDI  R30,LOW(0)
0013fc 93ea      	ST   -Y,R30
0013fd 93ea      	ST   -Y,R30
                 _0x346:
0013fe 93ea      	ST   -Y,R30
0013ff e0e1      	LDI  R30,LOW(1)
001400 93ea      	ST   -Y,R30
001401 e0e0      	LDI  R30,LOW(0)
001402 93ea      	ST   -Y,R30
001403 93ea      	ST   -Y,R30
001404 93ea      	ST   -Y,R30
001405 940e 0520 	CALL _lcd_buttons
                 ; 0000 07D5                                 }
                 ; 0000 07D6 
                 ; 0000 07D7                             }
001407 9621      	ADIW R28,1
                 ; 0000 07D8                             else{
001408 c122      	RJMP _0x24D
                 _0x244:
                 ; 0000 07D9                             lcd_putchar(NumToIndex( Address[2] ));
                +
001409 91e0 028a+LDS R30 , _Address + ( 4 )
                 	__GETB1MN _Address,4
00140b 93ea      	ST   -Y,R30
00140c 940e 0231 	CALL _NumToIndex
00140e 93ea      	ST   -Y,R30
00140f 940e 1ee8 	CALL _lcd_putchar
                 ; 0000 07DA                             lcd_putchar('.');
001411 e2ee      	LDI  R30,LOW(46)
001412 93ea      	ST   -Y,R30
001413 940e 1ee8 	CALL _lcd_putchar
                 ; 0000 07DB                             lcd_putchar(' ');
001415 e2e0      	LDI  R30,LOW(32)
001416 93ea      	ST   -Y,R30
001417 940e 1ee8 	CALL _lcd_putchar
                 ; 0000 07DC 
                 ; 0000 07DD                                 if(Address[2]==1){
                +
001419 91e0 028a+LDS R30 , _Address + ( 4 )
00141b 91f0 028b+LDS R31 , _Address + ( 4 ) + 1
                 	__GETW1MN _Address,4
00141d 30e1      	CPI  R30,LOW(0x1)
00141e e0a0      	LDI  R26,HIGH(0x1)
00141f 07fa      	CPC  R31,R26
001420 f011      	BREQ PC+3
001421 940c 147d 	JMP _0x24E
                 ; 0000 07DE                                 //11.1. 2011.07.31
                 ; 0000 07DF                                 //11.2. 02:37
                 ; 0000 07E0                                 //11.3. 95.3C S.K.
                 ; 0000 07E1                                 //11.4. 34.4C BOIL
                 ; 0000 07E2                                 //11.5.
                 ; 0000 07E3                                 lcd_put_number(0,4,0,0,LogYear[a],0);
001423 e0e0      	LDI  R30,LOW(0)
001424 93ea      	ST   -Y,R30
001425 e0e4      	LDI  R30,LOW(4)
001426 93ea      	ST   -Y,R30
001427 e0e0      	LDI  R30,LOW(0)
001428 93ea      	ST   -Y,R30
001429 93ea      	ST   -Y,R30
00142a 81ec      	LDD  R30,Y+4
00142b 81fd      	LDD  R31,Y+4+1
00142c e0a8      	LDI  R26,LOW(_LogYear)
00142d e0b0      	LDI  R27,HIGH(_LogYear)
00142e 0fee      	LSL  R30
00142f 1fff      	ROL  R31
001430 0fae      	ADD  R26,R30
001431 1fbf      	ADC  R27,R31
001432 940e 204e 	CALL __EEPROMRDW
001434 2766      	CLR  R22
001435 2777      	CLR  R23
001436 940e 2045 	CALL __PUTPARD1
                +
001438 e0e0     +LDI R30 , LOW ( 0x0 )
001439 e0f0     +LDI R31 , HIGH ( 0x0 )
00143a e060     +LDI R22 , BYTE3 ( 0x0 )
00143b e070     +LDI R23 , BYTE4 ( 0x0 )
                 	__GETD1N 0x0
00143c 940e 2045 	CALL __PUTPARD1
00143e 940e 034c 	CALL _lcd_put_number
                 ; 0000 07E4                                 lcd_putchar('.');
001440 e2ee      	LDI  R30,LOW(46)
001441 93ea      	ST   -Y,R30
001442 940e 1ee8 	CALL _lcd_putchar
                 ; 0000 07E5                                 lcd_put_number(0,2,0,0,LogMonth[a],0);
001444 e0e0      	LDI  R30,LOW(0)
001445 93ea      	ST   -Y,R30
001446 e0e2      	LDI  R30,LOW(2)
001447 93ea      	ST   -Y,R30
001448 e0e0      	LDI  R30,LOW(0)
001449 93ea      	ST   -Y,R30
00144a 93ea      	ST   -Y,R30
00144b 81ac      	LDD  R26,Y+4
00144c 81bd      	LDD  R27,Y+4+1
00144d 54a4      	SUBI R26,LOW(-_LogMonth)
00144e 4fbf      	SBCI R27,HIGH(-_LogMonth)
00144f 940e 2052 	CALL __EEPROMRDB
001451 e0f0      	LDI  R31,0
001452 940e 1fa5 	CALL __CWD1
001454 940e 2045 	CALL __PUTPARD1
                +
001456 e0e0     +LDI R30 , LOW ( 0x0 )
001457 e0f0     +LDI R31 , HIGH ( 0x0 )
001458 e060     +LDI R22 , BYTE3 ( 0x0 )
001459 e070     +LDI R23 , BYTE4 ( 0x0 )
                 	__GETD1N 0x0
00145a 940e 2045 	CALL __PUTPARD1
00145c 940e 034c 	CALL _lcd_put_number
                 ; 0000 07E6                                 lcd_putchar('.');
00145e e2ee      	LDI  R30,LOW(46)
00145f 93ea      	ST   -Y,R30
001460 940e 1ee8 	CALL _lcd_putchar
                 ; 0000 07E7                                 lcd_put_number(0,2,0,0,LogDay[a],0);
001462 e0e0      	LDI  R30,LOW(0)
001463 93ea      	ST   -Y,R30
001464 e0e2      	LDI  R30,LOW(2)
001465 93ea      	ST   -Y,R30
001466 e0e0      	LDI  R30,LOW(0)
001467 93ea      	ST   -Y,R30
001468 93ea      	ST   -Y,R30
001469 81ac      	LDD  R26,Y+4
00146a 81bd      	LDD  R27,Y+4+1
00146b 5eaa      	SUBI R26,LOW(-_LogDay)
00146c 4fbe      	SBCI R27,HIGH(-_LogDay)
00146d 940e 2052 	CALL __EEPROMRDB
00146f e0f0      	LDI  R31,0
001470 940e 1fa5 	CALL __CWD1
001472 940e 2045 	CALL __PUTPARD1
                +
001474 e0e0     +LDI R30 , LOW ( 0x0 )
001475 e0f0     +LDI R31 , HIGH ( 0x0 )
001476 e060     +LDI R22 , BYTE3 ( 0x0 )
001477 e070     +LDI R23 , BYTE4 ( 0x0 )
                 	__GETD1N 0x0
001478 940e 2045 	CALL __PUTPARD1
00147a 940e 034c 	CALL _lcd_put_number
                 ; 0000 07E8                                 }
                 ; 0000 07E9                                 else if(Address[2]==2){
00147c c0a0      	RJMP _0x24F
                 _0x24E:
                +
00147d 91e0 028a+LDS R30 , _Address + ( 4 )
00147f 91f0 028b+LDS R31 , _Address + ( 4 ) + 1
                 	__GETW1MN _Address,4
001481 30e2      	CPI  R30,LOW(0x2)
001482 e0a0      	LDI  R26,HIGH(0x2)
001483 07fa      	CPC  R31,R26
001484 f011      	BREQ PC+3
001485 940c 14c8 	JMP _0x250
                 ; 0000 07EA                                 lcd_putsf("  ");
                +
001487 e6e5     +LDI R30 , LOW ( 2 * _0x0 + ( 3 ) )
001488 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 3 ) )
                 	__POINTW1FN _0x0,3
001489 93fa      	ST   -Y,R31
00148a 93ea      	ST   -Y,R30
00148b 940e 1f1c 	CALL _lcd_putsf
                 ; 0000 07EB                                 lcd_put_number(0,2,0,0,LogHour[a],0);
00148d e0e0      	LDI  R30,LOW(0)
00148e 93ea      	ST   -Y,R30
00148f e0e2      	LDI  R30,LOW(2)
001490 93ea      	ST   -Y,R30
001491 e0e0      	LDI  R30,LOW(0)
001492 93ea      	ST   -Y,R30
001493 93ea      	ST   -Y,R30
001494 81ac      	LDD  R26,Y+4
001495 81bd      	LDD  R27,Y+4+1
001496 59a0      	SUBI R26,LOW(-_LogHour)
001497 4fbe      	SBCI R27,HIGH(-_LogHour)
001498 940e 2052 	CALL __EEPROMRDB
00149a e0f0      	LDI  R31,0
00149b 940e 1fa5 	CALL __CWD1
00149d 940e 2045 	CALL __PUTPARD1
                +
00149f e0e0     +LDI R30 , LOW ( 0x0 )
0014a0 e0f0     +LDI R31 , HIGH ( 0x0 )
0014a1 e060     +LDI R22 , BYTE3 ( 0x0 )
0014a2 e070     +LDI R23 , BYTE4 ( 0x0 )
                 	__GETD1N 0x0
0014a3 940e 2045 	CALL __PUTPARD1
0014a5 940e 034c 	CALL _lcd_put_number
                 ; 0000 07EC                                 lcd_putchar(':');
0014a7 e3ea      	LDI  R30,LOW(58)
0014a8 93ea      	ST   -Y,R30
0014a9 940e 1ee8 	CALL _lcd_putchar
                 ; 0000 07ED                                 lcd_put_number(0,2,0,0,LogMinute[a],0);
0014ab e0e0      	LDI  R30,LOW(0)
0014ac 93ea      	ST   -Y,R30
0014ad e0e2      	LDI  R30,LOW(2)
0014ae 93ea      	ST   -Y,R30
0014af e0e0      	LDI  R30,LOW(0)
0014b0 93ea      	ST   -Y,R30
0014b1 93ea      	ST   -Y,R30
0014b2 81ac      	LDD  R26,Y+4
0014b3 81bd      	LDD  R27,Y+4+1
0014b4 53a6      	SUBI R26,LOW(-_LogMinute)
0014b5 4fbe      	SBCI R27,HIGH(-_LogMinute)
0014b6 940e 2052 	CALL __EEPROMRDB
0014b8 e0f0      	LDI  R31,0
0014b9 940e 1fa5 	CALL __CWD1
0014bb 940e 2045 	CALL __PUTPARD1
                +
0014bd e0e0     +LDI R30 , LOW ( 0x0 )
0014be e0f0     +LDI R31 , HIGH ( 0x0 )
0014bf e060     +LDI R22 , BYTE3 ( 0x0 )
0014c0 e070     +LDI R23 , BYTE4 ( 0x0 )
                 	__GETD1N 0x0
0014c1 940e 2045 	CALL __PUTPARD1
0014c3 940e 034c 	CALL _lcd_put_number
                 ; 0000 07EE                                 lcd_putsf("   ");
                +
0014c5 e7e1     +LDI R30 , LOW ( 2 * _0x0 + ( 15 ) )
0014c6 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 15 ) )
                 	__POINTW1FN _0x0,15
0014c7 c051      	RJMP _0x347
                 ; 0000 07EF                                 }
                 ; 0000 07F0                                 else if(Address[2]==3){
                 _0x250:
                +
0014c8 91e0 028a+LDS R30 , _Address + ( 4 )
0014ca 91f0 028b+LDS R31 , _Address + ( 4 ) + 1
                 	__GETW1MN _Address,4
0014cc 30e3      	CPI  R30,LOW(0x3)
0014cd e0a0      	LDI  R26,HIGH(0x3)
0014ce 07fa      	CPC  R31,R26
0014cf f509      	BRNE _0x252
                 ; 0000 07F1                                 lcd_put_number(1,2,1,0,0,LogData1[a]);
0014d0 e0e1      	LDI  R30,LOW(1)
0014d1 93ea      	ST   -Y,R30
0014d2 e0e2      	LDI  R30,LOW(2)
0014d3 93ea      	ST   -Y,R30
0014d4 e0e1      	LDI  R30,LOW(1)
0014d5 93ea      	ST   -Y,R30
0014d6 e0e0      	LDI  R30,LOW(0)
0014d7 93ea      	ST   -Y,R30
                +
0014d8 e0e0     +LDI R30 , LOW ( 0x0 )
0014d9 e0f0     +LDI R31 , HIGH ( 0x0 )
0014da e060     +LDI R22 , BYTE3 ( 0x0 )
0014db e070     +LDI R23 , BYTE4 ( 0x0 )
                 	__GETD1N 0x0
0014dc 940e 2045 	CALL __PUTPARD1
0014de 85e8      	LDD  R30,Y+8
0014df 85f9      	LDD  R31,Y+8+1
0014e0 e7ae      	LDI  R26,LOW(_LogData1)
0014e1 e0b2      	LDI  R27,HIGH(_LogData1)
0014e2 0fee      	LSL  R30
0014e3 1fff      	ROL  R31
0014e4 0fae      	ADD  R26,R30
0014e5 1fbf      	ADC  R27,R31
0014e6 940e 204e 	CALL __EEPROMRDW
0014e8 940e 1fa5 	CALL __CWD1
0014ea 940e 2045 	CALL __PUTPARD1
0014ec 940e 034c 	CALL _lcd_put_number
                 ; 0000 07F2                                 lcd_putsf("C SAUL.");
                +
0014ee e2e8     +LDI R30 , LOW ( 2 * _0x0 + ( 454 ) )
0014ef e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 454 ) )
                 	__POINTW1FN _0x0,454
0014f0 c028      	RJMP _0x347
                 ; 0000 07F3                                 }
                 ; 0000 07F4                                 else if(Address[2]==4){
                 _0x252:
                +
0014f1 91e0 028a+LDS R30 , _Address + ( 4 )
0014f3 91f0 028b+LDS R31 , _Address + ( 4 ) + 1
                 	__GETW1MN _Address,4
0014f5 30e4      	CPI  R30,LOW(0x4)
0014f6 e0a0      	LDI  R26,HIGH(0x4)
0014f7 07fa      	CPC  R31,R26
0014f8 f521      	BRNE _0x254
                 ; 0000 07F5                                 lcd_put_number(1,2,1,0,0,LogData2[a]);
0014f9 e0e1      	LDI  R30,LOW(1)
0014fa 93ea      	ST   -Y,R30
0014fb e0e2      	LDI  R30,LOW(2)
0014fc 93ea      	ST   -Y,R30
0014fd e0e1      	LDI  R30,LOW(1)
0014fe 93ea      	ST   -Y,R30
0014ff e0e0      	LDI  R30,LOW(0)
001500 93ea      	ST   -Y,R30
                +
001501 e0e0     +LDI R30 , LOW ( 0x0 )
001502 e0f0     +LDI R31 , HIGH ( 0x0 )
001503 e060     +LDI R22 , BYTE3 ( 0x0 )
001504 e070     +LDI R23 , BYTE4 ( 0x0 )
                 	__GETD1N 0x0
001505 940e 2045 	CALL __PUTPARD1
001507 85e8      	LDD  R30,Y+8
001508 85f9      	LDD  R31,Y+8+1
001509 e3a2      	LDI  R26,LOW(_LogData2)
00150a e0b3      	LDI  R27,HIGH(_LogData2)
00150b 0fee      	LSL  R30
00150c 1fff      	ROL  R31
00150d 0fae      	ADD  R26,R30
00150e 1fbf      	ADC  R27,R31
00150f 940e 204e 	CALL __EEPROMRDW
001511 940e 1fa5 	CALL __CWD1
001513 940e 2045 	CALL __PUTPARD1
001515 940e 034c 	CALL _lcd_put_number
                 ; 0000 07F6                                 lcd_putsf("C BOIL.");
                +
001517 e3e0     +LDI R30 , LOW ( 2 * _0x0 + ( 462 ) )
001518 e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 462 ) )
                 	__POINTW1FN _0x0,462
                 _0x347:
001519 93fa      	ST   -Y,R31
00151a 93ea      	ST   -Y,R30
00151b 940e 1f1c 	CALL _lcd_putsf
                 ; 0000 07F7                                 }
                 ; 0000 07F8                             lcd_buttons(0,0,0,0,1, 1,0,0,0);
                 _0x254:
                 _0x24F:
00151d e0e0      	LDI  R30,LOW(0)
00151e 93ea      	ST   -Y,R30
00151f 93ea      	ST   -Y,R30
001520 93ea      	ST   -Y,R30
001521 93ea      	ST   -Y,R30
001522 e0e1      	LDI  R30,LOW(1)
001523 93ea      	ST   -Y,R30
001524 93ea      	ST   -Y,R30
001525 e0e0      	LDI  R30,LOW(0)
001526 93ea      	ST   -Y,R30
001527 93ea      	ST   -Y,R30
001528 93ea      	ST   -Y,R30
001529 940e 0520 	CALL _lcd_buttons
                 ; 0000 07F9                             }
                 _0x24D:
                 ; 0000 07FA                         }
00152b 9622      	ADIW R28,2
                 ; 0000 07FB                         else{
00152c c012      	RJMP _0x255
                 _0x240:
                 ; 0000 07FC                             if(Address[2]==0){
                +
00152d 91e0 028a+LDS R30 , _Address + ( 4 )
00152f 91f0 028b+LDS R31 , _Address + ( 4 ) + 1
                 	__GETW1MN _Address,4
001531 9730      	SBIW R30,0
001532 f461      	BRNE _0x256
                 ; 0000 07FD                             lcd_putsf("TRINTI IRASUS?  ");
                +
001533 e3e8     +LDI R30 , LOW ( 2 * _0x0 + ( 470 ) )
001534 e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 470 ) )
                 	__POINTW1FN _0x0,470
001535 93fa      	ST   -Y,R31
001536 93ea      	ST   -Y,R30
001537 940e 1f1c 	CALL _lcd_putsf
                 ; 0000 07FE                             lcd_putsf(" <||>   TAIP=>*");
                +
001539 e4e9     +LDI R30 , LOW ( 2 * _0x0 + ( 487 ) )
00153a e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 487 ) )
                 	__POINTW1FN _0x0,487
                 _0x343:
00153b 93fa      	ST   -Y,R31
00153c 93ea      	ST   -Y,R30
00153d 940e 1f1c 	CALL _lcd_putsf
                 ; 0000 07FF                             }
                 ; 0000 0800                         }
                 _0x256:
                 _0x255:
                 ; 0000 0801                     }
                 ; 0000 0802                 }
                 ; 0000 0803             }
                 _0x23D:
                 ; 0000 0804             else if(Address[0]==10){//+
00153f c617      	RJMP _0x257
                 _0x215:
001540 91a0 0286 	LDS  R26,_Address
001542 91b0 0287 	LDS  R27,_Address+1
001544 971a      	SBIW R26,10
001545 f011      	BREQ PC+3
001546 940c 1835 	JMP _0x258
                 ; 0000 0805 
                 ; 0000 0806                 if(Address[1]==0){
                +
001548 91e0 0288+LDS R30 , _Address + ( 2 )
00154a 91f0 0289+LDS R31 , _Address + ( 2 ) + 1
                 	__GETW1MN _Address,2
00154c 9730      	SBIW R30,0
00154d f459      	BRNE _0x259
                 ; 0000 0807                     if(BUTTON[4]==1){
                +
00154e 91a0 0375+LDS R26 , _BUTTON_S0000010001 + ( 4 )
                 	__GETB2MN _BUTTON_S0000010001,4
001550 30a1      	CPI  R26,LOW(0x1)
001551 f431      	BRNE _0x25A
                 ; 0000 0808                     Address[1] = 1;
                +
001552 e8e8     +LDI R30 , LOW ( _Address + ( 2 ) )
001553 e0f2     +LDI R31 , HIGH ( _Address + ( 2 ) )
                 	__POINTW1MN _Address,2
001554 e0a1      	LDI  R26,LOW(1)
001555 e0b0      	LDI  R27,HIGH(1)
001556 83a0      	STD  Z+0,R26
001557 83b1      	STD  Z+1,R27
                 ; 0000 0809                     }
                 ; 0000 080A                 }
                 _0x25A:
                 ; 0000 080B                 else{
001558 c20d      	RJMP _0x25B
                 _0x259:
                 ; 0000 080C                     if(BUTTON[0]==1){
001559 91a0 0371 	LDS  R26,_BUTTON_S0000010001
00155b 30a1      	CPI  R26,LOW(0x1)
00155c f4a1      	BRNE _0x25C
                 ; 0000 080D                     Address[1]--;
                +
00155d e8a8     +LDI R26 , LOW ( _Address + ( 2 ) )
00155e e0b2     +LDI R27 , HIGH ( _Address + ( 2 ) )
                 	__POINTW2MN _Address,2
00155f 91ed      	LD   R30,X+
001560 91fd      	LD   R31,X+
001561 9731      	SBIW R30,1
001562 93fe      	ST   -X,R31
001563 93ee      	ST   -X,R30
                 ; 0000 080E                         if(Address[1]<1){
                +
001564 91a0 0288+LDS R26 , _Address + ( 2 )
001566 91b0 0289+LDS R27 , _Address + ( 2 ) + 1
                 	__GETW2MN _Address,2
001568 9711      	SBIW R26,1
001569 f434      	BRGE _0x25D
                 ; 0000 080F                         Address[1] = 8;
                +
00156a e8e8     +LDI R30 , LOW ( _Address + ( 2 ) )
00156b e0f2     +LDI R31 , HIGH ( _Address + ( 2 ) )
                 	__POINTW1MN _Address,2
00156c e0a8      	LDI  R26,LOW(8)
00156d e0b0      	LDI  R27,HIGH(8)
00156e 83a0      	STD  Z+0,R26
00156f 83b1      	STD  Z+1,R27
                 ; 0000 0810                         }
                 ; 0000 0811                     }
                 _0x25D:
                 ; 0000 0812                     else if(BUTTON[1]==1){
001570 c017      	RJMP _0x25E
                 _0x25C:
                +
001571 91a0 0372+LDS R26 , _BUTTON_S0000010001 + ( 1 )
                 	__GETB2MN _BUTTON_S0000010001,1
001573 30a1      	CPI  R26,LOW(0x1)
001574 f499      	BRNE _0x25F
                 ; 0000 0813                     Address[1]++;
                +
001575 e8a8     +LDI R26 , LOW ( _Address + ( 2 ) )
001576 e0b2     +LDI R27 , HIGH ( _Address + ( 2 ) )
                 	__POINTW2MN _Address,2
001577 91ed      	LD   R30,X+
001578 91fd      	LD   R31,X+
001579 9631      	ADIW R30,1
00157a 93fe      	ST   -X,R31
00157b 93ee      	ST   -X,R30
                 ; 0000 0814                         if(Address[1]>8){
                +
00157c 91a0 0288+LDS R26 , _Address + ( 2 )
00157e 91b0 0289+LDS R27 , _Address + ( 2 ) + 1
                 	__GETW2MN _Address,2
001580 9719      	SBIW R26,9
001581 f034      	BRLT _0x260
                 ; 0000 0815                         Address[1] = 1;
                +
001582 e8e8     +LDI R30 , LOW ( _Address + ( 2 ) )
001583 e0f2     +LDI R31 , HIGH ( _Address + ( 2 ) )
                 	__POINTW1MN _Address,2
001584 e0a1      	LDI  R26,LOW(1)
001585 e0b0      	LDI  R27,HIGH(1)
001586 83a0      	STD  Z+0,R26
001587 83b1      	STD  Z+1,R27
                 ; 0000 0816                         }
                 ; 0000 0817                     }
                 _0x260:
                 ; 0000 0818 
                 ; 0000 0819                     if(BUTTON[2]==1){
                 _0x25F:
                 _0x25E:
                +
001588 91a0 0373+LDS R26 , _BUTTON_S0000010001 + ( 2 )
                 	__GETB2MN _BUTTON_S0000010001,2
00158a 30a1      	CPI  R26,LOW(0x1)
00158b f011      	BREQ PC+3
00158c 940c 1681 	JMP _0x261
                 ; 0000 081A                         if(Address[1]==1){
                +
00158e 91e0 0288+LDS R30 , _Address + ( 2 )
001590 91f0 0289+LDS R31 , _Address + ( 2 ) + 1
                 	__GETW1MN _Address,2
001592 30e1      	CPI  R30,LOW(0x1)
001593 e0a0      	LDI  R26,HIGH(0x1)
001594 07fa      	CPC  R31,R26
001595 f499      	BRNE _0x262
                 ; 0000 081B                             if(RealTimeYear<9000){
001596 e0a0      	LDI  R26,LOW(_RealTimeYear)
001597 e0b0      	LDI  R27,HIGH(_RealTimeYear)
001598 940e 204e 	CALL __EEPROMRDW
00159a 32e8      	CPI  R30,LOW(0x2328)
00159b e2a3      	LDI  R26,HIGH(0x2328)
00159c 07fa      	CPC  R31,R26
00159d f450      	BRSH _0x263
                 ; 0000 081C                             RealTimeYear = RealTimeYear + 1000;
00159e e0a0      	LDI  R26,LOW(_RealTimeYear)
00159f e0b0      	LDI  R27,HIGH(_RealTimeYear)
0015a0 940e 204e 	CALL __EEPROMRDW
0015a2 51e8      	SUBI R30,LOW(-1000)
0015a3 4ffc      	SBCI R31,HIGH(-1000)
0015a4 e0a0      	LDI  R26,LOW(_RealTimeYear)
0015a5 e0b0      	LDI  R27,HIGH(_RealTimeYear)
0015a6 940e 2066 	CALL __EEPROMWRW
                 ; 0000 081D                             }
                 ; 0000 081E                         }
                 _0x263:
                 ; 0000 081F                         else if(Address[1]==2){
0015a8 c0d7      	RJMP _0x264
                 _0x262:
                +
0015a9 91e0 0288+LDS R30 , _Address + ( 2 )
0015ab 91f0 0289+LDS R31 , _Address + ( 2 ) + 1
                 	__GETW1MN _Address,2
0015ad 30e2      	CPI  R30,LOW(0x2)
0015ae e0a0      	LDI  R26,HIGH(0x2)
0015af 07fa      	CPC  R31,R26
0015b0 f499      	BRNE _0x265
                 ; 0000 0820                             if(RealTimeYear<9900){
0015b1 e0a0      	LDI  R26,LOW(_RealTimeYear)
0015b2 e0b0      	LDI  R27,HIGH(_RealTimeYear)
0015b3 940e 204e 	CALL __EEPROMRDW
0015b5 3aec      	CPI  R30,LOW(0x26AC)
0015b6 e2a6      	LDI  R26,HIGH(0x26AC)
0015b7 07fa      	CPC  R31,R26
0015b8 f450      	BRSH _0x266
                 ; 0000 0821                             RealTimeYear = RealTimeYear + 100;
0015b9 e0a0      	LDI  R26,LOW(_RealTimeYear)
0015ba e0b0      	LDI  R27,HIGH(_RealTimeYear)
0015bb 940e 204e 	CALL __EEPROMRDW
0015bd 59ec      	SUBI R30,LOW(-100)
0015be 4fff      	SBCI R31,HIGH(-100)
0015bf e0a0      	LDI  R26,LOW(_RealTimeYear)
0015c0 e0b0      	LDI  R27,HIGH(_RealTimeYear)
0015c1 940e 2066 	CALL __EEPROMWRW
                 ; 0000 0822                             }
                 ; 0000 0823                         }
                 _0x266:
                 ; 0000 0824                         else if(Address[1]==3){
0015c3 c0bc      	RJMP _0x267
                 _0x265:
                +
0015c4 91e0 0288+LDS R30 , _Address + ( 2 )
0015c6 91f0 0289+LDS R31 , _Address + ( 2 ) + 1
                 	__GETW1MN _Address,2
0015c8 30e3      	CPI  R30,LOW(0x3)
0015c9 e0a0      	LDI  R26,HIGH(0x3)
0015ca 07fa      	CPC  R31,R26
0015cb f491      	BRNE _0x268
                 ; 0000 0825                             if(RealTimeYear<9990){
0015cc e0a0      	LDI  R26,LOW(_RealTimeYear)
0015cd e0b0      	LDI  R27,HIGH(_RealTimeYear)
0015ce 940e 204e 	CALL __EEPROMRDW
0015d0 30e6      	CPI  R30,LOW(0x2706)
0015d1 e2a7      	LDI  R26,HIGH(0x2706)
0015d2 07fa      	CPC  R31,R26
0015d3 f448      	BRSH _0x269
                 ; 0000 0826                             RealTimeYear = RealTimeYear + 10;
0015d4 e0a0      	LDI  R26,LOW(_RealTimeYear)
0015d5 e0b0      	LDI  R27,HIGH(_RealTimeYear)
0015d6 940e 204e 	CALL __EEPROMRDW
0015d8 963a      	ADIW R30,10
0015d9 e0a0      	LDI  R26,LOW(_RealTimeYear)
0015da e0b0      	LDI  R27,HIGH(_RealTimeYear)
0015db 940e 2066 	CALL __EEPROMWRW
                 ; 0000 0827                             }
                 ; 0000 0828                         }
                 _0x269:
                 ; 0000 0829                         else if(Address[1]==4){
0015dd c0a2      	RJMP _0x26A
                 _0x268:
                +
0015de 91e0 0288+LDS R30 , _Address + ( 2 )
0015e0 91f0 0289+LDS R31 , _Address + ( 2 ) + 1
                 	__GETW1MN _Address,2
0015e2 30e4      	CPI  R30,LOW(0x4)
0015e3 e0a0      	LDI  R26,HIGH(0x4)
0015e4 07fa      	CPC  R31,R26
0015e5 f491      	BRNE _0x26B
                 ; 0000 082A                             if(RealTimeYear<9999){
0015e6 e0a0      	LDI  R26,LOW(_RealTimeYear)
0015e7 e0b0      	LDI  R27,HIGH(_RealTimeYear)
0015e8 940e 204e 	CALL __EEPROMRDW
0015ea 30ef      	CPI  R30,LOW(0x270F)
0015eb e2a7      	LDI  R26,HIGH(0x270F)
0015ec 07fa      	CPC  R31,R26
0015ed f448      	BRSH _0x26C
                 ; 0000 082B                             RealTimeYear = RealTimeYear + 1;
0015ee e0a0      	LDI  R26,LOW(_RealTimeYear)
0015ef e0b0      	LDI  R27,HIGH(_RealTimeYear)
0015f0 940e 204e 	CALL __EEPROMRDW
0015f2 9631      	ADIW R30,1
0015f3 e0a0      	LDI  R26,LOW(_RealTimeYear)
0015f4 e0b0      	LDI  R27,HIGH(_RealTimeYear)
0015f5 940e 2066 	CALL __EEPROMWRW
                 ; 0000 082C                             }
                 ; 0000 082D                         }
                 _0x26C:
                 ; 0000 082E                         else if(Address[1]==5){
0015f7 c088      	RJMP _0x26D
                 _0x26B:
                +
0015f8 91e0 0288+LDS R30 , _Address + ( 2 )
0015fa 91f0 0289+LDS R31 , _Address + ( 2 ) + 1
                 	__GETW1MN _Address,2
0015fc 30e5      	CPI  R30,LOW(0x5)
0015fd e0a0      	LDI  R26,HIGH(0x5)
0015fe 07fa      	CPC  R31,R26
0015ff f481      	BRNE _0x26E
                 ; 0000 082F                             if(RealTimeMonth<=2){
001600 e0a2      	LDI  R26,LOW(_RealTimeMonth)
001601 e0b0      	LDI  R27,HIGH(_RealTimeMonth)
001602 940e 2052 	CALL __EEPROMRDB
001604 30e3      	CPI  R30,LOW(0x3)
001605 f44c      	BRGE _0x26F
                 ; 0000 0830                             RealTimeMonth = RealTimeMonth + 10;
001606 e0a2      	LDI  R26,LOW(_RealTimeMonth)
001607 e0b0      	LDI  R27,HIGH(_RealTimeMonth)
001608 940e 2052 	CALL __EEPROMRDB
00160a 5fe6      	SUBI R30,-LOW(10)
00160b e0a2      	LDI  R26,LOW(_RealTimeMonth)
00160c e0b0      	LDI  R27,HIGH(_RealTimeMonth)
00160d 940e 206e 	CALL __EEPROMWRB
                 ; 0000 0831                             }
                 ; 0000 0832                         }
                 _0x26F:
                 ; 0000 0833                         else if(Address[1]==6){
00160f c070      	RJMP _0x270
                 _0x26E:
                +
001610 91e0 0288+LDS R30 , _Address + ( 2 )
001612 91f0 0289+LDS R31 , _Address + ( 2 ) + 1
                 	__GETW1MN _Address,2
001614 30e6      	CPI  R30,LOW(0x6)
001615 e0a0      	LDI  R26,HIGH(0x6)
001616 07fa      	CPC  R31,R26
001617 f481      	BRNE _0x271
                 ; 0000 0834                             if(RealTimeMonth<12){
001618 e0a2      	LDI  R26,LOW(_RealTimeMonth)
001619 e0b0      	LDI  R27,HIGH(_RealTimeMonth)
00161a 940e 2052 	CALL __EEPROMRDB
00161c 30ec      	CPI  R30,LOW(0xC)
00161d f44c      	BRGE _0x272
                 ; 0000 0835                             RealTimeMonth = RealTimeMonth + 1;
00161e e0a2      	LDI  R26,LOW(_RealTimeMonth)
00161f e0b0      	LDI  R27,HIGH(_RealTimeMonth)
001620 940e 2052 	CALL __EEPROMRDB
001622 5fef      	SUBI R30,-LOW(1)
001623 e0a2      	LDI  R26,LOW(_RealTimeMonth)
001624 e0b0      	LDI  R27,HIGH(_RealTimeMonth)
001625 940e 206e 	CALL __EEPROMWRB
                 ; 0000 0836                             }
                 ; 0000 0837                         }
                 _0x272:
                 ; 0000 0838                         else if(Address[1]==7){
001627 c058      	RJMP _0x273
                 _0x271:
                +
001628 91e0 0288+LDS R30 , _Address + ( 2 )
00162a 91f0 0289+LDS R31 , _Address + ( 2 ) + 1
                 	__GETW1MN _Address,2
00162c 30e7      	CPI  R30,LOW(0x7)
00162d e0a0      	LDI  R26,HIGH(0x7)
00162e 07fa      	CPC  R31,R26
00162f f529      	BRNE _0x274
                 ; 0000 0839                             if(RealTimeDay<=DayCountInMonth(RealTimeYear,RealTimeMonth)-10){
001630 e0a3      	LDI  R26,LOW(_RealTimeDay)
001631 e0b0      	LDI  R27,HIGH(_RealTimeDay)
001632 940e 2052 	CALL __EEPROMRDB
001634 93ef      	PUSH R30
001635 e0a0      	LDI  R26,LOW(_RealTimeYear)
001636 e0b0      	LDI  R27,HIGH(_RealTimeYear)
001637 940e 204e 	CALL __EEPROMRDW
001639 93fa      	ST   -Y,R31
00163a 93ea      	ST   -Y,R30
00163b e0a2      	LDI  R26,LOW(_RealTimeMonth)
00163c e0b0      	LDI  R27,HIGH(_RealTimeMonth)
00163d 940e 2052 	CALL __EEPROMRDB
00163f 93ea      	ST   -Y,R30
001640 940e 0284 	CALL _DayCountInMonth
001642 e0f0      	LDI  R31,0
001643 973a      	SBIW R30,10
001644 91af      	POP  R26
001645 e0b0      	LDI  R27,0
001646 fda7      	SBRC R26,7
001647 efbf      	SER  R27
001648 17ea      	CP   R30,R26
001649 07fb      	CPC  R31,R27
00164a f04c      	BRLT _0x275
                 ; 0000 083A                             RealTimeDay = RealTimeDay + 10;
00164b e0a3      	LDI  R26,LOW(_RealTimeDay)
00164c e0b0      	LDI  R27,HIGH(_RealTimeDay)
00164d 940e 2052 	CALL __EEPROMRDB
00164f 5fe6      	SUBI R30,-LOW(10)
001650 e0a3      	LDI  R26,LOW(_RealTimeDay)
001651 e0b0      	LDI  R27,HIGH(_RealTimeDay)
001652 940e 206e 	CALL __EEPROMWRB
                 ; 0000 083B                             }
                 ; 0000 083C                         }
                 _0x275:
                 ; 0000 083D                         else if(Address[1]==8){
001654 c02b      	RJMP _0x276
                 _0x274:
                +
001655 91e0 0288+LDS R30 , _Address + ( 2 )
001657 91f0 0289+LDS R31 , _Address + ( 2 ) + 1
                 	__GETW1MN _Address,2
001659 30e8      	CPI  R30,LOW(0x8)
00165a e0a0      	LDI  R26,HIGH(0x8)
00165b 07fa      	CPC  R31,R26
00165c f519      	BRNE _0x277
                 ; 0000 083E                             if(RealTimeDay<DayCountInMonth(RealTimeYear,RealTimeMonth)){
00165d e0a3      	LDI  R26,LOW(_RealTimeDay)
00165e e0b0      	LDI  R27,HIGH(_RealTimeDay)
00165f 940e 2052 	CALL __EEPROMRDB
001661 93ef      	PUSH R30
001662 e0a0      	LDI  R26,LOW(_RealTimeYear)
001663 e0b0      	LDI  R27,HIGH(_RealTimeYear)
001664 940e 204e 	CALL __EEPROMRDW
001666 93fa      	ST   -Y,R31
001667 93ea      	ST   -Y,R30
001668 e0a2      	LDI  R26,LOW(_RealTimeMonth)
001669 e0b0      	LDI  R27,HIGH(_RealTimeMonth)
00166a 940e 2052 	CALL __EEPROMRDB
00166c 93ea      	ST   -Y,R30
00166d 940e 0284 	CALL _DayCountInMonth
00166f 91af      	POP  R26
001670 e0b0      	LDI  R27,0
001671 fda7      	SBRC R26,7
001672 efbf      	SER  R27
001673 e0f0      	LDI  R31,0
001674 17ae      	CP   R26,R30
001675 07bf      	CPC  R27,R31
001676 f44c      	BRGE _0x278
                 ; 0000 083F                             RealTimeDay = RealTimeDay + 1;
001677 e0a3      	LDI  R26,LOW(_RealTimeDay)
001678 e0b0      	LDI  R27,HIGH(_RealTimeDay)
001679 940e 2052 	CALL __EEPROMRDB
00167b 5fef      	SUBI R30,-LOW(1)
00167c e0a3      	LDI  R26,LOW(_RealTimeDay)
00167d e0b0      	LDI  R27,HIGH(_RealTimeDay)
00167e 940e 206e 	CALL __EEPROMWRB
                 ; 0000 0840                             }
                 ; 0000 0841                         }
                 _0x278:
                 ; 0000 0842                     }
                 _0x277:
                 _0x276:
                 _0x273:
                 _0x270:
                 _0x26D:
                 _0x26A:
                 _0x267:
                 _0x264:
                 ; 0000 0843                     else if(BUTTON[3]==1){
001680 c0db      	RJMP _0x279
                 _0x261:
                +
001681 91a0 0374+LDS R26 , _BUTTON_S0000010001 + ( 3 )
                 	__GETB2MN _BUTTON_S0000010001,3
001683 30a1      	CPI  R26,LOW(0x1)
001684 f011      	BREQ PC+3
001685 940c 175c 	JMP _0x27A
                 ; 0000 0844                         if(Address[1]==1){
                +
001687 91e0 0288+LDS R30 , _Address + ( 2 )
001689 91f0 0289+LDS R31 , _Address + ( 2 ) + 1
                 	__GETW1MN _Address,2
00168b 30e1      	CPI  R30,LOW(0x1)
00168c e0a0      	LDI  R26,HIGH(0x1)
00168d 07fa      	CPC  R31,R26
00168e f499      	BRNE _0x27B
                 ; 0000 0845                             if(RealTimeYear>=3011){
00168f e0a0      	LDI  R26,LOW(_RealTimeYear)
001690 e0b0      	LDI  R27,HIGH(_RealTimeYear)
001691 940e 204e 	CALL __EEPROMRDW
001693 3ce3      	CPI  R30,LOW(0xBC3)
001694 e0ab      	LDI  R26,HIGH(0xBC3)
001695 07fa      	CPC  R31,R26
001696 f050      	BRLO _0x27C
                 ; 0000 0846                             RealTimeYear = RealTimeYear - 1000;
001697 e0a0      	LDI  R26,LOW(_RealTimeYear)
001698 e0b0      	LDI  R27,HIGH(_RealTimeYear)
001699 940e 204e 	CALL __EEPROMRDW
00169b 5ee8      	SUBI R30,LOW(1000)
00169c 40f3      	SBCI R31,HIGH(1000)
00169d e0a0      	LDI  R26,LOW(_RealTimeYear)
00169e e0b0      	LDI  R27,HIGH(_RealTimeYear)
00169f 940e 2066 	CALL __EEPROMWRW
                 ; 0000 0847                             }
                 ; 0000 0848                         }
                 _0x27C:
                 ; 0000 0849                         else if(Address[1]==2){
0016a1 c0ba      	RJMP _0x27D
                 _0x27B:
                +
0016a2 91e0 0288+LDS R30 , _Address + ( 2 )
0016a4 91f0 0289+LDS R31 , _Address + ( 2 ) + 1
                 	__GETW1MN _Address,2
0016a6 30e2      	CPI  R30,LOW(0x2)
0016a7 e0a0      	LDI  R26,HIGH(0x2)
0016a8 07fa      	CPC  R31,R26
0016a9 f499      	BRNE _0x27E
                 ; 0000 084A                             if(RealTimeYear>=2111){
0016aa e0a0      	LDI  R26,LOW(_RealTimeYear)
0016ab e0b0      	LDI  R27,HIGH(_RealTimeYear)
0016ac 940e 204e 	CALL __EEPROMRDW
0016ae 33ef      	CPI  R30,LOW(0x83F)
0016af e0a8      	LDI  R26,HIGH(0x83F)
0016b0 07fa      	CPC  R31,R26
0016b1 f050      	BRLO _0x27F
                 ; 0000 084B                             RealTimeYear = RealTimeYear - 100;
0016b2 e0a0      	LDI  R26,LOW(_RealTimeYear)
0016b3 e0b0      	LDI  R27,HIGH(_RealTimeYear)
0016b4 940e 204e 	CALL __EEPROMRDW
0016b6 56e4      	SUBI R30,LOW(100)
0016b7 40f0      	SBCI R31,HIGH(100)
0016b8 e0a0      	LDI  R26,LOW(_RealTimeYear)
0016b9 e0b0      	LDI  R27,HIGH(_RealTimeYear)
0016ba 940e 2066 	CALL __EEPROMWRW
                 ; 0000 084C                             }
                 ; 0000 084D                         }
                 _0x27F:
                 ; 0000 084E                         else if(Address[1]==3){
0016bc c09f      	RJMP _0x280
                 _0x27E:
                +
0016bd 91e0 0288+LDS R30 , _Address + ( 2 )
0016bf 91f0 0289+LDS R31 , _Address + ( 2 ) + 1
                 	__GETW1MN _Address,2
0016c1 30e3      	CPI  R30,LOW(0x3)
0016c2 e0a0      	LDI  R26,HIGH(0x3)
0016c3 07fa      	CPC  R31,R26
0016c4 f491      	BRNE _0x281
                 ; 0000 084F                             if(RealTimeYear>=2021){
0016c5 e0a0      	LDI  R26,LOW(_RealTimeYear)
0016c6 e0b0      	LDI  R27,HIGH(_RealTimeYear)
0016c7 940e 204e 	CALL __EEPROMRDW
0016c9 3ee5      	CPI  R30,LOW(0x7E5)
0016ca e0a7      	LDI  R26,HIGH(0x7E5)
0016cb 07fa      	CPC  R31,R26
0016cc f048      	BRLO _0x282
                 ; 0000 0850                             RealTimeYear = RealTimeYear - 10;
0016cd e0a0      	LDI  R26,LOW(_RealTimeYear)
0016ce e0b0      	LDI  R27,HIGH(_RealTimeYear)
0016cf 940e 204e 	CALL __EEPROMRDW
0016d1 973a      	SBIW R30,10
0016d2 e0a0      	LDI  R26,LOW(_RealTimeYear)
0016d3 e0b0      	LDI  R27,HIGH(_RealTimeYear)
0016d4 940e 2066 	CALL __EEPROMWRW
                 ; 0000 0851                             }
                 ; 0000 0852                         }
                 _0x282:
                 ; 0000 0853                         else if(Address[1]==4){
0016d6 c085      	RJMP _0x283
                 _0x281:
                +
0016d7 91e0 0288+LDS R30 , _Address + ( 2 )
0016d9 91f0 0289+LDS R31 , _Address + ( 2 ) + 1
                 	__GETW1MN _Address,2
0016db 30e4      	CPI  R30,LOW(0x4)
0016dc e0a0      	LDI  R26,HIGH(0x4)
0016dd 07fa      	CPC  R31,R26
0016de f491      	BRNE _0x284
                 ; 0000 0854                             if(RealTimeYear>2011){
0016df e0a0      	LDI  R26,LOW(_RealTimeYear)
0016e0 e0b0      	LDI  R27,HIGH(_RealTimeYear)
0016e1 940e 204e 	CALL __EEPROMRDW
0016e3 3dec      	CPI  R30,LOW(0x7DC)
0016e4 e0a7      	LDI  R26,HIGH(0x7DC)
0016e5 07fa      	CPC  R31,R26
0016e6 f048      	BRLO _0x285
                 ; 0000 0855                             RealTimeYear = RealTimeYear - 1;
0016e7 e0a0      	LDI  R26,LOW(_RealTimeYear)
0016e8 e0b0      	LDI  R27,HIGH(_RealTimeYear)
0016e9 940e 204e 	CALL __EEPROMRDW
0016eb 9731      	SBIW R30,1
0016ec e0a0      	LDI  R26,LOW(_RealTimeYear)
0016ed e0b0      	LDI  R27,HIGH(_RealTimeYear)
0016ee 940e 2066 	CALL __EEPROMWRW
                 ; 0000 0856                             }
                 ; 0000 0857                         }
                 _0x285:
                 ; 0000 0858                         else if(Address[1]==5){
0016f0 c06b      	RJMP _0x286
                 _0x284:
                +
0016f1 91e0 0288+LDS R30 , _Address + ( 2 )
0016f3 91f0 0289+LDS R31 , _Address + ( 2 ) + 1
                 	__GETW1MN _Address,2
0016f5 30e5      	CPI  R30,LOW(0x5)
0016f6 e0a0      	LDI  R26,HIGH(0x5)
0016f7 07fa      	CPC  R31,R26
0016f8 f499      	BRNE _0x287
                 ; 0000 0859                             if(RealTimeMonth>10){
0016f9 e0a2      	LDI  R26,LOW(_RealTimeMonth)
0016fa e0b0      	LDI  R27,HIGH(_RealTimeMonth)
0016fb 940e 2052 	CALL __EEPROMRDB
0016fd 30eb      	CPI  R30,LOW(0xB)
0016fe f064      	BRLT _0x288
                 ; 0000 085A                             RealTimeMonth = RealTimeMonth - 10;
0016ff e0a2      	LDI  R26,LOW(_RealTimeMonth)
001700 e0b0      	LDI  R27,HIGH(_RealTimeMonth)
001701 940e 2052 	CALL __EEPROMRDB
001703 e0f0      	LDI  R31,0
001704 fde7      	SBRC R30,7
001705 efff      	SER  R31
001706 973a      	SBIW R30,10
001707 e0a2      	LDI  R26,LOW(_RealTimeMonth)
001708 e0b0      	LDI  R27,HIGH(_RealTimeMonth)
001709 940e 206e 	CALL __EEPROMWRB
                 ; 0000 085B                             }
                 ; 0000 085C                         }
                 _0x288:
                 ; 0000 085D                         else if(Address[1]==6){
00170b c050      	RJMP _0x289
                 _0x287:
                +
00170c 91e0 0288+LDS R30 , _Address + ( 2 )
00170e 91f0 0289+LDS R31 , _Address + ( 2 ) + 1
                 	__GETW1MN _Address,2
001710 30e6      	CPI  R30,LOW(0x6)
001711 e0a0      	LDI  R26,HIGH(0x6)
001712 07fa      	CPC  R31,R26
001713 f499      	BRNE _0x28A
                 ; 0000 085E                             if(RealTimeMonth>1){
001714 e0a2      	LDI  R26,LOW(_RealTimeMonth)
001715 e0b0      	LDI  R27,HIGH(_RealTimeMonth)
001716 940e 2052 	CALL __EEPROMRDB
001718 30e2      	CPI  R30,LOW(0x2)
001719 f064      	BRLT _0x28B
                 ; 0000 085F                             RealTimeMonth = RealTimeMonth - 1;
00171a e0a2      	LDI  R26,LOW(_RealTimeMonth)
00171b e0b0      	LDI  R27,HIGH(_RealTimeMonth)
00171c 940e 2052 	CALL __EEPROMRDB
00171e e0f0      	LDI  R31,0
00171f fde7      	SBRC R30,7
001720 efff      	SER  R31
001721 9731      	SBIW R30,1
001722 e0a2      	LDI  R26,LOW(_RealTimeMonth)
001723 e0b0      	LDI  R27,HIGH(_RealTimeMonth)
001724 940e 206e 	CALL __EEPROMWRB
                 ; 0000 0860                             }
                 ; 0000 0861                         }
                 _0x28B:
                 ; 0000 0862                         else if(Address[1]==7){
001726 c035      	RJMP _0x28C
                 _0x28A:
                +
001727 91e0 0288+LDS R30 , _Address + ( 2 )
001729 91f0 0289+LDS R31 , _Address + ( 2 ) + 1
                 	__GETW1MN _Address,2
00172b 30e7      	CPI  R30,LOW(0x7)
00172c e0a0      	LDI  R26,HIGH(0x7)
00172d 07fa      	CPC  R31,R26
00172e f499      	BRNE _0x28D
                 ; 0000 0863                             if(RealTimeDay>10){
00172f e0a3      	LDI  R26,LOW(_RealTimeDay)
001730 e0b0      	LDI  R27,HIGH(_RealTimeDay)
001731 940e 2052 	CALL __EEPROMRDB
001733 30eb      	CPI  R30,LOW(0xB)
001734 f064      	BRLT _0x28E
                 ; 0000 0864                             RealTimeDay = RealTimeDay - 10;
001735 e0a3      	LDI  R26,LOW(_RealTimeDay)
001736 e0b0      	LDI  R27,HIGH(_RealTimeDay)
001737 940e 2052 	CALL __EEPROMRDB
001739 e0f0      	LDI  R31,0
00173a fde7      	SBRC R30,7
00173b efff      	SER  R31
00173c 973a      	SBIW R30,10
00173d e0a3      	LDI  R26,LOW(_RealTimeDay)
00173e e0b0      	LDI  R27,HIGH(_RealTimeDay)
00173f 940e 206e 	CALL __EEPROMWRB
                 ; 0000 0865                             }
                 ; 0000 0866                         }
                 _0x28E:
                 ; 0000 0867                         else if(Address[1]==8){
001741 c01a      	RJMP _0x28F
                 _0x28D:
                +
001742 91e0 0288+LDS R30 , _Address + ( 2 )
001744 91f0 0289+LDS R31 , _Address + ( 2 ) + 1
                 	__GETW1MN _Address,2
001746 30e8      	CPI  R30,LOW(0x8)
001747 e0a0      	LDI  R26,HIGH(0x8)
001748 07fa      	CPC  R31,R26
001749 f491      	BRNE _0x290
                 ; 0000 0868                             if(RealTimeDay>1){
00174a e0a3      	LDI  R26,LOW(_RealTimeDay)
00174b e0b0      	LDI  R27,HIGH(_RealTimeDay)
00174c 940e 2052 	CALL __EEPROMRDB
00174e 30e2      	CPI  R30,LOW(0x2)
00174f f064      	BRLT _0x291
                 ; 0000 0869                             RealTimeDay = RealTimeDay - 1;
001750 e0a3      	LDI  R26,LOW(_RealTimeDay)
001751 e0b0      	LDI  R27,HIGH(_RealTimeDay)
001752 940e 2052 	CALL __EEPROMRDB
001754 e0f0      	LDI  R31,0
001755 fde7      	SBRC R30,7
001756 efff      	SER  R31
001757 9731      	SBIW R30,1
001758 e0a3      	LDI  R26,LOW(_RealTimeDay)
001759 e0b0      	LDI  R27,HIGH(_RealTimeDay)
00175a 940e 206e 	CALL __EEPROMWRB
                 ; 0000 086A                             }
                 ; 0000 086B                         }
                 _0x291:
                 ; 0000 086C                     }
                 _0x290:
                 _0x28F:
                 _0x28C:
                 _0x289:
                 _0x286:
                 _0x283:
                 _0x280:
                 _0x27D:
                 ; 0000 086D 
                 ; 0000 086E                     if(BUTTON[4]==1){
                 _0x27A:
                 _0x279:
                +
00175c 91a0 0375+LDS R26 , _BUTTON_S0000010001 + ( 4 )
                 	__GETB2MN _BUTTON_S0000010001,4
00175e 30a1      	CPI  R26,LOW(0x1)
00175f f431      	BRNE _0x292
                 ; 0000 086F                     Address[1] = 0;
                +
001760 e8e8     +LDI R30 , LOW ( _Address + ( 2 ) )
001761 e0f2     +LDI R31 , HIGH ( _Address + ( 2 ) )
                 	__POINTW1MN _Address,2
001762 e0a0      	LDI  R26,LOW(0)
001763 e0b0      	LDI  R27,HIGH(0)
001764 83a0      	STD  Z+0,R26
001765 83b1      	STD  Z+1,R27
                 ; 0000 0870                     }
                 ; 0000 0871                 }
                 _0x292:
                 _0x25B:
                 ; 0000 0872 
                 ; 0000 0873                 if(RefreshLcd==1){
001766 e0e1      	LDI  R30,LOW(1)
001767 15e5      	CP   R30,R5
001768 f011      	BREQ PC+3
001769 940c 1834 	JMP _0x293
                 ; 0000 0874                 MakeValidRealTimeDate();
00176b 940e 02c1 	CALL _MakeValidRealTimeDate
                 ; 0000 0875 
                 ; 0000 0876                 lcd_putsf("DATA: ");
                +
00176d e5e9     +LDI R30 , LOW ( 2 * _0x0 + ( 503 ) )
00176e e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 503 ) )
                 	__POINTW1FN _0x0,503
00176f 93fa      	ST   -Y,R31
001770 93ea      	ST   -Y,R30
001771 940e 1f1c 	CALL _lcd_putsf
                 ; 0000 0877                 lcd_put_number(0,4,0,0,RealTimeYear,0);
001773 e0e0      	LDI  R30,LOW(0)
001774 93ea      	ST   -Y,R30
001775 e0e4      	LDI  R30,LOW(4)
001776 93ea      	ST   -Y,R30
001777 e0e0      	LDI  R30,LOW(0)
001778 93ea      	ST   -Y,R30
001779 93ea      	ST   -Y,R30
00177a e0a0      	LDI  R26,LOW(_RealTimeYear)
00177b e0b0      	LDI  R27,HIGH(_RealTimeYear)
00177c 940e 204e 	CALL __EEPROMRDW
00177e 2766      	CLR  R22
00177f 2777      	CLR  R23
001780 940e 2045 	CALL __PUTPARD1
                +
001782 e0e0     +LDI R30 , LOW ( 0x0 )
001783 e0f0     +LDI R31 , HIGH ( 0x0 )
001784 e060     +LDI R22 , BYTE3 ( 0x0 )
001785 e070     +LDI R23 , BYTE4 ( 0x0 )
                 	__GETD1N 0x0
001786 940e 2045 	CALL __PUTPARD1
001788 940e 034c 	CALL _lcd_put_number
                 ; 0000 0878                 lcd_putchar('.');
00178a e2ee      	LDI  R30,LOW(46)
00178b 93ea      	ST   -Y,R30
00178c 940e 1ee8 	CALL _lcd_putchar
                 ; 0000 0879                 lcd_put_number(0,2,0,0,RealTimeMonth,0);
00178e e0e0      	LDI  R30,LOW(0)
00178f 93ea      	ST   -Y,R30
001790 e0e2      	LDI  R30,LOW(2)
001791 93ea      	ST   -Y,R30
001792 e0e0      	LDI  R30,LOW(0)
001793 93ea      	ST   -Y,R30
001794 93ea      	ST   -Y,R30
001795 e0a2      	LDI  R26,LOW(_RealTimeMonth)
001796 e0b0      	LDI  R27,HIGH(_RealTimeMonth)
001797 940e 2052 	CALL __EEPROMRDB
001799 e0f0      	LDI  R31,0
00179a fde7      	SBRC R30,7
00179b efff      	SER  R31
00179c 940e 1fa5 	CALL __CWD1
00179e 940e 2045 	CALL __PUTPARD1
                +
0017a0 e0e0     +LDI R30 , LOW ( 0x0 )
0017a1 e0f0     +LDI R31 , HIGH ( 0x0 )
0017a2 e060     +LDI R22 , BYTE3 ( 0x0 )
0017a3 e070     +LDI R23 , BYTE4 ( 0x0 )
                 	__GETD1N 0x0
0017a4 940e 2045 	CALL __PUTPARD1
0017a6 940e 034c 	CALL _lcd_put_number
                 ; 0000 087A                 lcd_putchar('.');
0017a8 e2ee      	LDI  R30,LOW(46)
0017a9 93ea      	ST   -Y,R30
0017aa 940e 1ee8 	CALL _lcd_putchar
                 ; 0000 087B                 lcd_put_number(0,2,0,0,RealTimeDay,0);
0017ac e0e0      	LDI  R30,LOW(0)
0017ad 93ea      	ST   -Y,R30
0017ae e0e2      	LDI  R30,LOW(2)
0017af 93ea      	ST   -Y,R30
0017b0 e0e0      	LDI  R30,LOW(0)
0017b1 93ea      	ST   -Y,R30
0017b2 93ea      	ST   -Y,R30
0017b3 e0a3      	LDI  R26,LOW(_RealTimeDay)
0017b4 e0b0      	LDI  R27,HIGH(_RealTimeDay)
0017b5 940e 2052 	CALL __EEPROMRDB
0017b7 e0f0      	LDI  R31,0
0017b8 fde7      	SBRC R30,7
0017b9 efff      	SER  R31
0017ba 940e 1fa5 	CALL __CWD1
0017bc 940e 2045 	CALL __PUTPARD1
                +
0017be e0e0     +LDI R30 , LOW ( 0x0 )
0017bf e0f0     +LDI R31 , HIGH ( 0x0 )
0017c0 e060     +LDI R22 , BYTE3 ( 0x0 )
0017c1 e070     +LDI R23 , BYTE4 ( 0x0 )
                 	__GETD1N 0x0
0017c2 940e 2045 	CALL __PUTPARD1
0017c4 940e 034c 	CALL _lcd_put_number
                 ; 0000 087C 
                 ; 0000 087D                     if(Address[1]==0){
                +
0017c6 91e0 0288+LDS R30 , _Address + ( 2 )
0017c8 91f0 0289+LDS R31 , _Address + ( 2 ) + 1
                 	__GETW1MN _Address,2
0017ca 9730      	SBIW R30,0
0017cb f439      	BRNE _0x294
                 ; 0000 087E                     lcd_putsf("NUSTATYTI? -->* ");
                +
0017cc e6e0     +LDI R30 , LOW ( 2 * _0x0 + ( 510 ) )
0017cd e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 510 ) )
                 	__POINTW1FN _0x0,510
0017ce 93fa      	ST   -Y,R31
0017cf 93ea      	ST   -Y,R30
0017d0 940e 1f1c 	CALL _lcd_putsf
                 ; 0000 087F                     }
                 ; 0000 0880                     else{
0017d2 c061      	RJMP _0x295
                 _0x294:
                 ; 0000 0881                     lcd_buttons(1,1,1,1,1,0,0,0,0);
0017d3 e0e1      	LDI  R30,LOW(1)
0017d4 93ea      	ST   -Y,R30
0017d5 93ea      	ST   -Y,R30
0017d6 93ea      	ST   -Y,R30
0017d7 93ea      	ST   -Y,R30
0017d8 93ea      	ST   -Y,R30
0017d9 e0e0      	LDI  R30,LOW(0)
0017da 93ea      	ST   -Y,R30
0017db 93ea      	ST   -Y,R30
0017dc 93ea      	ST   -Y,R30
0017dd 93ea      	ST   -Y,R30
0017de 940e 0520 	CALL _lcd_buttons
                 ; 0000 0882                         if(Address[1]==1){
                +
0017e0 91e0 0288+LDS R30 , _Address + ( 2 )
0017e2 91f0 0289+LDS R31 , _Address + ( 2 ) + 1
                 	__GETW1MN _Address,2
0017e4 30e1      	CPI  R30,LOW(0x1)
0017e5 e0a0      	LDI  R26,HIGH(0x1)
0017e6 07fa      	CPC  R31,R26
0017e7 f411      	BRNE _0x296
                 ; 0000 0883                         lcd_cursor(6,0);
0017e8 e0e6      	LDI  R30,LOW(6)
0017e9 c045      	RJMP _0x348
                 ; 0000 0884                         }
                 ; 0000 0885                         else if(Address[1]==2){
                 _0x296:
                +
0017ea 91e0 0288+LDS R30 , _Address + ( 2 )
0017ec 91f0 0289+LDS R31 , _Address + ( 2 ) + 1
                 	__GETW1MN _Address,2
0017ee 30e2      	CPI  R30,LOW(0x2)
0017ef e0a0      	LDI  R26,HIGH(0x2)
0017f0 07fa      	CPC  R31,R26
0017f1 f411      	BRNE _0x298
                 ; 0000 0886                         lcd_cursor(7,0);
0017f2 e0e7      	LDI  R30,LOW(7)
0017f3 c03b      	RJMP _0x348
                 ; 0000 0887                         }
                 ; 0000 0888                         else if(Address[1]==3){
                 _0x298:
                +
0017f4 91e0 0288+LDS R30 , _Address + ( 2 )
0017f6 91f0 0289+LDS R31 , _Address + ( 2 ) + 1
                 	__GETW1MN _Address,2
0017f8 30e3      	CPI  R30,LOW(0x3)
0017f9 e0a0      	LDI  R26,HIGH(0x3)
0017fa 07fa      	CPC  R31,R26
0017fb f411      	BRNE _0x29A
                 ; 0000 0889                         lcd_cursor(8,0);
0017fc e0e8      	LDI  R30,LOW(8)
0017fd c031      	RJMP _0x348
                 ; 0000 088A                         }
                 ; 0000 088B                         else if(Address[1]==4){
                 _0x29A:
                +
0017fe 91e0 0288+LDS R30 , _Address + ( 2 )
001800 91f0 0289+LDS R31 , _Address + ( 2 ) + 1
                 	__GETW1MN _Address,2
001802 30e4      	CPI  R30,LOW(0x4)
001803 e0a0      	LDI  R26,HIGH(0x4)
001804 07fa      	CPC  R31,R26
001805 f411      	BRNE _0x29C
                 ; 0000 088C                         lcd_cursor(9,0);
001806 e0e9      	LDI  R30,LOW(9)
001807 c027      	RJMP _0x348
                 ; 0000 088D                         }
                 ; 0000 088E                         else if(Address[1]==5){
                 _0x29C:
                +
001808 91e0 0288+LDS R30 , _Address + ( 2 )
00180a 91f0 0289+LDS R31 , _Address + ( 2 ) + 1
                 	__GETW1MN _Address,2
00180c 30e5      	CPI  R30,LOW(0x5)
00180d e0a0      	LDI  R26,HIGH(0x5)
00180e 07fa      	CPC  R31,R26
00180f f411      	BRNE _0x29E
                 ; 0000 088F                         lcd_cursor(11,0);
001810 e0eb      	LDI  R30,LOW(11)
001811 c01d      	RJMP _0x348
                 ; 0000 0890                         }
                 ; 0000 0891                         else if(Address[1]==6){
                 _0x29E:
                +
001812 91e0 0288+LDS R30 , _Address + ( 2 )
001814 91f0 0289+LDS R31 , _Address + ( 2 ) + 1
                 	__GETW1MN _Address,2
001816 30e6      	CPI  R30,LOW(0x6)
001817 e0a0      	LDI  R26,HIGH(0x6)
001818 07fa      	CPC  R31,R26
001819 f411      	BRNE _0x2A0
                 ; 0000 0892                         lcd_cursor(12,0);
00181a e0ec      	LDI  R30,LOW(12)
00181b c013      	RJMP _0x348
                 ; 0000 0893                         }
                 ; 0000 0894                         else if(Address[1]==7){
                 _0x2A0:
                +
00181c 91e0 0288+LDS R30 , _Address + ( 2 )
00181e 91f0 0289+LDS R31 , _Address + ( 2 ) + 1
                 	__GETW1MN _Address,2
001820 30e7      	CPI  R30,LOW(0x7)
001821 e0a0      	LDI  R26,HIGH(0x7)
001822 07fa      	CPC  R31,R26
001823 f411      	BRNE _0x2A2
                 ; 0000 0895                         lcd_cursor(14,0);
001824 e0ee      	LDI  R30,LOW(14)
001825 c009      	RJMP _0x348
                 ; 0000 0896                         }
                 ; 0000 0897                         else if(Address[1]==8){
                 _0x2A2:
                +
001826 91e0 0288+LDS R30 , _Address + ( 2 )
001828 91f0 0289+LDS R31 , _Address + ( 2 ) + 1
                 	__GETW1MN _Address,2
00182a 30e8      	CPI  R30,LOW(0x8)
00182b e0a0      	LDI  R26,HIGH(0x8)
00182c 07fa      	CPC  R31,R26
00182d f431      	BRNE _0x2A4
                 ; 0000 0898                         lcd_cursor(15,0);
00182e e0ef      	LDI  R30,LOW(15)
                 _0x348:
00182f 93ea      	ST   -Y,R30
001830 e0e0      	LDI  R30,LOW(0)
001831 93ea      	ST   -Y,R30
001832 940e 04e7 	CALL _lcd_cursor
                 ; 0000 0899                         }
                 ; 0000 089A                     }
                 _0x2A4:
                 _0x295:
                 ; 0000 089B                 }
                 ; 0000 089C             }
                 _0x293:
                 ; 0000 089D             else if(Address[0]==11){//+
001834 c322      	RJMP _0x2A5
                 _0x258:
001835 91a0 0286 	LDS  R26,_Address
001837 91b0 0287 	LDS  R27,_Address+1
001839 971b      	SBIW R26,11
00183a f011      	BREQ PC+3
00183b 940c 1a0b 	JMP _0x2A6
                 ; 0000 089E 
                 ; 0000 089F                 if(Address[1]==0){
                +
00183d 91e0 0288+LDS R30 , _Address + ( 2 )
00183f 91f0 0289+LDS R31 , _Address + ( 2 ) + 1
                 	__GETW1MN _Address,2
001841 9730      	SBIW R30,0
001842 f459      	BRNE _0x2A7
                 ; 0000 08A0                     if(BUTTON[4]==1){
                +
001843 91a0 0375+LDS R26 , _BUTTON_S0000010001 + ( 4 )
                 	__GETB2MN _BUTTON_S0000010001,4
001845 30a1      	CPI  R26,LOW(0x1)
001846 f431      	BRNE _0x2A8
                 ; 0000 08A1                     Address[1] = 1;
                +
001847 e8e8     +LDI R30 , LOW ( _Address + ( 2 ) )
001848 e0f2     +LDI R31 , HIGH ( _Address + ( 2 ) )
                 	__POINTW1MN _Address,2
001849 e0a1      	LDI  R26,LOW(1)
00184a e0b0      	LDI  R27,HIGH(1)
00184b 83a0      	STD  Z+0,R26
00184c 83b1      	STD  Z+1,R27
                 ; 0000 08A2                     }
                 ; 0000 08A3                 }
                 _0x2A8:
                 ; 0000 08A4                 else{
00184d c10c      	RJMP _0x2A9
                 _0x2A7:
                 ; 0000 08A5                     if(BUTTON[0]==1){
00184e 91a0 0371 	LDS  R26,_BUTTON_S0000010001
001850 30a1      	CPI  R26,LOW(0x1)
001851 f4b9      	BRNE _0x2AA
                 ; 0000 08A6                         if(Address[1]==1){
                +
001852 91e0 0288+LDS R30 , _Address + ( 2 )
001854 91f0 0289+LDS R31 , _Address + ( 2 ) + 1
                 	__GETW1MN _Address,2
001856 30e1      	CPI  R30,LOW(0x1)
001857 e0a0      	LDI  R26,HIGH(0x1)
001858 07fa      	CPC  R31,R26
001859 f439      	BRNE _0x2AB
                 ; 0000 08A7                         Address[1] = 4;
                +
00185a e8e8     +LDI R30 , LOW ( _Address + ( 2 ) )
00185b e0f2     +LDI R31 , HIGH ( _Address + ( 2 ) )
                 	__POINTW1MN _Address,2
00185c e0a4      	LDI  R26,LOW(4)
00185d e0b0      	LDI  R27,HIGH(4)
00185e 83a0      	STD  Z+0,R26
00185f 83b1      	STD  Z+1,R27
                 ; 0000 08A8                         }
                 ; 0000 08A9                         else{
001860 c007      	RJMP _0x2AC
                 _0x2AB:
                 ; 0000 08AA                         Address[1]--;
                +
001861 e8a8     +LDI R26 , LOW ( _Address + ( 2 ) )
001862 e0b2     +LDI R27 , HIGH ( _Address + ( 2 ) )
                 	__POINTW2MN _Address,2
001863 91ed      	LD   R30,X+
001864 91fd      	LD   R31,X+
001865 9731      	SBIW R30,1
001866 93fe      	ST   -X,R31
001867 93ee      	ST   -X,R30
                 ; 0000 08AB                         }
                 _0x2AC:
                 ; 0000 08AC                     }
                 ; 0000 08AD                     else if(BUTTON[1]==1){
001868 c01a      	RJMP _0x2AD
                 _0x2AA:
                +
001869 91a0 0372+LDS R26 , _BUTTON_S0000010001 + ( 1 )
                 	__GETB2MN _BUTTON_S0000010001,1
00186b 30a1      	CPI  R26,LOW(0x1)
00186c f4b1      	BRNE _0x2AE
                 ; 0000 08AE                         if(Address[1]==4){
                +
00186d 91e0 0288+LDS R30 , _Address + ( 2 )
00186f 91f0 0289+LDS R31 , _Address + ( 2 ) + 1
                 	__GETW1MN _Address,2
001871 30e4      	CPI  R30,LOW(0x4)
001872 e0a0      	LDI  R26,HIGH(0x4)
001873 07fa      	CPC  R31,R26
001874 f439      	BRNE _0x2AF
                 ; 0000 08AF                         Address[1] = 1;
                +
001875 e8e8     +LDI R30 , LOW ( _Address + ( 2 ) )
001876 e0f2     +LDI R31 , HIGH ( _Address + ( 2 ) )
                 	__POINTW1MN _Address,2
001877 e0a1      	LDI  R26,LOW(1)
001878 e0b0      	LDI  R27,HIGH(1)
001879 83a0      	STD  Z+0,R26
00187a 83b1      	STD  Z+1,R27
                 ; 0000 08B0                         }
                 ; 0000 08B1                         else{
00187b c007      	RJMP _0x2B0
                 _0x2AF:
                 ; 0000 08B2                         Address[1]++;
                +
00187c e8a8     +LDI R26 , LOW ( _Address + ( 2 ) )
00187d e0b2     +LDI R27 , HIGH ( _Address + ( 2 ) )
                 	__POINTW2MN _Address,2
00187e 91ed      	LD   R30,X+
00187f 91fd      	LD   R31,X+
001880 9631      	ADIW R30,1
001881 93fe      	ST   -X,R31
001882 93ee      	ST   -X,R30
                 ; 0000 08B3                         }
                 _0x2B0:
                 ; 0000 08B4                     }
                 ; 0000 08B5 
                 ; 0000 08B6                     if(BUTTON[2]==1){
                 _0x2AE:
                 _0x2AD:
                +
001883 91a0 0373+LDS R26 , _BUTTON_S0000010001 + ( 2 )
                 	__GETB2MN _BUTTON_S0000010001,2
001885 30a1      	CPI  R26,LOW(0x1)
001886 f011      	BREQ PC+3
001887 940c 18e7 	JMP _0x2B1
                 ; 0000 08B7                         if(Address[1]==1){
                +
001889 91e0 0288+LDS R30 , _Address + ( 2 )
00188b 91f0 0289+LDS R31 , _Address + ( 2 ) + 1
                 	__GETW1MN _Address,2
00188d 30e1      	CPI  R30,LOW(0x1)
00188e e0a0      	LDI  R26,HIGH(0x1)
00188f 07fa      	CPC  R31,R26
001890 f481      	BRNE _0x2B2
                 ; 0000 08B8                             if(RealTimeHour<=13){
001891 e0a4      	LDI  R26,LOW(_RealTimeHour)
001892 e0b0      	LDI  R27,HIGH(_RealTimeHour)
001893 940e 2052 	CALL __EEPROMRDB
001895 30ee      	CPI  R30,LOW(0xE)
001896 f44c      	BRGE _0x2B3
                 ; 0000 08B9                             RealTimeHour = RealTimeHour + 10;
001897 e0a4      	LDI  R26,LOW(_RealTimeHour)
001898 e0b0      	LDI  R27,HIGH(_RealTimeHour)
001899 940e 2052 	CALL __EEPROMRDB
00189b 5fe6      	SUBI R30,-LOW(10)
00189c e0a4      	LDI  R26,LOW(_RealTimeHour)
00189d e0b0      	LDI  R27,HIGH(_RealTimeHour)
00189e 940e 206e 	CALL __EEPROMWRB
                 ; 0000 08BA                             }
                 ; 0000 08BB                         }
                 _0x2B3:
                 ; 0000 08BC                         else if(Address[1]==2){
0018a0 c045      	RJMP _0x2B4
                 _0x2B2:
                +
0018a1 91e0 0288+LDS R30 , _Address + ( 2 )
0018a3 91f0 0289+LDS R31 , _Address + ( 2 ) + 1
                 	__GETW1MN _Address,2
0018a5 30e2      	CPI  R30,LOW(0x2)
0018a6 e0a0      	LDI  R26,HIGH(0x2)
0018a7 07fa      	CPC  R31,R26
0018a8 f479      	BRNE _0x2B5
                 ; 0000 08BD                             if(RealTimeHour<23){
0018a9 e0a4      	LDI  R26,LOW(_RealTimeHour)
0018aa e0b0      	LDI  R27,HIGH(_RealTimeHour)
0018ab 940e 2052 	CALL __EEPROMRDB
0018ad 31e7      	CPI  R30,LOW(0x17)
0018ae f444      	BRGE _0x2B6
                 ; 0000 08BE                             RealTimeHour++;
0018af e0a4      	LDI  R26,LOW(_RealTimeHour)
0018b0 e0b0      	LDI  R27,HIGH(_RealTimeHour)
0018b1 940e 2052 	CALL __EEPROMRDB
0018b3 5fef      	SUBI R30,-LOW(1)
0018b4 940e 206e 	CALL __EEPROMWRB
0018b6 50e1      	SUBI R30,LOW(1)
                 ; 0000 08BF                             }
                 ; 0000 08C0                         }
                 _0x2B6:
                 ; 0000 08C1                         else if(Address[1]==3){
0018b7 c02e      	RJMP _0x2B7
                 _0x2B5:
                +
0018b8 91e0 0288+LDS R30 , _Address + ( 2 )
0018ba 91f0 0289+LDS R31 , _Address + ( 2 ) + 1
                 	__GETW1MN _Address,2
0018bc 30e3      	CPI  R30,LOW(0x3)
0018bd e0a0      	LDI  R26,HIGH(0x3)
0018be 07fa      	CPC  R31,R26
0018bf f481      	BRNE _0x2B8
                 ; 0000 08C2                             if(RealTimeMinute<50){
0018c0 e0a5      	LDI  R26,LOW(_RealTimeMinute)
0018c1 e0b0      	LDI  R27,HIGH(_RealTimeMinute)
0018c2 940e 2052 	CALL __EEPROMRDB
0018c4 33e2      	CPI  R30,LOW(0x32)
0018c5 f44c      	BRGE _0x2B9
                 ; 0000 08C3                             RealTimeMinute = RealTimeMinute + 10;
0018c6 e0a5      	LDI  R26,LOW(_RealTimeMinute)
0018c7 e0b0      	LDI  R27,HIGH(_RealTimeMinute)
0018c8 940e 2052 	CALL __EEPROMRDB
0018ca 5fe6      	SUBI R30,-LOW(10)
0018cb e0a5      	LDI  R26,LOW(_RealTimeMinute)
0018cc e0b0      	LDI  R27,HIGH(_RealTimeMinute)
0018cd 940e 206e 	CALL __EEPROMWRB
                 ; 0000 08C4                             }
                 ; 0000 08C5                         }
                 _0x2B9:
                 ; 0000 08C6                         else if(Address[1]==4){
0018cf c016      	RJMP _0x2BA
                 _0x2B8:
                +
0018d0 91e0 0288+LDS R30 , _Address + ( 2 )
0018d2 91f0 0289+LDS R31 , _Address + ( 2 ) + 1
                 	__GETW1MN _Address,2
0018d4 30e4      	CPI  R30,LOW(0x4)
0018d5 e0a0      	LDI  R26,HIGH(0x4)
0018d6 07fa      	CPC  R31,R26
0018d7 f471      	BRNE _0x2BB
                 ; 0000 08C7                             if(RealTimeMinute<59){
0018d8 e0a5      	LDI  R26,LOW(_RealTimeMinute)
0018d9 e0b0      	LDI  R27,HIGH(_RealTimeMinute)
0018da 940e 2052 	CALL __EEPROMRDB
0018dc 33eb      	CPI  R30,LOW(0x3B)
0018dd f444      	BRGE _0x2BC
                 ; 0000 08C8                             RealTimeMinute++;
0018de e0a5      	LDI  R26,LOW(_RealTimeMinute)
0018df e0b0      	LDI  R27,HIGH(_RealTimeMinute)
0018e0 940e 2052 	CALL __EEPROMRDB
0018e2 5fef      	SUBI R30,-LOW(1)
0018e3 940e 206e 	CALL __EEPROMWRB
0018e5 50e1      	SUBI R30,LOW(1)
                 ; 0000 08C9                             }
                 ; 0000 08CA                         }
                 _0x2BC:
                 ; 0000 08CB                     }
                 _0x2BB:
                 _0x2BA:
                 _0x2B7:
                 _0x2B4:
                 ; 0000 08CC                     else if(BUTTON[3]==1){
0018e6 c069      	RJMP _0x2BD
                 _0x2B1:
                +
0018e7 91a0 0374+LDS R26 , _BUTTON_S0000010001 + ( 3 )
                 	__GETB2MN _BUTTON_S0000010001,3
0018e9 30a1      	CPI  R26,LOW(0x1)
0018ea f011      	BREQ PC+3
0018eb 940c 1950 	JMP _0x2BE
                 ; 0000 08CD                         if(Address[1]==1){
                +
0018ed 91e0 0288+LDS R30 , _Address + ( 2 )
0018ef 91f0 0289+LDS R31 , _Address + ( 2 ) + 1
                 	__GETW1MN _Address,2
0018f1 30e1      	CPI  R30,LOW(0x1)
0018f2 e0a0      	LDI  R26,HIGH(0x1)
0018f3 07fa      	CPC  R31,R26
0018f4 f499      	BRNE _0x2BF
                 ; 0000 08CE                             if(RealTimeHour>=10){
0018f5 e0a4      	LDI  R26,LOW(_RealTimeHour)
0018f6 e0b0      	LDI  R27,HIGH(_RealTimeHour)
0018f7 940e 2052 	CALL __EEPROMRDB
0018f9 30ea      	CPI  R30,LOW(0xA)
0018fa f064      	BRLT _0x2C0
                 ; 0000 08CF                             RealTimeHour = RealTimeHour - 10;
0018fb e0a4      	LDI  R26,LOW(_RealTimeHour)
0018fc e0b0      	LDI  R27,HIGH(_RealTimeHour)
0018fd 940e 2052 	CALL __EEPROMRDB
0018ff e0f0      	LDI  R31,0
001900 fde7      	SBRC R30,7
001901 efff      	SER  R31
001902 973a      	SBIW R30,10
001903 e0a4      	LDI  R26,LOW(_RealTimeHour)
001904 e0b0      	LDI  R27,HIGH(_RealTimeHour)
001905 940e 206e 	CALL __EEPROMWRB
                 ; 0000 08D0                             }
                 ; 0000 08D1                         }
                 _0x2C0:
                 ; 0000 08D2                         else if(Address[1]==2){
001907 c048      	RJMP _0x2C1
                 _0x2BF:
                +
001908 91e0 0288+LDS R30 , _Address + ( 2 )
00190a 91f0 0289+LDS R31 , _Address + ( 2 ) + 1
                 	__GETW1MN _Address,2
00190c 30e2      	CPI  R30,LOW(0x2)
00190d e0a0      	LDI  R26,HIGH(0x2)
00190e 07fa      	CPC  R31,R26
00190f f479      	BRNE _0x2C2
                 ; 0000 08D3                             if(RealTimeHour>=1){
001910 e0a4      	LDI  R26,LOW(_RealTimeHour)
001911 e0b0      	LDI  R27,HIGH(_RealTimeHour)
001912 940e 2052 	CALL __EEPROMRDB
001914 30e1      	CPI  R30,LOW(0x1)
001915 f044      	BRLT _0x2C3
                 ; 0000 08D4                             RealTimeHour--;
001916 e0a4      	LDI  R26,LOW(_RealTimeHour)
001917 e0b0      	LDI  R27,HIGH(_RealTimeHour)
001918 940e 2052 	CALL __EEPROMRDB
00191a 50e1      	SUBI R30,LOW(1)
00191b 940e 206e 	CALL __EEPROMWRB
00191d 5fef      	SUBI R30,-LOW(1)
                 ; 0000 08D5                             }
                 ; 0000 08D6                         }
                 _0x2C3:
                 ; 0000 08D7                         else if(Address[1]==3){
00191e c031      	RJMP _0x2C4
                 _0x2C2:
                +
00191f 91e0 0288+LDS R30 , _Address + ( 2 )
001921 91f0 0289+LDS R31 , _Address + ( 2 ) + 1
                 	__GETW1MN _Address,2
001923 30e3      	CPI  R30,LOW(0x3)
001924 e0a0      	LDI  R26,HIGH(0x3)
001925 07fa      	CPC  R31,R26
001926 f499      	BRNE _0x2C5
                 ; 0000 08D8                             if(RealTimeMinute>=10){
001927 e0a5      	LDI  R26,LOW(_RealTimeMinute)
001928 e0b0      	LDI  R27,HIGH(_RealTimeMinute)
001929 940e 2052 	CALL __EEPROMRDB
00192b 30ea      	CPI  R30,LOW(0xA)
00192c f064      	BRLT _0x2C6
                 ; 0000 08D9                             RealTimeMinute = RealTimeMinute - 10;
00192d e0a5      	LDI  R26,LOW(_RealTimeMinute)
00192e e0b0      	LDI  R27,HIGH(_RealTimeMinute)
00192f 940e 2052 	CALL __EEPROMRDB
001931 e0f0      	LDI  R31,0
001932 fde7      	SBRC R30,7
001933 efff      	SER  R31
001934 973a      	SBIW R30,10
001935 e0a5      	LDI  R26,LOW(_RealTimeMinute)
001936 e0b0      	LDI  R27,HIGH(_RealTimeMinute)
001937 940e 206e 	CALL __EEPROMWRB
                 ; 0000 08DA                             }
                 ; 0000 08DB                         }
                 _0x2C6:
                 ; 0000 08DC                         else if(Address[1]==4){
001939 c016      	RJMP _0x2C7
                 _0x2C5:
                +
00193a 91e0 0288+LDS R30 , _Address + ( 2 )
00193c 91f0 0289+LDS R31 , _Address + ( 2 ) + 1
                 	__GETW1MN _Address,2
00193e 30e4      	CPI  R30,LOW(0x4)
00193f e0a0      	LDI  R26,HIGH(0x4)
001940 07fa      	CPC  R31,R26
001941 f471      	BRNE _0x2C8
                 ; 0000 08DD                             if(RealTimeMinute>=1){
001942 e0a5      	LDI  R26,LOW(_RealTimeMinute)
001943 e0b0      	LDI  R27,HIGH(_RealTimeMinute)
001944 940e 2052 	CALL __EEPROMRDB
001946 30e1      	CPI  R30,LOW(0x1)
001947 f044      	BRLT _0x2C9
                 ; 0000 08DE                             RealTimeMinute--;
001948 e0a5      	LDI  R26,LOW(_RealTimeMinute)
001949 e0b0      	LDI  R27,HIGH(_RealTimeMinute)
00194a 940e 2052 	CALL __EEPROMRDB
00194c 50e1      	SUBI R30,LOW(1)
00194d 940e 206e 	CALL __EEPROMWRB
00194f 5fef      	SUBI R30,-LOW(1)
                 ; 0000 08DF                             }
                 ; 0000 08E0                         }
                 _0x2C9:
                 ; 0000 08E1                     }
                 _0x2C8:
                 _0x2C7:
                 _0x2C4:
                 _0x2C1:
                 ; 0000 08E2 
                 ; 0000 08E3                     if(BUTTON[4]==1){
                 _0x2BE:
                 _0x2BD:
                +
001950 91a0 0375+LDS R26 , _BUTTON_S0000010001 + ( 4 )
                 	__GETB2MN _BUTTON_S0000010001,4
001952 30a1      	CPI  R26,LOW(0x1)
001953 f431      	BRNE _0x2CA
                 ; 0000 08E4                     Address[1] = 0;
                +
001954 e8e8     +LDI R30 , LOW ( _Address + ( 2 ) )
001955 e0f2     +LDI R31 , HIGH ( _Address + ( 2 ) )
                 	__POINTW1MN _Address,2
001956 e0a0      	LDI  R26,LOW(0)
001957 e0b0      	LDI  R27,HIGH(0)
001958 83a0      	STD  Z+0,R26
001959 83b1      	STD  Z+1,R27
                 ; 0000 08E5                     }
                 ; 0000 08E6 
                 ; 0000 08E7                 }
                 _0x2CA:
                 _0x2A9:
                 ; 0000 08E8 
                 ; 0000 08E9                 if(RefreshLcd==1){
00195a e0e1      	LDI  R30,LOW(1)
00195b 15e5      	CP   R30,R5
00195c f011      	BREQ PC+3
00195d 940c 1a0a 	JMP _0x2CB
                 ; 0000 08EA                 lcd_putsf("LAIKAS: ");
                +
00195f e7e1     +LDI R30 , LOW ( 2 * _0x0 + ( 527 ) )
001960 e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 527 ) )
                 	__POINTW1FN _0x0,527
001961 93fa      	ST   -Y,R31
001962 93ea      	ST   -Y,R30
001963 940e 1f1c 	CALL _lcd_putsf
                 ; 0000 08EB                 lcd_put_number(0,2,0,0,RealTimeHour,0);
001965 e0e0      	LDI  R30,LOW(0)
001966 93ea      	ST   -Y,R30
001967 e0e2      	LDI  R30,LOW(2)
001968 93ea      	ST   -Y,R30
001969 e0e0      	LDI  R30,LOW(0)
00196a 93ea      	ST   -Y,R30
00196b 93ea      	ST   -Y,R30
00196c e0a4      	LDI  R26,LOW(_RealTimeHour)
00196d e0b0      	LDI  R27,HIGH(_RealTimeHour)
00196e 940e 2052 	CALL __EEPROMRDB
001970 e0f0      	LDI  R31,0
001971 fde7      	SBRC R30,7
001972 efff      	SER  R31
001973 940e 1fa5 	CALL __CWD1
001975 940e 2045 	CALL __PUTPARD1
                +
001977 e0e0     +LDI R30 , LOW ( 0x0 )
001978 e0f0     +LDI R31 , HIGH ( 0x0 )
001979 e060     +LDI R22 , BYTE3 ( 0x0 )
00197a e070     +LDI R23 , BYTE4 ( 0x0 )
                 	__GETD1N 0x0
00197b 940e 2045 	CALL __PUTPARD1
00197d 940e 034c 	CALL _lcd_put_number
                 ; 0000 08EC                 lcd_putchar(':');
00197f e3ea      	LDI  R30,LOW(58)
001980 93ea      	ST   -Y,R30
001981 940e 1ee8 	CALL _lcd_putchar
                 ; 0000 08ED                 lcd_put_number(0,2,0,0,RealTimeMinute,0);
001983 e0e0      	LDI  R30,LOW(0)
001984 93ea      	ST   -Y,R30
001985 e0e2      	LDI  R30,LOW(2)
001986 93ea      	ST   -Y,R30
001987 e0e0      	LDI  R30,LOW(0)
001988 93ea      	ST   -Y,R30
001989 93ea      	ST   -Y,R30
00198a e0a5      	LDI  R26,LOW(_RealTimeMinute)
00198b e0b0      	LDI  R27,HIGH(_RealTimeMinute)
00198c 940e 2052 	CALL __EEPROMRDB
00198e e0f0      	LDI  R31,0
00198f fde7      	SBRC R30,7
001990 efff      	SER  R31
001991 940e 1fa5 	CALL __CWD1
001993 940e 2045 	CALL __PUTPARD1
                +
001995 e0e0     +LDI R30 , LOW ( 0x0 )
001996 e0f0     +LDI R31 , HIGH ( 0x0 )
001997 e060     +LDI R22 , BYTE3 ( 0x0 )
001998 e070     +LDI R23 , BYTE4 ( 0x0 )
                 	__GETD1N 0x0
001999 940e 2045 	CALL __PUTPARD1
00199b 940e 034c 	CALL _lcd_put_number
                 ; 0000 08EE 
                 ; 0000 08EF                     if(Address[1]==0){
                +
00199d 91e0 0288+LDS R30 , _Address + ( 2 )
00199f 91f0 0289+LDS R31 , _Address + ( 2 ) + 1
                 	__GETW1MN _Address,2
0019a1 9730      	SBIW R30,0
0019a2 f519      	BRNE _0x2CC
                 ; 0000 08F0                     lcd_putchar(':');
0019a3 e3ea      	LDI  R30,LOW(58)
0019a4 93ea      	ST   -Y,R30
0019a5 940e 1ee8 	CALL _lcd_putchar
                 ; 0000 08F1                     lcd_put_number(0,2,0,0,RealTimeSecond,0);
0019a7 e0e0      	LDI  R30,LOW(0)
0019a8 93ea      	ST   -Y,R30
0019a9 e0e2      	LDI  R30,LOW(2)
0019aa 93ea      	ST   -Y,R30
0019ab e0e0      	LDI  R30,LOW(0)
0019ac 93ea      	ST   -Y,R30
0019ad 93ea      	ST   -Y,R30
0019ae e0a6      	LDI  R26,LOW(_RealTimeSecond)
0019af e0b0      	LDI  R27,HIGH(_RealTimeSecond)
0019b0 940e 2052 	CALL __EEPROMRDB
0019b2 e0f0      	LDI  R31,0
0019b3 940e 1fa5 	CALL __CWD1
0019b5 940e 2045 	CALL __PUTPARD1
                +
0019b7 e0e0     +LDI R30 , LOW ( 0x0 )
0019b8 e0f0     +LDI R31 , HIGH ( 0x0 )
0019b9 e060     +LDI R22 , BYTE3 ( 0x0 )
0019ba e070     +LDI R23 , BYTE4 ( 0x0 )
                 	__GETD1N 0x0
0019bb 940e 2045 	CALL __PUTPARD1
0019bd 940e 034c 	CALL _lcd_put_number
                 ; 0000 08F2                     lcd_putsf("NUSTATYTI? -->* ");
                +
0019bf e6e0     +LDI R30 , LOW ( 2 * _0x0 + ( 510 ) )
0019c0 e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 510 ) )
                 	__POINTW1FN _0x0,510
0019c1 93fa      	ST   -Y,R31
0019c2 93ea      	ST   -Y,R30
0019c3 940e 1f1c 	CALL _lcd_putsf
                 ; 0000 08F3                     }
                 ; 0000 08F4                     else{
0019c5 c044      	RJMP _0x2CD
                 _0x2CC:
                 ; 0000 08F5                     RealTimeSecond = 0;
0019c6 e0a6      	LDI  R26,LOW(_RealTimeSecond)
0019c7 e0b0      	LDI  R27,HIGH(_RealTimeSecond)
0019c8 e0e0      	LDI  R30,LOW(0)
0019c9 940e 206e 	CALL __EEPROMWRB
                 ; 0000 08F6                     lcd_putsf("   ");
                +
0019cb e7e1     +LDI R30 , LOW ( 2 * _0x0 + ( 15 ) )
0019cc e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 15 ) )
                 	__POINTW1FN _0x0,15
0019cd 93fa      	ST   -Y,R31
0019ce 93ea      	ST   -Y,R30
0019cf 940e 1f1c 	CALL _lcd_putsf
                 ; 0000 08F7                     lcd_buttons(1,1,1,1,1, 0,0,0,0);
0019d1 e0e1      	LDI  R30,LOW(1)
0019d2 93ea      	ST   -Y,R30
0019d3 93ea      	ST   -Y,R30
0019d4 93ea      	ST   -Y,R30
0019d5 93ea      	ST   -Y,R30
0019d6 93ea      	ST   -Y,R30
0019d7 e0e0      	LDI  R30,LOW(0)
0019d8 93ea      	ST   -Y,R30
0019d9 93ea      	ST   -Y,R30
0019da 93ea      	ST   -Y,R30
0019db 93ea      	ST   -Y,R30
0019dc 940e 0520 	CALL _lcd_buttons
                 ; 0000 08F8                         if(Address[1]==1){
                +
0019de 91e0 0288+LDS R30 , _Address + ( 2 )
0019e0 91f0 0289+LDS R31 , _Address + ( 2 ) + 1
                 	__GETW1MN _Address,2
0019e2 30e1      	CPI  R30,LOW(0x1)
0019e3 e0a0      	LDI  R26,HIGH(0x1)
0019e4 07fa      	CPC  R31,R26
0019e5 f411      	BRNE _0x2CE
                 ; 0000 08F9                         lcd_cursor(8,0);
0019e6 e0e8      	LDI  R30,LOW(8)
0019e7 c01d      	RJMP _0x349
                 ; 0000 08FA                         }
                 ; 0000 08FB                         else if(Address[1]==2){
                 _0x2CE:
                +
0019e8 91e0 0288+LDS R30 , _Address + ( 2 )
0019ea 91f0 0289+LDS R31 , _Address + ( 2 ) + 1
                 	__GETW1MN _Address,2
0019ec 30e2      	CPI  R30,LOW(0x2)
0019ed e0a0      	LDI  R26,HIGH(0x2)
0019ee 07fa      	CPC  R31,R26
0019ef f411      	BRNE _0x2D0
                 ; 0000 08FC                         lcd_cursor(9,0);
0019f0 e0e9      	LDI  R30,LOW(9)
0019f1 c013      	RJMP _0x349
                 ; 0000 08FD                         }
                 ; 0000 08FE                         else if(Address[1]==3){
                 _0x2D0:
                +
0019f2 91e0 0288+LDS R30 , _Address + ( 2 )
0019f4 91f0 0289+LDS R31 , _Address + ( 2 ) + 1
                 	__GETW1MN _Address,2
0019f6 30e3      	CPI  R30,LOW(0x3)
0019f7 e0a0      	LDI  R26,HIGH(0x3)
0019f8 07fa      	CPC  R31,R26
0019f9 f411      	BRNE _0x2D2
                 ; 0000 08FF                         lcd_cursor(11,0);
0019fa e0eb      	LDI  R30,LOW(11)
0019fb c009      	RJMP _0x349
                 ; 0000 0900                         }
                 ; 0000 0901                         else if(Address[1]==4){
                 _0x2D2:
                +
0019fc 91e0 0288+LDS R30 , _Address + ( 2 )
0019fe 91f0 0289+LDS R31 , _Address + ( 2 ) + 1
                 	__GETW1MN _Address,2
001a00 30e4      	CPI  R30,LOW(0x4)
001a01 e0a0      	LDI  R26,HIGH(0x4)
001a02 07fa      	CPC  R31,R26
001a03 f431      	BRNE _0x2D4
                 ; 0000 0902                         lcd_cursor(12,0);
001a04 e0ec      	LDI  R30,LOW(12)
                 _0x349:
001a05 93ea      	ST   -Y,R30
001a06 e0e0      	LDI  R30,LOW(0)
001a07 93ea      	ST   -Y,R30
001a08 940e 04e7 	CALL _lcd_cursor
                 ; 0000 0903                         }
                 ; 0000 0904                     }
                 _0x2D4:
                 _0x2CD:
                 ; 0000 0905                 }
                 ; 0000 0906             }
                 _0x2CB:
                 ; 0000 0907             else if(Address[0]==12){
001a0a c14c      	RJMP _0x2D5
                 _0x2A6:
001a0b 91a0 0286 	LDS  R26,_Address
001a0d 91b0 0287 	LDS  R27,_Address+1
001a0f 971c      	SBIW R26,12
001a10 f011      	BREQ PC+3
001a11 940c 1a68 	JMP _0x2D6
                 ; 0000 0908                 if(RefreshLcd==1){
001a13 e0e1      	LDI  R30,LOW(1)
001a14 15e5      	CP   R30,R5
001a15 f011      	BREQ PC+3
001a16 940c 1a67 	JMP _0x2D7
                 ; 0000 0909                     if(SolarColectorState/10==0){
001a18 91a0 036c 	LDS  R26,_SolarColectorState_S0000010002
001a1a e0b0      	LDI  R27,0
001a1b fda7      	SBRC R26,7
001a1c efbf      	SER  R27
001a1d e0ea      	LDI  R30,LOW(10)
001a1e e0f0      	LDI  R31,HIGH(10)
001a1f 940e 1ffa 	CALL __DIVW21
001a21 9730      	SBIW R30,0
001a22 f419      	BRNE _0x2D8
                 ; 0000 090A                     lcd_putsf("MATUOJA: BOILER.");
                +
001a23 e7ea     +LDI R30 , LOW ( 2 * _0x0 + ( 536 ) )
001a24 e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 536 ) )
                 	__POINTW1FN _0x0,536
001a25 c022      	RJMP _0x34A
                 ; 0000 090B                     }
                 ; 0000 090C                     else if(SolarColectorState/10==1){
                 _0x2D8:
001a26 91a0 036c 	LDS  R26,_SolarColectorState_S0000010002
001a28 e0b0      	LDI  R27,0
001a29 fda7      	SBRC R26,7
001a2a efbf      	SER  R27
001a2b e0ea      	LDI  R30,LOW(10)
001a2c e0f0      	LDI  R31,HIGH(10)
001a2d 940e 1ffa 	CALL __DIVW21
001a2f 30e1      	CPI  R30,LOW(0x1)
001a30 e0a0      	LDI  R26,HIGH(0x1)
001a31 07fa      	CPC  R31,R26
001a32 f419      	BRNE _0x2DA
                 ; 0000 090D                     lcd_putsf("MATUOJA: S.IEJI.");
                +
001a33 e8eb     +LDI R30 , LOW ( 2 * _0x0 + ( 553 ) )
001a34 e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 553 ) )
                 	__POINTW1FN _0x0,553
001a35 c012      	RJMP _0x34A
                 ; 0000 090E                     }
                 ; 0000 090F                     else if(SolarColectorState/10==2){
                 _0x2DA:
001a36 91a0 036c 	LDS  R26,_SolarColectorState_S0000010002
001a38 e0b0      	LDI  R27,0
001a39 fda7      	SBRC R26,7
001a3a efbf      	SER  R27
001a3b e0ea      	LDI  R30,LOW(10)
001a3c e0f0      	LDI  R31,HIGH(10)
001a3d 940e 1ffa 	CALL __DIVW21
001a3f 30e2      	CPI  R30,LOW(0x2)
001a40 e0a0      	LDI  R26,HIGH(0x2)
001a41 07fa      	CPC  R31,R26
001a42 f419      	BRNE _0x2DC
                 ; 0000 0910                     lcd_putsf("MATUOJA: S.ISEJ.");
                +
001a43 e9ec     +LDI R30 , LOW ( 2 * _0x0 + ( 570 ) )
001a44 e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 570 ) )
                 	__POINTW1FN _0x0,570
001a45 c002      	RJMP _0x34A
                 ; 0000 0911                     }
                 ; 0000 0912                     else{
                 _0x2DC:
                 ; 0000 0913                     lcd_putsf("MATUOJA: ------ ");
                +
001a46 eaed     +LDI R30 , LOW ( 2 * _0x0 + ( 587 ) )
001a47 e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 587 ) )
                 	__POINTW1FN _0x0,587
                 _0x34A:
001a48 93fa      	ST   -Y,R31
001a49 93ea      	ST   -Y,R30
001a4a 940e 1f1c 	CALL _lcd_putsf
                 ; 0000 0914                     }
                 ; 0000 0915 
                 ; 0000 0916 
                 ; 0000 0917                 lcd_putsf("TEMP:    ");
                +
001a4c ebee     +LDI R30 , LOW ( 2 * _0x0 + ( 604 ) )
001a4d e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 604 ) )
                 	__POINTW1FN _0x0,604
001a4e 93fa      	ST   -Y,R31
001a4f 93ea      	ST   -Y,R30
001a50 940e 1f1c 	CALL _lcd_putsf
                 ; 0000 0918                 lcd_put_number(1,3,1,1,0,GetTemperature());
001a52 e0e1      	LDI  R30,LOW(1)
001a53 93ea      	ST   -Y,R30
001a54 e0e3      	LDI  R30,LOW(3)
001a55 93ea      	ST   -Y,R30
001a56 e0e1      	LDI  R30,LOW(1)
001a57 93ea      	ST   -Y,R30
001a58 93ea      	ST   -Y,R30
                +
001a59 e0e0     +LDI R30 , LOW ( 0x0 )
001a5a e0f0     +LDI R31 , HIGH ( 0x0 )
001a5b e060     +LDI R22 , BYTE3 ( 0x0 )
001a5c e070     +LDI R23 , BYTE4 ( 0x0 )
                 	__GETD1N 0x0
001a5d 940e 2045 	CALL __PUTPARD1
001a5f 940e 0217 	CALL _GetTemperature
001a61 940e 1fa5 	CALL __CWD1
001a63 940e 2045 	CALL __PUTPARD1
001a65 940e 034c 	CALL _lcd_put_number
                 ; 0000 0919                 }
                 ; 0000 091A             }
                 _0x2D7:
                 ; 0000 091B             else if(Address[0]==13){
001a67 c0ef      	RJMP _0x2DE
                 _0x2D6:
001a68 91a0 0286 	LDS  R26,_Address
001a6a 91b0 0287 	LDS  R27,_Address+1
001a6c 971d      	SBIW R26,13
001a6d f011      	BREQ PC+3
001a6e 940c 1b57 	JMP _0x2DF
                 ; 0000 091C                 if(Address[1]==0){
                +
001a70 91e0 0288+LDS R30 , _Address + ( 2 )
001a72 91f0 0289+LDS R31 , _Address + ( 2 ) + 1
                 	__GETW1MN _Address,2
001a74 9730      	SBIW R30,0
001a75 f509      	BRNE _0x2E0
                 ; 0000 091D                     if(RefreshLcd==1){
001a76 e0e1      	LDI  R30,LOW(1)
001a77 15e5      	CP   R30,R5
001a78 f461      	BRNE _0x2E1
                 ; 0000 091E                     lcd_putsf("ATSTATYTI VISKA?");
                +
001a79 ece8     +LDI R30 , LOW ( 2 * _0x0 + ( 614 ) )
001a7a e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 614 ) )
                 	__POINTW1FN _0x0,614
001a7b 93fa      	ST   -Y,R31
001a7c 93ea      	ST   -Y,R30
001a7d 940e 1f1c 	CALL _lcd_putsf
                 ; 0000 091F                     lcd_putsf("        TAIP=>* ");
                +
001a7f ede9     +LDI R30 , LOW ( 2 * _0x0 + ( 631 ) )
001a80 e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 631 ) )
                 	__POINTW1FN _0x0,631
001a81 93fa      	ST   -Y,R31
001a82 93ea      	ST   -Y,R30
001a83 940e 1f1c 	CALL _lcd_putsf
                 ; 0000 0920                     }
                 ; 0000 0921 
                 ; 0000 0922                     if(BUTTON[4]==1){
                 _0x2E1:
                +
001a85 91a0 0375+LDS R26 , _BUTTON_S0000010001 + ( 4 )
                 	__GETB2MN _BUTTON_S0000010001,4
001a87 30a1      	CPI  R26,LOW(0x1)
001a88 f469      	BRNE _0x2E2
                 ; 0000 0923                     EnterCode(13,0,0,13,1,0);
001a89 e0ed      	LDI  R30,LOW(13)
001a8a 93ea      	ST   -Y,R30
001a8b e0e0      	LDI  R30,LOW(0)
001a8c 93ea      	ST   -Y,R30
001a8d 93ea      	ST   -Y,R30
001a8e e0ed      	LDI  R30,LOW(13)
001a8f 93ea      	ST   -Y,R30
001a90 e0e1      	LDI  R30,LOW(1)
001a91 93ea      	ST   -Y,R30
001a92 e0e0      	LDI  R30,LOW(0)
001a93 93ea      	ST   -Y,R30
001a94 940e 04f8 	CALL _EnterCode
                 ; 0000 0924                     }
                 ; 0000 0925                 }
                 _0x2E2:
                 ; 0000 0926                 else{
001a96 c0c0      	RJMP _0x2E3
                 _0x2E0:
                 ; 0000 0927                 unsigned char i;
                 ; 0000 0928                 NewestLog = 0;
001a97 9721      	SBIW R28,1
                 ;	i -> Y+0
001a98 e0a7      	LDI  R26,LOW(_NewestLog)
001a99 e0b0      	LDI  R27,HIGH(_NewestLog)
001a9a e0e0      	LDI  R30,LOW(0)
001a9b 940e 206e 	CALL __EEPROMWRB
                 ; 0000 0929 
                 ; 0000 092A                 lcd_clear();
001a9d 940e 1ed0 	CALL _lcd_clear
                 ; 0000 092B                 lcd_putsf("   ATSTATOMA    ");
                +
001a9f eeea     +LDI R30 , LOW ( 2 * _0x0 + ( 648 ) )
001aa0 e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 648 ) )
                 	__POINTW1FN _0x0,648
001aa1 93fa      	ST   -Y,R31
001aa2 93ea      	ST   -Y,R30
001aa3 940e 1f1c 	CALL _lcd_putsf
                 ; 0000 092C                 lcd_putsf("   PALAUKITE    ");
                +
001aa5 efeb     +LDI R30 , LOW ( 2 * _0x0 + ( 665 ) )
001aa6 e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 665 ) )
                 	__POINTW1FN _0x0,665
001aa7 93fa      	ST   -Y,R31
001aa8 93ea      	ST   -Y,R30
001aa9 940e 1f1c 	CALL _lcd_putsf
                 ; 0000 092D 
                 ; 0000 092E                 RealTimeYear = 0;
001aab e0a0      	LDI  R26,LOW(_RealTimeYear)
001aac e0b0      	LDI  R27,HIGH(_RealTimeYear)
001aad e0e0      	LDI  R30,LOW(0)
001aae e0f0      	LDI  R31,HIGH(0)
001aaf 940e 2066 	CALL __EEPROMWRW
                 ; 0000 092F                 RealTimeMonth = 0;
001ab1 e0a2      	LDI  R26,LOW(_RealTimeMonth)
001ab2 e0b0      	LDI  R27,HIGH(_RealTimeMonth)
001ab3 940e 206e 	CALL __EEPROMWRB
                 ; 0000 0930                 RealTimeDay = 0;
001ab5 e0a3      	LDI  R26,LOW(_RealTimeDay)
001ab6 e0b0      	LDI  R27,HIGH(_RealTimeDay)
001ab7 940e 206e 	CALL __EEPROMWRB
                 ; 0000 0931                 RealTimeHour = 0;
001ab9 e0a4      	LDI  R26,LOW(_RealTimeHour)
001aba e0b0      	LDI  R27,HIGH(_RealTimeHour)
001abb 940e 206e 	CALL __EEPROMWRB
                 ; 0000 0932                 RealTimeMinute = 0;
001abd e0a5      	LDI  R26,LOW(_RealTimeMinute)
001abe e0b0      	LDI  R27,HIGH(_RealTimeMinute)
001abf 940e 206e 	CALL __EEPROMWRB
                 ; 0000 0933 
                 ; 0000 0934 
                 ; 0000 0935                 LitersPerMinute = 20;
001ac1 eea6      	LDI  R26,LOW(_LitersPerMinute)
001ac2 e0b3      	LDI  R27,HIGH(_LitersPerMinute)
001ac3 e1e4      	LDI  R30,LOW(20)
001ac4 e0f0      	LDI  R31,HIGH(20)
001ac5 940e 2066 	CALL __EEPROMWRW
                 ; 0000 0936                 SolarColectorWattHours = 0;
001ac7 eea8      	LDI  R26,LOW(_SolarColectorWattHours)
001ac8 e0b3      	LDI  R27,HIGH(_SolarColectorWattHours)
                +
001ac9 e0e0     +LDI R30 , LOW ( 0x0 )
001aca e0f0     +LDI R31 , HIGH ( 0x0 )
001acb e060     +LDI R22 , BYTE3 ( 0x0 )
001acc e070     +LDI R23 , BYTE4 ( 0x0 )
                 	__GETD1N 0x0
001acd 940e 205e 	CALL __EEPROMWRD
                 ; 0000 0937                 WattHoursPerDay = 0;
001acf eeac      	LDI  R26,LOW(_WattHoursPerDay)
001ad0 e0b3      	LDI  R27,HIGH(_WattHoursPerDay)
001ad1 940e 205e 	CALL __EEPROMWRD
                 ; 0000 0938                 MinimumAntifreezeTemp = 350;
001ad3 efa0      	LDI  R26,LOW(_MinimumAntifreezeTemp)
001ad4 e0b3      	LDI  R27,HIGH(_MinimumAntifreezeTemp)
001ad5 e5ee      	LDI  R30,LOW(350)
001ad6 e0f1      	LDI  R31,HIGH(350)
001ad7 940e 2066 	CALL __EEPROMWRW
                 ; 0000 0939                 DifferenceBoilerAndSolar = 100;
001ad9 efa2      	LDI  R26,LOW(_DifferenceBoilerAndSolar)
001ada e0b3      	LDI  R27,HIGH(_DifferenceBoilerAndSolar)
001adb e6e4      	LDI  R30,LOW(100)
001adc e0f0      	LDI  R31,HIGH(100)
001add 940e 2066 	CALL __EEPROMWRW
                 ; 0000 093A                 MaxDayTemperature = 0;
001adf efa4      	LDI  R26,LOW(_MaxDayTemperature)
001ae0 e0b3      	LDI  R27,HIGH(_MaxDayTemperature)
001ae1 e0e0      	LDI  R30,LOW(0)
001ae2 e0f0      	LDI  R31,HIGH(0)
001ae3 940e 2066 	CALL __EEPROMWRW
                 ; 0000 093B 
                 ; 0000 093C                     for(i=0;i<LOG_COUNT;i++){
001ae5 83e8      	ST   Y,R30
                 _0x2E5:
001ae6 81a8      	LD   R26,Y
001ae7 35aa      	CPI  R26,LOW(0x5A)
001ae8 f010      	BRLO PC+3
001ae9 940c 1b31 	JMP _0x2E6
                 ; 0000 093D                     LogYear[i] = 0;
001aeb 81e8      	LD   R30,Y
001aec e0a8      	LDI  R26,LOW(_LogYear)
001aed e0b0      	LDI  R27,HIGH(_LogYear)
001aee e0f0      	LDI  R31,0
001aef 0fee      	LSL  R30
001af0 1fff      	ROL  R31
001af1 0fae      	ADD  R26,R30
001af2 1fbf      	ADC  R27,R31
001af3 e0e0      	LDI  R30,LOW(0)
001af4 e0f0      	LDI  R31,HIGH(0)
001af5 940e 2066 	CALL __EEPROMWRW
                 ; 0000 093E                     LogMonth[i] = 0;
001af7 81a8      	LD   R26,Y
001af8 e0b0      	LDI  R27,0
001af9 54a4      	SUBI R26,LOW(-_LogMonth)
001afa 4fbf      	SBCI R27,HIGH(-_LogMonth)
001afb 940e 206e 	CALL __EEPROMWRB
                 ; 0000 093F                     LogDay[i] = 0;
001afd 81a8      	LD   R26,Y
001afe e0b0      	LDI  R27,0
001aff 5eaa      	SUBI R26,LOW(-_LogDay)
001b00 4fbe      	SBCI R27,HIGH(-_LogDay)
001b01 940e 206e 	CALL __EEPROMWRB
                 ; 0000 0940                     LogHour[i] = 0;
001b03 81a8      	LD   R26,Y
001b04 e0b0      	LDI  R27,0
001b05 59a0      	SUBI R26,LOW(-_LogHour)
001b06 4fbe      	SBCI R27,HIGH(-_LogHour)
001b07 940e 206e 	CALL __EEPROMWRB
                 ; 0000 0941                     LogMinute[i] = 0;
001b09 81a8      	LD   R26,Y
001b0a e0b0      	LDI  R27,0
001b0b 53a6      	SUBI R26,LOW(-_LogMinute)
001b0c 4fbe      	SBCI R27,HIGH(-_LogMinute)
001b0d 940e 206e 	CALL __EEPROMWRB
                 ; 0000 0942 
                 ; 0000 0943                     LogType[i] = 0;
001b0f 81a8      	LD   R26,Y
001b10 e0b0      	LDI  R27,0
001b11 5dac      	SUBI R26,LOW(-_LogType)
001b12 4fbd      	SBCI R27,HIGH(-_LogType)
001b13 940e 206e 	CALL __EEPROMWRB
                 ; 0000 0944 
                 ; 0000 0945                     LogData1[i] = 0;
001b15 81e8      	LD   R30,Y
001b16 e7ae      	LDI  R26,LOW(_LogData1)
001b17 e0b2      	LDI  R27,HIGH(_LogData1)
001b18 e0f0      	LDI  R31,0
001b19 0fee      	LSL  R30
001b1a 1fff      	ROL  R31
001b1b 0fae      	ADD  R26,R30
001b1c 1fbf      	ADC  R27,R31
001b1d e0e0      	LDI  R30,LOW(0)
001b1e e0f0      	LDI  R31,HIGH(0)
001b1f 940e 2066 	CALL __EEPROMWRW
                 ; 0000 0946                     LogData2[i] = 0;
001b21 81e8      	LD   R30,Y
001b22 e3a2      	LDI  R26,LOW(_LogData2)
001b23 e0b3      	LDI  R27,HIGH(_LogData2)
001b24 e0f0      	LDI  R31,0
001b25 0fee      	LSL  R30
001b26 1fff      	ROL  R31
001b27 0fae      	ADD  R26,R30
001b28 1fbf      	ADC  R27,R31
001b29 e0e0      	LDI  R30,LOW(0)
001b2a e0f0      	LDI  R31,HIGH(0)
001b2b 940e 2066 	CALL __EEPROMWRW
                 ; 0000 0947                     }
001b2d 81e8      	LD   R30,Y
001b2e 5fef      	SUBI R30,-LOW(1)
001b2f 83e8      	ST   Y,R30
001b30 cfb5      	RJMP _0x2E5
                 _0x2E6:
                 ; 0000 0948 
                 ; 0000 0949                     if(1){
                 ; 0000 094A                     unsigned char Position;
                 ; 0000 094B                         while(1){
001b31 9721      	SBIW R28,1
                 ;	i -> Y+1
                 ;	Position -> Y+0
                 _0x2E8:
                 ; 0000 094C                         unsigned char CycleBack;
                 ; 0000 094D                         Position++;
001b32 9721      	SBIW R28,1
                 ;	i -> Y+2
                 ;	Position -> Y+1
                 ;	CycleBack -> Y+0
001b33 81e9      	LDD  R30,Y+1
001b34 5fef      	SUBI R30,-LOW(1)
001b35 83e9      	STD  Y+1,R30
                 ; 0000 094E                         lcd_clear();
001b36 940e 1ed0 	CALL _lcd_clear
                 ; 0000 094F                         CycleBack = lcd_put_runing_text(0,0,16,Position,"ISJUNKITE IR VEL IJUNKITE VALDIKLI");
001b38 e0e0      	LDI  R30,LOW(0)
001b39 93ea      	ST   -Y,R30
001b3a 93ea      	ST   -Y,R30
001b3b e1e0      	LDI  R30,LOW(16)
001b3c e0f0      	LDI  R31,HIGH(16)
001b3d 93fa      	ST   -Y,R31
001b3e 93ea      	ST   -Y,R30
001b3f 81ed      	LDD  R30,Y+5
001b40 e0f0      	LDI  R31,0
001b41 93fa      	ST   -Y,R31
001b42 93ea      	ST   -Y,R30
                +
001b43 e0ec     +LDI R30 , LOW ( 2 * _0x0 + ( 682 ) )
001b44 e0f3     +LDI R31 , HIGH ( 2 * _0x0 + ( 682 ) )
                 	__POINTW1FN _0x0,682
001b45 93fa      	ST   -Y,R31
001b46 93ea      	ST   -Y,R30
001b47 940e 04a9 	CALL _lcd_put_runing_text
001b49 83e8      	ST   Y,R30
                 ; 0000 0950                             if(CycleBack==1){
001b4a 81a8      	LD   R26,Y
001b4b 30a1      	CPI  R26,LOW(0x1)
001b4c f411      	BRNE _0x2EB
                 ; 0000 0951                             Position = 0;
001b4d e0e0      	LDI  R30,LOW(0)
001b4e 83e9      	STD  Y+1,R30
                 ; 0000 0952                             }
                 ; 0000 0953                         delay_ms(300);
                 _0x2EB:
001b4f e2ec      	LDI  R30,LOW(300)
001b50 e0f1      	LDI  R31,HIGH(300)
001b51 93fa      	ST   -Y,R31
001b52 93ea      	ST   -Y,R30
001b53 940e 1f7e 	CALL _delay_ms
                 ; 0000 0954                         }
001b55 9621      	ADIW R28,1
001b56 cfdb      	RJMP _0x2E8
                 ; 0000 0955                     }
                 ; 0000 0956                 }
                 _0x2E3:
                 ; 0000 0957             }
                 ; 0000 0958 /*            else if(Address[0]==14){
                 ; 0000 0959                 if(Address[1]==0){
                 ; 0000 095A                     if(RefreshLcd==1){
                 ; 0000 095B                     lcd_putsf("DUOMENU         SIUNTIMAS MBUS");
                 ; 0000 095C                     }
                 ; 0000 095D 
                 ; 0000 095E                     if(BUTTON[4]==1){
                 ; 0000 095F                     Address[1] = 1;
                 ; 0000 0960                     }
                 ; 0000 0961                 }
                 ; 0000 0962                 else if(Address[1]==1){
                 ; 0000 0963                 //static unsigned char DataToSent[200];
                 ; 0000 0964                 //static unsigned char ReceivedData[200];
                 ; 0000 0965                     if(RefreshLcd==1){
                 ; 0000 0966                     unsigned char i;
                 ; 0000 0967                         for(i=0;i<16;i++){
                 ; 0000 0968                             if(Address[2]+i<200){
                 ; 0000 0969                             lcd_putchar(DataToSent[Address[2]+i]);
                 ; 0000 096A                             }
                 ; 0000 096B                             else{
                 ; 0000 096C                             lcd_putchar(' ');
                 ; 0000 096D                             }
                 ; 0000 096E                         }
                 ; 0000 096F 
                 ; 0000 0970                     lcd_put_number(0,3,0,0,Address[2],0);
                 ; 0000 0971                     lcd_putchar(' ');
                 ; 0000 0972                     lcd_put_number(0,3,0,0,DataToSent[Address[2]],0);
                 ; 0000 0973                     }
                 ; 0000 0974 
                 ; 0000 0975                     if(DUAL_BUTTON[0]==1){
                 ; 0000 0976                     Address[0] = 0;
                 ; 0000 0977                     Address[1] = 0;
                 ; 0000 0978                     Address[2] = 0;
                 ; 0000 0979                     }
                 ; 0000 097A 
                 ; 0000 097B                     if(BUTTON[0]==1){
                 ; 0000 097C                         if(Address[2]>0){
                 ; 0000 097D                         Address[2]--;
                 ; 0000 097E                         }
                 ; 0000 097F                     }
                 ; 0000 0980                     else if(BUTTON[1]==1){
                 ; 0000 0981                         if(Address[2]<199){
                 ; 0000 0982                         Address[2]++;
                 ; 0000 0983                         }
                 ; 0000 0984                     }
                 ; 0000 0985 
                 ; 0000 0986                     if(BUTTON[2]==1){
                 ; 0000 0987                     DataToSent[Address[2]]++;
                 ; 0000 0988                     }
                 ; 0000 0989 
                 ; 0000 098A                     if(BUTTON[3]==1){
                 ; 0000 098B                     DataToSent[Address[2]]--;
                 ; 0000 098C                     }
                 ; 0000 098D 
                 ; 0000 098E                     if(BUTTON[4]==1){
                 ; 0000 098F                     Address[1] = 1;
                 ; 0000 0990                     Address[2] = 0;
                 ; 0000 0991 
                 ; 0000 0992                     lcd_clear();
                 ; 0000 0993                     lcd_putsf("SIUNCIAMA:");
                 ; 0000 0994                     delay_ms(1000);
                 ; 0000 0995 
                 ; 0000 0996                     SendMBus();
                 ; 0000 0997 
                 ; 0000 0998                     lcd_clear();
                 ; 0000 0999                     lcd_putsf("GAUNAMA:");
                 ; 0000 099A                     delay_ms(1000);
                 ; 0000 099B 
                 ; 0000 099C                     GetMBus();
                 ; 0000 099D                     }
                 ; 0000 099E 
                 ; 0000 099F 
                 ; 0000 09A0                 }
                 ; 0000 09A1                 else if(Address[1]==2){
                 ; 0000 09A2                     if(RefreshLcd==1){
                 ; 0000 09A3                     unsigned char i;
                 ; 0000 09A4                         for(i=0;i<16;i++){
                 ; 0000 09A5                             if(Address[2]+i<200){
                 ; 0000 09A6                             lcd_putchar(ReceivedData[Address[2]+i]);
                 ; 0000 09A7                             }
                 ; 0000 09A8                             else{
                 ; 0000 09A9                             lcd_putchar(' ');
                 ; 0000 09AA                             }
                 ; 0000 09AB                         }
                 ; 0000 09AC 
                 ; 0000 09AD                     lcd_put_number(0,3,0,0,Address[2],0);
                 ; 0000 09AE                     lcd_putchar(' ');
                 ; 0000 09AF                     lcd_put_number(0,3,0,0,ReceivedData[Address[2]],0);
                 ; 0000 09B0                     }
                 ; 0000 09B1 
                 ; 0000 09B2                     if(DUAL_BUTTON[0]==1){
                 ; 0000 09B3                     Address[1] = 0;
                 ; 0000 09B4                     Address[2] = 0;
                 ; 0000 09B5                     }
                 ; 0000 09B6 
                 ; 0000 09B7                     if(BUTTON[0]==1){
                 ; 0000 09B8                         if(Address[2]>0){
                 ; 0000 09B9                         Address[2]--;
                 ; 0000 09BA                         }
                 ; 0000 09BB                     }
                 ; 0000 09BC                     else if(BUTTON[1]==1){
                 ; 0000 09BD                         if(Address[2]<199){
                 ; 0000 09BE                         Address[2]++;
                 ; 0000 09BF                         }
                 ; 0000 09C0                     }
                 ; 0000 09C1 
                 ; 0000 09C2                 }
                 ; 0000 09C3             }*/
                 ; 0000 09C4         }
                 _0x2DF:
                 _0x2DE:
                 _0x2D5:
                 _0x2A5:
                 _0x257:
                 _0x214:
                 _0x210:
                 _0x20C:
                 _0x208:
                 _0x201:
                 _0x1FC:
                 _0x1D2:
                 _0x1A0:
                 _0x19C:
                 ; 0000 09C5         else{
001b57 c2db      	RJMP _0x2EC
                 _0x198:
                 ; 0000 09C6         /////////////////////////////////////////////////////////////////////
                 ; 0000 09C7             if(RefreshLcd==1){
001b58 e0e1      	LDI  R30,LOW(1)
001b59 15e5      	CP   R30,R5
001b5a f011      	BREQ PC+3
001b5b 940c 1c0c 	JMP _0x2ED
                 ; 0000 09C8             unsigned int i;
                 ; 0000 09C9             lcd_putsf("KODAS: ");
001b5d 9722      	SBIW R28,2
                 ;	i -> Y+0
                +
001b5e e2ef     +LDI R30 , LOW ( 2 * _0x0 + ( 717 ) )
001b5f e0f3     +LDI R31 , HIGH ( 2 * _0x0 + ( 717 ) )
                 	__POINTW1FN _0x0,717
001b60 93fa      	ST   -Y,R31
001b61 93ea      	ST   -Y,R30
001b62 940e 1f1c 	CALL _lcd_putsf
                 ; 0000 09CA             i = CODE_EnteringCode;
001b64 91e0 0298 	LDS  R30,_CODE_EnteringCode_G000
001b66 91f0 0299 	LDS  R31,_CODE_EnteringCode_G000+1
001b68 83e8      	ST   Y,R30
001b69 83f9      	STD  Y+1,R31
                 ; 0000 09CB                 if(CODE_ExecutingDigit==0){
001b6a 91e0 029a 	LDS  R30,_CODE_ExecutingDigit_G000
001b6c 30e0      	CPI  R30,0
001b6d f451      	BRNE _0x2EE
                 ; 0000 09CC                 lcd_putchar( NumToIndex( i/1000) );
001b6e 81a8      	LD   R26,Y
001b6f 81b9      	LDD  R27,Y+1
001b70 eee8      	LDI  R30,LOW(1000)
001b71 e0f3      	LDI  R31,HIGH(1000)
001b72 940e 1fe7 	CALL __DIVW21U
001b74 93ea      	ST   -Y,R30
001b75 940e 0231 	CALL _NumToIndex
001b77 c001      	RJMP _0x34B
                 ; 0000 09CD                 }
                 ; 0000 09CE                 else{
                 _0x2EE:
                 ; 0000 09CF                 lcd_putchar('*');
001b78 e2ea      	LDI  R30,LOW(42)
                 _0x34B:
001b79 93ea      	ST   -Y,R30
001b7a 940e 1ee8 	CALL _lcd_putchar
                 ; 0000 09D0                 }
                 ; 0000 09D1             i = i - (i/1000)*1000;
001b7c 81a8      	LD   R26,Y
001b7d 81b9      	LDD  R27,Y+1
001b7e eee8      	LDI  R30,LOW(1000)
001b7f e0f3      	LDI  R31,HIGH(1000)
001b80 940e 1fe7 	CALL __DIVW21U
001b82 eea8      	LDI  R26,LOW(1000)
001b83 e0b3      	LDI  R27,HIGH(1000)
001b84 940e 1faf 	CALL __MULW12U
001b86 81a8      	LD   R26,Y
001b87 81b9      	LDD  R27,Y+1
001b88 1bae      	SUB  R26,R30
001b89 0bbf      	SBC  R27,R31
001b8a 83a8      	ST   Y,R26
001b8b 83b9      	STD  Y+1,R27
                 ; 0000 09D2                 if(CODE_ExecutingDigit==1){
001b8c 91a0 029a 	LDS  R26,_CODE_ExecutingDigit_G000
001b8e 30a1      	CPI  R26,LOW(0x1)
001b8f f451      	BRNE _0x2F0
                 ; 0000 09D3                 lcd_putchar( NumToIndex( i/100) );
001b90 81a8      	LD   R26,Y
001b91 81b9      	LDD  R27,Y+1
001b92 e6e4      	LDI  R30,LOW(100)
001b93 e0f0      	LDI  R31,HIGH(100)
001b94 940e 1fe7 	CALL __DIVW21U
001b96 93ea      	ST   -Y,R30
001b97 940e 0231 	CALL _NumToIndex
001b99 c001      	RJMP _0x34C
                 ; 0000 09D4                 }
                 ; 0000 09D5                 else{
                 _0x2F0:
                 ; 0000 09D6                 lcd_putchar('*');
001b9a e2ea      	LDI  R30,LOW(42)
                 _0x34C:
001b9b 93ea      	ST   -Y,R30
001b9c 940e 1ee8 	CALL _lcd_putchar
                 ; 0000 09D7                 }
                 ; 0000 09D8             i = i - (i/100)*100;
001b9e 81a8      	LD   R26,Y
001b9f 81b9      	LDD  R27,Y+1
001ba0 e6e4      	LDI  R30,LOW(100)
001ba1 e0f0      	LDI  R31,HIGH(100)
001ba2 940e 1fe7 	CALL __DIVW21U
001ba4 e6a4      	LDI  R26,LOW(100)
001ba5 e0b0      	LDI  R27,HIGH(100)
001ba6 940e 1faf 	CALL __MULW12U
001ba8 81a8      	LD   R26,Y
001ba9 81b9      	LDD  R27,Y+1
001baa 1bae      	SUB  R26,R30
001bab 0bbf      	SBC  R27,R31
001bac 83a8      	ST   Y,R26
001bad 83b9      	STD  Y+1,R27
                 ; 0000 09D9                 if(CODE_ExecutingDigit==2){
001bae 91a0 029a 	LDS  R26,_CODE_ExecutingDigit_G000
001bb0 30a2      	CPI  R26,LOW(0x2)
001bb1 f451      	BRNE _0x2F2
                 ; 0000 09DA                 lcd_putchar( NumToIndex( i/10) );
001bb2 81a8      	LD   R26,Y
001bb3 81b9      	LDD  R27,Y+1
001bb4 e0ea      	LDI  R30,LOW(10)
001bb5 e0f0      	LDI  R31,HIGH(10)
001bb6 940e 1fe7 	CALL __DIVW21U
001bb8 93ea      	ST   -Y,R30
001bb9 940e 0231 	CALL _NumToIndex
001bbb c001      	RJMP _0x34D
                 ; 0000 09DB                 }
                 ; 0000 09DC                 else{
                 _0x2F2:
                 ; 0000 09DD                 lcd_putchar('*');
001bbc e2ea      	LDI  R30,LOW(42)
                 _0x34D:
001bbd 93ea      	ST   -Y,R30
001bbe 940e 1ee8 	CALL _lcd_putchar
                 ; 0000 09DE                 }
                 ; 0000 09DF             i = i - (i/10)*10;
001bc0 81a8      	LD   R26,Y
001bc1 81b9      	LDD  R27,Y+1
001bc2 e0ea      	LDI  R30,LOW(10)
001bc3 e0f0      	LDI  R31,HIGH(10)
001bc4 940e 1fe7 	CALL __DIVW21U
001bc6 e0aa      	LDI  R26,LOW(10)
001bc7 e0b0      	LDI  R27,HIGH(10)
001bc8 940e 1faf 	CALL __MULW12U
001bca 81a8      	LD   R26,Y
001bcb 81b9      	LDD  R27,Y+1
001bcc 1bae      	SUB  R26,R30
001bcd 0bbf      	SBC  R27,R31
001bce 83a8      	ST   Y,R26
001bcf 83b9      	STD  Y+1,R27
                 ; 0000 09E0                 if(CODE_ExecutingDigit==3){
001bd0 91a0 029a 	LDS  R26,_CODE_ExecutingDigit_G000
001bd2 30a3      	CPI  R26,LOW(0x3)
001bd3 f429      	BRNE _0x2F4
                 ; 0000 09E1                 lcd_putchar( NumToIndex(i) );
001bd4 81e8      	LD   R30,Y
001bd5 93ea      	ST   -Y,R30
001bd6 940e 0231 	CALL _NumToIndex
001bd8 c001      	RJMP _0x34E
                 ; 0000 09E2                 }
                 ; 0000 09E3                 else{
                 _0x2F4:
                 ; 0000 09E4                 lcd_putchar('*');
001bd9 e2ea      	LDI  R30,LOW(42)
                 _0x34E:
001bda 93ea      	ST   -Y,R30
001bdb 940e 1ee8 	CALL _lcd_putchar
                 ; 0000 09E5                 }
                 ; 0000 09E6 
                 ; 0000 09E7             lcd_putsf("   ");
                +
001bdd e7e1     +LDI R30 , LOW ( 2 * _0x0 + ( 15 ) )
001bde e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 15 ) )
                 	__POINTW1FN _0x0,15
001bdf 93fa      	ST   -Y,R31
001be0 93ea      	ST   -Y,R30
001be1 940e 1f1c 	CALL _lcd_putsf
                 ; 0000 09E8 
                 ; 0000 09E9             i = CODE_TimeLeft;
001be3 91e0 0297 	LDS  R30,_CODE_TimeLeft_G000
001be5 e0f0      	LDI  R31,0
001be6 83e8      	ST   Y,R30
001be7 83f9      	STD  Y+1,R31
                 ; 0000 09EA             lcd_putchar( NumToIndex( i/10) );
001be8 81a8      	LD   R26,Y
001be9 81b9      	LDD  R27,Y+1
001bea e0ea      	LDI  R30,LOW(10)
001beb e0f0      	LDI  R31,HIGH(10)
001bec 940e 1fe7 	CALL __DIVW21U
001bee 93ea      	ST   -Y,R30
001bef 940e 0231 	CALL _NumToIndex
001bf1 93ea      	ST   -Y,R30
001bf2 940e 1ee8 	CALL _lcd_putchar
                 ; 0000 09EB             i = i - (i/10)*10;
001bf4 81a8      	LD   R26,Y
001bf5 81b9      	LDD  R27,Y+1
001bf6 e0ea      	LDI  R30,LOW(10)
001bf7 e0f0      	LDI  R31,HIGH(10)
001bf8 940e 1fe7 	CALL __DIVW21U
001bfa e0aa      	LDI  R26,LOW(10)
001bfb e0b0      	LDI  R27,HIGH(10)
001bfc 940e 1faf 	CALL __MULW12U
001bfe 81a8      	LD   R26,Y
001bff 81b9      	LDD  R27,Y+1
001c00 1bae      	SUB  R26,R30
001c01 0bbf      	SBC  R27,R31
001c02 83a8      	ST   Y,R26
001c03 83b9      	STD  Y+1,R27
                 ; 0000 09EC             lcd_putchar( NumToIndex(i) );
001c04 81e8      	LD   R30,Y
001c05 93ea      	ST   -Y,R30
001c06 940e 0231 	CALL _NumToIndex
001c08 93ea      	ST   -Y,R30
001c09 940e 1ee8 	CALL _lcd_putchar
                 ; 0000 09ED             }
001c0b 9622      	ADIW R28,2
                 ; 0000 09EE 
                 ; 0000 09EF         ///// 1 Kodo skaicius /////////
                 ; 0000 09F0             if(CODE_ExecutingDigit==0){
                 _0x2ED:
001c0c 91e0 029a 	LDS  R30,_CODE_ExecutingDigit_G000
001c0e 30e0      	CPI  R30,0
001c0f f011      	BREQ PC+3
001c10 940c 1c60 	JMP _0x2F6
                 ; 0000 09F1                 if(RefreshLcd==1){
001c12 e0e1      	LDI  R30,LOW(1)
001c13 15e5      	CP   R30,R5
001c14 f4a1      	BRNE _0x2F7
                 ; 0000 09F2                 lcd_buttons(0,1,1,1,1,1,0,0,0);
001c15 e0e0      	LDI  R30,LOW(0)
001c16 93ea      	ST   -Y,R30
001c17 e0e1      	LDI  R30,LOW(1)
001c18 93ea      	ST   -Y,R30
001c19 93ea      	ST   -Y,R30
001c1a 93ea      	ST   -Y,R30
001c1b 93ea      	ST   -Y,R30
001c1c 93ea      	ST   -Y,R30
001c1d e0e0      	LDI  R30,LOW(0)
001c1e 93ea      	ST   -Y,R30
001c1f 93ea      	ST   -Y,R30
001c20 93ea      	ST   -Y,R30
001c21 940e 0520 	CALL _lcd_buttons
                 ; 0000 09F3                 lcd_cursor(7,0);
001c23 e0e7      	LDI  R30,LOW(7)
001c24 93ea      	ST   -Y,R30
001c25 e0e0      	LDI  R30,LOW(0)
001c26 93ea      	ST   -Y,R30
001c27 940e 04e7 	CALL _lcd_cursor
                 ; 0000 09F4                 }
                 ; 0000 09F5 
                 ; 0000 09F6             // pakeisti ivedama skaitmeni
                 ; 0000 09F7                 if(BUTTON[1]==1){
                 _0x2F7:
                +
001c29 91a0 0372+LDS R26 , _BUTTON_S0000010001 + ( 1 )
                 	__GETB2MN _BUTTON_S0000010001,1
001c2b 30a1      	CPI  R26,LOW(0x1)
001c2c f429      	BRNE _0x2F8
                 ; 0000 09F8                 CODE_ExecutingDigit++;
001c2d 91e0 029a 	LDS  R30,_CODE_ExecutingDigit_G000
001c2f 5fef      	SUBI R30,-LOW(1)
001c30 93e0 029a 	STS  _CODE_ExecutingDigit_G000,R30
                 ; 0000 09F9                 }
                 ; 0000 09FA 
                 ; 0000 09FB             // 1 kodo skaitmens keitimas
                 ; 0000 09FC                 if(BUTTON[2]==1){
                 _0x2F8:
                +
001c32 91a0 0373+LDS R26 , _BUTTON_S0000010001 + ( 2 )
                 	__GETB2MN _BUTTON_S0000010001,2
001c34 30a1      	CPI  R26,LOW(0x1)
001c35 f499      	BRNE _0x2F9
                 ; 0000 09FD                     if(CODE_EnteringCode<9000){
001c36 91a0 0298 	LDS  R26,_CODE_EnteringCode_G000
001c38 91b0 0299 	LDS  R27,_CODE_EnteringCode_G000+1
001c3a 32a8      	CPI  R26,LOW(0x2328)
001c3b e2e3      	LDI  R30,HIGH(0x2328)
001c3c 07be      	CPC  R27,R30
001c3d f450      	BRSH _0x2FA
                 ; 0000 09FE                     CODE_EnteringCode = CODE_EnteringCode + 1000;
001c3e 91e0 0298 	LDS  R30,_CODE_EnteringCode_G000
001c40 91f0 0299 	LDS  R31,_CODE_EnteringCode_G000+1
001c42 51e8      	SUBI R30,LOW(-1000)
001c43 4ffc      	SBCI R31,HIGH(-1000)
001c44 93e0 0298 	STS  _CODE_EnteringCode_G000,R30
001c46 93f0 0299 	STS  _CODE_EnteringCode_G000+1,R31
                 ; 0000 09FF                     }
                 ; 0000 0A00                 }
                 _0x2FA:
                 ; 0000 0A01                 else if(BUTTON[3]==1){
001c48 c016      	RJMP _0x2FB
                 _0x2F9:
                +
001c49 91a0 0374+LDS R26 , _BUTTON_S0000010001 + ( 3 )
                 	__GETB2MN _BUTTON_S0000010001,3
001c4b 30a1      	CPI  R26,LOW(0x1)
001c4c f491      	BRNE _0x2FC
                 ; 0000 0A02                     if(CODE_EnteringCode>=1000){
001c4d 91a0 0298 	LDS  R26,_CODE_EnteringCode_G000
001c4f 91b0 0299 	LDS  R27,_CODE_EnteringCode_G000+1
001c51 3ea8      	CPI  R26,LOW(0x3E8)
001c52 e0e3      	LDI  R30,HIGH(0x3E8)
001c53 07be      	CPC  R27,R30
001c54 f050      	BRLO _0x2FD
                 ; 0000 0A03                     CODE_EnteringCode = CODE_EnteringCode - 1000;
001c55 91e0 0298 	LDS  R30,_CODE_EnteringCode_G000
001c57 91f0 0299 	LDS  R31,_CODE_EnteringCode_G000+1
001c59 5ee8      	SUBI R30,LOW(1000)
001c5a 40f3      	SBCI R31,HIGH(1000)
001c5b 93e0 0298 	STS  _CODE_EnteringCode_G000,R30
001c5d 93f0 0299 	STS  _CODE_EnteringCode_G000+1,R31
                 ; 0000 0A04                     }
                 ; 0000 0A05                 }
                 _0x2FD:
                 ; 0000 0A06             }
                 _0x2FC:
                 _0x2FB:
                 ; 0000 0A07         ///////////////////////////////
                 ; 0000 0A08 
                 ; 0000 0A09         ///// 2 Kodo skaicius /////////
                 ; 0000 0A0A             else if(CODE_ExecutingDigit==1){
001c5f c100      	RJMP _0x2FE
                 _0x2F6:
001c60 91a0 029a 	LDS  R26,_CODE_ExecutingDigit_G000
001c62 30a1      	CPI  R26,LOW(0x1)
001c63 f011      	BREQ PC+3
001c64 940c 1cba 	JMP _0x2FF
                 ; 0000 0A0B                 if(RefreshLcd==1){
001c66 e0e1      	LDI  R30,LOW(1)
001c67 15e5      	CP   R30,R5
001c68 f491      	BRNE _0x300
                 ; 0000 0A0C                 lcd_buttons(1,1,1,1,1,1,0,0,0);
001c69 93ea      	ST   -Y,R30
001c6a 93ea      	ST   -Y,R30
001c6b 93ea      	ST   -Y,R30
001c6c 93ea      	ST   -Y,R30
001c6d 93ea      	ST   -Y,R30
001c6e 93ea      	ST   -Y,R30
001c6f e0e0      	LDI  R30,LOW(0)
001c70 93ea      	ST   -Y,R30
001c71 93ea      	ST   -Y,R30
001c72 93ea      	ST   -Y,R30
001c73 940e 0520 	CALL _lcd_buttons
                 ; 0000 0A0D                 lcd_cursor(8,0);
001c75 e0e8      	LDI  R30,LOW(8)
001c76 93ea      	ST   -Y,R30
001c77 e0e0      	LDI  R30,LOW(0)
001c78 93ea      	ST   -Y,R30
001c79 940e 04e7 	CALL _lcd_cursor
                 ; 0000 0A0E                 }
                 ; 0000 0A0F 
                 ; 0000 0A10                 if(BUTTON[0]==1){
                 _0x300:
001c7b 91a0 0371 	LDS  R26,_BUTTON_S0000010001
001c7d 30a1      	CPI  R26,LOW(0x1)
001c7e f421      	BRNE _0x301
                 ; 0000 0A11                 CODE_ExecutingDigit--;
001c7f 91e0 029a 	LDS  R30,_CODE_ExecutingDigit_G000
001c81 50e1      	SUBI R30,LOW(1)
001c82 c007      	RJMP _0x34F
                 ; 0000 0A12                 }
                 ; 0000 0A13                 else if(BUTTON[1]==1){
                 _0x301:
                +
001c83 91a0 0372+LDS R26 , _BUTTON_S0000010001 + ( 1 )
                 	__GETB2MN _BUTTON_S0000010001,1
001c85 30a1      	CPI  R26,LOW(0x1)
001c86 f429      	BRNE _0x303
                 ; 0000 0A14                 CODE_ExecutingDigit++;
001c87 91e0 029a 	LDS  R30,_CODE_ExecutingDigit_G000
001c89 5fef      	SUBI R30,-LOW(1)
                 _0x34F:
001c8a 93e0 029a 	STS  _CODE_ExecutingDigit_G000,R30
                 ; 0000 0A15                 }
                 ; 0000 0A16 
                 ; 0000 0A17             // 2 kodo skaitmens keitimas
                 ; 0000 0A18                 if(BUTTON[2]==1){
                 _0x303:
                +
001c8c 91a0 0373+LDS R26 , _BUTTON_S0000010001 + ( 2 )
                 	__GETB2MN _BUTTON_S0000010001,2
001c8e 30a1      	CPI  R26,LOW(0x1)
001c8f f499      	BRNE _0x304
                 ; 0000 0A19                     if(CODE_EnteringCode<9900){
001c90 91a0 0298 	LDS  R26,_CODE_EnteringCode_G000
001c92 91b0 0299 	LDS  R27,_CODE_EnteringCode_G000+1
001c94 3aac      	CPI  R26,LOW(0x26AC)
001c95 e2e6      	LDI  R30,HIGH(0x26AC)
001c96 07be      	CPC  R27,R30
001c97 f450      	BRSH _0x305
                 ; 0000 0A1A                     CODE_EnteringCode = CODE_EnteringCode + 100;
001c98 91e0 0298 	LDS  R30,_CODE_EnteringCode_G000
001c9a 91f0 0299 	LDS  R31,_CODE_EnteringCode_G000+1
001c9c 59ec      	SUBI R30,LOW(-100)
001c9d 4fff      	SBCI R31,HIGH(-100)
001c9e 93e0 0298 	STS  _CODE_EnteringCode_G000,R30
001ca0 93f0 0299 	STS  _CODE_EnteringCode_G000+1,R31
                 ; 0000 0A1B                     }
                 ; 0000 0A1C                 }
                 _0x305:
                 ; 0000 0A1D                 else if(BUTTON[3]==1){
001ca2 c016      	RJMP _0x306
                 _0x304:
                +
001ca3 91a0 0374+LDS R26 , _BUTTON_S0000010001 + ( 3 )
                 	__GETB2MN _BUTTON_S0000010001,3
001ca5 30a1      	CPI  R26,LOW(0x1)
001ca6 f491      	BRNE _0x307
                 ; 0000 0A1E                     if(CODE_EnteringCode>=100){
001ca7 91a0 0298 	LDS  R26,_CODE_EnteringCode_G000
001ca9 91b0 0299 	LDS  R27,_CODE_EnteringCode_G000+1
001cab 36a4      	CPI  R26,LOW(0x64)
001cac e0e0      	LDI  R30,HIGH(0x64)
001cad 07be      	CPC  R27,R30
001cae f050      	BRLO _0x308
                 ; 0000 0A1F                     CODE_EnteringCode = CODE_EnteringCode - 100;
001caf 91e0 0298 	LDS  R30,_CODE_EnteringCode_G000
001cb1 91f0 0299 	LDS  R31,_CODE_EnteringCode_G000+1
001cb3 56e4      	SUBI R30,LOW(100)
001cb4 40f0      	SBCI R31,HIGH(100)
001cb5 93e0 0298 	STS  _CODE_EnteringCode_G000,R30
001cb7 93f0 0299 	STS  _CODE_EnteringCode_G000+1,R31
                 ; 0000 0A20                     }
                 ; 0000 0A21                 }
                 _0x308:
                 ; 0000 0A22             }
                 _0x307:
                 _0x306:
                 ; 0000 0A23         ///////////////////////////////
                 ; 0000 0A24 
                 ; 0000 0A25         ///// 3 Kodo skaicius /////////
                 ; 0000 0A26             else if(CODE_ExecutingDigit==2){
001cb9 c0a6      	RJMP _0x309
                 _0x2FF:
001cba 91a0 029a 	LDS  R26,_CODE_ExecutingDigit_G000
001cbc 30a2      	CPI  R26,LOW(0x2)
001cbd f011      	BREQ PC+3
001cbe 940c 1d11 	JMP _0x30A
                 ; 0000 0A27                 if(RefreshLcd==1){
001cc0 e0e1      	LDI  R30,LOW(1)
001cc1 15e5      	CP   R30,R5
001cc2 f491      	BRNE _0x30B
                 ; 0000 0A28                 lcd_buttons(1,1,1,1,1,1,0,0,0);
001cc3 93ea      	ST   -Y,R30
001cc4 93ea      	ST   -Y,R30
001cc5 93ea      	ST   -Y,R30
001cc6 93ea      	ST   -Y,R30
001cc7 93ea      	ST   -Y,R30
001cc8 93ea      	ST   -Y,R30
001cc9 e0e0      	LDI  R30,LOW(0)
001cca 93ea      	ST   -Y,R30
001ccb 93ea      	ST   -Y,R30
001ccc 93ea      	ST   -Y,R30
001ccd 940e 0520 	CALL _lcd_buttons
                 ; 0000 0A29                 lcd_cursor(9,0);
001ccf e0e9      	LDI  R30,LOW(9)
001cd0 93ea      	ST   -Y,R30
001cd1 e0e0      	LDI  R30,LOW(0)
001cd2 93ea      	ST   -Y,R30
001cd3 940e 04e7 	CALL _lcd_cursor
                 ; 0000 0A2A                 }
                 ; 0000 0A2B 
                 ; 0000 0A2C                 if(BUTTON[0]==1){
                 _0x30B:
001cd5 91a0 0371 	LDS  R26,_BUTTON_S0000010001
001cd7 30a1      	CPI  R26,LOW(0x1)
001cd8 f429      	BRNE _0x30C
                 ; 0000 0A2D                 CODE_ExecutingDigit--;
001cd9 91e0 029a 	LDS  R30,_CODE_ExecutingDigit_G000
001cdb 50e1      	SUBI R30,LOW(1)
001cdc 93e0 029a 	STS  _CODE_ExecutingDigit_G000,R30
                 ; 0000 0A2E                 }
                 ; 0000 0A2F                 if(BUTTON[1]==1){
                 _0x30C:
                +
001cde 91a0 0372+LDS R26 , _BUTTON_S0000010001 + ( 1 )
                 	__GETB2MN _BUTTON_S0000010001,1
001ce0 30a1      	CPI  R26,LOW(0x1)
001ce1 f429      	BRNE _0x30D
                 ; 0000 0A30                 CODE_ExecutingDigit++;
001ce2 91e0 029a 	LDS  R30,_CODE_ExecutingDigit_G000
001ce4 5fef      	SUBI R30,-LOW(1)
001ce5 93e0 029a 	STS  _CODE_ExecutingDigit_G000,R30
                 ; 0000 0A31                 }
                 ; 0000 0A32 
                 ; 0000 0A33             // 3 kodo skaitmens keitimas
                 ; 0000 0A34                 if(BUTTON[2]==1){
                 _0x30D:
                +
001ce7 91a0 0373+LDS R26 , _BUTTON_S0000010001 + ( 2 )
                 	__GETB2MN _BUTTON_S0000010001,2
001ce9 30a1      	CPI  R26,LOW(0x1)
001cea f491      	BRNE _0x30E
                 ; 0000 0A35                     if(CODE_EnteringCode<9990){
001ceb 91a0 0298 	LDS  R26,_CODE_EnteringCode_G000
001ced 91b0 0299 	LDS  R27,_CODE_EnteringCode_G000+1
001cef 30a6      	CPI  R26,LOW(0x2706)
001cf0 e2e7      	LDI  R30,HIGH(0x2706)
001cf1 07be      	CPC  R27,R30
001cf2 f448      	BRSH _0x30F
                 ; 0000 0A36                     CODE_EnteringCode = CODE_EnteringCode + 10;
001cf3 91e0 0298 	LDS  R30,_CODE_EnteringCode_G000
001cf5 91f0 0299 	LDS  R31,_CODE_EnteringCode_G000+1
001cf7 963a      	ADIW R30,10
001cf8 93e0 0298 	STS  _CODE_EnteringCode_G000,R30
001cfa 93f0 0299 	STS  _CODE_EnteringCode_G000+1,R31
                 ; 0000 0A37                     }
                 ; 0000 0A38                 }
                 _0x30F:
                 ; 0000 0A39                 else if(BUTTON[3]==1){
001cfc c013      	RJMP _0x310
                 _0x30E:
                +
001cfd 91a0 0374+LDS R26 , _BUTTON_S0000010001 + ( 3 )
                 	__GETB2MN _BUTTON_S0000010001,3
001cff 30a1      	CPI  R26,LOW(0x1)
001d00 f479      	BRNE _0x311
                 ; 0000 0A3A                     if(CODE_EnteringCode>=10){
001d01 91a0 0298 	LDS  R26,_CODE_EnteringCode_G000
001d03 91b0 0299 	LDS  R27,_CODE_EnteringCode_G000+1
001d05 971a      	SBIW R26,10
001d06 f048      	BRLO _0x312
                 ; 0000 0A3B                     CODE_EnteringCode = CODE_EnteringCode - 10;
001d07 91e0 0298 	LDS  R30,_CODE_EnteringCode_G000
001d09 91f0 0299 	LDS  R31,_CODE_EnteringCode_G000+1
001d0b 973a      	SBIW R30,10
001d0c 93e0 0298 	STS  _CODE_EnteringCode_G000,R30
001d0e 93f0 0299 	STS  _CODE_EnteringCode_G000+1,R31
                 ; 0000 0A3C                     }
                 ; 0000 0A3D                 }
                 _0x312:
                 ; 0000 0A3E             }
                 _0x311:
                 _0x310:
                 ; 0000 0A3F         ///////////////////////////////
                 ; 0000 0A40 
                 ; 0000 0A41         ///// 4 Kodo skaicius /////////
                 ; 0000 0A42             else if(CODE_ExecutingDigit==3){
001d10 c04f      	RJMP _0x313
                 _0x30A:
001d11 91a0 029a 	LDS  R26,_CODE_ExecutingDigit_G000
001d13 30a3      	CPI  R26,LOW(0x3)
001d14 f011      	BREQ PC+3
001d15 940c 1d60 	JMP _0x314
                 ; 0000 0A43                 if(RefreshLcd==1){
001d17 e0e1      	LDI  R30,LOW(1)
001d18 15e5      	CP   R30,R5
001d19 f4a1      	BRNE _0x315
                 ; 0000 0A44                 lcd_buttons(1,0,1,1,1,1,0,0,0);
001d1a 93ea      	ST   -Y,R30
001d1b e0e0      	LDI  R30,LOW(0)
001d1c 93ea      	ST   -Y,R30
001d1d e0e1      	LDI  R30,LOW(1)
001d1e 93ea      	ST   -Y,R30
001d1f 93ea      	ST   -Y,R30
001d20 93ea      	ST   -Y,R30
001d21 93ea      	ST   -Y,R30
001d22 e0e0      	LDI  R30,LOW(0)
001d23 93ea      	ST   -Y,R30
001d24 93ea      	ST   -Y,R30
001d25 93ea      	ST   -Y,R30
001d26 940e 0520 	CALL _lcd_buttons
                 ; 0000 0A45                 lcd_cursor(10,0);
001d28 e0ea      	LDI  R30,LOW(10)
001d29 93ea      	ST   -Y,R30
001d2a e0e0      	LDI  R30,LOW(0)
001d2b 93ea      	ST   -Y,R30
001d2c 940e 04e7 	CALL _lcd_cursor
                 ; 0000 0A46                 }
                 ; 0000 0A47 
                 ; 0000 0A48                 if(BUTTON[0]==1){
                 _0x315:
001d2e 91a0 0371 	LDS  R26,_BUTTON_S0000010001
001d30 30a1      	CPI  R26,LOW(0x1)
001d31 f429      	BRNE _0x316
                 ; 0000 0A49                 CODE_ExecutingDigit--;
001d32 91e0 029a 	LDS  R30,_CODE_ExecutingDigit_G000
001d34 50e1      	SUBI R30,LOW(1)
001d35 93e0 029a 	STS  _CODE_ExecutingDigit_G000,R30
                 ; 0000 0A4A                 }
                 ; 0000 0A4B 
                 ; 0000 0A4C             // 4 kodo skaitmens keitimas
                 ; 0000 0A4D                 if(BUTTON[2]==1){
                 _0x316:
                +
001d37 91a0 0373+LDS R26 , _BUTTON_S0000010001 + ( 2 )
                 	__GETB2MN _BUTTON_S0000010001,2
001d39 30a1      	CPI  R26,LOW(0x1)
001d3a f491      	BRNE _0x317
                 ; 0000 0A4E                     if(CODE_EnteringCode<9999){
001d3b 91a0 0298 	LDS  R26,_CODE_EnteringCode_G000
001d3d 91b0 0299 	LDS  R27,_CODE_EnteringCode_G000+1
001d3f 30af      	CPI  R26,LOW(0x270F)
001d40 e2e7      	LDI  R30,HIGH(0x270F)
001d41 07be      	CPC  R27,R30
001d42 f448      	BRSH _0x318
                 ; 0000 0A4F                     CODE_EnteringCode = CODE_EnteringCode + 1;
001d43 91e0 0298 	LDS  R30,_CODE_EnteringCode_G000
001d45 91f0 0299 	LDS  R31,_CODE_EnteringCode_G000+1
001d47 9631      	ADIW R30,1
001d48 93e0 0298 	STS  _CODE_EnteringCode_G000,R30
001d4a 93f0 0299 	STS  _CODE_EnteringCode_G000+1,R31
                 ; 0000 0A50                     }
                 ; 0000 0A51                 }
                 _0x318:
                 ; 0000 0A52                 else if(BUTTON[3]==1){
001d4c c013      	RJMP _0x319
                 _0x317:
                +
001d4d 91a0 0374+LDS R26 , _BUTTON_S0000010001 + ( 3 )
                 	__GETB2MN _BUTTON_S0000010001,3
001d4f 30a1      	CPI  R26,LOW(0x1)
001d50 f479      	BRNE _0x31A
                 ; 0000 0A53                     if(CODE_EnteringCode>=1){
001d51 91a0 0298 	LDS  R26,_CODE_EnteringCode_G000
001d53 91b0 0299 	LDS  R27,_CODE_EnteringCode_G000+1
001d55 9711      	SBIW R26,1
001d56 f048      	BRLO _0x31B
                 ; 0000 0A54                     CODE_EnteringCode = CODE_EnteringCode - 1;
001d57 91e0 0298 	LDS  R30,_CODE_EnteringCode_G000
001d59 91f0 0299 	LDS  R31,_CODE_EnteringCode_G000+1
001d5b 9731      	SBIW R30,1
001d5c 93e0 0298 	STS  _CODE_EnteringCode_G000,R30
001d5e 93f0 0299 	STS  _CODE_EnteringCode_G000+1,R31
                 ; 0000 0A55                     }
                 ; 0000 0A56                 }
                 _0x31B:
                 ; 0000 0A57             }
                 _0x31A:
                 _0x319:
                 ; 0000 0A58         ///////////////////////////////
                 ; 0000 0A59 
                 ; 0000 0A5A             if(CODE_TimeLeft==0){
                 _0x314:
                 _0x313:
                 _0x309:
                 _0x2FE:
001d60 91e0 0297 	LDS  R30,_CODE_TimeLeft_G000
001d62 30e0      	CPI  R30,0
001d63 f011      	BREQ PC+3
001d64 940c 1da0 	JMP _0x31C
                 ; 0000 0A5B             Address[0] = CODE_FailedXYZ[0];
001d66 91e0 0294 	LDS  R30,_CODE_FailedXYZ_G000
001d68 e0f0      	LDI  R31,0
001d69 93e0 0286 	STS  _Address,R30
001d6b 93f0 0287 	STS  _Address+1,R31
                 ; 0000 0A5C             Address[1] = CODE_FailedXYZ[1];
                +
001d6d e8a8     +LDI R26 , LOW ( _Address + ( 2 ) )
001d6e e0b2     +LDI R27 , HIGH ( _Address + ( 2 ) )
                 	__POINTW2MN _Address,2
                +
001d6f 91e0 0295+LDS R30 , _CODE_FailedXYZ_G000 + ( 1 )
                 	__GETB1MN _CODE_FailedXYZ_G000,1
001d71 e0f0      	LDI  R31,0
001d72 93ed      	ST   X+,R30
001d73 93fc      	ST   X,R31
                 ; 0000 0A5D             Address[2] = CODE_FailedXYZ[2];
                +
001d74 e8aa     +LDI R26 , LOW ( _Address + ( 4 ) )
001d75 e0b2     +LDI R27 , HIGH ( _Address + ( 4 ) )
                 	__POINTW2MN _Address,4
                +
001d76 91e0 0296+LDS R30 , _CODE_FailedXYZ_G000 + ( 2 )
                 	__GETB1MN _CODE_FailedXYZ_G000,2
001d78 e0f0      	LDI  R31,0
001d79 93ed      	ST   X+,R30
001d7a 93fc      	ST   X,R31
                 ; 0000 0A5E 
                 ; 0000 0A5F             CODE_IsEntering = 0;
001d7b e0e0      	LDI  R30,LOW(0)
001d7c 93e0 0290 	STS  _CODE_IsEntering_G000,R30
                 ; 0000 0A60 
                 ; 0000 0A61             CODE_EnteringCode = 0;
001d7e 93e0 0298 	STS  _CODE_EnteringCode_G000,R30
001d80 93e0 0299 	STS  _CODE_EnteringCode_G000+1,R30
                 ; 0000 0A62             CODE_ExecutingDigit = 0;
001d82 93e0 029a 	STS  _CODE_ExecutingDigit_G000,R30
                 ; 0000 0A63 
                 ; 0000 0A64             CODE_TimeLeft = 0;
001d84 93e0 0297 	STS  _CODE_TimeLeft_G000,R30
                 ; 0000 0A65 
                 ; 0000 0A66             CODE_SuccessXYZ[0] = 0;
001d86 93e0 0291 	STS  _CODE_SuccessXYZ_G000,R30
                 ; 0000 0A67             CODE_SuccessXYZ[1] = 0;
                +
001d88 93e0 0292+STS _CODE_SuccessXYZ_G000 + ( 1 ) , R30
                 	__PUTB1MN _CODE_SuccessXYZ_G000,1
                 ; 0000 0A68             CODE_SuccessXYZ[2] = 0;
                +
001d8a 93e0 0293+STS _CODE_SuccessXYZ_G000 + ( 2 ) , R30
                 	__PUTB1MN _CODE_SuccessXYZ_G000,2
                 ; 0000 0A69             lcd_clear();
001d8c 940e 1ed0 	CALL _lcd_clear
                 ; 0000 0A6A             lcd_putsf("    LAIKAS      ");
                +
001d8e e3e7     +LDI R30 , LOW ( 2 * _0x0 + ( 725 ) )
001d8f e0f3     +LDI R31 , HIGH ( 2 * _0x0 + ( 725 ) )
                 	__POINTW1FN _0x0,725
001d90 93fa      	ST   -Y,R31
001d91 93ea      	ST   -Y,R30
001d92 940e 1f1c 	CALL _lcd_putsf
                 ; 0000 0A6B             lcd_putsf("    BAIGESI     ");
                +
001d94 e4e8     +LDI R30 , LOW ( 2 * _0x0 + ( 742 ) )
001d95 e0f3     +LDI R31 , HIGH ( 2 * _0x0 + ( 742 ) )
                 	__POINTW1FN _0x0,742
001d96 93fa      	ST   -Y,R31
001d97 93ea      	ST   -Y,R30
001d98 940e 1f1c 	CALL _lcd_putsf
                 ; 0000 0A6C             delay_ms(1000);
001d9a eee8      	LDI  R30,LOW(1000)
001d9b e0f3      	LDI  R31,HIGH(1000)
001d9c 93fa      	ST   -Y,R31
001d9d 93ea      	ST   -Y,R30
001d9e 940e 1f7e 	CALL _delay_ms
                 ; 0000 0A6D             }
                 ; 0000 0A6E 
                 ; 0000 0A6F             if(DUAL_BUTTON[0]==1){
                 _0x31C:
001da0 91a0 037b 	LDS  R26,_DUAL_BUTTON_S0000010001
001da2 30a1      	CPI  R26,LOW(0x1)
001da3 f531      	BRNE _0x31D
                 ; 0000 0A70             Address[0] = CODE_FailedXYZ[0];
001da4 91e0 0294 	LDS  R30,_CODE_FailedXYZ_G000
001da6 e0f0      	LDI  R31,0
001da7 93e0 0286 	STS  _Address,R30
001da9 93f0 0287 	STS  _Address+1,R31
                 ; 0000 0A71             Address[1] = CODE_FailedXYZ[1];
                +
001dab e8a8     +LDI R26 , LOW ( _Address + ( 2 ) )
001dac e0b2     +LDI R27 , HIGH ( _Address + ( 2 ) )
                 	__POINTW2MN _Address,2
                +
001dad 91e0 0295+LDS R30 , _CODE_FailedXYZ_G000 + ( 1 )
                 	__GETB1MN _CODE_FailedXYZ_G000,1
001daf e0f0      	LDI  R31,0
001db0 93ed      	ST   X+,R30
001db1 93fc      	ST   X,R31
                 ; 0000 0A72             Address[2] = CODE_FailedXYZ[2];
                +
001db2 e8aa     +LDI R26 , LOW ( _Address + ( 4 ) )
001db3 e0b2     +LDI R27 , HIGH ( _Address + ( 4 ) )
                 	__POINTW2MN _Address,4
                +
001db4 91e0 0296+LDS R30 , _CODE_FailedXYZ_G000 + ( 2 )
                 	__GETB1MN _CODE_FailedXYZ_G000,2
001db6 e0f0      	LDI  R31,0
001db7 93ed      	ST   X+,R30
001db8 93fc      	ST   X,R31
                 ; 0000 0A73             CODE_IsEntering = 0;
001db9 e0e0      	LDI  R30,LOW(0)
001dba 93e0 0290 	STS  _CODE_IsEntering_G000,R30
                 ; 0000 0A74 
                 ; 0000 0A75             CODE_EnteringCode = 0;
001dbc 93e0 0298 	STS  _CODE_EnteringCode_G000,R30
001dbe 93e0 0299 	STS  _CODE_EnteringCode_G000+1,R30
                 ; 0000 0A76             CODE_ExecutingDigit = 0;
001dc0 93e0 029a 	STS  _CODE_ExecutingDigit_G000,R30
                 ; 0000 0A77 
                 ; 0000 0A78             CODE_TimeLeft = 0;
001dc2 93e0 0297 	STS  _CODE_TimeLeft_G000,R30
                 ; 0000 0A79 
                 ; 0000 0A7A             CODE_SuccessXYZ[0] = 0;
001dc4 93e0 0291 	STS  _CODE_SuccessXYZ_G000,R30
                 ; 0000 0A7B             CODE_SuccessXYZ[1] = 0;
                +
001dc6 93e0 0292+STS _CODE_SuccessXYZ_G000 + ( 1 ) , R30
                 	__PUTB1MN _CODE_SuccessXYZ_G000,1
                 ; 0000 0A7C             CODE_SuccessXYZ[2] = 0;
                +
001dc8 93e0 0293+STS _CODE_SuccessXYZ_G000 + ( 2 ) , R30
                 	__PUTB1MN _CODE_SuccessXYZ_G000,2
                 ; 0000 0A7D             }
                 ; 0000 0A7E 
                 ; 0000 0A7F 
                 ; 0000 0A80             if(BUTTON[4]==1){
                 _0x31D:
                +
001dca 91a0 0375+LDS R26 , _BUTTON_S0000010001 + ( 4 )
                 	__GETB2MN _BUTTON_S0000010001,4
001dcc 30a1      	CPI  R26,LOW(0x1)
001dcd f011      	BREQ PC+3
001dce 940c 1e33 	JMP _0x31E
                 ; 0000 0A81                 if(CODE_EnteringCode==WhatIsTheCode()){
001dd0 940e 0320 	CALL _WhatIsTheCode
001dd2 91a0 0298 	LDS  R26,_CODE_EnteringCode_G000
001dd4 91b0 0299 	LDS  R27,_CODE_EnteringCode_G000+1
001dd6 17ea      	CP   R30,R26
001dd7 07fb      	CPC  R31,R27
001dd8 f501      	BRNE _0x31F
                 ; 0000 0A82                 Address[0] = CODE_SuccessXYZ[0];
001dd9 91e0 0291 	LDS  R30,_CODE_SuccessXYZ_G000
001ddb e0f0      	LDI  R31,0
001ddc 93e0 0286 	STS  _Address,R30
001dde 93f0 0287 	STS  _Address+1,R31
                 ; 0000 0A83                 Address[1] = CODE_SuccessXYZ[1];
                +
001de0 e8a8     +LDI R26 , LOW ( _Address + ( 2 ) )
001de1 e0b2     +LDI R27 , HIGH ( _Address + ( 2 ) )
                 	__POINTW2MN _Address,2
                +
001de2 91e0 0292+LDS R30 , _CODE_SuccessXYZ_G000 + ( 1 )
                 	__GETB1MN _CODE_SuccessXYZ_G000,1
001de4 e0f0      	LDI  R31,0
001de5 93ed      	ST   X+,R30
001de6 93fc      	ST   X,R31
                 ; 0000 0A84                 Address[2] = CODE_SuccessXYZ[2];
                +
001de7 e8aa     +LDI R26 , LOW ( _Address + ( 4 ) )
001de8 e0b2     +LDI R27 , HIGH ( _Address + ( 4 ) )
                 	__POINTW2MN _Address,4
                +
001de9 91e0 0293+LDS R30 , _CODE_SuccessXYZ_G000 + ( 2 )
                 	__GETB1MN _CODE_SuccessXYZ_G000,2
001deb e0f0      	LDI  R31,0
001dec 93ed      	ST   X+,R30
001ded 93fc      	ST   X,R31
                 ; 0000 0A85                 lcd_clear();
001dee 940e 1ed0 	CALL _lcd_clear
                 ; 0000 0A86                 lcd_putsf("     KODAS      ");
                +
001df0 e5e9     +LDI R30 , LOW ( 2 * _0x0 + ( 759 ) )
001df1 e0f3     +LDI R31 , HIGH ( 2 * _0x0 + ( 759 ) )
                 	__POINTW1FN _0x0,759
001df2 93fa      	ST   -Y,R31
001df3 93ea      	ST   -Y,R30
001df4 940e 1f1c 	CALL _lcd_putsf
                 ; 0000 0A87                 lcd_putsf("   TEISINGAS    ");
                +
001df6 e6ea     +LDI R30 , LOW ( 2 * _0x0 + ( 776 ) )
001df7 e0f3     +LDI R31 , HIGH ( 2 * _0x0 + ( 776 ) )
                 	__POINTW1FN _0x0,776
001df8 c01f      	RJMP _0x350
                 ; 0000 0A88                 delay_ms(1000);
                 ; 0000 0A89                 }
                 ; 0000 0A8A                 else{
                 _0x31F:
                 ; 0000 0A8B                 Address[0] = CODE_FailedXYZ[0];
001df9 91e0 0294 	LDS  R30,_CODE_FailedXYZ_G000
001dfb e0f0      	LDI  R31,0
001dfc 93e0 0286 	STS  _Address,R30
001dfe 93f0 0287 	STS  _Address+1,R31
                 ; 0000 0A8C                 Address[1] = CODE_FailedXYZ[1];
                +
001e00 e8a8     +LDI R26 , LOW ( _Address + ( 2 ) )
001e01 e0b2     +LDI R27 , HIGH ( _Address + ( 2 ) )
                 	__POINTW2MN _Address,2
                +
001e02 91e0 0295+LDS R30 , _CODE_FailedXYZ_G000 + ( 1 )
                 	__GETB1MN _CODE_FailedXYZ_G000,1
001e04 e0f0      	LDI  R31,0
001e05 93ed      	ST   X+,R30
001e06 93fc      	ST   X,R31
                 ; 0000 0A8D                 Address[2] = CODE_FailedXYZ[2];
                +
001e07 e8aa     +LDI R26 , LOW ( _Address + ( 4 ) )
001e08 e0b2     +LDI R27 , HIGH ( _Address + ( 4 ) )
                 	__POINTW2MN _Address,4
                +
001e09 91e0 0296+LDS R30 , _CODE_FailedXYZ_G000 + ( 2 )
                 	__GETB1MN _CODE_FailedXYZ_G000,2
001e0b e0f0      	LDI  R31,0
001e0c 93ed      	ST   X+,R30
001e0d 93fc      	ST   X,R31
                 ; 0000 0A8E                 lcd_clear();
001e0e 940e 1ed0 	CALL _lcd_clear
                 ; 0000 0A8F                 lcd_putsf("     KODAS      ");
                +
001e10 e5e9     +LDI R30 , LOW ( 2 * _0x0 + ( 759 ) )
001e11 e0f3     +LDI R31 , HIGH ( 2 * _0x0 + ( 759 ) )
                 	__POINTW1FN _0x0,759
001e12 93fa      	ST   -Y,R31
001e13 93ea      	ST   -Y,R30
001e14 940e 1f1c 	CALL _lcd_putsf
                 ; 0000 0A90                 lcd_putsf("  NETEISINGAS   ");
                +
001e16 e7eb     +LDI R30 , LOW ( 2 * _0x0 + ( 793 ) )
001e17 e0f3     +LDI R31 , HIGH ( 2 * _0x0 + ( 793 ) )
                 	__POINTW1FN _0x0,793
                 _0x350:
001e18 93fa      	ST   -Y,R31
001e19 93ea      	ST   -Y,R30
001e1a 940e 1f1c 	CALL _lcd_putsf
                 ; 0000 0A91                 delay_ms(1000);
001e1c eee8      	LDI  R30,LOW(1000)
001e1d e0f3      	LDI  R31,HIGH(1000)
001e1e 93fa      	ST   -Y,R31
001e1f 93ea      	ST   -Y,R30
001e20 940e 1f7e 	CALL _delay_ms
                 ; 0000 0A92                 }
                 ; 0000 0A93             CODE_IsEntering = 0;
001e22 e0e0      	LDI  R30,LOW(0)
001e23 93e0 0290 	STS  _CODE_IsEntering_G000,R30
                 ; 0000 0A94 
                 ; 0000 0A95             CODE_EnteringCode = 0;
001e25 93e0 0298 	STS  _CODE_EnteringCode_G000,R30
001e27 93e0 0299 	STS  _CODE_EnteringCode_G000+1,R30
                 ; 0000 0A96             CODE_ExecutingDigit = 0;
001e29 93e0 029a 	STS  _CODE_ExecutingDigit_G000,R30
                 ; 0000 0A97 
                 ; 0000 0A98             CODE_TimeLeft = 0;
001e2b 93e0 0297 	STS  _CODE_TimeLeft_G000,R30
                 ; 0000 0A99 
                 ; 0000 0A9A             CODE_SuccessXYZ[0] = 0;
001e2d 93e0 0291 	STS  _CODE_SuccessXYZ_G000,R30
                 ; 0000 0A9B             CODE_SuccessXYZ[1] = 0;
                +
001e2f 93e0 0292+STS _CODE_SuccessXYZ_G000 + ( 1 ) , R30
                 	__PUTB1MN _CODE_SuccessXYZ_G000,1
                 ; 0000 0A9C             CODE_SuccessXYZ[2] = 0;
                +
001e31 93e0 0293+STS _CODE_SuccessXYZ_G000 + ( 2 ) , R30
                 	__PUTB1MN _CODE_SuccessXYZ_G000,2
                 ; 0000 0A9D             }
                 ; 0000 0A9E         /////////////////////////////////////////////////////////////////////
                 ; 0000 0A9F         }
                 _0x31E:
                 _0x2EC:
                 ; 0000 0AA0 
                 ; 0000 0AA1 
                 ; 0000 0AA2 
                 ; 0000 0AA3         if(RefreshLcd==1){
001e33 e0e1      	LDI  R30,LOW(1)
001e34 15e5      	CP   R30,R5
001e35 f409      	BRNE _0x321
                 ; 0000 0AA4         RefreshLcd = 0;
001e36 2455      	CLR  R5
                 ; 0000 0AA5         }
                 ; 0000 0AA6     //////////////////////////////////////////////////////////////////////////////////
                 ; 0000 0AA7     //////////////////////////////////////////////////////////////////////////////////
                 ; 0000 0AA8     //////////////////////////////////////////////////////////////////////////////////
                 ; 0000 0AA9     Called_1Second = 0;
                 _0x321:
001e37 e0e0      	LDI  R30,LOW(0)
001e38 93e0 036b 	STS  _Called_1Second_S0000010001,R30
                 ; 0000 0AAA     delay_ms(1);
001e3a e0e1      	LDI  R30,LOW(1)
001e3b e0f0      	LDI  R31,HIGH(1)
001e3c 93fa      	ST   -Y,R31
001e3d 93ea      	ST   -Y,R30
001e3e 940e 1f7e 	CALL _delay_ms
                 ; 0000 0AAB     }
001e40 940c 06e5 	JMP  _0xD4
                 ; 0000 0AAC }
                 _0x322:
001e42 cfff      	RJMP _0x322
                 
                 	.DSEG
                 _0xD3:
000260           	.BYTE 0x22
                 
                 	.CSEG
                 _strlenf:
001e43 27aa          clr  r26
001e44 27bb          clr  r27
001e45 91e9          ld   r30,y+
001e46 91f9          ld   r31,y+
                 strlenf0:
001e47 9005      	lpm  r0,z+
001e48 2000          tst  r0
001e49 f011          breq strlenf1
001e4a 9611          adiw r26,1
001e4b cffb          rjmp strlenf0
                 strlenf1:
001e4c 01fd          movw r30,r26
001e4d 9508          ret
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.DSEG
                 
                 	.CSEG
                 _disk_timerproc:
001e4e 931a      	ST   -Y,R17
001e4f 930a      	ST   -Y,R16
001e50 9110 0384 	LDS  R17,_timer1_G101
001e52 3010      	CPI  R17,0
001e53 f019      	BREQ _0x20200FA
001e54 5011      	SUBI R17,LOW(1)
001e55 9310 0384 	STS  _timer1_G101,R17
                 _0x20200FA:
001e57 9110 0385 	LDS  R17,_timer2_G101
001e59 3010      	CPI  R17,0
001e5a f019      	BREQ _0x20200FB
001e5b 5011      	SUBI R17,LOW(1)
001e5c 9310 0385 	STS  _timer2_G101,R17
                 _0x20200FB:
001e5e 9110 0387 	LDS  R17,_pv_S101000B000
001e60 b3e6      	IN   R30,0x16
001e61 70e8      	ANDI R30,LOW(0x8)
001e62 2fae      	MOV  R26,R30
001e63 b3e6      	IN   R30,0x16
001e64 70e4      	ANDI R30,LOW(0x4)
001e65 2bea      	OR   R30,R26
001e66 93e0 0387 	STS  _pv_S101000B000,R30
001e68 17e1      	CP   R30,R17
001e69 f481      	BRNE _0x20200FC
001e6a 9100 0383 	LDS  R16,_status_G101
001e6c 70e8      	ANDI R30,LOW(0x8)
001e6d f011      	BREQ _0x20200FD
001e6e 6004      	ORI  R16,LOW(4)
001e6f c001      	RJMP _0x20200FE
                 _0x20200FD:
001e70 7f0b      	ANDI R16,LOW(251)
                 _0x20200FE:
001e71 91e0 0387 	LDS  R30,_pv_S101000B000
001e73 70e4      	ANDI R30,LOW(0x4)
001e74 f011      	BREQ _0x20200FF
001e75 6003      	ORI  R16,LOW(3)
001e76 c001      	RJMP _0x2020100
                 _0x20200FF:
001e77 7f0d      	ANDI R16,LOW(253)
                 _0x2020100:
001e78 9300 0383 	STS  _status_G101,R16
                 _0x20200FC:
001e7a 9109      	LD   R16,Y+
001e7b 9119      	LD   R17,Y+
001e7c 9508      	RET
                 
                 	.CSEG
                 
                 	.DSEG
                 
                 	.CSEG
                     .equ __lcd_direction=__lcd_port-1
                     .equ __lcd_pin=__lcd_port-2
                     .equ __lcd_rs=0
                     .equ __lcd_rd=1
                     .equ __lcd_enable=2
                     .equ __lcd_busy_flag=7
                 
                 	.DSEG
                 
                 	.CSEG
                 __lcd_delay_G103:
001e7d e0ff          ldi   r31,15
                 __lcd_delay0:
001e7e 95fa          dec   r31
001e7f f7f1          brne  __lcd_delay0
001e80 9508      	RET
                 __lcd_ready:
001e81 b3a4          in    r26,__lcd_direction
001e82 70af          andi  r26,0xf                 ;set as input
001e83 bba4          out   __lcd_direction,r26
001e84 9aa9          sbi   __lcd_port,__lcd_rd     ;RD=1
001e85 98a8          cbi   __lcd_port,__lcd_rs     ;RS=0
                 __lcd_busy:
001e86 dff6      	RCALL __lcd_delay_G103
001e87 9aaa          sbi   __lcd_port,__lcd_enable ;EN=1
001e88 dff4      	RCALL __lcd_delay_G103
001e89 b3a3          in    r26,__lcd_pin
001e8a 98aa          cbi   __lcd_port,__lcd_enable ;EN=0
001e8b dff1      	RCALL __lcd_delay_G103
001e8c 9aaa          sbi   __lcd_port,__lcd_enable ;EN=1
001e8d dfef      	RCALL __lcd_delay_G103
001e8e 98aa          cbi   __lcd_port,__lcd_enable ;EN=0
001e8f fda7          sbrc  r26,__lcd_busy_flag
001e90 cff5          rjmp  __lcd_busy
001e91 9508      	RET
                 __lcd_write_nibble_G103:
001e92 7fa0          andi  r26,0xf0
001e93 2bab          or    r26,r27
001e94 bba5          out   __lcd_port,r26          ;write
001e95 9aaa          sbi   __lcd_port,__lcd_enable ;EN=1
001e96 940e 1e7d 	CALL __lcd_delay_G103
001e98 98aa          cbi   __lcd_port,__lcd_enable ;EN=0
001e99 940e 1e7d 	CALL __lcd_delay_G103
001e9b 9508      	RET
                 __lcd_write_data:
001e9c 98a9          cbi  __lcd_port,__lcd_rd 	  ;RD=0
001e9d b3a4          in    r26,__lcd_direction
001e9e 6fa7          ori   r26,0xf0 | (1<<__lcd_rs) | (1<<__lcd_rd) | (1<<__lcd_enable) ;set as output
001e9f bba4          out   __lcd_direction,r26
001ea0 b3b5          in    r27,__lcd_port
001ea1 70bf          andi  r27,0xf
001ea2 81a8          ld    r26,y
001ea3 dfee      	RCALL __lcd_write_nibble_G103
001ea4 81a8          ld    r26,y
001ea5 95a2          swap  r26
001ea6 dfeb      	RCALL __lcd_write_nibble_G103
001ea7 9aa9          sbi   __lcd_port,__lcd_rd     ;RD=1
001ea8 940c 1f7c 	JMP  _0x2080001
                 __lcd_read_nibble_G103:
001eaa 9aaa          sbi   __lcd_port,__lcd_enable ;EN=1
001eab 940e 1e7d 	CALL __lcd_delay_G103
001ead b3e3          in    r30,__lcd_pin           ;read
001eae 98aa          cbi   __lcd_port,__lcd_enable ;EN=0
001eaf 940e 1e7d 	CALL __lcd_delay_G103
001eb1 7fe0          andi  r30,0xf0
001eb2 9508      	RET
                 _lcd_read_byte0_G103:
001eb3 940e 1e7d 	CALL __lcd_delay_G103
001eb5 dff4      	RCALL __lcd_read_nibble_G103
001eb6 2fae          mov   r26,r30
001eb7 dff2      	RCALL __lcd_read_nibble_G103
001eb8 98a9          cbi   __lcd_port,__lcd_rd     ;RD=0
001eb9 95e2          swap  r30
001eba 2bea          or    r30,r26
001ebb 9508      	RET
                 _lcd_gotoxy:
001ebc 940e 1e81 	CALL __lcd_ready
001ebe 81e8      	LD   R30,Y
001ebf e0f0      	LDI  R31,0
001ec0 57e3      	SUBI R30,LOW(-__base_y_G103)
001ec1 4ffc      	SBCI R31,HIGH(-__base_y_G103)
001ec2 81e0      	LD   R30,Z
001ec3 81a9      	LDD  R26,Y+1
001ec4 0fea      	ADD  R30,R26
001ec5 93ea      	ST   -Y,R30
001ec6 940e 1e9c 	CALL __lcd_write_data
001ec8 81e9      	LDD  R30,Y+1
001ec9 93e0 0391 	STS  __lcd_x,R30
001ecb 81e8      	LD   R30,Y
001ecc 93e0 0392 	STS  __lcd_y,R30
001ece 9622      	ADIW R28,2
001ecf 9508      	RET
                 _lcd_clear:
001ed0 940e 1e81 	CALL __lcd_ready
001ed2 e0e2      	LDI  R30,LOW(2)
001ed3 93ea      	ST   -Y,R30
001ed4 940e 1e9c 	CALL __lcd_write_data
001ed6 940e 1e81 	CALL __lcd_ready
001ed8 e0ec      	LDI  R30,LOW(12)
001ed9 93ea      	ST   -Y,R30
001eda 940e 1e9c 	CALL __lcd_write_data
001edc 940e 1e81 	CALL __lcd_ready
001ede e0e1      	LDI  R30,LOW(1)
001edf 93ea      	ST   -Y,R30
001ee0 940e 1e9c 	CALL __lcd_write_data
001ee2 e0e0      	LDI  R30,LOW(0)
001ee3 93e0 0392 	STS  __lcd_y,R30
001ee5 93e0 0391 	STS  __lcd_x,R30
001ee7 9508      	RET
                 _lcd_putchar:
001ee8 93ef          push r30
001ee9 93ff          push r31
001eea 81a8          ld   r26,y
001eeb 9468          set
001eec 30aa          cpi  r26,10
001eed f039          breq __lcd_putchar1
001eee 94e8          clt
001eef 91e0 0393 	LDS  R30,__lcd_maxx
001ef1 91a0 0391 	LDS  R26,__lcd_x
001ef3 17ae      	CP   R26,R30
001ef4 f060      	BRLO _0x2060004
                 	__lcd_putchar1:
001ef5 91e0 0392 	LDS  R30,__lcd_y
001ef7 5fef      	SUBI R30,-LOW(1)
001ef8 93e0 0392 	STS  __lcd_y,R30
001efa e0e0      	LDI  R30,LOW(0)
001efb 93ea      	ST   -Y,R30
001efc 91e0 0392 	LDS  R30,__lcd_y
001efe 93ea      	ST   -Y,R30
001eff dfbc      	RCALL _lcd_gotoxy
001f00 f056      	brts __lcd_putchar0
                 _0x2060004:
001f01 91e0 0391 	LDS  R30,__lcd_x
001f03 5fef      	SUBI R30,-LOW(1)
001f04 93e0 0391 	STS  __lcd_x,R30
001f06 df7a          rcall __lcd_ready
001f07 9aa8          sbi  __lcd_port,__lcd_rs ;RS=1
001f08 81a8          ld   r26,y
001f09 93aa          st   -y,r26
001f0a df91          rcall __lcd_write_data
                 __lcd_putchar0:
001f0b 91ff          pop  r31
001f0c 91ef          pop  r30
001f0d 940c 1f7c 	JMP  _0x2080001
                 _lcd_puts:
001f0f 931a      	ST   -Y,R17
                 _0x2060005:
001f10 81a9      	LDD  R26,Y+1
001f11 81ba      	LDD  R27,Y+1+1
001f12 91ed      	LD   R30,X+
001f13 83a9      	STD  Y+1,R26
001f14 83ba      	STD  Y+1+1,R27
001f15 2f1e      	MOV  R17,R30
001f16 30e0      	CPI  R30,0
001f17 f019      	BREQ _0x2060007
001f18 931a      	ST   -Y,R17
001f19 dfce      	RCALL _lcd_putchar
001f1a cff5      	RJMP _0x2060005
                 _0x2060007:
001f1b c00e      	RJMP _0x2080002
                 _lcd_putsf:
001f1c 931a      	ST   -Y,R17
                 _0x2060008:
001f1d 81e9      	LDD  R30,Y+1
001f1e 81fa      	LDD  R31,Y+1+1
001f1f 9631      	ADIW R30,1
001f20 83e9      	STD  Y+1,R30
001f21 83fa      	STD  Y+1+1,R31
001f22 9731      	SBIW R30,1
001f23 91e4      	LPM  R30,Z
001f24 2f1e      	MOV  R17,R30
001f25 30e0      	CPI  R30,0
001f26 f019      	BREQ _0x206000A
001f27 931a      	ST   -Y,R17
001f28 dfbf      	RCALL _lcd_putchar
001f29 cff3      	RJMP _0x2060008
                 _0x206000A:
                 _0x2080002:
001f2a 8118      	LDD  R17,Y+0
001f2b 9623      	ADIW R28,3
001f2c 9508      	RET
                 __long_delay_G103:
001f2d 27aa          clr   r26
001f2e 27bb          clr   r27
                 __long_delay0:
001f2f 9711          sbiw  r26,1         ;2 cycles
001f30 f7f1          brne  __long_delay0 ;2 cycles
001f31 9508      	RET
                 __lcd_init_write_G103:
001f32 98a9          cbi  __lcd_port,__lcd_rd 	  ;RD=0
001f33 b3a4          in    r26,__lcd_direction
001f34 6fa7          ori   r26,0xf7                ;set as output
001f35 bba4          out   __lcd_direction,r26
001f36 b3b5          in    r27,__lcd_port
001f37 70bf          andi  r27,0xf
001f38 81a8          ld    r26,y
001f39 940e 1e92 	CALL __lcd_write_nibble_G103
001f3b 9aa9          sbi   __lcd_port,__lcd_rd     ;RD=1
001f3c c03f      	RJMP _0x2080001
                 _lcd_init:
001f3d 98aa          cbi   __lcd_port,__lcd_enable ;EN=0
001f3e 98a8          cbi   __lcd_port,__lcd_rs     ;RS=0
001f3f 81e8      	LD   R30,Y
001f40 93e0 0393 	STS  __lcd_maxx,R30
001f42 58e0      	SUBI R30,-LOW(128)
                +
001f43 93e0 038f+STS __base_y_G103 + ( 2 ) , R30
                 	__PUTB1MN __base_y_G103,2
001f45 81e8      	LD   R30,Y
001f46 54e0      	SUBI R30,-LOW(192)
                +
001f47 93e0 0390+STS __base_y_G103 + ( 3 ) , R30
                 	__PUTB1MN __base_y_G103,3
001f49 dfe3      	RCALL __long_delay_G103
001f4a e3e0      	LDI  R30,LOW(48)
001f4b 93ea      	ST   -Y,R30
001f4c dfe5      	RCALL __lcd_init_write_G103
001f4d dfdf      	RCALL __long_delay_G103
001f4e e3e0      	LDI  R30,LOW(48)
001f4f 93ea      	ST   -Y,R30
001f50 dfe1      	RCALL __lcd_init_write_G103
001f51 dfdb      	RCALL __long_delay_G103
001f52 e3e0      	LDI  R30,LOW(48)
001f53 93ea      	ST   -Y,R30
001f54 dfdd      	RCALL __lcd_init_write_G103
001f55 dfd7      	RCALL __long_delay_G103
001f56 e2e0      	LDI  R30,LOW(32)
001f57 93ea      	ST   -Y,R30
001f58 dfd9      	RCALL __lcd_init_write_G103
001f59 dfd3      	RCALL __long_delay_G103
001f5a e2e8      	LDI  R30,LOW(40)
001f5b 93ea      	ST   -Y,R30
001f5c 940e 1e9c 	CALL __lcd_write_data
001f5e dfce      	RCALL __long_delay_G103
001f5f e0e4      	LDI  R30,LOW(4)
001f60 93ea      	ST   -Y,R30
001f61 940e 1e9c 	CALL __lcd_write_data
001f63 dfc9      	RCALL __long_delay_G103
001f64 e8e5      	LDI  R30,LOW(133)
001f65 93ea      	ST   -Y,R30
001f66 940e 1e9c 	CALL __lcd_write_data
001f68 dfc4      	RCALL __long_delay_G103
001f69 b3a4          in    r26,__lcd_direction
001f6a 70af          andi  r26,0xf                 ;set as input
001f6b bba4          out   __lcd_direction,r26
001f6c 9aa9          sbi   __lcd_port,__lcd_rd     ;RD=1
001f6d 940e 1eb3 	CALL _lcd_read_byte0_G103
001f6f 30e5      	CPI  R30,LOW(0x5)
001f70 f011      	BREQ _0x206000B
001f71 e0e0      	LDI  R30,LOW(0)
001f72 c009      	RJMP _0x2080001
                 _0x206000B:
001f73 940e 1e81 	CALL __lcd_ready
001f75 e0e6      	LDI  R30,LOW(6)
001f76 93ea      	ST   -Y,R30
001f77 940e 1e9c 	CALL __lcd_write_data
001f79 940e 1ed0 	CALL _lcd_clear
001f7b e0e1      	LDI  R30,LOW(1)
                 _0x2080001:
001f7c 9621      	ADIW R28,1
001f7d 9508      	RET
                 
                 	.DSEG
                 _prtc_get_time:
000282           	.BYTE 0x2
                 _prtc_get_date:
000284           	.BYTE 0x2
                 
                 	.ESEG
                 _RealTimeYear:
000000           	.BYTE 0x2
                 _RealTimeMonth:
000002           	.BYTE 0x1
                 _RealTimeDay:
000003           	.BYTE 0x1
                 _RealTimeHour:
000004           	.BYTE 0x1
                 _RealTimeMinute:
000005           	.BYTE 0x1
                 _RealTimeSecond:
000006           	.BYTE 0x1
                 _NewestLog:
000007           	.BYTE 0x1
                 _LogYear:
000008           	.BYTE 0xB4
                 _LogMonth:
0000bc           	.BYTE 0x5A
                 _LogDay:
000116           	.BYTE 0x5A
                 _LogHour:
000170           	.BYTE 0x5A
                 _LogMinute:
0001ca           	.BYTE 0x5A
                 _LogType:
000224           	.BYTE 0x5A
                 _LogData1:
00027e           	.BYTE 0xB4
                 _LogData2:
000332           	.BYTE 0xB4
                 
                 	.DSEG
                 _Address:
000286           	.BYTE 0x6
                 _SOLAR_OUTPUT_TEMP:
00028c           	.BYTE 0x2
                 
                 	.ESEG
                 _LitersPerMinute:
0003e6           	.BYTE 0x2
                 _SolarColectorWattHours:
0003e8           	.BYTE 0x4
                 _WattHoursPerDay:
0003ec           	.BYTE 0x4
                 _MinimumAntifreezeTemp:
0003f0           	.BYTE 0x2
                 _DifferenceBoilerAndSolar:
0003f2           	.BYTE 0x2
                 _MaxDayTemperature:
0003f4           	.BYTE 0x2
                 
                 	.DSEG
                 _PAGRINDINIS_LANGAS:
00028e           	.BYTE 0x1
                 _Call_1Second:
00028f           	.BYTE 0x1
                 _CODE_IsEntering_G000:
000290           	.BYTE 0x1
                 _CODE_SuccessXYZ_G000:
000291           	.BYTE 0x3
                 _CODE_FailedXYZ_G000:
000294           	.BYTE 0x3
                 _CODE_TimeLeft_G000:
000297           	.BYTE 0x1
                 _CODE_EnteringCode_G000:
000298           	.BYTE 0x2
                 _CODE_ExecutingDigit_G000:
00029a           	.BYTE 0x1
                 _DataToSent_G000:
00029b           	.BYTE 0xC8
                 _InteruptTimer_S000000F000:
000363           	.BYTE 0x2
                 _MissTimer_S000000F000:
000365           	.BYTE 0x2
                 _RefreshTimer_S000000F000:
000367           	.BYTE 0x2
                 _MemoryTimer_S000000F000:
000369           	.BYTE 0x1
                 _TERMOSWICH_S0000010001:
00036a           	.BYTE 0x1
                 _Called_1Second_S0000010001:
00036b           	.BYTE 0x1
                 _SolarColectorState_S0000010002:
00036c           	.BYTE 0x1
                 _CHECK_JOB_POWER_S0000010002:
00036d           	.BYTE 0x1
                 _SolarPower_S0000010003:
00036e           	.BYTE 0x2
                 _LOGS_Termoswich_S0000010001:
000370           	.BYTE 0x1
                 _BUTTON_S0000010001:
000371           	.BYTE 0x5
                 _ButtonFilter_S0000010001:
000376           	.BYTE 0x5
                 _DUAL_BUTTON_S0000010001:
00037b           	.BYTE 0x4
                 _DualButtonFilter_S0000010001:
00037f           	.BYTE 0x4
                 _status_G101:
000383           	.BYTE 0x1
                 _timer1_G101:
000384           	.BYTE 0x1
                 _timer2_G101:
000385           	.BYTE 0x1
                 _card_type_G101:
000386           	.BYTE 0x1
                 _pv_S101000B000:
000387           	.BYTE 0x1
                 _FatFs_G102:
000388           	.BYTE 0x2
                 _Fsid_G102:
00038a           	.BYTE 0x2
                 _Drive_G102:
00038c           	.BYTE 0x1
                 __base_y_G103:
00038d           	.BYTE 0x4
                 __lcd_x:
000391           	.BYTE 0x1
                 __lcd_y:
000392           	.BYTE 0x1
                 __lcd_maxx:
000393           	.BYTE 0x1
                 
                 	.CSEG
                 
                 	.CSEG
                 _delay_ms:
001f7e 91e9      	ld   r30,y+
001f7f 91f9      	ld   r31,y+
001f80 9630      	adiw r30,0
001f81 f039      	breq __delay_ms1
                 __delay_ms0:
                +
001f82 ed80     +LDI R24 , LOW ( 0x7D0 )
001f83 e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
001f84 9701     +SBIW R24 , 1
001f85 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
001f86 95a8      	wdr
001f87 9731      	sbiw r30,1
001f88 f7c9      	brne __delay_ms0
                 __delay_ms1:
001f89 9508      	ret
                 
                 __ADDD12:
001f8a 0fea      	ADD  R30,R26
001f8b 1ffb      	ADC  R31,R27
001f8c 1f68      	ADC  R22,R24
001f8d 1f79      	ADC  R23,R25
001f8e 9508      	RET
                 
                 __SUBD21:
001f8f 1bae      	SUB  R26,R30
001f90 0bbf      	SBC  R27,R31
001f91 0b86      	SBC  R24,R22
001f92 0b97      	SBC  R25,R23
001f93 9508      	RET
                 
                 __ANEGW1:
001f94 95f1      	NEG  R31
001f95 95e1      	NEG  R30
001f96 40f0      	SBCI R31,0
001f97 9508      	RET
                 
                 __ANEGD1:
001f98 95f0      	COM  R31
001f99 9560      	COM  R22
001f9a 9570      	COM  R23
001f9b 95e1      	NEG  R30
001f9c 4fff      	SBCI R31,-1
001f9d 4f6f      	SBCI R22,-1
001f9e 4f7f      	SBCI R23,-1
001f9f 9508      	RET
                 
                 __LSRW2:
001fa0 95f6      	LSR  R31
001fa1 95e7      	ROR  R30
001fa2 95f6      	LSR  R31
001fa3 95e7      	ROR  R30
001fa4 9508      	RET
                 
                 __CWD1:
001fa5 2f6f      	MOV  R22,R31
001fa6 0f66      	ADD  R22,R22
001fa7 0b66      	SBC  R22,R22
001fa8 2f76      	MOV  R23,R22
001fa9 9508      	RET
                 
                 __CWD2:
001faa 2f8b      	MOV  R24,R27
001fab 0f88      	ADD  R24,R24
001fac 0b88      	SBC  R24,R24
001fad 2f98      	MOV  R25,R24
001fae 9508      	RET
                 
                 __MULW12U:
001faf 9ffa      	MUL  R31,R26
001fb0 2df0      	MOV  R31,R0
001fb1 9feb      	MUL  R30,R27
001fb2 0df0      	ADD  R31,R0
001fb3 9fea      	MUL  R30,R26
001fb4 2de0      	MOV  R30,R0
001fb5 0df1      	ADD  R31,R1
001fb6 9508      	RET
                 
                 __MULD12U:
001fb7 9f7a      	MUL  R23,R26
001fb8 2d70      	MOV  R23,R0
001fb9 9f6b      	MUL  R22,R27
001fba 0d70      	ADD  R23,R0
001fbb 9ff8      	MUL  R31,R24
001fbc 0d70      	ADD  R23,R0
001fbd 9fe9      	MUL  R30,R25
001fbe 0d70      	ADD  R23,R0
001fbf 9f6a      	MUL  R22,R26
001fc0 2d60      	MOV  R22,R0
001fc1 0d71      	ADD  R23,R1
001fc2 9ffb      	MUL  R31,R27
001fc3 0d60      	ADD  R22,R0
001fc4 1d71      	ADC  R23,R1
001fc5 9fe8      	MUL  R30,R24
001fc6 0d60      	ADD  R22,R0
001fc7 1d71      	ADC  R23,R1
001fc8 2788      	CLR  R24
001fc9 9ffa      	MUL  R31,R26
001fca 2df0      	MOV  R31,R0
001fcb 0d61      	ADD  R22,R1
001fcc 1f78      	ADC  R23,R24
001fcd 9feb      	MUL  R30,R27
001fce 0df0      	ADD  R31,R0
001fcf 1d61      	ADC  R22,R1
001fd0 1f78      	ADC  R23,R24
001fd1 9fea      	MUL  R30,R26
001fd2 2de0      	MOV  R30,R0
001fd3 0df1      	ADD  R31,R1
001fd4 1f68      	ADC  R22,R24
001fd5 1f78      	ADC  R23,R24
001fd6 9508      	RET
                 
                 __MULB1W2U:
001fd7 2f6e      	MOV  R22,R30
001fd8 9f6a      	MUL  R22,R26
001fd9 01f0      	MOVW R30,R0
001fda 9f6b      	MUL  R22,R27
001fdb 0df0      	ADD  R31,R0
001fdc 9508      	RET
                 
                 __MULW12:
001fdd d046      	RCALL __CHKSIGNW
001fde dfd0      	RCALL __MULW12U
001fdf f40e      	BRTC __MULW121
001fe0 dfb3      	RCALL __ANEGW1
                 __MULW121:
001fe1 9508      	RET
                 
                 __MULD12:
001fe2 d04f      	RCALL __CHKSIGND
001fe3 dfd3      	RCALL __MULD12U
001fe4 f40e      	BRTC __MULD121
001fe5 dfb2      	RCALL __ANEGD1
                 __MULD121:
001fe6 9508      	RET
                 
                 __DIVW21U:
001fe7 2400      	CLR  R0
001fe8 2411      	CLR  R1
001fe9 e190      	LDI  R25,16
                 __DIVW21U1:
001fea 0faa      	LSL  R26
001feb 1fbb      	ROL  R27
001fec 1c00      	ROL  R0
001fed 1c11      	ROL  R1
001fee 1a0e      	SUB  R0,R30
001fef 0a1f      	SBC  R1,R31
001ff0 f418      	BRCC __DIVW21U2
001ff1 0e0e      	ADD  R0,R30
001ff2 1e1f      	ADC  R1,R31
001ff3 c001      	RJMP __DIVW21U3
                 __DIVW21U2:
001ff4 60a1      	SBR  R26,1
                 __DIVW21U3:
001ff5 959a      	DEC  R25
001ff6 f799      	BRNE __DIVW21U1
001ff7 01fd      	MOVW R30,R26
001ff8 01d0      	MOVW R26,R0
001ff9 9508      	RET
                 
                 __DIVW21:
001ffa d029      	RCALL __CHKSIGNW
001ffb dfeb      	RCALL __DIVW21U
001ffc f40e      	BRTC __DIVW211
001ffd df96      	RCALL __ANEGW1
                 __DIVW211:
001ffe 9508      	RET
                 
                 __DIVD21U:
001fff 933f      	PUSH R19
002000 934f      	PUSH R20
002001 935f      	PUSH R21
002002 2400      	CLR  R0
002003 2411      	CLR  R1
002004 2744      	CLR  R20
002005 2755      	CLR  R21
002006 e230      	LDI  R19,32
                 __DIVD21U1:
002007 0faa      	LSL  R26
002008 1fbb      	ROL  R27
002009 1f88      	ROL  R24
00200a 1f99      	ROL  R25
00200b 1c00      	ROL  R0
00200c 1c11      	ROL  R1
00200d 1f44      	ROL  R20
00200e 1f55      	ROL  R21
00200f 1a0e      	SUB  R0,R30
002010 0a1f      	SBC  R1,R31
002011 0b46      	SBC  R20,R22
002012 0b57      	SBC  R21,R23
002013 f428      	BRCC __DIVD21U2
002014 0e0e      	ADD  R0,R30
002015 1e1f      	ADC  R1,R31
002016 1f46      	ADC  R20,R22
002017 1f57      	ADC  R21,R23
002018 c001      	RJMP __DIVD21U3
                 __DIVD21U2:
002019 60a1      	SBR  R26,1
                 __DIVD21U3:
00201a 953a      	DEC  R19
00201b f759      	BRNE __DIVD21U1
00201c 01fd      	MOVW R30,R26
00201d 01bc      	MOVW R22,R24
00201e 01d0      	MOVW R26,R0
00201f 01ca      	MOVW R24,R20
002020 915f      	POP  R21
002021 914f      	POP  R20
002022 913f      	POP  R19
002023 9508      	RET
                 
                 __CHKSIGNW:
002024 94e8      	CLT
002025 fff7      	SBRS R31,7
002026 c002      	RJMP __CHKSW1
002027 df6c      	RCALL __ANEGW1
002028 9468      	SET
                 __CHKSW1:
002029 ffb7      	SBRS R27,7
00202a c006      	RJMP __CHKSW2
00202b 95a0      	COM  R26
00202c 95b0      	COM  R27
00202d 9611      	ADIW R26,1
00202e f800      	BLD  R0,0
00202f 9403      	INC  R0
002030 fa00      	BST  R0,0
                 __CHKSW2:
002031 9508      	RET
                 
                 __CHKSIGND:
002032 94e8      	CLT
002033 ff77      	SBRS R23,7
002034 c002      	RJMP __CHKSD1
002035 df62      	RCALL __ANEGD1
002036 9468      	SET
                 __CHKSD1:
002037 ff97      	SBRS R25,7
002038 c00b      	RJMP __CHKSD2
002039 2400      	CLR  R0
00203a 95a0      	COM  R26
00203b 95b0      	COM  R27
00203c 9580      	COM  R24
00203d 9590      	COM  R25
00203e 9611      	ADIW R26,1
00203f 1d80      	ADC  R24,R0
002040 1d90      	ADC  R25,R0
002041 f800      	BLD  R0,0
002042 9403      	INC  R0
002043 fa00      	BST  R0,0
                 __CHKSD2:
002044 9508      	RET
                 
                 __PUTPARD1:
002045 937a      	ST   -Y,R23
002046 936a      	ST   -Y,R22
002047 93fa      	ST   -Y,R31
002048 93ea      	ST   -Y,R30
002049 9508      	RET
                 
                 __EEPROMRDD:
00204a 9612      	ADIW R26,2
00204b d002      	RCALL __EEPROMRDW
00204c 01bf      	MOVW R22,R30
00204d 9712      	SBIW R26,2
                 
                 __EEPROMRDW:
00204e 9611      	ADIW R26,1
00204f d002      	RCALL __EEPROMRDB
002050 2ffe      	MOV  R31,R30
002051 9711      	SBIW R26,1
                 
                 __EEPROMRDB:
002052 99e1      	SBIC EECR,EEWE
002053 cffe      	RJMP __EEPROMRDB
002054 93ff      	PUSH R31
002055 b7ff      	IN   R31,SREG
002056 94f8      	CLI
002057 bbae      	OUT  EEARL,R26
002058 bbbf      	OUT  EEARH,R27
002059 9ae0      	SBI  EECR,EERE
00205a b3ed      	IN   R30,EEDR
00205b bfff      	OUT  SREG,R31
00205c 91ff      	POP  R31
00205d 9508      	RET
                 
                 __EEPROMWRD:
00205e d007      	RCALL __EEPROMWRW
00205f 9612      	ADIW R26,2
002060 010f      	MOVW R0,R30
002061 01fb      	MOVW R30,R22
002062 d003      	RCALL __EEPROMWRW
002063 01f0      	MOVW R30,R0
002064 9712      	SBIW R26,2
002065 9508      	RET
                 
                 __EEPROMWRW:
002066 d007      	RCALL __EEPROMWRB
002067 9611      	ADIW R26,1
002068 93ef      	PUSH R30
002069 2fef      	MOV  R30,R31
00206a d003      	RCALL __EEPROMWRB
00206b 91ef      	POP  R30
00206c 9711      	SBIW R26,1
00206d 9508      	RET
                 
                 __EEPROMWRB:
00206e 9be1      	SBIS EECR,EEWE
00206f c002      	RJMP __EEPROMWRB1
002070 95a8      	WDR
002071 cffc      	RJMP __EEPROMWRB
                 __EEPROMWRB1:
002072 b79f      	IN   R25,SREG
002073 94f8      	CLI
002074 bbae      	OUT  EEARL,R26
002075 bbbf      	OUT  EEARH,R27
002076 9ae0      	SBI  EECR,EERE
002077 b38d      	IN   R24,EEDR
002078 17e8      	CP   R30,R24
002079 f019      	BREQ __EEPROMWRB0
00207a bbed      	OUT  EEDR,R30
00207b 9ae2      	SBI  EECR,EEMWE
00207c 9ae1      	SBI  EECR,EEWE
                 __EEPROMWRB0:
00207d bf9f      	OUT  SREG,R25
00207e 9508      	RET
                 
                 __CPW02:
00207f 2400      	CLR  R0
002080 160a      	CP   R0,R26
002081 060b      	CPC  R0,R27
002082 9508      	RET
                 
                 __CPD21:
002083 17ae      	CP   R26,R30
002084 07bf      	CPC  R27,R31
002085 0786      	CPC  R24,R22
002086 0797      	CPC  R25,R23
002087 9508      	RET
                 
                 __SAVELOCR6:
002088 935a      	ST   -Y,R21
                 __SAVELOCR5:
002089 934a      	ST   -Y,R20
                 __SAVELOCR4:
00208a 933a      	ST   -Y,R19
                 __SAVELOCR3:
00208b 932a      	ST   -Y,R18
                 __SAVELOCR2:
00208c 931a      	ST   -Y,R17
00208d 930a      	ST   -Y,R16
00208e 9508      	RET
                 
                 __LOADLOCR6:
00208f 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
002090 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
002091 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
002092 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
002093 8119      	LDD  R17,Y+1
002094 8108      	LD   R16,Y
002095 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega32 register use summary:
r0 :  87 r1 :  18 r2 :   0 r3 :   0 r4 :  10 r5 :  38 r6 :   2 r7 :   1 
r8 :   3 r9 :   3 r10:   9 r11:   3 r12:  10 r13:   4 r14:   0 r15:   2 
r16:  19 r17:  27 r18:   8 r19:   9 r20:  11 r21:   9 r22: 111 r23:  86 
r24:  55 r25:  33 r26:1196 r27: 580 r28:  47 r29:   1 r30:2193 r31: 816 
x  :  98 y  : 976 z  :  75 
Registers used: 32 out of 35 (91.4%)

ATmega32 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  42 add   :  44 
adiw  :  61 and   :   0 andi  :  13 asr   :   0 bclr  :   0 bld   :   2 
brbc  :   0 brbs  :   0 brcc  :   2 brcs  :   0 break :   0 breq  :  73 
brge  :  43 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :  32 
brlt  :  43 brmi  :   2 brne  : 222 brpl  :   2 brsh  :  30 brtc  :   3 
brts  :   1 brvc  :   0 brvs  :   0 bset  :   0 bst   :   2 call  : 628 
cbi   :  18 cbr   :   0 clc   :   0 clh   :   0 cli   :   3 cln   :   0 
clr   :  30 cls   :   0 clt   :   3 clv   :   0 clz   :   0 com   :   9 
cp    :  57 cpc   : 130 cpi   : 305 cpse  :   0 dec   :   6 des   :   0 
eor   :   0 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   0 ijmp  :   0 
in    :  18 inc   :   3 jmp   :  93 ld    : 158 ldd   : 215 ldi   :1748 
lds   : 458 lpm   :  12 lsl   :  22 lsr   :   2 mov   :  36 movw  : 103 
mul   :  15 muls  :   0 mulsu :   0 neg   :   3 nop   :   0 or    :   4 
ori   :   5 out   :  55 pop   :  10 push  :  10 rcall :  58 ret   :  51 
reti  :   1 rjmp  : 249 rol   :  30 ror   :   2 sbc   :  18 sbci  :  62 
sbi   :  27 sbic  :  16 sbis  :  16 sbiw  : 121 sbr   :   2 sbrc  :  20 
sbrs  :   4 sec   :   0 seh   :   0 sei   :   1 sen   :   0 ser   :  19 
ses   :   0 set   :   3 sev   :   0 sez   :   0 sleep :   0 spm   :   0 
st    : 626 std   : 140 sts   : 179 sub   :  12 subi  : 111 swap  :   2 
tst   :   6 wdr   :   2 
Instructions used: 72 out of 116 (62.1%)

ATmega32 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x00412c  15820    864  16684   32768  50.9%
[.dseg] 0x000060 0x000394      0    308    308    2048  15.0%
[.eseg] 0x000000 0x0003f6      0   1014   1014    1024  99.0%

Assembly complete, 0 errors, 10 warnings
