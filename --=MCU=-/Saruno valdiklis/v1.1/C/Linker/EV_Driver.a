;/*****************************************************
;Project :
;Version :
;Date    : 2014.10.10
;
;Chip type               : ATmega2561
;*****************************************************/
;
;#include <mega2561.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x01
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x0E
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x04
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x06
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x0C
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x0E
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x02
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=smcr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <delay.h>
;
;//#define PORTC.0 PHASE_UP1
;//#define PORTC.0 PHASE_UP2
;//#define PORTC.0 PHASE_UP3
;//#define PORTC.0 PHASE_DOWN1
;//#define PORTC.0 PHASE_DOWN2
;//#define PORTC.0 PHASE_DOWN3
;
;
;
;// Alphanumeric LCD Module functions
;#asm
;PCODE: $0000000D VOL: 0
   .equ __lcd_port=0x12 ;PORTD
;PCODE: $0000000E VOL: 0
;PCODE: $0000000F VOL: 0
; 0000 0018 #endasm
;#include <lcd.h>
;
;
;char NumToIndex(char Num){
; 0000 001C char NumToIndex(char Num){

	.CSEG
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
; 0000 001D     if(Num==0){     return '0';}
;	Num -> Y+0
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
; 0000 001E     else if(Num==1){return '1';}
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
; 0000 001F     else if(Num==2){return '2';}
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
; 0000 0020     else if(Num==3){return '3';}
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
; 0000 0021     else if(Num==4){return '4';}
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
; 0000 0022     else if(Num==5){return '5';}
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
; 0000 0023     else if(Num==6){return '6';}
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
; 0000 0024     else if(Num==7){return '7';}
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
; 0000 0025     else if(Num==8){return '8';}
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
; 0000 0026     else if(Num==9){return '9';}
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
; 0000 0027     else{           return '-';}
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
; 0000 0028 return 0;
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
; 0000 0029 }
;PCODE: $00000068 VOL: 0
;
;char lcd_put_number(char Type, char Lenght, char IsSign,
; 0000 002C 
; 0000 002D                     char NumbersAfterDot,
; 0000 002E 
; 0000 002F                     unsigned long int Number0,
; 0000 0030                     signed long int Number1){
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
; 0000 0031     if(Lenght>0){
;	Type -> Y+11
;	Lenght -> Y+10
;	IsSign -> Y+9
;	NumbersAfterDot -> Y+8
;	Number0 -> Y+4
;	Number1 -> Y+0
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
; 0000 0032     unsigned long int k = 1;
; 0000 0033     unsigned char i;
; 0000 0034         for(i=0;i<Lenght-1;i++) k = k*10;
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
;	Type -> Y+16
;	Lenght -> Y+15
;	IsSign -> Y+14
;	NumbersAfterDot -> Y+13
;	Number0 -> Y+9
;	Number1 -> Y+5
;	k -> Y+1
;	i -> Y+0
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
; 0000 0036 if(Type==0){
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
; 0000 0037         unsigned long int a;
; 0000 0038         unsigned char b;
; 0000 0039         a = Number0;
;PCODE: $00000092 VOL: 0
;	Type -> Y+21
;	Lenght -> Y+20
;	IsSign -> Y+19
;	NumbersAfterDot -> Y+18
;	Number0 -> Y+14
;	Number1 -> Y+10
;	k -> Y+6
;	i -> Y+5
;	a -> Y+1
;	b -> Y+0
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
; 0000 003A 
; 0000 003B             if(IsSign==1){
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
; 0000 003C             lcd_putchar('+');
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
; 0000 003D             }
; 0000 003E 
; 0000 003F             if(a<0){
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
; 0000 0040             a = a*(-1);
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
;PCODE: $000000A1 VOL: 0
; 0000 0041             }
; 0000 0042 
; 0000 0043             if(k*10<a){
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
;PCODE: $000000A7 VOL: 0
;PCODE: $000000A8 VOL: 0
;PCODE: $000000A9 VOL: 0
; 0000 0044             a = k*10 - 1;
;PCODE: $000000AA VOL: 0
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
; 0000 0045             }
; 0000 0046 
; 0000 0047             for(i=0;i<Lenght;i++){
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
;PCODE: $000000B5 VOL: 0
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
; 0000 0048                 if(NumbersAfterDot!=0){
;PCODE: $000000BB VOL: 0
;PCODE: $000000BC VOL: 0
;PCODE: $000000BD VOL: 0
; 0000 0049                     if(Lenght-NumbersAfterDot==i){
;PCODE: $000000BE VOL: 0
;PCODE: $000000BF VOL: 0
;PCODE: $000000C0 VOL: 0
;PCODE: $000000C1 VOL: 0
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
;PCODE: $000000C4 VOL: 0
;PCODE: $000000C5 VOL: 0
;PCODE: $000000C6 VOL: 0
; 0000 004A                     lcd_putchar('.');
;PCODE: $000000C7 VOL: 0
;PCODE: $000000C8 VOL: 0
;PCODE: $000000C9 VOL: 0
; 0000 004B                     }
; 0000 004C                 }
;PCODE: $000000CA VOL: 0
; 0000 004D             b = a/k;
;PCODE: $000000CB VOL: 0
;PCODE: $000000CC VOL: 0
;PCODE: $000000CD VOL: 0
;PCODE: $000000CE VOL: 0
;PCODE: $000000CF VOL: 0
; 0000 004E             lcd_putchar( NumToIndex( b ) );
;PCODE: $000000D0 VOL: 0
;PCODE: $000000D1 VOL: 0
;PCODE: $000000D2 VOL: 0
;PCODE: $000000D3 VOL: 0
;PCODE: $000000D4 VOL: 0
; 0000 004F             a = a - b*k;
;PCODE: $000000D5 VOL: 0
;PCODE: $000000D6 VOL: 0
;PCODE: $000000D7 VOL: 0
;PCODE: $000000D8 VOL: 0
;PCODE: $000000D9 VOL: 0
;PCODE: $000000DA VOL: 0
;PCODE: $000000DB VOL: 0
;PCODE: $000000DC VOL: 0
; 0000 0050             k = k/10;
;PCODE: $000000DD VOL: 0
;PCODE: $000000DE VOL: 0
;PCODE: $000000DF VOL: 0
;PCODE: $000000E0 VOL: 0
; 0000 0051             }
;PCODE: $000000E1 VOL: 0
;PCODE: $000000E2 VOL: 0
;PCODE: $000000E3 VOL: 0
;PCODE: $000000E4 VOL: 0
;PCODE: $000000E5 VOL: 0
;PCODE: $000000E6 VOL: 0
; 0000 0052         return 1;
;PCODE: $000000E7 VOL: 0
;PCODE: $000000E8 VOL: 0
;PCODE: $000000E9 VOL: 0
;PCODE: $000000EA VOL: 0
; 0000 0053         }
;PCODE: $000000EB VOL: 0
; 0000 0054 
; 0000 0055         else if(Type==1){
;PCODE: $000000EC VOL: 0
;PCODE: $000000ED VOL: 0
;PCODE: $000000EE VOL: 0
;PCODE: $000000EF VOL: 0
; 0000 0056         signed long int a;
; 0000 0057         unsigned char b;
; 0000 0058         a = Number1;
;PCODE: $000000F0 VOL: 0
;	Type -> Y+21
;	Lenght -> Y+20
;	IsSign -> Y+19
;	NumbersAfterDot -> Y+18
;	Number0 -> Y+14
;	Number1 -> Y+10
;	k -> Y+6
;	i -> Y+5
;	a -> Y+1
;	b -> Y+0
;PCODE: $000000F1 VOL: 0
;PCODE: $000000F2 VOL: 0
; 0000 0059 
; 0000 005A             if(IsSign==1){
;PCODE: $000000F3 VOL: 0
;PCODE: $000000F4 VOL: 0
;PCODE: $000000F5 VOL: 0
; 0000 005B                 if(a>=0){
;PCODE: $000000F6 VOL: 0
;PCODE: $000000F7 VOL: 0
;PCODE: $000000F8 VOL: 0
; 0000 005C                 lcd_putchar('+');
;PCODE: $000000F9 VOL: 0
;PCODE: $000000FA VOL: 0
;PCODE: $000000FB VOL: 0
; 0000 005D                 }
; 0000 005E                 else{
;PCODE: $000000FC VOL: 0
;PCODE: $000000FD VOL: 0
; 0000 005F                 lcd_putchar('-');
;PCODE: $000000FE VOL: 0
;PCODE: $000000FF VOL: 0
;PCODE: $00000100 VOL: 0
; 0000 0060                 }
;PCODE: $00000101 VOL: 0
; 0000 0061             }
; 0000 0062 
; 0000 0063             if(a<0){
;PCODE: $00000102 VOL: 0
;PCODE: $00000103 VOL: 0
;PCODE: $00000104 VOL: 0
;PCODE: $00000105 VOL: 0
; 0000 0064             a = a*(-1);
;PCODE: $00000106 VOL: 0
;PCODE: $00000107 VOL: 0
;PCODE: $00000108 VOL: 0
;PCODE: $00000109 VOL: 0
; 0000 0065             }
; 0000 0066 
; 0000 0067             if(k*10<a){
;PCODE: $0000010A VOL: 0
;PCODE: $0000010B VOL: 0
;PCODE: $0000010C VOL: 0
;PCODE: $0000010D VOL: 0
;PCODE: $0000010E VOL: 0
;PCODE: $0000010F VOL: 0
;PCODE: $00000110 VOL: 0
;PCODE: $00000111 VOL: 0
; 0000 0068             a = k*10 - 1;
;PCODE: $00000112 VOL: 0
;PCODE: $00000113 VOL: 0
;PCODE: $00000114 VOL: 0
;PCODE: $00000115 VOL: 0
;PCODE: $00000116 VOL: 0
; 0000 0069             }
; 0000 006A 
; 0000 006B             for(i=0;i<Lenght;i++){
;PCODE: $00000117 VOL: 0
;PCODE: $00000118 VOL: 0
;PCODE: $00000119 VOL: 0
;PCODE: $0000011A VOL: 0
;PCODE: $0000011B VOL: 0
;PCODE: $0000011C VOL: 0
;PCODE: $0000011D VOL: 0
;PCODE: $0000011E VOL: 0
;PCODE: $0000011F VOL: 0
;PCODE: $00000120 VOL: 0
;PCODE: $00000121 VOL: 0
;PCODE: $00000122 VOL: 0
; 0000 006C                 if(NumbersAfterDot!=0){
;PCODE: $00000123 VOL: 0
;PCODE: $00000124 VOL: 0
;PCODE: $00000125 VOL: 0
; 0000 006D                     if(Lenght-NumbersAfterDot==i){
;PCODE: $00000126 VOL: 0
;PCODE: $00000127 VOL: 0
;PCODE: $00000128 VOL: 0
;PCODE: $00000129 VOL: 0
;PCODE: $0000012A VOL: 0
;PCODE: $0000012B VOL: 0
;PCODE: $0000012C VOL: 0
;PCODE: $0000012D VOL: 0
;PCODE: $0000012E VOL: 0
; 0000 006E                     lcd_putchar('.');
;PCODE: $0000012F VOL: 0
;PCODE: $00000130 VOL: 0
;PCODE: $00000131 VOL: 0
; 0000 006F                     }
; 0000 0070                 }
;PCODE: $00000132 VOL: 0
; 0000 0071             b = a/k;
;PCODE: $00000133 VOL: 0
;PCODE: $00000134 VOL: 0
;PCODE: $00000135 VOL: 0
;PCODE: $00000136 VOL: 0
;PCODE: $00000137 VOL: 0
; 0000 0072             lcd_putchar( NumToIndex( b ) );
;PCODE: $00000138 VOL: 0
;PCODE: $00000139 VOL: 0
;PCODE: $0000013A VOL: 0
;PCODE: $0000013B VOL: 0
;PCODE: $0000013C VOL: 0
; 0000 0073             a = a - b*k;
;PCODE: $0000013D VOL: 0
;PCODE: $0000013E VOL: 0
;PCODE: $0000013F VOL: 0
;PCODE: $00000140 VOL: 0
;PCODE: $00000141 VOL: 0
;PCODE: $00000142 VOL: 0
;PCODE: $00000143 VOL: 0
;PCODE: $00000144 VOL: 0
; 0000 0074             k = k/10;
;PCODE: $00000145 VOL: 0
;PCODE: $00000146 VOL: 0
;PCODE: $00000147 VOL: 0
;PCODE: $00000148 VOL: 0
; 0000 0075             }
;PCODE: $00000149 VOL: 0
;PCODE: $0000014A VOL: 0
;PCODE: $0000014B VOL: 0
;PCODE: $0000014C VOL: 0
;PCODE: $0000014D VOL: 0
;PCODE: $0000014E VOL: 0
; 0000 0076         return 1;
;PCODE: $0000014F VOL: 0
;PCODE: $00000150 VOL: 0
;PCODE: $00000151 VOL: 0
;PCODE: $00000152 VOL: 0
; 0000 0077         }
;PCODE: $00000153 VOL: 0
; 0000 0078     }
;PCODE: $00000154 VOL: 0
;PCODE: $00000155 VOL: 0
;PCODE: $00000156 VOL: 0
; 0000 0079 return 0;
;PCODE: $00000157 VOL: 0
;PCODE: $00000158 VOL: 0
;PCODE: $00000159 VOL: 0
;PCODE: $0000015A VOL: 0
; 0000 007A }
;PCODE: $0000015B VOL: 0
;
;
;unsigned int Count0, Count1, Count2;
;unsigned char Count3;
;unsigned char PHASE;
;unsigned char ONE_SECOND;
;
;
;// Timer 0 overflow interrupt service routine
;interrupt [TIM0_OVF] void timer0_ovf_isr(void){
; 0000 0084 interrupt [24] void timer0_ovf_isr(void){
;PCODE: $0000015C VOL: 0
;PCODE: $0000015D VOL: 0
; 0000 0085 //Count0++;
; 0000 0086 }
;PCODE: $0000015E VOL: 0
;PCODE: $0000015F VOL: 0
;PCODE: $00000160 VOL: 0
;
;
;
;
;
;unsigned char STATED_FREQUENCY, CYCLE_PHASE;
;unsigned int STATED_PWM, PWM_PHASE, PWM_LENGHT;
;
;
;unsigned char PHASE_PHASE;
;unsigned char PHASE_UP_A, PHASE_UP_B, PHASE_UP_C, PHASE_DOWN_A, PHASE_DOWN_B, PHASE_DOWN_C;
;
;
;interrupt [TIM1_OVF] void timer1_ovf_isr(void){
; 0000 0094 interrupt [21] void timer1_ovf_isr(void){
;PCODE: $00000161 VOL: 0
;PCODE: $00000162 VOL: 0
; 0000 0095 
; 0000 0096 Count0++;
;PCODE: $00000163 VOL: 0
;PCODE: $00000164 VOL: 0
;PCODE: $00000165 VOL: 0
; 0000 0097     if(Count0>=150){
;PCODE: $00000166 VOL: 0
;PCODE: $00000167 VOL: 0
;PCODE: $00000168 VOL: 0
; 0000 0098     Count0 = 0;
;PCODE: $00000169 VOL: 0
; 0000 0099     PHASE_PHASE++;
;PCODE: $0000016A VOL: 0
;PCODE: $0000016B VOL: 0
;PCODE: $0000016C VOL: 0
; 0000 009A         if(PHASE_PHASE>=12){
;PCODE: $0000016D VOL: 0
;PCODE: $0000016E VOL: 0
;PCODE: $0000016F VOL: 0
; 0000 009B         PHASE_PHASE = 0;
;PCODE: $00000170 VOL: 0
;PCODE: $00000171 VOL: 0
; 0000 009C         }
; 0000 009D 
; 0000 009E 
; 0000 009F 
; 0000 00A0         if(PHASE_PHASE==0){
;PCODE: $00000172 VOL: 0
;PCODE: $00000173 VOL: 0
;PCODE: $00000174 VOL: 0
;PCODE: $00000175 VOL: 0
; 0000 00A1         PHASE_UP_A = 0;
;PCODE: $00000176 VOL: 0
;PCODE: $00000177 VOL: 0
; 0000 00A2         PHASE_DOWN_A = 0;
;PCODE: $00000178 VOL: 0
;PCODE: $00000179 VOL: 0
; 0000 00A3         PHASE_UP_B = 0;
;PCODE: $0000017A VOL: 0
;PCODE: $0000017B VOL: 0
; 0000 00A4         //PHASE_DOWN_B = 0;
; 0000 00A5         //PHASE_UP_C = 0;
; 0000 00A6         PHASE_DOWN_C = 0;
;PCODE: $0000017C VOL: 0
;PCODE: $0000017D VOL: 0
; 0000 00A7 
; 0000 00A8         PHASE_DOWN_B = 1;
;PCODE: $0000017E VOL: 0
;PCODE: $0000017F VOL: 0
; 0000 00A9         PHASE_UP_C = 1;
;PCODE: $00000180 VOL: 0
;PCODE: $00000181 VOL: 0
; 0000 00AA         }
; 0000 00AB         else if(PHASE_PHASE==1){
;PCODE: $00000182 VOL: 0
;PCODE: $00000183 VOL: 0
;PCODE: $00000184 VOL: 0
;PCODE: $00000185 VOL: 0
;PCODE: $00000186 VOL: 0
; 0000 00AC         //PHASE_UP_A = 0;
; 0000 00AD         PHASE_DOWN_A = 0;
;PCODE: $00000187 VOL: 0
;PCODE: $00000188 VOL: 0
; 0000 00AE         PHASE_UP_B = 0;
;PCODE: $00000189 VOL: 0
;PCODE: $0000018A VOL: 0
; 0000 00AF         //PHASE_DOWN_B = 0;
; 0000 00B0         //PHASE_UP_C = 0;
; 0000 00B1         PHASE_DOWN_C = 0;
;PCODE: $0000018B VOL: 0
;PCODE: $0000018C VOL: 0
; 0000 00B2 
; 0000 00B3         PHASE_UP_A = 1;
;PCODE: $0000018D VOL: 0
;PCODE: $0000018E VOL: 0
; 0000 00B4         PHASE_DOWN_B = 1;
;PCODE: $0000018F VOL: 0
;PCODE: $00000190 VOL: 0
; 0000 00B5         PHASE_UP_C = 1;
;PCODE: $00000191 VOL: 0
;PCODE: $00000192 VOL: 0
; 0000 00B6         }
; 0000 00B7         else if(PHASE_PHASE==2){
;PCODE: $00000193 VOL: 0
;PCODE: $00000194 VOL: 0
;PCODE: $00000195 VOL: 0
;PCODE: $00000196 VOL: 0
;PCODE: $00000197 VOL: 0
; 0000 00B8         //PHASE_UP_A = 0;
; 0000 00B9         PHASE_DOWN_A = 0;
;PCODE: $00000198 VOL: 0
;PCODE: $00000199 VOL: 0
; 0000 00BA         PHASE_UP_B = 0;
;PCODE: $0000019A VOL: 0
;PCODE: $0000019B VOL: 0
; 0000 00BB         //PHASE_DOWN_B = 0;
; 0000 00BC         PHASE_UP_C = 0;
;PCODE: $0000019C VOL: 0
;PCODE: $0000019D VOL: 0
; 0000 00BD         PHASE_DOWN_C = 0;
;PCODE: $0000019E VOL: 0
;PCODE: $0000019F VOL: 0
; 0000 00BE 
; 0000 00BF         PHASE_UP_A = 1;
;PCODE: $000001A0 VOL: 0
;PCODE: $000001A1 VOL: 0
; 0000 00C0         PHASE_DOWN_B = 1;
;PCODE: $000001A2 VOL: 0
;PCODE: $000001A3 VOL: 0
; 0000 00C1         }
; 0000 00C2         else if(PHASE_PHASE==3){
;PCODE: $000001A4 VOL: 0
;PCODE: $000001A5 VOL: 0
;PCODE: $000001A6 VOL: 0
;PCODE: $000001A7 VOL: 0
;PCODE: $000001A8 VOL: 0
; 0000 00C3         //PHASE_UP_A = 0;
; 0000 00C4         PHASE_DOWN_A = 0;
;PCODE: $000001A9 VOL: 0
;PCODE: $000001AA VOL: 0
; 0000 00C5         PHASE_UP_B = 0;
;PCODE: $000001AB VOL: 0
;PCODE: $000001AC VOL: 0
; 0000 00C6         //PHASE_DOWN_B = 0;
; 0000 00C7         PHASE_UP_C = 0;
;PCODE: $000001AD VOL: 0
;PCODE: $000001AE VOL: 0
; 0000 00C8         //PHASE_DOWN_C = 0;
; 0000 00C9 
; 0000 00CA         PHASE_UP_A = 1;
;PCODE: $000001AF VOL: 0
;PCODE: $000001B0 VOL: 0
; 0000 00CB         PHASE_DOWN_B = 1;
;PCODE: $000001B1 VOL: 0
;PCODE: $000001B2 VOL: 0
; 0000 00CC         PHASE_DOWN_C = 1;
;PCODE: $000001B3 VOL: 0
;PCODE: $000001B4 VOL: 0
; 0000 00CD         }
; 0000 00CE         else if(PHASE_PHASE==4){
;PCODE: $000001B5 VOL: 0
;PCODE: $000001B6 VOL: 0
;PCODE: $000001B7 VOL: 0
;PCODE: $000001B8 VOL: 0
;PCODE: $000001B9 VOL: 0
; 0000 00CF         //PHASE_UP_A = 0;
; 0000 00D0         PHASE_DOWN_A = 0;
;PCODE: $000001BA VOL: 0
;PCODE: $000001BB VOL: 0
; 0000 00D1         PHASE_UP_B = 0;
;PCODE: $000001BC VOL: 0
;PCODE: $000001BD VOL: 0
; 0000 00D2         PHASE_DOWN_B = 0;
;PCODE: $000001BE VOL: 0
;PCODE: $000001BF VOL: 0
; 0000 00D3         PHASE_UP_C = 0;
;PCODE: $000001C0 VOL: 0
;PCODE: $000001C1 VOL: 0
; 0000 00D4         //PHASE_DOWN_C = 0;
; 0000 00D5 
; 0000 00D6         PHASE_UP_A = 1;
;PCODE: $000001C2 VOL: 0
;PCODE: $000001C3 VOL: 0
; 0000 00D7         PHASE_DOWN_C = 1;
;PCODE: $000001C4 VOL: 0
;PCODE: $000001C5 VOL: 0
; 0000 00D8         }
; 0000 00D9         else if(PHASE_PHASE==5){
;PCODE: $000001C6 VOL: 0
;PCODE: $000001C7 VOL: 0
;PCODE: $000001C8 VOL: 0
;PCODE: $000001C9 VOL: 0
;PCODE: $000001CA VOL: 0
; 0000 00DA         //PHASE_UP_A = 0;
; 0000 00DB         PHASE_DOWN_A = 0;
;PCODE: $000001CB VOL: 0
;PCODE: $000001CC VOL: 0
; 0000 00DC         //PHASE_UP_B = 0;
; 0000 00DD         PHASE_DOWN_B = 0;
;PCODE: $000001CD VOL: 0
;PCODE: $000001CE VOL: 0
; 0000 00DE         PHASE_UP_C = 0;
;PCODE: $000001CF VOL: 0
;PCODE: $000001D0 VOL: 0
; 0000 00DF         //PHASE_DOWN_C = 0;
; 0000 00E0 
; 0000 00E1         PHASE_UP_A = 1;
;PCODE: $000001D1 VOL: 0
;PCODE: $000001D2 VOL: 0
; 0000 00E2         PHASE_UP_B = 1;
;PCODE: $000001D3 VOL: 0
;PCODE: $000001D4 VOL: 0
; 0000 00E3         PHASE_DOWN_C = 1;
;PCODE: $000001D5 VOL: 0
;PCODE: $000001D6 VOL: 0
; 0000 00E4         }
; 0000 00E5         else if(PHASE_PHASE==6){
;PCODE: $000001D7 VOL: 0
;PCODE: $000001D8 VOL: 0
;PCODE: $000001D9 VOL: 0
;PCODE: $000001DA VOL: 0
;PCODE: $000001DB VOL: 0
; 0000 00E6         PHASE_UP_A = 0;
;PCODE: $000001DC VOL: 0
;PCODE: $000001DD VOL: 0
; 0000 00E7         PHASE_DOWN_A = 0;
;PCODE: $000001DE VOL: 0
;PCODE: $000001DF VOL: 0
; 0000 00E8         //PHASE_UP_B = 0;
; 0000 00E9         PHASE_DOWN_B = 0;
;PCODE: $000001E0 VOL: 0
;PCODE: $000001E1 VOL: 0
; 0000 00EA         PHASE_UP_C = 0;
;PCODE: $000001E2 VOL: 0
;PCODE: $000001E3 VOL: 0
; 0000 00EB         //PHASE_DOWN_C = 0;
; 0000 00EC 
; 0000 00ED         PHASE_UP_B = 1;
;PCODE: $000001E4 VOL: 0
;PCODE: $000001E5 VOL: 0
; 0000 00EE         PHASE_DOWN_C = 1;
;PCODE: $000001E6 VOL: 0
;PCODE: $000001E7 VOL: 0
; 0000 00EF         }
; 0000 00F0         else if(PHASE_PHASE==7){
;PCODE: $000001E8 VOL: 0
;PCODE: $000001E9 VOL: 0
;PCODE: $000001EA VOL: 0
;PCODE: $000001EB VOL: 0
;PCODE: $000001EC VOL: 0
; 0000 00F1         PHASE_UP_A = 0;
;PCODE: $000001ED VOL: 0
;PCODE: $000001EE VOL: 0
; 0000 00F2         //PHASE_DOWN_A = 0;
; 0000 00F3         //PHASE_UP_B = 0;
; 0000 00F4         PHASE_DOWN_B = 0;
;PCODE: $000001EF VOL: 0
;PCODE: $000001F0 VOL: 0
; 0000 00F5         PHASE_UP_C = 0;
;PCODE: $000001F1 VOL: 0
;PCODE: $000001F2 VOL: 0
; 0000 00F6         //PHASE_DOWN_C = 0;
; 0000 00F7 
; 0000 00F8         PHASE_DOWN_A = 1;
;PCODE: $000001F3 VOL: 0
;PCODE: $000001F4 VOL: 0
; 0000 00F9         PHASE_UP_B = 1;
;PCODE: $000001F5 VOL: 0
;PCODE: $000001F6 VOL: 0
; 0000 00FA         PHASE_DOWN_C = 1;
;PCODE: $000001F7 VOL: 0
;PCODE: $000001F8 VOL: 0
; 0000 00FB         }
; 0000 00FC         else if(PHASE_PHASE==8){
;PCODE: $000001F9 VOL: 0
;PCODE: $000001FA VOL: 0
;PCODE: $000001FB VOL: 0
;PCODE: $000001FC VOL: 0
;PCODE: $000001FD VOL: 0
; 0000 00FD         PHASE_UP_A = 0;
;PCODE: $000001FE VOL: 0
;PCODE: $000001FF VOL: 0
; 0000 00FE         //PHASE_DOWN_A = 0;
; 0000 00FF         //PHASE_UP_B = 0;
; 0000 0100         PHASE_DOWN_B = 0;
;PCODE: $00000200 VOL: 0
;PCODE: $00000201 VOL: 0
; 0000 0101         PHASE_UP_C = 0;
;PCODE: $00000202 VOL: 0
;PCODE: $00000203 VOL: 0
; 0000 0102         PHASE_DOWN_C = 0;
;PCODE: $00000204 VOL: 0
;PCODE: $00000205 VOL: 0
; 0000 0103 
; 0000 0104         PHASE_DOWN_A = 1;
;PCODE: $00000206 VOL: 0
;PCODE: $00000207 VOL: 0
; 0000 0105         PHASE_UP_B = 1;
;PCODE: $00000208 VOL: 0
;PCODE: $00000209 VOL: 0
; 0000 0106         }
; 0000 0107         else if(PHASE_PHASE==9){
;PCODE: $0000020A VOL: 0
;PCODE: $0000020B VOL: 0
;PCODE: $0000020C VOL: 0
;PCODE: $0000020D VOL: 0
;PCODE: $0000020E VOL: 0
; 0000 0108         PHASE_UP_A = 0;
;PCODE: $0000020F VOL: 0
;PCODE: $00000210 VOL: 0
; 0000 0109         //PHASE_DOWN_A = 0;
; 0000 010A         //PHASE_UP_B = 0;
; 0000 010B         PHASE_DOWN_B = 0;
;PCODE: $00000211 VOL: 0
;PCODE: $00000212 VOL: 0
; 0000 010C         //PHASE_UP_C = 0;
; 0000 010D         PHASE_DOWN_C = 0;
;PCODE: $00000213 VOL: 0
;PCODE: $00000214 VOL: 0
; 0000 010E 
; 0000 010F         PHASE_DOWN_A = 1;
;PCODE: $00000215 VOL: 0
;PCODE: $00000216 VOL: 0
; 0000 0110         PHASE_UP_B = 1;
;PCODE: $00000217 VOL: 0
;PCODE: $00000218 VOL: 0
; 0000 0111         PHASE_UP_C = 1;
;PCODE: $00000219 VOL: 0
;PCODE: $0000021A VOL: 0
; 0000 0112         }
; 0000 0113         else if(PHASE_PHASE==10){
;PCODE: $0000021B VOL: 0
;PCODE: $0000021C VOL: 0
;PCODE: $0000021D VOL: 0
;PCODE: $0000021E VOL: 0
;PCODE: $0000021F VOL: 0
; 0000 0114         PHASE_UP_A = 0;
;PCODE: $00000220 VOL: 0
;PCODE: $00000221 VOL: 0
; 0000 0115         //PHASE_DOWN_A = 0;
; 0000 0116         PHASE_UP_B = 0;
;PCODE: $00000222 VOL: 0
;PCODE: $00000223 VOL: 0
; 0000 0117         PHASE_DOWN_B = 0;
;PCODE: $00000224 VOL: 0
;PCODE: $00000225 VOL: 0
; 0000 0118         //PHASE_UP_C = 0;
; 0000 0119         PHASE_DOWN_C = 0;
;PCODE: $00000226 VOL: 0
;PCODE: $00000227 VOL: 0
; 0000 011A 
; 0000 011B         PHASE_DOWN_A = 1;
;PCODE: $00000228 VOL: 0
;PCODE: $00000229 VOL: 0
; 0000 011C         PHASE_UP_C = 1;
;PCODE: $0000022A VOL: 0
;PCODE: $0000022B VOL: 0
; 0000 011D         }
; 0000 011E         else if(PHASE_PHASE==11){
;PCODE: $0000022C VOL: 0
;PCODE: $0000022D VOL: 0
;PCODE: $0000022E VOL: 0
;PCODE: $0000022F VOL: 0
;PCODE: $00000230 VOL: 0
; 0000 011F         PHASE_UP_A = 0;
;PCODE: $00000231 VOL: 0
;PCODE: $00000232 VOL: 0
; 0000 0120         //PHASE_DOWN_A = 0;
; 0000 0121         PHASE_UP_B = 0;
;PCODE: $00000233 VOL: 0
;PCODE: $00000234 VOL: 0
; 0000 0122         //PHASE_DOWN_B = 0;
; 0000 0123         //PHASE_UP_C = 0;
; 0000 0124         PHASE_DOWN_C = 0;
;PCODE: $00000235 VOL: 0
;PCODE: $00000236 VOL: 0
; 0000 0125 
; 0000 0126         PHASE_DOWN_A = 1;
;PCODE: $00000237 VOL: 0
;PCODE: $00000238 VOL: 0
; 0000 0127         PHASE_DOWN_B = 1;
;PCODE: $00000239 VOL: 0
;PCODE: $0000023A VOL: 0
; 0000 0128         PHASE_UP_C = 1;
;PCODE: $0000023B VOL: 0
;PCODE: $0000023C VOL: 0
; 0000 0129         }
; 0000 012A 
; 0000 012B 
; 0000 012C         if(PHASE_DOWN_A==1){
;PCODE: $0000023D VOL: 0
;PCODE: $0000023E VOL: 0
;PCODE: $0000023F VOL: 0
;PCODE: $00000240 VOL: 0
;PCODE: $00000241 VOL: 0
;PCODE: $00000242 VOL: 0
;PCODE: $00000243 VOL: 0
;PCODE: $00000244 VOL: 0
;PCODE: $00000245 VOL: 0
;PCODE: $00000246 VOL: 0
;PCODE: $00000247 VOL: 0
;PCODE: $00000248 VOL: 0
;PCODE: $00000249 VOL: 0
;PCODE: $0000024A VOL: 0
;PCODE: $0000024B VOL: 0
; 0000 012D         PORTC.5 = 0;
;PCODE: $0000024C VOL: 0
;PCODE: $0000024D VOL: 0
; 0000 012E         PORTC.4 = 1;
;PCODE: $0000024E VOL: 0
;PCODE: $0000024F VOL: 0
; 0000 012F         }
; 0000 0130         else{
;PCODE: $00000250 VOL: 0
;PCODE: $00000251 VOL: 0
; 0000 0131         PORTC.4 = 0;
;PCODE: $00000252 VOL: 0
;PCODE: $00000253 VOL: 0
; 0000 0132         }
;PCODE: $00000254 VOL: 0
; 0000 0133 
; 0000 0134         if(PHASE_DOWN_B==1){
;PCODE: $00000255 VOL: 0
;PCODE: $00000256 VOL: 0
;PCODE: $00000257 VOL: 0
; 0000 0135         PORTC.3 = 0;
;PCODE: $00000258 VOL: 0
;PCODE: $00000259 VOL: 0
; 0000 0136         PORTC.2 = 1;
;PCODE: $0000025A VOL: 0
;PCODE: $0000025B VOL: 0
; 0000 0137         }
; 0000 0138         else{
;PCODE: $0000025C VOL: 0
;PCODE: $0000025D VOL: 0
; 0000 0139         PORTC.2 = 0;
;PCODE: $0000025E VOL: 0
;PCODE: $0000025F VOL: 0
; 0000 013A         }
;PCODE: $00000260 VOL: 0
; 0000 013B 
; 0000 013C         if(PHASE_DOWN_C==1){
;PCODE: $00000261 VOL: 0
;PCODE: $00000262 VOL: 0
;PCODE: $00000263 VOL: 0
; 0000 013D         PORTC.1 = 0;
;PCODE: $00000264 VOL: 0
;PCODE: $00000265 VOL: 0
; 0000 013E         PORTC.0 = 1;
;PCODE: $00000266 VOL: 0
;PCODE: $00000267 VOL: 0
; 0000 013F         }
; 0000 0140         else{
;PCODE: $00000268 VOL: 0
;PCODE: $00000269 VOL: 0
; 0000 0141         PORTC.0 = 0;
;PCODE: $0000026A VOL: 0
;PCODE: $0000026B VOL: 0
; 0000 0142         }
;PCODE: $0000026C VOL: 0
; 0000 0143     }
; 0000 0144 
; 0000 0145 
; 0000 0146 
; 0000 0147 Count1++;
;PCODE: $0000026D VOL: 0
;PCODE: $0000026E VOL: 0
;PCODE: $0000026F VOL: 0
;PCODE: $00000270 VOL: 0
; 0000 0148     if(Count1>=10){
;PCODE: $00000271 VOL: 0
;PCODE: $00000272 VOL: 0
;PCODE: $00000273 VOL: 0
; 0000 0149     Count1 = 0;
;PCODE: $00000274 VOL: 0
; 0000 014A     }
; 0000 014B 
; 0000 014C     if(Count1<=5){
;PCODE: $00000275 VOL: 0
;PCODE: $00000276 VOL: 0
;PCODE: $00000277 VOL: 0
;PCODE: $00000278 VOL: 0
; 0000 014D         if(PHASE_UP_A==1){
;PCODE: $00000279 VOL: 0
;PCODE: $0000027A VOL: 0
;PCODE: $0000027B VOL: 0
; 0000 014E         PORTC.5 = 1;
;PCODE: $0000027C VOL: 0
;PCODE: $0000027D VOL: 0
; 0000 014F         }
; 0000 0150         if(PHASE_UP_B==1){
;PCODE: $0000027E VOL: 0
;PCODE: $0000027F VOL: 0
;PCODE: $00000280 VOL: 0
;PCODE: $00000281 VOL: 0
; 0000 0151         PORTC.3 = 1;
;PCODE: $00000282 VOL: 0
;PCODE: $00000283 VOL: 0
; 0000 0152         }
; 0000 0153         if(PHASE_UP_C==1){
;PCODE: $00000284 VOL: 0
;PCODE: $00000285 VOL: 0
;PCODE: $00000286 VOL: 0
;PCODE: $00000287 VOL: 0
; 0000 0154         PORTC.1 = 1;
;PCODE: $00000288 VOL: 0
;PCODE: $00000289 VOL: 0
; 0000 0155         }
; 0000 0156     }
;PCODE: $0000028A VOL: 0
; 0000 0157     else{
;PCODE: $0000028B VOL: 0
;PCODE: $0000028C VOL: 0
; 0000 0158     PORTC.5 = 0;
;PCODE: $0000028D VOL: 0
;PCODE: $0000028E VOL: 0
; 0000 0159     PORTC.3 = 0;
;PCODE: $0000028F VOL: 0
;PCODE: $00000290 VOL: 0
; 0000 015A     PORTC.1 = 0;
;PCODE: $00000291 VOL: 0
;PCODE: $00000292 VOL: 0
; 0000 015B     }
;PCODE: $00000293 VOL: 0
; 0000 015C 
; 0000 015D 
; 0000 015E 
; 0000 015F /*
; 0000 0160     if(PWM_PHASE>=PWM_LENGHT){
; 0000 0161     PWM_PHASE = 0;
; 0000 0162 
; 0000 0163     CYCLE_PHASE++;
; 0000 0164         if(CYCLE_PHASE>12){
; 0000 0165         CYCLE_PHASE = 1;
; 0000 0166         }
; 0000 0167 
; 0000 0168         if(CYCLE_PHASE==1){
; 0000 0169 
; 0000 016A         }
; 0000 016B         else if(CYCLE_PHASE==2){
; 0000 016C 
; 0000 016D         }
; 0000 016E         else if(CYCLE_PHASE==3){
; 0000 016F 
; 0000 0170         }
; 0000 0171         else if(CYCLE_PHASE==4){
; 0000 0172 
; 0000 0173         }
; 0000 0174         else if(CYCLE_PHASE==5){
; 0000 0175 
; 0000 0176         }
; 0000 0177         else if(CYCLE_PHASE==6){
; 0000 0178 
; 0000 0179         }
; 0000 017A         else if(CYCLE_PHASE==7){
; 0000 017B 
; 0000 017C         }
; 0000 017D         else if(CYCLE_PHASE==8){
; 0000 017E 
; 0000 017F         }
; 0000 0180         else if(CYCLE_PHASE==9){
; 0000 0181 
; 0000 0182         }
; 0000 0183         else if(CYCLE_PHASE==10){
; 0000 0184 
; 0000 0185         }
; 0000 0186         else if(CYCLE_PHASE==11){
; 0000 0187 
; 0000 0188         }
; 0000 0189         else if(PHASE==12){
; 0000 018A 
; 0000 018B         }
; 0000 018C     }
; 0000 018D */
; 0000 018E 
; 0000 018F 
; 0000 0190 }
;PCODE: $00000294 VOL: 0
;PCODE: $00000295 VOL: 0
;PCODE: $00000296 VOL: 0
;
;
;interrupt [TIM2_OVF] void timer2_ovf_isr(void)
; 0000 0194 {
;PCODE: $00000297 VOL: 0
;PCODE: $00000298 VOL: 0
; 0000 0195 // Place your code here
; 0000 0196 //Count2++;
; 0000 0197 }
;PCODE: $00000299 VOL: 0
;PCODE: $0000029A VOL: 0
;PCODE: $0000029B VOL: 0
;
;
;
;void main(void){
; 0000 019B void main(void){
;PCODE: $0000029C VOL: 0
; 0000 019C // Declare your local variables here
; 0000 019D 
; 0000 019E // Input/Output Ports initialization
; 0000 019F // Port B initialization
; 0000 01A0 // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 01A1 // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 01A2 PORTB=0x00;
;PCODE: $0000029D VOL: 0
;PCODE: $0000029E VOL: 0
; 0000 01A3 DDRB=0x00;
;PCODE: $0000029F VOL: 0
;PCODE: $000002A0 VOL: 0
; 0000 01A4 
; 0000 01A5 // Port C initialization
; 0000 01A6 // Func6=In Func5=Out Func4=Out Func3=Out Func2=Out Func1=Out Func0=Out
; 0000 01A7 // State6=T State5=0 State4=0 State3=0 State2=0 State1=0 State0=0
; 0000 01A8 PORTC=0x00;
;PCODE: $000002A1 VOL: 0
;PCODE: $000002A2 VOL: 0
; 0000 01A9 DDRC=0x3F;
;PCODE: $000002A3 VOL: 0
;PCODE: $000002A4 VOL: 0
; 0000 01AA 
; 0000 01AB // Port D initialization
; 0000 01AC // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 01AD // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 01AE PORTD=0x00;
;PCODE: $000002A5 VOL: 0
;PCODE: $000002A6 VOL: 0
; 0000 01AF DDRD=0x00;
;PCODE: $000002A7 VOL: 0
;PCODE: $000002A8 VOL: 0
; 0000 01B0 
; 0000 01B1 // Timer/Counter 0 initialization
; 0000 01B2 // Clock source: System Clock
; 0000 01B3 // Clock value: Timer 0 Stopped
; 0000 01B4 //TCCR0=0x00;
; 0000 01B5 //TCNT0=0x00;
; 0000 01B6 
; 0000 01B7 // Timer/Counter 1 initialization
; 0000 01B8 // Clock source: System Clock
; 0000 01B9 // Clock value: 31.250 kHz
; 0000 01BA // Mode: Fast PWM top=OCR1A
; 0000 01BB // OC1A output: Discon.
; 0000 01BC // OC1B output: Discon.
; 0000 01BD // Noise Canceler: Off
; 0000 01BE // Input Capture on Falling Edge
; 0000 01BF // Timer1 Overflow Interrupt: On
; 0000 01C0 // Input Capture Interrupt: Off
; 0000 01C1 // Compare A Match Interrupt: Off
; 0000 01C2 // Compare B Match Interrupt: Off
; 0000 01C3 TCCR1A=0x03;
;PCODE: $000002A9 VOL: 0
;PCODE: $000002AA VOL: 0
; 0000 01C4 TCCR1B=0x1C;
;PCODE: $000002AB VOL: 0
;PCODE: $000002AC VOL: 0
; 0000 01C5 TCNT1H=0x00;
;PCODE: $000002AD VOL: 0
;PCODE: $000002AE VOL: 0
; 0000 01C6 TCNT1L=0x00;
;PCODE: $000002AF VOL: 0
;PCODE: $000002B0 VOL: 0
; 0000 01C7 ICR1H=0x00;
;PCODE: $000002B1 VOL: 0
;PCODE: $000002B2 VOL: 0
; 0000 01C8 ICR1L=0x00;
;PCODE: $000002B3 VOL: 0
;PCODE: $000002B4 VOL: 0
; 0000 01C9 OCR1AH=0x00;
;PCODE: $000002B5 VOL: 0
;PCODE: $000002B6 VOL: 0
; 0000 01CA OCR1AL=0x00;
;PCODE: $000002B7 VOL: 0
;PCODE: $000002B8 VOL: 0
; 0000 01CB OCR1BH=0x00;
;PCODE: $000002B9 VOL: 0
;PCODE: $000002BA VOL: 0
; 0000 01CC OCR1BL=0x00;
;PCODE: $000002BB VOL: 0
;PCODE: $000002BC VOL: 0
; 0000 01CD 
; 0000 01CE // Timer/Counter 2 initialization
; 0000 01CF // Clock source: System Clock
; 0000 01D0 // Clock value: Timer2 Stopped
; 0000 01D1 // Mode: Normal top=FFh
; 0000 01D2 // OC2 output: Disconnected
; 0000 01D3 //ASSR=0x00;
; 0000 01D4 //TCCR2=0x00;
; 0000 01D5 //TCNT2=0x00;
; 0000 01D6 //OCR2=0x00;
; 0000 01D7 
; 0000 01D8 // External Interrupt(s) initialization
; 0000 01D9 // INT0: Off
; 0000 01DA // INT1: Off
; 0000 01DB MCUCR=0x00;
;PCODE: $000002BD VOL: 0
;PCODE: $000002BE VOL: 0
; 0000 01DC 
; 0000 01DD // Timer(s)/Counter(s) Interrupt(s) initialization
; 0000 01DE //TIMSK=0x04;
; 0000 01DF 
; 0000 01E0 // Analog Comparator initialization
; 0000 01E1 // Analog Comparator: Off
; 0000 01E2 // Analog Comparator Input Capture by Timer/Counter 1: Off
; 0000 01E3 ACSR=0x80;
;PCODE: $000002BF VOL: 0
;PCODE: $000002C0 VOL: 0
; 0000 01E4 //SFIOR=0x00;
; 0000 01E5 
; 0000 01E6 // LCD module initialization
; 0000 01E7 lcd_init(20);
;PCODE: $000002C1 VOL: 0
;PCODE: $000002C2 VOL: 0
;PCODE: $000002C3 VOL: 0
; 0000 01E8 
; 0000 01E9 // Global enable interrupts
; 0000 01EA #asm("sei")
;PCODE: $000002C4 VOL: 0
	sei
;PCODE: $000002C5 VOL: 0
; 0000 01EB //OCR1A = 100;
; 0000 01EC 
; 0000 01ED     while(1){
;PCODE: $000002C6 VOL: 0
; 0000 01EE     unsigned int TIME;
; 0000 01EF        // if(ONE_SECOND==1){
; 0000 01F0 
; 0000 01F1         //ONE_SECOND = 0;
; 0000 01F2         /*
; 0000 01F3         Phase++;
; 0000 01F4             if(PHASE>12){
; 0000 01F5             Phase = 1;
; 0000 01F6             }
; 0000 01F7 
; 0000 01F8             if(PHASE==1){
; 0000 01F9 
; 0000 01FA             }
; 0000 01FB             if(PHASE==1){
; 0000 01FC 
; 0000 01FD             }
; 0000 01FE             if(PHASE==1){
; 0000 01FF 
; 0000 0200             }
; 0000 0201             if(PHASE==1){
; 0000 0202 
; 0000 0203             }
; 0000 0204             if(PHASE==1){
; 0000 0205 
; 0000 0206             }
; 0000 0207             if(PHASE==1){
; 0000 0208 
; 0000 0209             }
; 0000 020A             if(PHASE==1){
; 0000 020B 
; 0000 020C             }
; 0000 020D             if(PHASE==1){
; 0000 020E 
; 0000 020F             }
; 0000 0210             if(PHASE==1){
; 0000 0211 
; 0000 0212             }
; 0000 0213             if(PHASE==1){
; 0000 0214 
; 0000 0215             }
; 0000 0216             if(PHASE==1){
; 0000 0217 
; 0000 0218             }
; 0000 0219             if(PHASE==1){
; 0000 021A 
; 0000 021B             }
; 0000 021C             */
; 0000 021D 
; 0000 021E         //lcd_clear();
; 0000 021F         //lcd_gotoxy(0,0);
; 0000 0220         //lcd_put_number(0,5,0,0,Count0,0);
; 0000 0221         //Count0 = 0;
; 0000 0222 
; 0000 0223         //lcd_gotoxy(0,1);
; 0000 0224         //lcd_put_number(0,5,0,0,Count2,0);
; 0000 0225         //Count2 = 0;
; 0000 0226 
; 0000 0227 
; 0000 0228 
; 0000 0229         //Count3++;
; 0000 022A         //lcd_gotoxy(0,2);
; 0000 022B         //lcd_put_number(0,7,0,0,Count3,0);
; 0000 022C 
; 0000 022D 
; 0000 022E         // CPU USAGE ///////////////////////////////////////////////////////////////
; 0000 022F         //Count3 = 0;
; 0000 0230         //lcd_gotoxy(0,3);
; 0000 0231 
; 0000 0232         //lcd_puts("CPU COUNTS: ");
; 0000 0233         //lcd_put_number(0,7,0,0,TIME,0);
; 0000 0234         //TIME = Count3;
; 0000 0235         ////////////////////////////////////////////////////////////////////////////
; 0000 0236        // }
; 0000 0237 
; 0000 0238 
; 0000 0239 
; 0000 023A 
; 0000 023B 
; 0000 023C         //PORTC.0 = 0;// 250 ns
; 0000 023D     //delay_ms(1000);
; 0000 023E     }
;PCODE: $000002C7 VOL: 0
;PCODE: $000002C8 VOL: 0
; 0000 023F }
;PCODE: $000002C9 VOL: 0
;PCODE: $000002CA VOL: 0
;PCODE: $000002CB VOL: 0
