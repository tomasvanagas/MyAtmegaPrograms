
AVRASM ver. 2.1.30  D:\TOMOSIUKS\-=CPU=-\UPS v2 -=C=-\List\UPS_V2.asm Sun Apr 29 16:14:25 2012

D:\TOMOSIUKS\-=CPU=-\UPS v2 -=C=-\List\UPS_V2.asm(1051): warning: Register r5 already defined by the .DEF directive
D:\TOMOSIUKS\-=CPU=-\UPS v2 -=C=-\List\UPS_V2.asm(1052): warning: Register r4 already defined by the .DEF directive
D:\TOMOSIUKS\-=CPU=-\UPS v2 -=C=-\List\UPS_V2.asm(1053): warning: Register r7 already defined by the .DEF directive
D:\TOMOSIUKS\-=CPU=-\UPS v2 -=C=-\List\UPS_V2.asm(1054): warning: Register r6 already defined by the .DEF directive
D:\TOMOSIUKS\-=CPU=-\UPS v2 -=C=-\List\UPS_V2.asm(1055): warning: Register r9 already defined by the .DEF directive
D:\TOMOSIUKS\-=CPU=-\UPS v2 -=C=-\List\UPS_V2.asm(1056): warning: Register r8 already defined by the .DEF directive
D:\TOMOSIUKS\-=CPU=-\UPS v2 -=C=-\List\UPS_V2.asm(1057): warning: Register r11 already defined by the .DEF directive
D:\TOMOSIUKS\-=CPU=-\UPS v2 -=C=-\List\UPS_V2.asm(1058): warning: Register r10 already defined by the .DEF directive
D:\TOMOSIUKS\-=CPU=-\UPS v2 -=C=-\List\UPS_V2.asm(1059): warning: Register r12 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V2.04.4a Advanced
                 ;(C) Copyright 1998-2009 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Chip type                : ATmega16L
                 ;Program type             : Application
                 ;Clock frequency          : 8.000000 MHz
                 ;Memory model             : Small
                 ;Optimize for             : Speed
                 ;(s)printf features       : int, width
                 ;(s)scanf features        : int, width
                 ;External RAM size        : 0
                 ;Data Stack size          : 256 byte(s)
                 ;Heap size                : 0 byte(s)
                 ;Promote 'char' to 'int'  : Yes
                 ;'char' is unsigned       : Yes
                 ;8 bit enums              : Yes
                 ;global 'const' stored in FLASH: No
                 ;Enhanced core instructions    : On
                 ;Smart register allocation     : On
                 ;Automatic register allocation : On
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega16L
                 	#pragma AVRPART MEMORY PROG_FLASH 16384
                 	#pragma AVRPART MEMORY EEPROM 512
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 1024
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X+
                 	LD   R22,X
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _OSC=R5
                 	.DEF _SKIP=R4
                 	.DEF _UPS_STATE=R7
                 	.DEF _OLD_UPS_STATE=R6
                 	.DEF _KRAUTI=R9
                 	.DEF _LOAD=R8
                 	.DEF _BEEPER_OFF=R11
                 	.DEF _RealTime=R10
                 	.DEF _Timer3=R12
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;INTERRUPT VECTORS
000000 940c 0042 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 04dc 	JMP  _timer0_ovf_isr
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 _0x0:
00002a 4548
00002b 4c4c
00002c 004f
00002d 6964      	.DB  0x48,0x45,0x4C,0x4C,0x4F,0x0,0x64,0x69
00002e 6353
00002f 4168
000030 4772
000031 6e69      	.DB  0x53,0x63,0x68,0x41,0x72,0x47,0x69,0x6E
000032 0047
000033 4162
000034 7474
000035 7245      	.DB  0x47,0x0,0x62,0x41,0x74,0x74,0x45,0x72
000036 2059
000037 6f46
000038 4c75
000039 0074      	.DB  0x59,0x20,0x46,0x6F,0x75,0x4C,0x74,0x0
00003a 4163
00003b 746e
00003c 6420
00003d 5369      	.DB  0x63,0x41,0x6E,0x74,0x20,0x64,0x69,0x53
00003e 6863
00003f 7241
000040 4547
D:\TOMOSIUKS\-=CPU=-\UPS v2 -=C=-\List\UPS_V2.asm(1093): warning: .cseg .db misalignment - padding zero byte
000041 0000      	.DB  0x63,0x68,0x41,0x72,0x47,0x45,0x0
                 __RESET:
000042 94f8      	CLI
000043 27ee      	CLR  R30
000044 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000045 e0f1      	LDI  R31,1
000046 bffb      	OUT  GICR,R31
000047 bfeb      	OUT  GICR,R30
000048 bfe5      	OUT  MCUCR,R30
                 
                 ;DISABLE WATCHDOG
000049 e1f8      	LDI  R31,0x18
00004a bdf1      	OUT  WDTCR,R31
00004b bde1      	OUT  WDTCR,R30
                 
                 ;CLEAR R2-R14
00004c e08d      	LDI  R24,(14-2)+1
00004d e0a2      	LDI  R26,2
00004e 27bb      	CLR  R27
                 __CLEAR_REG:
00004f 93ed      	ST   X+,R30
000050 958a      	DEC  R24
000051 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000052 e080      	LDI  R24,LOW(0x400)
000053 e094      	LDI  R25,HIGH(0x400)
000054 e6a0      	LDI  R26,0x60
                 __CLEAR_SRAM:
000055 93ed      	ST   X+,R30
000056 9701      	SBIW R24,1
000057 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;STACK POINTER INITIALIZATION
000058 e5ef      	LDI  R30,LOW(0x45F)
000059 bfed      	OUT  SPL,R30
00005a e0e4      	LDI  R30,HIGH(0x45F)
00005b bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
00005c e6c0      	LDI  R28,LOW(0x160)
00005d e0d1      	LDI  R29,HIGH(0x160)
                 
00005e 940c 04ff 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x160
                 
                 	.CSEG
                 ;/*****************************************************
                 ;Project : UPS v2
                 ;Version : v2
                 ;Date    : 2011-03-25
                 ;Author  : Tomas
                 ;
                 ;Chip type               : ATmega16
                 ;AVR Core Clock frequency: 8.000000 MHz
                 ;Memory model            : Small
                 ;External RAM size       : 0
                 ;Data Stack size         : 512
                 ;*****************************************************/
                 ;
                 ;#include <mega16.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x40
                 	.EQU __sm_mask=0xB0
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0xA0
                 	.EQU __sm_ext_standby=0xB0
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <delay.h>
                 ;#include <string.h>
                 ;
                 ;#define LED_SEGMENT_A PORTC.6
                 ;#define LED_SEGMENT_B PORTC.4
                 ;#define LED_SEGMENT_C PORTC.1
                 ;#define LED_SEGMENT_D PORTC.3
                 ;#define LED_SEGMENT_E PORTD.7
                 ;#define LED_SEGMENT_F PORTC.5
                 ;#define LED_SEGMENT_G PORTC.0
                 ;#define LED_SEGMENT_H PORTC.2
                 ;
                 ;#define LED_BLOCK_0 PORTC.7
                 ;#define LED_BLOCK_1 PORTA.6
                 ;#define LED_BLOCK_2 PORTA.7
                 ;#define LED_BLOCK_3 PORTA.4
                 ;
                 ;
                 ;///////////////////// VARIABLES /////////////////////////////////////
                 ;unsigned char OSC;
                 ;unsigned char BUTTON[4];
                 ;//char BATTERY;
                 ;unsigned char SKIP;
                 ;unsigned char UPS_STATE,OLD_UPS_STATE;
                 ;eeprom unsigned char BATTERY_FOULT;
                 ;unsigned char KRAUTI, LOAD, BEEPER_OFF;
                 ;
                 ;unsigned char LcdText[4], LcdTaskas[4];
                 ;
                 ;unsigned char RealTime;
                 ;
                 ;
                 ;
                 ;
                 ;
                 ;unsigned int Timer3;// Begancio Taskelio Taimeris
                 ;
                 ;eeprom unsigned char Timer4;// Paskutinio Iskrorivimo valandos
                 ;eeprom unsigned char Timer5;// Paskutinio Iskrorivimo minutes
                 ;
                 ;unsigned char Timer7;// Dabartinio Iskrovimo Laiko Sekundziu Skaicius
                 ;unsigned char Timer8;// Dabartinio Iskrovimo Laiko Minuciu Skaicius
                 ;unsigned char Timer9;// Dabartinio Iskrovimo Laiko Valandu Skaicius
                 ;
                 ;unsigned int Timer10;// 2 Mygtuko Uzlaikymo Taimeris
                 ;
                 ;unsigned int Timer11;// 3 Mygtuko Uzlaikymo Taimeris
                 ;
                 ;unsigned int Timer12;// Krovimo taimeris (30 sec)
                 ;
                 ;//unsigned int Timer13;
                 ;
                 ;unsigned int Timer14;// Iskrovimo sustabdymo taimeris
                 ;
                 ;//signed int Timer15;// 1 savaites taimerio sekundes dalis
                 ;
                 ;
                 ;unsigned int Timer19;// "diSchArGE FouLt" taimeris
                 ;
                 ;unsigned int Timer20;// "diSchArGinG" taimeris
                 ;
                 ;//unsigned int Timer22;
                 ;
                 ;//unsigned int Timer23;
                 ;
                 ;unsigned int Timer24;// ms skaicius po kiekvienos iskrovimo laiko sekundes suejimo
                 ;
                 ;unsigned char LangoAdresas;
                 ;unsigned char LanguTrigeris;
                 ;
                 ;unsigned char BATTERY_VOLTAGE;// Baterijos itampa (U x 10)
                 ;unsigned char BATTERY_VOLTAGE_ARCHIVE[10];
                 ;eeprom unsigned char MAX_BATTERY_VOLTAGE;// Baterijos maksimali itampa (Umax x 10)
                 ;eeprom unsigned char MIN_BATTERY_VOLTAGE;// Baterijos minimali itampa (Umin x 10)
                 ;unsigned char ItamposTrigeris1;
                 ;unsigned char ItamposTrigeris2;
                 ;
                 ;/////////////////////////////////////////////////////////////////////
                 ;#define ADC_VREF_TYPE 0x40
                 ;unsigned int read_adc(unsigned char adc_input){
                 ; 0000 005E unsigned int read_adc(unsigned char adc_input){
                 
                 	.CSEG
                 _read_adc:
                 ; 0000 005F ADMUX=adc_input | (ADC_VREF_TYPE & 0xff);
                 ;	adc_input -> Y+0
000060 81e8      	LD   R30,Y
000061 64e0      	ORI  R30,0x40
000062 b9e7      	OUT  0x7,R30
                 ; 0000 0060 delay_us(10);
                +
000063 e18b     +LDI R24 , LOW ( 27 )
                +__DELAY_USB_LOOP :
000064 958a     +DEC R24
000065 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 27
                 ; 0000 0061 ADCSRA|=0x40;
000066 9a36      	SBI  0x6,6
                 ; 0000 0062     while((ADCSRA & 0x10)==0);
                 _0x3:
000067 9b34      	SBIS 0x6,4
000068 cffe      	RJMP _0x3
                 ; 0000 0063 ADCSRA|=0x10;
000069 9a34      	SBI  0x6,4
                 ; 0000 0064 return ADCW;
00006a b1e4      	IN   R30,0x4
00006b b1f5      	IN   R31,0x4+1
00006c c033      	RJMP _0x2020004
                 ; 0000 0065 }
                 ;/////////////////////////////////////////////////////////////////////
                 ;/////////////////////////////////////////////////////////////////////
                 ;char NumToIndex(char Num){
                 ; 0000 0068 char NumToIndex(char Num){
                 _NumToIndex:
                 ; 0000 0069     if(Num==0){     return '0';}
                 ;	Num -> Y+0
00006d 81e8      	LD   R30,Y
00006e 30e0      	CPI  R30,0
00006f f411      	BRNE _0x6
000070 e3e0      	LDI  R30,LOW(48)
000071 c02e      	RJMP _0x2020004
                 ; 0000 006A     else if(Num==1){return '1';}
                 _0x6:
000072 81a8      	LD   R26,Y
000073 30a1      	CPI  R26,LOW(0x1)
000074 f411      	BRNE _0x8
000075 e3e1      	LDI  R30,LOW(49)
000076 c029      	RJMP _0x2020004
                 ; 0000 006B     else if(Num==2){return '2';}
                 _0x8:
000077 81a8      	LD   R26,Y
000078 30a2      	CPI  R26,LOW(0x2)
000079 f411      	BRNE _0xA
00007a e3e2      	LDI  R30,LOW(50)
00007b c024      	RJMP _0x2020004
                 ; 0000 006C     else if(Num==3){return '3';}
                 _0xA:
00007c 81a8      	LD   R26,Y
00007d 30a3      	CPI  R26,LOW(0x3)
00007e f411      	BRNE _0xC
00007f e3e3      	LDI  R30,LOW(51)
000080 c01f      	RJMP _0x2020004
                 ; 0000 006D     else if(Num==4){return '4';}
                 _0xC:
000081 81a8      	LD   R26,Y
000082 30a4      	CPI  R26,LOW(0x4)
000083 f411      	BRNE _0xE
000084 e3e4      	LDI  R30,LOW(52)
000085 c01a      	RJMP _0x2020004
                 ; 0000 006E     else if(Num==5){return '5';}
                 _0xE:
000086 81a8      	LD   R26,Y
000087 30a5      	CPI  R26,LOW(0x5)
000088 f411      	BRNE _0x10
000089 e3e5      	LDI  R30,LOW(53)
00008a c015      	RJMP _0x2020004
                 ; 0000 006F     else if(Num==6){return '6';}
                 _0x10:
00008b 81a8      	LD   R26,Y
00008c 30a6      	CPI  R26,LOW(0x6)
00008d f411      	BRNE _0x12
00008e e3e6      	LDI  R30,LOW(54)
00008f c010      	RJMP _0x2020004
                 ; 0000 0070     else if(Num==7){return '7';}
                 _0x12:
000090 81a8      	LD   R26,Y
000091 30a7      	CPI  R26,LOW(0x7)
000092 f411      	BRNE _0x14
000093 e3e7      	LDI  R30,LOW(55)
000094 c00b      	RJMP _0x2020004
                 ; 0000 0071     else if(Num==8){return '8';}
                 _0x14:
000095 81a8      	LD   R26,Y
000096 30a8      	CPI  R26,LOW(0x8)
000097 f411      	BRNE _0x16
000098 e3e8      	LDI  R30,LOW(56)
000099 c006      	RJMP _0x2020004
                 ; 0000 0072     else if(Num==9){return '9';}
                 _0x16:
00009a 81a8      	LD   R26,Y
00009b 30a9      	CPI  R26,LOW(0x9)
00009c f411      	BRNE _0x18
00009d e3e9      	LDI  R30,LOW(57)
00009e c001      	RJMP _0x2020004
                 ; 0000 0073 return 0;
                 _0x18:
00009f e0e0      	LDI  R30,LOW(0)
                 _0x2020004:
0000a0 9621      	ADIW R28,1
0000a1 9508      	RET
                 ; 0000 0074 }
                 ;
                 ;char UpdateVariableOSC(){
                 ; 0000 0076 char UpdateVariableOSC(){
                 _UpdateVariableOSC:
                 ; 0000 0077 OSC++;
0000a2 9453      	INC  R5
                 ; 0000 0078     if(OSC>=15){
0000a3 e0ef      	LDI  R30,LOW(15)
0000a4 165e      	CP   R5,R30
0000a5 f008      	BRLO _0x19
                 ; 0000 0079     OSC = 0;
0000a6 2455      	CLR  R5
                 ; 0000 007A     }
                 ; 0000 007B return 1;
                 _0x19:
0000a7 c37d      	RJMP _0x2020002
                 ; 0000 007C }
                 ;
                 ;char WhatLcdChannelIsOn(){
                 ; 0000 007E char WhatLcdChannelIsOn(){
                 _WhatLcdChannelIsOn:
                 ; 0000 007F     if(OSC==0){
0000a8 2055      	TST  R5
0000a9 f411      	BRNE _0x1A
                 ; 0000 0080     return 0;
0000aa e0e0      	LDI  R30,LOW(0)
0000ab 9508      	RET
                 ; 0000 0081     }
                 ; 0000 0082     else if(OSC==4){
                 _0x1A:
0000ac e0e4      	LDI  R30,LOW(4)
0000ad 15e5      	CP   R30,R5
0000ae f409      	BRNE _0x1C
                 ; 0000 0083     return 1;
0000af c375      	RJMP _0x2020002
                 ; 0000 0084     }
                 ; 0000 0085     else if(OSC==8){
                 _0x1C:
0000b0 e0e8      	LDI  R30,LOW(8)
0000b1 15e5      	CP   R30,R5
0000b2 f411      	BRNE _0x1E
                 ; 0000 0086     return 2;
0000b3 e0e2      	LDI  R30,LOW(2)
0000b4 9508      	RET
                 ; 0000 0087     }
                 ; 0000 0088     else if(OSC==12){
                 _0x1E:
0000b5 e0ec      	LDI  R30,LOW(12)
0000b6 15e5      	CP   R30,R5
0000b7 f411      	BRNE _0x20
                 ; 0000 0089     return 3;
0000b8 e0e3      	LDI  R30,LOW(3)
0000b9 9508      	RET
                 ; 0000 008A     }
                 ; 0000 008B     else{
                 _0x20:
                 ; 0000 008C     return -1;
                 ; 0000 008D     }
                 ; 0000 008E return -1;
                 _0x2020003:
0000ba efef      	LDI  R30,LOW(255)
0000bb 9508      	RET
                 ; 0000 008F }
                 ;
                 ;char RelayOutputs(){
                 ; 0000 0091 char RelayOutputs(){
                 _RelayOutputs:
                 ; 0000 0092     if(UPS_STATE==2){
0000bc e0e2      	LDI  R30,LOW(2)
0000bd 15e7      	CP   R30,R7
0000be f411      	BRNE _0x22
                 ; 0000 0093     PORTD.3 = 1;
0000bf 9a93      	SBI  0x12,3
                 ; 0000 0094     }
                 ; 0000 0095     else{
0000c0 c001      	RJMP _0x25
                 _0x22:
                 ; 0000 0096     PORTD.3 = 0;
0000c1 9893      	CBI  0x12,3
                 ; 0000 0097     }
                 _0x25:
                 ; 0000 0098 
                 ; 0000 0099     if(KRAUTI==1){
0000c2 e0e1      	LDI  R30,LOW(1)
0000c3 15e9      	CP   R30,R9
0000c4 f411      	BRNE _0x28
                 ; 0000 009A     PORTD.6 = 1;
0000c5 9a96      	SBI  0x12,6
                 ; 0000 009B     }
                 ; 0000 009C     else{
0000c6 c001      	RJMP _0x2B
                 _0x28:
                 ; 0000 009D     PORTD.6 = 0;
0000c7 9896      	CBI  0x12,6
                 ; 0000 009E     }
                 _0x2B:
                 ; 0000 009F KRAUTI = 0;
0000c8 2499      	CLR  R9
                 ; 0000 00A0 
                 ; 0000 00A1     if(LOAD==1){
0000c9 e0e1      	LDI  R30,LOW(1)
0000ca 15e8      	CP   R30,R8
0000cb f411      	BRNE _0x2E
                 ; 0000 00A2     PORTD.5 = 1;
0000cc 9a95      	SBI  0x12,5
                 ; 0000 00A3     }
                 ; 0000 00A4     else{
0000cd c001      	RJMP _0x31
                 _0x2E:
                 ; 0000 00A5     PORTD.5 = 0;
0000ce 9895      	CBI  0x12,5
                 ; 0000 00A6     }
                 _0x31:
                 ; 0000 00A7 LOAD = 0;
0000cf 2488      	CLR  R8
                 ; 0000 00A8 
                 ; 0000 00A9     if(BEEPER_OFF==1){
0000d0 e0e1      	LDI  R30,LOW(1)
0000d1 15eb      	CP   R30,R11
0000d2 f411      	BRNE _0x34
                 ; 0000 00AA     PORTD.4 = 1;
0000d3 9a94      	SBI  0x12,4
                 ; 0000 00AB     }
                 ; 0000 00AC     else{
0000d4 c001      	RJMP _0x37
                 _0x34:
                 ; 0000 00AD     PORTD.4 = 0;
0000d5 9894      	CBI  0x12,4
                 ; 0000 00AE     }
                 _0x37:
                 ; 0000 00AF BEEPER_OFF = 0;
0000d6 24bb      	CLR  R11
                 ; 0000 00B0 
                 ; 0000 00B1 return 1;
0000d7 c34d      	RJMP _0x2020002
                 ; 0000 00B2 }
                 ;
                 ;char UpdateLcd(){
                 ; 0000 00B4 char UpdateLcd(){
                 _UpdateLcd:
                 ; 0000 00B5 char i;
                 ; 0000 00B6 char LcdChannel = WhatLcdChannelIsOn();
                 ; 0000 00B7     if(LcdChannel!=-1){
0000d8 931a      	ST   -Y,R17
0000d9 930a      	ST   -Y,R16
                 ;	i -> R17
                 ;	LcdChannel -> R16
0000da dfcd      	RCALL _WhatLcdChannelIsOn
0000db 2f0e      	MOV  R16,R30
0000dc 2fa0      	MOV  R26,R16
0000dd efef      	LDI  R30,LOW(255)
0000de e0b0      	LDI  R27,0
0000df efff      	SER  R31
0000e0 17ea      	CP   R30,R26
0000e1 07fb      	CPC  R31,R27
0000e2 f411      	BRNE PC+3
0000e3 940c 03e9 	JMP _0x3A
                 ; 0000 00B8     char a=0, b=0, c=0, d=0, e=0, f=0, g=0;
                 ; 0000 00B9     char input = LcdText[LcdChannel];
                 ; 0000 00BA     // Bloko valdymas
                 ; 0000 00BB         if(LcdChannel==0){     LED_BLOCK_0 = 1;LED_BLOCK_1 = 0;LED_BLOCK_2 = 0;LED_BLOCK_3 = 0;}
0000e5 9728      	SBIW R28,8
0000e6 e0e0      	LDI  R30,LOW(0)
0000e7 83e9      	STD  Y+1,R30
0000e8 83ea      	STD  Y+2,R30
0000e9 83eb      	STD  Y+3,R30
0000ea 83ec      	STD  Y+4,R30
0000eb 83ed      	STD  Y+5,R30
0000ec 83ee      	STD  Y+6,R30
0000ed 83ef      	STD  Y+7,R30
                 ;	a -> Y+7
                 ;	b -> Y+6
                 ;	c -> Y+5
                 ;	d -> Y+4
                 ;	e -> Y+3
                 ;	f -> Y+2
                 ;	g -> Y+1
                 ;	input -> Y+0
0000ee 2fe0      	MOV  R30,R16
0000ef e0f0      	LDI  R31,0
0000f0 59ec      	SUBI R30,LOW(-_LcdText)
0000f1 4ffe      	SBCI R31,HIGH(-_LcdText)
0000f2 81e0      	LD   R30,Z
0000f3 83e8      	ST   Y,R30
0000f4 3000      	CPI  R16,0
0000f5 f429      	BRNE _0x3B
0000f6 9aaf      	SBI  0x15,7
0000f7 98de      	CBI  0x1B,6
0000f8 98df      	CBI  0x1B,7
0000f9 98dc      	CBI  0x1B,4
                 ; 0000 00BC         else if(LcdChannel==1){LED_BLOCK_0 = 0;LED_BLOCK_1 = 1;LED_BLOCK_2 = 0;LED_BLOCK_3 = 0;}
0000fa c014      	RJMP _0x44
                 _0x3B:
0000fb 3001      	CPI  R16,1
0000fc f429      	BRNE _0x45
0000fd 98af      	CBI  0x15,7
0000fe 9ade      	SBI  0x1B,6
0000ff 98df      	CBI  0x1B,7
000100 98dc      	CBI  0x1B,4
                 ; 0000 00BD         else if(LcdChannel==2){LED_BLOCK_0 = 0;LED_BLOCK_1 = 0;LED_BLOCK_2 = 1;LED_BLOCK_3 = 0;}
000101 c00d      	RJMP _0x4E
                 _0x45:
000102 3002      	CPI  R16,2
000103 f429      	BRNE _0x4F
000104 98af      	CBI  0x15,7
000105 98de      	CBI  0x1B,6
000106 9adf      	SBI  0x1B,7
000107 98dc      	CBI  0x1B,4
                 ; 0000 00BE         else if(LcdChannel==3){LED_BLOCK_0 = 0;LED_BLOCK_1 = 0;LED_BLOCK_2 = 0;LED_BLOCK_3 = 1;}
000108 c006      	RJMP _0x58
                 _0x4F:
000109 3003      	CPI  R16,3
00010a f421      	BRNE _0x59
00010b 98af      	CBI  0x15,7
00010c 98de      	CBI  0x1B,6
00010d 98df      	CBI  0x1B,7
00010e 9adc      	SBI  0x1B,4
                 ; 0000 00BF 
                 ; 0000 00C0     // Segmentu valdymas
                 ; 0000 00C1         if(input=='0'){
                 _0x59:
                 _0x58:
                 _0x4E:
                 _0x44:
00010f 81a8      	LD   R26,Y
000110 33a0      	CPI  R26,LOW(0x30)
000111 f439      	BRNE _0x62
                 ; 0000 00C2         a = 1;
000112 e0e1      	LDI  R30,LOW(1)
000113 83ef      	STD  Y+7,R30
                 ; 0000 00C3         b = 1;
000114 83ee      	STD  Y+6,R30
                 ; 0000 00C4         c = 1;
000115 83ed      	STD  Y+5,R30
                 ; 0000 00C5         d = 1;
000116 83ec      	STD  Y+4,R30
                 ; 0000 00C6         e = 1;
000117 83eb      	STD  Y+3,R30
                 ; 0000 00C7         f = 1;
000118 c297      	RJMP _0x20F
                 ; 0000 00C8         g = 0;
                 ; 0000 00C9         }
                 ; 0000 00CA         else if(input=='1'){
                 _0x62:
000119 81a8      	LD   R26,Y
00011a 33a1      	CPI  R26,LOW(0x31)
00011b f439      	BRNE _0x64
                 ; 0000 00CB         a = 0;
00011c e0e0      	LDI  R30,LOW(0)
00011d 83ef      	STD  Y+7,R30
                 ; 0000 00CC         b = 1;
00011e e0e1      	LDI  R30,LOW(1)
00011f 83ee      	STD  Y+6,R30
                 ; 0000 00CD         c = 1;
000120 83ed      	STD  Y+5,R30
                 ; 0000 00CE         d = 0;
000121 e0e0      	LDI  R30,LOW(0)
000122 c289      	RJMP _0x210
                 ; 0000 00CF         e = 0;
                 ; 0000 00D0         f = 0;
                 ; 0000 00D1         g = 0;
                 ; 0000 00D2         }
                 ; 0000 00D3         else if(input=='2'){
                 _0x64:
000123 81a8      	LD   R26,Y
000124 33a2      	CPI  R26,LOW(0x32)
000125 f461      	BRNE _0x66
                 ; 0000 00D4         a = 1;
000126 e0e1      	LDI  R30,LOW(1)
000127 83ef      	STD  Y+7,R30
                 ; 0000 00D5         b = 1;
000128 83ee      	STD  Y+6,R30
                 ; 0000 00D6         c = 0;
000129 e0e0      	LDI  R30,LOW(0)
00012a 83ed      	STD  Y+5,R30
                 ; 0000 00D7         d = 1;
00012b e0e1      	LDI  R30,LOW(1)
00012c 83ec      	STD  Y+4,R30
                 ; 0000 00D8         e = 1;
00012d 83eb      	STD  Y+3,R30
                 ; 0000 00D9         f = 0;
00012e e0e0      	LDI  R30,LOW(0)
00012f 83ea      	STD  Y+2,R30
                 ; 0000 00DA         g = 1;
000130 e0e1      	LDI  R30,LOW(1)
000131 c280      	RJMP _0x211
                 ; 0000 00DB         }
                 ; 0000 00DC         else if(input=='3'){
                 _0x66:
000132 81a8      	LD   R26,Y
000133 33a3      	CPI  R26,LOW(0x33)
000134 f451      	BRNE _0x68
                 ; 0000 00DD         a = 1;
000135 e0e1      	LDI  R30,LOW(1)
000136 83ef      	STD  Y+7,R30
                 ; 0000 00DE         b = 1;
000137 83ee      	STD  Y+6,R30
                 ; 0000 00DF         c = 1;
000138 83ed      	STD  Y+5,R30
                 ; 0000 00E0         d = 1;
000139 83ec      	STD  Y+4,R30
                 ; 0000 00E1         e = 0;
00013a e0e0      	LDI  R30,LOW(0)
00013b 83eb      	STD  Y+3,R30
                 ; 0000 00E2         f = 0;
00013c 83ea      	STD  Y+2,R30
                 ; 0000 00E3         g = 1;
00013d e0e1      	LDI  R30,LOW(1)
00013e c273      	RJMP _0x211
                 ; 0000 00E4         }
                 ; 0000 00E5         else if(input=='4'){
                 _0x68:
00013f 81a8      	LD   R26,Y
000140 33a4      	CPI  R26,LOW(0x34)
000141 f459      	BRNE _0x6A
                 ; 0000 00E6         a = 0;
000142 e0e0      	LDI  R30,LOW(0)
000143 83ef      	STD  Y+7,R30
                 ; 0000 00E7         b = 1;
000144 e0e1      	LDI  R30,LOW(1)
000145 83ee      	STD  Y+6,R30
                 ; 0000 00E8         c = 1;
000146 83ed      	STD  Y+5,R30
                 ; 0000 00E9         d = 0;
000147 e0e0      	LDI  R30,LOW(0)
000148 83ec      	STD  Y+4,R30
                 ; 0000 00EA         e = 0;
000149 83eb      	STD  Y+3,R30
                 ; 0000 00EB         f = 1;
00014a e0e1      	LDI  R30,LOW(1)
00014b 83ea      	STD  Y+2,R30
                 ; 0000 00EC         g = 1;
00014c c265      	RJMP _0x211
                 ; 0000 00ED         }
                 ; 0000 00EE         else if(input=='5'){
                 _0x6A:
00014d 81a8      	LD   R26,Y
00014e 33a5      	CPI  R26,LOW(0x35)
00014f f461      	BRNE _0x6C
                 ; 0000 00EF         a = 1;
000150 e0e1      	LDI  R30,LOW(1)
000151 83ef      	STD  Y+7,R30
                 ; 0000 00F0         b = 0;
000152 e0e0      	LDI  R30,LOW(0)
000153 83ee      	STD  Y+6,R30
                 ; 0000 00F1         c = 1;
000154 e0e1      	LDI  R30,LOW(1)
000155 83ed      	STD  Y+5,R30
                 ; 0000 00F2         d = 1;
000156 83ec      	STD  Y+4,R30
                 ; 0000 00F3         e = 0;
000157 e0e0      	LDI  R30,LOW(0)
000158 83eb      	STD  Y+3,R30
                 ; 0000 00F4         f = 1;
000159 e0e1      	LDI  R30,LOW(1)
00015a 83ea      	STD  Y+2,R30
                 ; 0000 00F5         g = 1;
00015b c256      	RJMP _0x211
                 ; 0000 00F6         }
                 ; 0000 00F7         else if(input=='6'){
                 _0x6C:
00015c 81a8      	LD   R26,Y
00015d 33a6      	CPI  R26,LOW(0x36)
00015e f451      	BRNE _0x6E
                 ; 0000 00F8         a = 1;
00015f e0e1      	LDI  R30,LOW(1)
000160 83ef      	STD  Y+7,R30
                 ; 0000 00F9         b = 0;
000161 e0e0      	LDI  R30,LOW(0)
000162 83ee      	STD  Y+6,R30
                 ; 0000 00FA         c = 1;
000163 e0e1      	LDI  R30,LOW(1)
000164 83ed      	STD  Y+5,R30
                 ; 0000 00FB         d = 1;
000165 83ec      	STD  Y+4,R30
                 ; 0000 00FC         e = 1;
000166 83eb      	STD  Y+3,R30
                 ; 0000 00FD         f = 1;
000167 83ea      	STD  Y+2,R30
                 ; 0000 00FE         g = 1;
000168 c249      	RJMP _0x211
                 ; 0000 00FF         }
                 ; 0000 0100         else if(input=='7'){
                 _0x6E:
000169 81a8      	LD   R26,Y
00016a 33a7      	CPI  R26,LOW(0x37)
00016b f431      	BRNE _0x70
                 ; 0000 0101         a = 1;
00016c e0e1      	LDI  R30,LOW(1)
00016d 83ef      	STD  Y+7,R30
                 ; 0000 0102         b = 1;
00016e 83ee      	STD  Y+6,R30
                 ; 0000 0103         c = 1;
00016f 83ed      	STD  Y+5,R30
                 ; 0000 0104         d = 0;
000170 e0e0      	LDI  R30,LOW(0)
000171 c23a      	RJMP _0x210
                 ; 0000 0105         e = 0;
                 ; 0000 0106         f = 0;
                 ; 0000 0107         g = 0;
                 ; 0000 0108         }
                 ; 0000 0109         else if(input=='8'){
                 _0x70:
000172 81a8      	LD   R26,Y
000173 33a8      	CPI  R26,LOW(0x38)
000174 f441      	BRNE _0x72
                 ; 0000 010A         a = 1;
000175 e0e1      	LDI  R30,LOW(1)
000176 83ef      	STD  Y+7,R30
                 ; 0000 010B         b = 1;
000177 83ee      	STD  Y+6,R30
                 ; 0000 010C         c = 1;
000178 83ed      	STD  Y+5,R30
                 ; 0000 010D         d = 1;
000179 83ec      	STD  Y+4,R30
                 ; 0000 010E         e = 1;
00017a 83eb      	STD  Y+3,R30
                 ; 0000 010F         f = 1;
00017b 83ea      	STD  Y+2,R30
                 ; 0000 0110         g = 1;
00017c c235      	RJMP _0x211
                 ; 0000 0111         }
                 ; 0000 0112         else if(input=='9'){
                 _0x72:
00017d 81a8      	LD   R26,Y
00017e 33a9      	CPI  R26,LOW(0x39)
00017f f451      	BRNE _0x74
                 ; 0000 0113         a = 1;
000180 e0e1      	LDI  R30,LOW(1)
000181 83ef      	STD  Y+7,R30
                 ; 0000 0114         b = 1;
000182 83ee      	STD  Y+6,R30
                 ; 0000 0115         c = 1;
000183 83ed      	STD  Y+5,R30
                 ; 0000 0116         d = 1;
000184 83ec      	STD  Y+4,R30
                 ; 0000 0117         e = 0;
000185 e0e0      	LDI  R30,LOW(0)
000186 83eb      	STD  Y+3,R30
                 ; 0000 0118         f = 1;
000187 e0e1      	LDI  R30,LOW(1)
000188 83ea      	STD  Y+2,R30
                 ; 0000 0119         g = 1;
000189 c228      	RJMP _0x211
                 ; 0000 011A         }
                 ; 0000 011B         else if(input=='a'){
                 _0x74:
00018a 81a8      	LD   R26,Y
00018b 36a1      	CPI  R26,LOW(0x61)
00018c f429      	BRNE _0x76
                 ; 0000 011C         a = 0;
00018d e0e0      	LDI  R30,LOW(0)
00018e 83ef      	STD  Y+7,R30
                 ; 0000 011D         b = 0;
00018f 83ee      	STD  Y+6,R30
                 ; 0000 011E         c = 0;
000190 83ed      	STD  Y+5,R30
                 ; 0000 011F         d = 0;
000191 c21a      	RJMP _0x210
                 ; 0000 0120         e = 0;
                 ; 0000 0121         f = 0;
                 ; 0000 0122         g = 0;
                 ; 0000 0123         }
                 ; 0000 0124         else if(input=='A'){
                 _0x76:
000192 81a8      	LD   R26,Y
000193 34a1      	CPI  R26,LOW(0x41)
000194 f451      	BRNE _0x78
                 ; 0000 0125         a = 1;
000195 e0e1      	LDI  R30,LOW(1)
000196 83ef      	STD  Y+7,R30
                 ; 0000 0126         b = 1;
000197 83ee      	STD  Y+6,R30
                 ; 0000 0127         c = 1;
000198 83ed      	STD  Y+5,R30
                 ; 0000 0128         d = 0;
000199 e0e0      	LDI  R30,LOW(0)
00019a 83ec      	STD  Y+4,R30
                 ; 0000 0129         e = 1;
00019b e0e1      	LDI  R30,LOW(1)
00019c 83eb      	STD  Y+3,R30
                 ; 0000 012A         f = 1;
00019d 83ea      	STD  Y+2,R30
                 ; 0000 012B         g = 1;
00019e c213      	RJMP _0x211
                 ; 0000 012C         }
                 ; 0000 012D         else if(input=='b'){
                 _0x78:
00019f 81a8      	LD   R26,Y
0001a0 36a2      	CPI  R26,LOW(0x62)
0001a1 f449      	BRNE _0x7A
                 ; 0000 012E         a = 0;
0001a2 e0e0      	LDI  R30,LOW(0)
0001a3 83ef      	STD  Y+7,R30
                 ; 0000 012F         b = 0;
0001a4 83ee      	STD  Y+6,R30
                 ; 0000 0130         c = 1;
0001a5 e0e1      	LDI  R30,LOW(1)
0001a6 83ed      	STD  Y+5,R30
                 ; 0000 0131         d = 1;
0001a7 83ec      	STD  Y+4,R30
                 ; 0000 0132         e = 1;
0001a8 83eb      	STD  Y+3,R30
                 ; 0000 0133         f = 1;
0001a9 83ea      	STD  Y+2,R30
                 ; 0000 0134         g = 1;
0001aa c207      	RJMP _0x211
                 ; 0000 0135         }
                 ; 0000 0136         else if(input=='B'){
                 _0x7A:
0001ab 81a8      	LD   R26,Y
0001ac 34a2      	CPI  R26,LOW(0x42)
0001ad f429      	BRNE _0x7C
                 ; 0000 0137         a = 0;
0001ae e0e0      	LDI  R30,LOW(0)
0001af 83ef      	STD  Y+7,R30
                 ; 0000 0138         b = 0;
0001b0 83ee      	STD  Y+6,R30
                 ; 0000 0139         c = 0;
0001b1 83ed      	STD  Y+5,R30
                 ; 0000 013A         d = 0;
0001b2 c1f9      	RJMP _0x210
                 ; 0000 013B         e = 0;
                 ; 0000 013C         f = 0;
                 ; 0000 013D         g = 0;
                 ; 0000 013E         }
                 ; 0000 013F         else if(input=='c'){
                 _0x7C:
0001b3 81a8      	LD   R26,Y
0001b4 36a3      	CPI  R26,LOW(0x63)
0001b5 f459      	BRNE _0x7E
                 ; 0000 0140         a = 0;
0001b6 e0e0      	LDI  R30,LOW(0)
0001b7 83ef      	STD  Y+7,R30
                 ; 0000 0141         b = 0;
0001b8 83ee      	STD  Y+6,R30
                 ; 0000 0142         c = 0;
0001b9 83ed      	STD  Y+5,R30
                 ; 0000 0143         d = 1;
0001ba e0e1      	LDI  R30,LOW(1)
0001bb 83ec      	STD  Y+4,R30
                 ; 0000 0144         e = 1;
0001bc 83eb      	STD  Y+3,R30
                 ; 0000 0145         f = 0;
0001bd e0e0      	LDI  R30,LOW(0)
0001be 83ea      	STD  Y+2,R30
                 ; 0000 0146         g = 1;
0001bf e0e1      	LDI  R30,LOW(1)
0001c0 c1f1      	RJMP _0x211
                 ; 0000 0147         }
                 ; 0000 0148         else if(input=='C'){
                 _0x7E:
0001c1 81a8      	LD   R26,Y
0001c2 34a3      	CPI  R26,LOW(0x43)
0001c3 f451      	BRNE _0x80
                 ; 0000 0149         a = 1;
0001c4 e0e1      	LDI  R30,LOW(1)
0001c5 83ef      	STD  Y+7,R30
                 ; 0000 014A         b = 0;
0001c6 e0e0      	LDI  R30,LOW(0)
0001c7 83ee      	STD  Y+6,R30
                 ; 0000 014B         c = 0;
0001c8 83ed      	STD  Y+5,R30
                 ; 0000 014C         d = 1;
0001c9 e0e1      	LDI  R30,LOW(1)
0001ca 83ec      	STD  Y+4,R30
                 ; 0000 014D         e = 1;
0001cb 83eb      	STD  Y+3,R30
                 ; 0000 014E         f = 1;
0001cc 83ea      	STD  Y+2,R30
                 ; 0000 014F         g = 1;
0001cd c1e4      	RJMP _0x211
                 ; 0000 0150         }
                 ; 0000 0151         else if(input=='d'){
                 _0x80:
0001ce 81a8      	LD   R26,Y
0001cf 36a4      	CPI  R26,LOW(0x64)
0001d0 f459      	BRNE _0x82
                 ; 0000 0152         a = 0;
0001d1 e0e0      	LDI  R30,LOW(0)
0001d2 83ef      	STD  Y+7,R30
                 ; 0000 0153         b = 1;
0001d3 e0e1      	LDI  R30,LOW(1)
0001d4 83ee      	STD  Y+6,R30
                 ; 0000 0154         c = 1;
0001d5 83ed      	STD  Y+5,R30
                 ; 0000 0155         d = 1;
0001d6 83ec      	STD  Y+4,R30
                 ; 0000 0156         e = 1;
0001d7 83eb      	STD  Y+3,R30
                 ; 0000 0157         f = 0;
0001d8 e0e0      	LDI  R30,LOW(0)
0001d9 83ea      	STD  Y+2,R30
                 ; 0000 0158         g = 1;
0001da e0e1      	LDI  R30,LOW(1)
0001db c1d6      	RJMP _0x211
                 ; 0000 0159         }
                 ; 0000 015A         else if(input=='D'){
                 _0x82:
0001dc 81a8      	LD   R26,Y
0001dd 34a4      	CPI  R26,LOW(0x44)
0001de f429      	BRNE _0x84
                 ; 0000 015B         a = 0;
0001df e0e0      	LDI  R30,LOW(0)
0001e0 83ef      	STD  Y+7,R30
                 ; 0000 015C         b = 0;
0001e1 83ee      	STD  Y+6,R30
                 ; 0000 015D         c = 0;
0001e2 83ed      	STD  Y+5,R30
                 ; 0000 015E         d = 0;
0001e3 c1c8      	RJMP _0x210
                 ; 0000 015F         e = 0;
                 ; 0000 0160         f = 0;
                 ; 0000 0161         g = 0;
                 ; 0000 0162         }
                 ; 0000 0163         else if(input=='e'){
                 _0x84:
0001e4 81a8      	LD   R26,Y
0001e5 36a5      	CPI  R26,LOW(0x65)
0001e6 f429      	BRNE _0x86
                 ; 0000 0164         a = 0;
0001e7 e0e0      	LDI  R30,LOW(0)
0001e8 83ef      	STD  Y+7,R30
                 ; 0000 0165         b = 0;
0001e9 83ee      	STD  Y+6,R30
                 ; 0000 0166         c = 0;
0001ea 83ed      	STD  Y+5,R30
                 ; 0000 0167         d = 0;
0001eb c1c0      	RJMP _0x210
                 ; 0000 0168         e = 0;
                 ; 0000 0169         f = 0;
                 ; 0000 016A         g = 0;
                 ; 0000 016B         }
                 ; 0000 016C         else if(input=='E'){
                 _0x86:
0001ec 81a8      	LD   R26,Y
0001ed 34a5      	CPI  R26,LOW(0x45)
0001ee f451      	BRNE _0x88
                 ; 0000 016D         a = 1;
0001ef e0e1      	LDI  R30,LOW(1)
0001f0 83ef      	STD  Y+7,R30
                 ; 0000 016E         b = 0;
0001f1 e0e0      	LDI  R30,LOW(0)
0001f2 83ee      	STD  Y+6,R30
                 ; 0000 016F         c = 0;
0001f3 83ed      	STD  Y+5,R30
                 ; 0000 0170         d = 1;
0001f4 e0e1      	LDI  R30,LOW(1)
0001f5 83ec      	STD  Y+4,R30
                 ; 0000 0171         e = 1;
0001f6 83eb      	STD  Y+3,R30
                 ; 0000 0172         f = 1;
0001f7 83ea      	STD  Y+2,R30
                 ; 0000 0173         g = 1;
0001f8 c1b9      	RJMP _0x211
                 ; 0000 0174         }
                 ; 0000 0175         else if(input=='f'){
                 _0x88:
0001f9 81a8      	LD   R26,Y
0001fa 36a6      	CPI  R26,LOW(0x66)
0001fb f429      	BRNE _0x8A
                 ; 0000 0176         a = 0;
0001fc e0e0      	LDI  R30,LOW(0)
0001fd 83ef      	STD  Y+7,R30
                 ; 0000 0177         b = 0;
0001fe 83ee      	STD  Y+6,R30
                 ; 0000 0178         c = 0;
0001ff 83ed      	STD  Y+5,R30
                 ; 0000 0179         d = 0;
000200 c1ab      	RJMP _0x210
                 ; 0000 017A         e = 0;
                 ; 0000 017B         f = 0;
                 ; 0000 017C         g = 0;
                 ; 0000 017D         }
                 ; 0000 017E         else if(input=='F'){
                 _0x8A:
000201 81a8      	LD   R26,Y
000202 34a6      	CPI  R26,LOW(0x46)
000203 f451      	BRNE _0x8C
                 ; 0000 017F         a = 1;
000204 e0e1      	LDI  R30,LOW(1)
000205 83ef      	STD  Y+7,R30
                 ; 0000 0180         b = 0;
000206 e0e0      	LDI  R30,LOW(0)
000207 83ee      	STD  Y+6,R30
                 ; 0000 0181         c = 0;
000208 83ed      	STD  Y+5,R30
                 ; 0000 0182         d = 0;
000209 83ec      	STD  Y+4,R30
                 ; 0000 0183         e = 1;
00020a e0e1      	LDI  R30,LOW(1)
00020b 83eb      	STD  Y+3,R30
                 ; 0000 0184         f = 1;
00020c 83ea      	STD  Y+2,R30
                 ; 0000 0185         g = 1;
00020d c1a4      	RJMP _0x211
                 ; 0000 0186         }
                 ; 0000 0187         else if(input=='g'){
                 _0x8C:
00020e 81a8      	LD   R26,Y
00020f 36a7      	CPI  R26,LOW(0x67)
000210 f429      	BRNE _0x8E
                 ; 0000 0188         a = 0;
000211 e0e0      	LDI  R30,LOW(0)
000212 83ef      	STD  Y+7,R30
                 ; 0000 0189         b = 0;
000213 83ee      	STD  Y+6,R30
                 ; 0000 018A         c = 0;
000214 83ed      	STD  Y+5,R30
                 ; 0000 018B         d = 0;
000215 c196      	RJMP _0x210
                 ; 0000 018C         e = 0;
                 ; 0000 018D         f = 0;
                 ; 0000 018E         g = 0;
                 ; 0000 018F         }
                 ; 0000 0190         else if(input=='G'){
                 _0x8E:
000216 81a8      	LD   R26,Y
000217 34a7      	CPI  R26,LOW(0x47)
000218 f449      	BRNE _0x90
                 ; 0000 0191         a = 1;
000219 e0e1      	LDI  R30,LOW(1)
00021a 83ef      	STD  Y+7,R30
                 ; 0000 0192         b = 0;
00021b e0e0      	LDI  R30,LOW(0)
00021c 83ee      	STD  Y+6,R30
                 ; 0000 0193         c = 1;
00021d e0e1      	LDI  R30,LOW(1)
00021e 83ed      	STD  Y+5,R30
                 ; 0000 0194         d = 1;
00021f 83ec      	STD  Y+4,R30
                 ; 0000 0195         e = 1;
000220 83eb      	STD  Y+3,R30
                 ; 0000 0196         f = 1;
000221 c18e      	RJMP _0x20F
                 ; 0000 0197         g = 0;
                 ; 0000 0198         }
                 ; 0000 0199         else if(input=='h'){
                 _0x90:
000222 81a8      	LD   R26,Y
000223 36a8      	CPI  R26,LOW(0x68)
000224 f459      	BRNE _0x92
                 ; 0000 019A         a = 0;
000225 e0e0      	LDI  R30,LOW(0)
000226 83ef      	STD  Y+7,R30
                 ; 0000 019B         b = 0;
000227 83ee      	STD  Y+6,R30
                 ; 0000 019C         c = 1;
000228 e0e1      	LDI  R30,LOW(1)
000229 83ed      	STD  Y+5,R30
                 ; 0000 019D         d = 0;
00022a e0e0      	LDI  R30,LOW(0)
00022b 83ec      	STD  Y+4,R30
                 ; 0000 019E         e = 1;
00022c e0e1      	LDI  R30,LOW(1)
00022d 83eb      	STD  Y+3,R30
                 ; 0000 019F         f = 1;
00022e 83ea      	STD  Y+2,R30
                 ; 0000 01A0         g = 1;
00022f c182      	RJMP _0x211
                 ; 0000 01A1         }
                 ; 0000 01A2         else if(input=='H'){
                 _0x92:
000230 81a8      	LD   R26,Y
000231 34a8      	CPI  R26,LOW(0x48)
000232 f459      	BRNE _0x94
                 ; 0000 01A3         a = 0;
000233 e0e0      	LDI  R30,LOW(0)
000234 83ef      	STD  Y+7,R30
                 ; 0000 01A4         b = 1;
000235 e0e1      	LDI  R30,LOW(1)
000236 83ee      	STD  Y+6,R30
                 ; 0000 01A5         c = 1;
000237 83ed      	STD  Y+5,R30
                 ; 0000 01A6         d = 0;
000238 e0e0      	LDI  R30,LOW(0)
000239 83ec      	STD  Y+4,R30
                 ; 0000 01A7         e = 1;
00023a e0e1      	LDI  R30,LOW(1)
00023b 83eb      	STD  Y+3,R30
                 ; 0000 01A8         f = 1;
00023c 83ea      	STD  Y+2,R30
                 ; 0000 01A9         g = 1;
00023d c174      	RJMP _0x211
                 ; 0000 01AA         }
                 ; 0000 01AB         else if(input=='i'){
                 _0x94:
00023e 81a8      	LD   R26,Y
00023f 36a9      	CPI  R26,LOW(0x69)
000240 f439      	BRNE _0x96
                 ; 0000 01AC         a = 0;
000241 e0e0      	LDI  R30,LOW(0)
000242 83ef      	STD  Y+7,R30
                 ; 0000 01AD         b = 0;
000243 83ee      	STD  Y+6,R30
                 ; 0000 01AE         c = 1;
000244 e0e1      	LDI  R30,LOW(1)
000245 83ed      	STD  Y+5,R30
                 ; 0000 01AF         d = 0;
000246 e0e0      	LDI  R30,LOW(0)
000247 c164      	RJMP _0x210
                 ; 0000 01B0         e = 0;
                 ; 0000 01B1         f = 0;
                 ; 0000 01B2         g = 0;
                 ; 0000 01B3         }
                 ; 0000 01B4         else if(input=='I'){
                 _0x96:
000248 81a8      	LD   R26,Y
000249 34a9      	CPI  R26,LOW(0x49)
00024a f439      	BRNE _0x98
                 ; 0000 01B5         a = 0;
00024b e0e0      	LDI  R30,LOW(0)
00024c 83ef      	STD  Y+7,R30
                 ; 0000 01B6         b = 1;
00024d e0e1      	LDI  R30,LOW(1)
00024e 83ee      	STD  Y+6,R30
                 ; 0000 01B7         c = 1;
00024f 83ed      	STD  Y+5,R30
                 ; 0000 01B8         d = 0;
000250 e0e0      	LDI  R30,LOW(0)
000251 c15a      	RJMP _0x210
                 ; 0000 01B9         e = 0;
                 ; 0000 01BA         f = 0;
                 ; 0000 01BB         g = 0;
                 ; 0000 01BC         }
                 ; 0000 01BD         else if(input=='j'){
                 _0x98:
000252 81a8      	LD   R26,Y
000253 36aa      	CPI  R26,LOW(0x6A)
000254 f429      	BRNE _0x9A
                 ; 0000 01BE         a = 0;
000255 e0e0      	LDI  R30,LOW(0)
000256 83ef      	STD  Y+7,R30
                 ; 0000 01BF         b = 0;
000257 83ee      	STD  Y+6,R30
                 ; 0000 01C0         c = 0;
000258 83ed      	STD  Y+5,R30
                 ; 0000 01C1         d = 0;
000259 c152      	RJMP _0x210
                 ; 0000 01C2         e = 0;
                 ; 0000 01C3         f = 0;
                 ; 0000 01C4         g = 0;
                 ; 0000 01C5         }
                 ; 0000 01C6         else if(input=='J'){
                 _0x9A:
00025a 81a8      	LD   R26,Y
00025b 34aa      	CPI  R26,LOW(0x4A)
00025c f429      	BRNE _0x9C
                 ; 0000 01C7         a = 0;
00025d e0e0      	LDI  R30,LOW(0)
00025e 83ef      	STD  Y+7,R30
                 ; 0000 01C8         b = 1;
00025f e0e1      	LDI  R30,LOW(1)
000260 83ee      	STD  Y+6,R30
                 ; 0000 01C9         c = 1;
000261 c148      	RJMP _0x212
                 ; 0000 01CA         d = 1;
                 ; 0000 01CB         e = 0;
                 ; 0000 01CC         f = 0;
                 ; 0000 01CD         g = 0;
                 ; 0000 01CE         }
                 ; 0000 01CF         else if(input=='k'){
                 _0x9C:
000262 81a8      	LD   R26,Y
000263 36ab      	CPI  R26,LOW(0x6B)
000264 f429      	BRNE _0x9E
                 ; 0000 01D0         a = 0;
000265 e0e0      	LDI  R30,LOW(0)
000266 83ef      	STD  Y+7,R30
                 ; 0000 01D1         b = 0;
000267 83ee      	STD  Y+6,R30
                 ; 0000 01D2         c = 0;
000268 83ed      	STD  Y+5,R30
                 ; 0000 01D3         d = 0;
000269 c142      	RJMP _0x210
                 ; 0000 01D4         e = 0;
                 ; 0000 01D5         f = 0;
                 ; 0000 01D6         g = 0;
                 ; 0000 01D7         }
                 ; 0000 01D8         else if(input=='K'){
                 _0x9E:
00026a 81a8      	LD   R26,Y
00026b 34ab      	CPI  R26,LOW(0x4B)
00026c f429      	BRNE _0xA0
                 ; 0000 01D9         a = 0;
00026d e0e0      	LDI  R30,LOW(0)
00026e 83ef      	STD  Y+7,R30
                 ; 0000 01DA         b = 0;
00026f 83ee      	STD  Y+6,R30
                 ; 0000 01DB         c = 0;
000270 83ed      	STD  Y+5,R30
                 ; 0000 01DC         d = 0;
000271 c13a      	RJMP _0x210
                 ; 0000 01DD         e = 0;
                 ; 0000 01DE         f = 0;
                 ; 0000 01DF         g = 0;
                 ; 0000 01E0         }
                 ; 0000 01E1         else if(input=='l'){
                 _0xA0:
000272 81a8      	LD   R26,Y
000273 36ac      	CPI  R26,LOW(0x6C)
000274 f429      	BRNE _0xA2
                 ; 0000 01E2         a = 0;
000275 e0e0      	LDI  R30,LOW(0)
000276 83ef      	STD  Y+7,R30
                 ; 0000 01E3         b = 0;
000277 83ee      	STD  Y+6,R30
                 ; 0000 01E4         c = 0;
000278 83ed      	STD  Y+5,R30
                 ; 0000 01E5         d = 0;
000279 c132      	RJMP _0x210
                 ; 0000 01E6         e = 0;
                 ; 0000 01E7         f = 0;
                 ; 0000 01E8         g = 0;
                 ; 0000 01E9         }
                 ; 0000 01EA         else if(input=='L'){
                 _0xA2:
00027a 81a8      	LD   R26,Y
00027b 34ac      	CPI  R26,LOW(0x4C)
00027c f441      	BRNE _0xA4
                 ; 0000 01EB         a = 0;
00027d e0e0      	LDI  R30,LOW(0)
00027e 83ef      	STD  Y+7,R30
                 ; 0000 01EC         b = 0;
00027f 83ee      	STD  Y+6,R30
                 ; 0000 01ED         c = 0;
000280 83ed      	STD  Y+5,R30
                 ; 0000 01EE         d = 1;
000281 e0e1      	LDI  R30,LOW(1)
000282 83ec      	STD  Y+4,R30
                 ; 0000 01EF         e = 1;
000283 83eb      	STD  Y+3,R30
                 ; 0000 01F0         f = 1;
000284 c12b      	RJMP _0x20F
                 ; 0000 01F1         g = 0;
                 ; 0000 01F2         }
                 ; 0000 01F3         else if(input=='m'){
                 _0xA4:
000285 81a8      	LD   R26,Y
000286 36ad      	CPI  R26,LOW(0x6D)
000287 f429      	BRNE _0xA6
                 ; 0000 01F4         a = 0;
000288 e0e0      	LDI  R30,LOW(0)
000289 83ef      	STD  Y+7,R30
                 ; 0000 01F5         b = 0;
00028a 83ee      	STD  Y+6,R30
                 ; 0000 01F6         c = 0;
00028b 83ed      	STD  Y+5,R30
                 ; 0000 01F7         d = 0;
00028c c11f      	RJMP _0x210
                 ; 0000 01F8         e = 0;
                 ; 0000 01F9         f = 0;
                 ; 0000 01FA         g = 0;
                 ; 0000 01FB         }
                 ; 0000 01FC         else if(input=='M'){
                 _0xA6:
00028d 81a8      	LD   R26,Y
00028e 34ad      	CPI  R26,LOW(0x4D)
00028f f429      	BRNE _0xA8
                 ; 0000 01FD         a = 0;
000290 e0e0      	LDI  R30,LOW(0)
000291 83ef      	STD  Y+7,R30
                 ; 0000 01FE         b = 0;
000292 83ee      	STD  Y+6,R30
                 ; 0000 01FF         c = 0;
000293 83ed      	STD  Y+5,R30
                 ; 0000 0200         d = 0;
000294 c117      	RJMP _0x210
                 ; 0000 0201         e = 0;
                 ; 0000 0202         f = 0;
                 ; 0000 0203         g = 0;
                 ; 0000 0204         }
                 ; 0000 0205         else if(input=='n'){
                 _0xA8:
000295 81a8      	LD   R26,Y
000296 36ae      	CPI  R26,LOW(0x6E)
000297 f469      	BRNE _0xAA
                 ; 0000 0206         a = 0;
000298 e0e0      	LDI  R30,LOW(0)
000299 83ef      	STD  Y+7,R30
                 ; 0000 0207         b = 0;
00029a 83ee      	STD  Y+6,R30
                 ; 0000 0208         c = 1;
00029b e0e1      	LDI  R30,LOW(1)
00029c 83ed      	STD  Y+5,R30
                 ; 0000 0209         d = 0;
00029d e0e0      	LDI  R30,LOW(0)
00029e 83ec      	STD  Y+4,R30
                 ; 0000 020A         e = 1;
00029f e0e1      	LDI  R30,LOW(1)
0002a0 83eb      	STD  Y+3,R30
                 ; 0000 020B         f = 0;
0002a1 e0e0      	LDI  R30,LOW(0)
0002a2 83ea      	STD  Y+2,R30
                 ; 0000 020C         g = 1;
0002a3 e0e1      	LDI  R30,LOW(1)
0002a4 c10d      	RJMP _0x211
                 ; 0000 020D         }
                 ; 0000 020E         else if(input=='N'){
                 _0xAA:
0002a5 81a8      	LD   R26,Y
0002a6 34ae      	CPI  R26,LOW(0x4E)
0002a7 f429      	BRNE _0xAC
                 ; 0000 020F         a = 0;
0002a8 e0e0      	LDI  R30,LOW(0)
0002a9 83ef      	STD  Y+7,R30
                 ; 0000 0210         b = 0;
0002aa 83ee      	STD  Y+6,R30
                 ; 0000 0211         c = 0;
0002ab 83ed      	STD  Y+5,R30
                 ; 0000 0212         d = 0;
0002ac c0ff      	RJMP _0x210
                 ; 0000 0213         e = 0;
                 ; 0000 0214         f = 0;
                 ; 0000 0215         g = 0;
                 ; 0000 0216         }
                 ; 0000 0217         else if(input=='o'){
                 _0xAC:
0002ad 81a8      	LD   R26,Y
0002ae 36af      	CPI  R26,LOW(0x6F)
0002af f459      	BRNE _0xAE
                 ; 0000 0218         a = 0;
0002b0 e0e0      	LDI  R30,LOW(0)
0002b1 83ef      	STD  Y+7,R30
                 ; 0000 0219         b = 0;
0002b2 83ee      	STD  Y+6,R30
                 ; 0000 021A         c = 1;
0002b3 e0e1      	LDI  R30,LOW(1)
0002b4 83ed      	STD  Y+5,R30
                 ; 0000 021B         d = 1;
0002b5 83ec      	STD  Y+4,R30
                 ; 0000 021C         e = 1;
0002b6 83eb      	STD  Y+3,R30
                 ; 0000 021D         f = 0;
0002b7 e0e0      	LDI  R30,LOW(0)
0002b8 83ea      	STD  Y+2,R30
                 ; 0000 021E         g = 1;
0002b9 e0e1      	LDI  R30,LOW(1)
0002ba c0f7      	RJMP _0x211
                 ; 0000 021F         }
                 ; 0000 0220         else if(input=='O'){
                 _0xAE:
0002bb 81a8      	LD   R26,Y
0002bc 34af      	CPI  R26,LOW(0x4F)
0002bd f439      	BRNE _0xB0
                 ; 0000 0221         a = 1;
0002be e0e1      	LDI  R30,LOW(1)
0002bf 83ef      	STD  Y+7,R30
                 ; 0000 0222         b = 1;
0002c0 83ee      	STD  Y+6,R30
                 ; 0000 0223         c = 1;
0002c1 83ed      	STD  Y+5,R30
                 ; 0000 0224         d = 1;
0002c2 83ec      	STD  Y+4,R30
                 ; 0000 0225         e = 1;
0002c3 83eb      	STD  Y+3,R30
                 ; 0000 0226         f = 1;
0002c4 c0eb      	RJMP _0x20F
                 ; 0000 0227         g = 0;
                 ; 0000 0228         }
                 ; 0000 0229         else if(input=='p'){
                 _0xB0:
0002c5 81a8      	LD   R26,Y
0002c6 37a0      	CPI  R26,LOW(0x70)
0002c7 f429      	BRNE _0xB2
                 ; 0000 022A         a = 0;
0002c8 e0e0      	LDI  R30,LOW(0)
0002c9 83ef      	STD  Y+7,R30
                 ; 0000 022B         b = 0;
0002ca 83ee      	STD  Y+6,R30
                 ; 0000 022C         c = 0;
0002cb 83ed      	STD  Y+5,R30
                 ; 0000 022D         d = 0;
0002cc c0df      	RJMP _0x210
                 ; 0000 022E         e = 0;
                 ; 0000 022F         f = 0;
                 ; 0000 0230         g = 0;
                 ; 0000 0231         }
                 ; 0000 0232         else if(input=='P'){
                 _0xB2:
0002cd 81a8      	LD   R26,Y
0002ce 35a0      	CPI  R26,LOW(0x50)
0002cf f451      	BRNE _0xB4
                 ; 0000 0233         a = 1;
0002d0 e0e1      	LDI  R30,LOW(1)
0002d1 83ef      	STD  Y+7,R30
                 ; 0000 0234         b = 1;
0002d2 83ee      	STD  Y+6,R30
                 ; 0000 0235         c = 0;
0002d3 e0e0      	LDI  R30,LOW(0)
0002d4 83ed      	STD  Y+5,R30
                 ; 0000 0236         d = 0;
0002d5 83ec      	STD  Y+4,R30
                 ; 0000 0237         e = 1;
0002d6 e0e1      	LDI  R30,LOW(1)
0002d7 83eb      	STD  Y+3,R30
                 ; 0000 0238         f = 1;
0002d8 83ea      	STD  Y+2,R30
                 ; 0000 0239         g = 1;
0002d9 c0d8      	RJMP _0x211
                 ; 0000 023A         }
                 ; 0000 023B         else if(input=='q'){
                 _0xB4:
0002da 81a8      	LD   R26,Y
0002db 37a1      	CPI  R26,LOW(0x71)
0002dc f429      	BRNE _0xB6
                 ; 0000 023C         a = 0;
0002dd e0e0      	LDI  R30,LOW(0)
0002de 83ef      	STD  Y+7,R30
                 ; 0000 023D         b = 0;
0002df 83ee      	STD  Y+6,R30
                 ; 0000 023E         c = 0;
0002e0 83ed      	STD  Y+5,R30
                 ; 0000 023F         d = 0;
0002e1 c0ca      	RJMP _0x210
                 ; 0000 0240         e = 0;
                 ; 0000 0241         f = 0;
                 ; 0000 0242         g = 0;
                 ; 0000 0243         }
                 ; 0000 0244         else if(input=='Q'){
                 _0xB6:
0002e2 81a8      	LD   R26,Y
0002e3 35a1      	CPI  R26,LOW(0x51)
0002e4 f429      	BRNE _0xB8
                 ; 0000 0245         a = 0;
0002e5 e0e0      	LDI  R30,LOW(0)
0002e6 83ef      	STD  Y+7,R30
                 ; 0000 0246         b = 0;
0002e7 83ee      	STD  Y+6,R30
                 ; 0000 0247         c = 0;
0002e8 83ed      	STD  Y+5,R30
                 ; 0000 0248         d = 0;
0002e9 c0c2      	RJMP _0x210
                 ; 0000 0249         e = 0;
                 ; 0000 024A         f = 0;
                 ; 0000 024B         g = 0;
                 ; 0000 024C         }
                 ; 0000 024D         else if(input=='r'){
                 _0xB8:
0002ea 81a8      	LD   R26,Y
0002eb 37a2      	CPI  R26,LOW(0x72)
0002ec f459      	BRNE _0xBA
                 ; 0000 024E         a = 0;
0002ed e0e0      	LDI  R30,LOW(0)
0002ee 83ef      	STD  Y+7,R30
                 ; 0000 024F         b = 0;
0002ef 83ee      	STD  Y+6,R30
                 ; 0000 0250         c = 0;
0002f0 83ed      	STD  Y+5,R30
                 ; 0000 0251         d = 0;
0002f1 83ec      	STD  Y+4,R30
                 ; 0000 0252         e = 1;
0002f2 e0e1      	LDI  R30,LOW(1)
0002f3 83eb      	STD  Y+3,R30
                 ; 0000 0253         f = 0;
0002f4 e0e0      	LDI  R30,LOW(0)
0002f5 83ea      	STD  Y+2,R30
                 ; 0000 0254         g = 1;
0002f6 e0e1      	LDI  R30,LOW(1)
0002f7 c0ba      	RJMP _0x211
                 ; 0000 0255         }
                 ; 0000 0256         else if(input=='R'){
                 _0xBA:
0002f8 81a8      	LD   R26,Y
0002f9 35a2      	CPI  R26,LOW(0x52)
0002fa f429      	BRNE _0xBC
                 ; 0000 0257         a = 0;
0002fb e0e0      	LDI  R30,LOW(0)
0002fc 83ef      	STD  Y+7,R30
                 ; 0000 0258         b = 0;
0002fd 83ee      	STD  Y+6,R30
                 ; 0000 0259         c = 0;
0002fe 83ed      	STD  Y+5,R30
                 ; 0000 025A         d = 0;
0002ff c0ac      	RJMP _0x210
                 ; 0000 025B         e = 0;
                 ; 0000 025C         f = 0;
                 ; 0000 025D         g = 0;
                 ; 0000 025E         }
                 ; 0000 025F         else if(input=='s'){
                 _0xBC:
000300 81a8      	LD   R26,Y
000301 37a3      	CPI  R26,LOW(0x73)
000302 f429      	BRNE _0xBE
                 ; 0000 0260         a = 0;
000303 e0e0      	LDI  R30,LOW(0)
000304 83ef      	STD  Y+7,R30
                 ; 0000 0261         b = 0;
000305 83ee      	STD  Y+6,R30
                 ; 0000 0262         c = 0;
000306 83ed      	STD  Y+5,R30
                 ; 0000 0263         d = 0;
000307 c0a4      	RJMP _0x210
                 ; 0000 0264         e = 0;
                 ; 0000 0265         f = 0;
                 ; 0000 0266         g = 0;
                 ; 0000 0267         }
                 ; 0000 0268         else if(input=='S'){
                 _0xBE:
000308 81a8      	LD   R26,Y
000309 35a3      	CPI  R26,LOW(0x53)
00030a f461      	BRNE _0xC0
                 ; 0000 0269         a = 1;
00030b e0e1      	LDI  R30,LOW(1)
00030c 83ef      	STD  Y+7,R30
                 ; 0000 026A         b = 0;
00030d e0e0      	LDI  R30,LOW(0)
00030e 83ee      	STD  Y+6,R30
                 ; 0000 026B         c = 1;
00030f e0e1      	LDI  R30,LOW(1)
000310 83ed      	STD  Y+5,R30
                 ; 0000 026C         d = 1;
000311 83ec      	STD  Y+4,R30
                 ; 0000 026D         e = 0;
000312 e0e0      	LDI  R30,LOW(0)
000313 83eb      	STD  Y+3,R30
                 ; 0000 026E         f = 1;
000314 e0e1      	LDI  R30,LOW(1)
000315 83ea      	STD  Y+2,R30
                 ; 0000 026F         g = 1;
000316 c09b      	RJMP _0x211
                 ; 0000 0270         }
                 ; 0000 0271         else if(input=='t'){
                 _0xC0:
000317 81a8      	LD   R26,Y
000318 37a4      	CPI  R26,LOW(0x74)
000319 f449      	BRNE _0xC2
                 ; 0000 0272         a = 0;
00031a e0e0      	LDI  R30,LOW(0)
00031b 83ef      	STD  Y+7,R30
                 ; 0000 0273         b = 0;
00031c 83ee      	STD  Y+6,R30
                 ; 0000 0274         c = 0;
00031d 83ed      	STD  Y+5,R30
                 ; 0000 0275         d = 1;
00031e e0e1      	LDI  R30,LOW(1)
00031f 83ec      	STD  Y+4,R30
                 ; 0000 0276         e = 1;
000320 83eb      	STD  Y+3,R30
                 ; 0000 0277         f = 1;
000321 83ea      	STD  Y+2,R30
                 ; 0000 0278         g = 1;
000322 c08f      	RJMP _0x211
                 ; 0000 0279         }
                 ; 0000 027A         else if(input=='T'){
                 _0xC2:
000323 81a8      	LD   R26,Y
000324 35a4      	CPI  R26,LOW(0x54)
000325 f429      	BRNE _0xC4
                 ; 0000 027B         a = 0;
000326 e0e0      	LDI  R30,LOW(0)
000327 83ef      	STD  Y+7,R30
                 ; 0000 027C         b = 0;
000328 83ee      	STD  Y+6,R30
                 ; 0000 027D         c = 0;
000329 83ed      	STD  Y+5,R30
                 ; 0000 027E         d = 0;
00032a c081      	RJMP _0x210
                 ; 0000 027F         e = 0;
                 ; 0000 0280         f = 0;
                 ; 0000 0281         g = 0;
                 ; 0000 0282         }
                 ; 0000 0283         else if(input=='u'){
                 _0xC4:
00032b 81a8      	LD   R26,Y
00032c 37a5      	CPI  R26,LOW(0x75)
00032d f439      	BRNE _0xC6
                 ; 0000 0284         a = 0;
00032e e0e0      	LDI  R30,LOW(0)
00032f 83ef      	STD  Y+7,R30
                 ; 0000 0285         b = 0;
000330 83ee      	STD  Y+6,R30
                 ; 0000 0286         c = 1;
000331 e0e1      	LDI  R30,LOW(1)
000332 83ed      	STD  Y+5,R30
                 ; 0000 0287         d = 1;
000333 83ec      	STD  Y+4,R30
                 ; 0000 0288         e = 1;
000334 c079      	RJMP _0x213
                 ; 0000 0289         f = 0;
                 ; 0000 028A         g = 0;
                 ; 0000 028B         }
                 ; 0000 028C         else if(input=='U'){
                 _0xC6:
000335 81a8      	LD   R26,Y
000336 35a5      	CPI  R26,LOW(0x55)
000337 f441      	BRNE _0xC8
                 ; 0000 028D         a = 0;
000338 e0e0      	LDI  R30,LOW(0)
000339 83ef      	STD  Y+7,R30
                 ; 0000 028E         b = 1;
00033a e0e1      	LDI  R30,LOW(1)
00033b 83ee      	STD  Y+6,R30
                 ; 0000 028F         c = 1;
00033c 83ed      	STD  Y+5,R30
                 ; 0000 0290         d = 1;
00033d 83ec      	STD  Y+4,R30
                 ; 0000 0291         e = 1;
00033e 83eb      	STD  Y+3,R30
                 ; 0000 0292         f = 1;
00033f c070      	RJMP _0x20F
                 ; 0000 0293         g = 0;
                 ; 0000 0294         }
                 ; 0000 0295         else if(input=='v'){
                 _0xC8:
000340 81a8      	LD   R26,Y
000341 37a6      	CPI  R26,LOW(0x76)
000342 f429      	BRNE _0xCA
                 ; 0000 0296         a = 0;
000343 e0e0      	LDI  R30,LOW(0)
000344 83ef      	STD  Y+7,R30
                 ; 0000 0297         b = 0;
000345 83ee      	STD  Y+6,R30
                 ; 0000 0298         c = 0;
000346 83ed      	STD  Y+5,R30
                 ; 0000 0299         d = 0;
000347 c064      	RJMP _0x210
                 ; 0000 029A         e = 0;
                 ; 0000 029B         f = 0;
                 ; 0000 029C         g = 0;
                 ; 0000 029D         }
                 ; 0000 029E         else if(input=='V'){
                 _0xCA:
000348 81a8      	LD   R26,Y
000349 35a6      	CPI  R26,LOW(0x56)
00034a f429      	BRNE _0xCC
                 ; 0000 029F         a = 0;
00034b e0e0      	LDI  R30,LOW(0)
00034c 83ef      	STD  Y+7,R30
                 ; 0000 02A0         b = 0;
00034d 83ee      	STD  Y+6,R30
                 ; 0000 02A1         c = 0;
00034e 83ed      	STD  Y+5,R30
                 ; 0000 02A2         d = 0;
00034f c05c      	RJMP _0x210
                 ; 0000 02A3         e = 0;
                 ; 0000 02A4         f = 0;
                 ; 0000 02A5         g = 0;
                 ; 0000 02A6         }
                 ; 0000 02A7         else if(input=='w'){
                 _0xCC:
000350 81a8      	LD   R26,Y
000351 37a7      	CPI  R26,LOW(0x77)
000352 f429      	BRNE _0xCE
                 ; 0000 02A8         a = 0;
000353 e0e0      	LDI  R30,LOW(0)
000354 83ef      	STD  Y+7,R30
                 ; 0000 02A9         b = 0;
000355 83ee      	STD  Y+6,R30
                 ; 0000 02AA         c = 0;
000356 83ed      	STD  Y+5,R30
                 ; 0000 02AB         d = 0;
000357 c054      	RJMP _0x210
                 ; 0000 02AC         e = 0;
                 ; 0000 02AD         f = 0;
                 ; 0000 02AE         g = 0;
                 ; 0000 02AF         }
                 ; 0000 02B0         else if(input=='W'){
                 _0xCE:
000358 81a8      	LD   R26,Y
000359 35a7      	CPI  R26,LOW(0x57)
00035a f429      	BRNE _0xD0
                 ; 0000 02B1         a = 0;
00035b e0e0      	LDI  R30,LOW(0)
00035c 83ef      	STD  Y+7,R30
                 ; 0000 02B2         b = 0;
00035d 83ee      	STD  Y+6,R30
                 ; 0000 02B3         c = 0;
00035e 83ed      	STD  Y+5,R30
                 ; 0000 02B4         d = 0;
00035f c04c      	RJMP _0x210
                 ; 0000 02B5         e = 0;
                 ; 0000 02B6         f = 0;
                 ; 0000 02B7         g = 0;
                 ; 0000 02B8         }
                 ; 0000 02B9         else if(input=='x'){
                 _0xD0:
000360 81a8      	LD   R26,Y
000361 37a8      	CPI  R26,LOW(0x78)
000362 f429      	BRNE _0xD2
                 ; 0000 02BA         a = 0;
000363 e0e0      	LDI  R30,LOW(0)
000364 83ef      	STD  Y+7,R30
                 ; 0000 02BB         b = 0;
000365 83ee      	STD  Y+6,R30
                 ; 0000 02BC         c = 0;
000366 83ed      	STD  Y+5,R30
                 ; 0000 02BD         d = 0;
000367 c044      	RJMP _0x210
                 ; 0000 02BE         e = 0;
                 ; 0000 02BF         f = 0;
                 ; 0000 02C0         g = 0;
                 ; 0000 02C1         }
                 ; 0000 02C2         else if(input=='X'){
                 _0xD2:
000368 81a8      	LD   R26,Y
000369 35a8      	CPI  R26,LOW(0x58)
00036a f429      	BRNE _0xD4
                 ; 0000 02C3         a = 0;
00036b e0e0      	LDI  R30,LOW(0)
00036c 83ef      	STD  Y+7,R30
                 ; 0000 02C4         b = 0;
00036d 83ee      	STD  Y+6,R30
                 ; 0000 02C5         c = 0;
00036e 83ed      	STD  Y+5,R30
                 ; 0000 02C6         d = 0;
00036f c03c      	RJMP _0x210
                 ; 0000 02C7         e = 0;
                 ; 0000 02C8         f = 0;
                 ; 0000 02C9         g = 0;
                 ; 0000 02CA         }
                 ; 0000 02CB         else if(input=='y'){
                 _0xD4:
000370 81a8      	LD   R26,Y
000371 37a9      	CPI  R26,LOW(0x79)
000372 f429      	BRNE _0xD6
                 ; 0000 02CC         a = 0;
000373 e0e0      	LDI  R30,LOW(0)
000374 83ef      	STD  Y+7,R30
                 ; 0000 02CD         b = 0;
000375 83ee      	STD  Y+6,R30
                 ; 0000 02CE         c = 0;
000376 83ed      	STD  Y+5,R30
                 ; 0000 02CF         d = 0;
000377 c034      	RJMP _0x210
                 ; 0000 02D0         e = 0;
                 ; 0000 02D1         f = 0;
                 ; 0000 02D2         g = 0;
                 ; 0000 02D3         }
                 ; 0000 02D4         else if(input=='Y'){
                 _0xD6:
000378 81a8      	LD   R26,Y
000379 35a9      	CPI  R26,LOW(0x59)
00037a f459      	BRNE _0xD8
                 ; 0000 02D5         a = 0;
00037b e0e0      	LDI  R30,LOW(0)
00037c 83ef      	STD  Y+7,R30
                 ; 0000 02D6         b = 1;
00037d e0e1      	LDI  R30,LOW(1)
00037e 83ee      	STD  Y+6,R30
                 ; 0000 02D7         c = 1;
00037f 83ed      	STD  Y+5,R30
                 ; 0000 02D8         d = 0;
000380 e0e0      	LDI  R30,LOW(0)
000381 83ec      	STD  Y+4,R30
                 ; 0000 02D9         e = 0;
000382 83eb      	STD  Y+3,R30
                 ; 0000 02DA         f = 1;
000383 e0e1      	LDI  R30,LOW(1)
000384 83ea      	STD  Y+2,R30
                 ; 0000 02DB         g = 1;
000385 c02c      	RJMP _0x211
                 ; 0000 02DC         }
                 ; 0000 02DD         else if(input=='z'){
                 _0xD8:
000386 81a8      	LD   R26,Y
000387 37aa      	CPI  R26,LOW(0x7A)
000388 f429      	BRNE _0xDA
                 ; 0000 02DE         a = 0;
000389 e0e0      	LDI  R30,LOW(0)
00038a 83ef      	STD  Y+7,R30
                 ; 0000 02DF         b = 0;
00038b 83ee      	STD  Y+6,R30
                 ; 0000 02E0         c = 0;
00038c 83ed      	STD  Y+5,R30
                 ; 0000 02E1         d = 0;
00038d c01e      	RJMP _0x210
                 ; 0000 02E2         e = 0;
                 ; 0000 02E3         f = 0;
                 ; 0000 02E4         g = 0;
                 ; 0000 02E5         }
                 ; 0000 02E6         else if(input=='Z'){
                 _0xDA:
00038e 81a8      	LD   R26,Y
00038f 35aa      	CPI  R26,LOW(0x5A)
000390 f429      	BRNE _0xDC
                 ; 0000 02E7         a = 0;
000391 e0e0      	LDI  R30,LOW(0)
000392 83ef      	STD  Y+7,R30
                 ; 0000 02E8         b = 0;
000393 83ee      	STD  Y+6,R30
                 ; 0000 02E9         c = 0;
000394 83ed      	STD  Y+5,R30
                 ; 0000 02EA         d = 0;
000395 c016      	RJMP _0x210
                 ; 0000 02EB         e = 0;
                 ; 0000 02EC         f = 0;
                 ; 0000 02ED         g = 0;
                 ; 0000 02EE         }
                 ; 0000 02EF         else if(input=='='){
                 _0xDC:
000396 81a8      	LD   R26,Y
000397 33ad      	CPI  R26,LOW(0x3D)
000398 f459      	BRNE _0xDE
                 ; 0000 02F0         a = 0;
000399 e0e0      	LDI  R30,LOW(0)
00039a 83ef      	STD  Y+7,R30
                 ; 0000 02F1         b = 0;
00039b 83ee      	STD  Y+6,R30
                 ; 0000 02F2         c = 0;
00039c 83ed      	STD  Y+5,R30
                 ; 0000 02F3         d = 1;
00039d e0e1      	LDI  R30,LOW(1)
00039e 83ec      	STD  Y+4,R30
                 ; 0000 02F4         e = 0;
00039f e0e0      	LDI  R30,LOW(0)
0003a0 83eb      	STD  Y+3,R30
                 ; 0000 02F5         f = 0;
0003a1 83ea      	STD  Y+2,R30
                 ; 0000 02F6         g = 1;
0003a2 e0e1      	LDI  R30,LOW(1)
0003a3 c00e      	RJMP _0x211
                 ; 0000 02F7         }
                 ; 0000 02F8         else if(input=='_'){
                 _0xDE:
0003a4 81a8      	LD   R26,Y
0003a5 35af      	CPI  R26,LOW(0x5F)
0003a6 f461      	BRNE _0xE0
                 ; 0000 02F9         a = 0;
0003a7 e0e0      	LDI  R30,LOW(0)
0003a8 83ef      	STD  Y+7,R30
                 ; 0000 02FA         b = 0;
0003a9 83ee      	STD  Y+6,R30
                 ; 0000 02FB         c = 0;
                 _0x212:
0003aa 83ed      	STD  Y+5,R30
                 ; 0000 02FC         d = 1;
0003ab e0e1      	LDI  R30,LOW(1)
                 _0x210:
0003ac 83ec      	STD  Y+4,R30
                 ; 0000 02FD         e = 0;
0003ad e0e0      	LDI  R30,LOW(0)
                 _0x213:
0003ae 83eb      	STD  Y+3,R30
                 ; 0000 02FE         f = 0;
0003af e0e0      	LDI  R30,LOW(0)
                 _0x20F:
0003b0 83ea      	STD  Y+2,R30
                 ; 0000 02FF         g = 0;
0003b1 e0e0      	LDI  R30,LOW(0)
                 _0x211:
0003b2 83e9      	STD  Y+1,R30
                 ; 0000 0300         }
                 ; 0000 0301         if(a==1){                    LED_SEGMENT_A = 0;}else{LED_SEGMENT_A = 1;}
                 _0xE0:
0003b3 81af      	LDD  R26,Y+7
0003b4 30a1      	CPI  R26,LOW(0x1)
0003b5 f411      	BRNE _0xE1
0003b6 98ae      	CBI  0x15,6
0003b7 c001      	RJMP _0xE4
                 _0xE1:
0003b8 9aae      	SBI  0x15,6
                 _0xE4:
                 ; 0000 0302         if(b==1){                    LED_SEGMENT_B = 0;}else{LED_SEGMENT_B = 1;}
0003b9 81ae      	LDD  R26,Y+6
0003ba 30a1      	CPI  R26,LOW(0x1)
0003bb f411      	BRNE _0xE7
0003bc 98ac      	CBI  0x15,4
0003bd c001      	RJMP _0xEA
                 _0xE7:
0003be 9aac      	SBI  0x15,4
                 _0xEA:
                 ; 0000 0303         if(c==1){                    LED_SEGMENT_C = 0;}else{LED_SEGMENT_C = 1;}
0003bf 81ad      	LDD  R26,Y+5
0003c0 30a1      	CPI  R26,LOW(0x1)
0003c1 f411      	BRNE _0xED
0003c2 98a9      	CBI  0x15,1
0003c3 c001      	RJMP _0xF0
                 _0xED:
0003c4 9aa9      	SBI  0x15,1
                 _0xF0:
                 ; 0000 0304         if(d==1){                    LED_SEGMENT_D = 0;}else{LED_SEGMENT_D = 1;}
0003c5 81ac      	LDD  R26,Y+4
0003c6 30a1      	CPI  R26,LOW(0x1)
0003c7 f411      	BRNE _0xF3
0003c8 98ab      	CBI  0x15,3
0003c9 c001      	RJMP _0xF6
                 _0xF3:
0003ca 9aab      	SBI  0x15,3
                 _0xF6:
                 ; 0000 0305         if(e==1){                    LED_SEGMENT_E = 0;}else{LED_SEGMENT_E = 1;}
0003cb 81ab      	LDD  R26,Y+3
0003cc 30a1      	CPI  R26,LOW(0x1)
0003cd f411      	BRNE _0xF9
0003ce 9897      	CBI  0x12,7
0003cf c001      	RJMP _0xFC
                 _0xF9:
0003d0 9a97      	SBI  0x12,7
                 _0xFC:
                 ; 0000 0306         if(f==1){                    LED_SEGMENT_F = 0;}else{LED_SEGMENT_F = 1;}
0003d1 81aa      	LDD  R26,Y+2
0003d2 30a1      	CPI  R26,LOW(0x1)
0003d3 f411      	BRNE _0xFF
0003d4 98ad      	CBI  0x15,5
0003d5 c001      	RJMP _0x102
                 _0xFF:
0003d6 9aad      	SBI  0x15,5
                 _0x102:
                 ; 0000 0307         if(g==1){                    LED_SEGMENT_G = 0;}else{LED_SEGMENT_G = 1;}
0003d7 81a9      	LDD  R26,Y+1
0003d8 30a1      	CPI  R26,LOW(0x1)
0003d9 f411      	BRNE _0x105
0003da 98a8      	CBI  0x15,0
0003db c001      	RJMP _0x108
                 _0x105:
0003dc 9aa8      	SBI  0x15,0
                 _0x108:
                 ; 0000 0308         if(LcdTaskas[LcdChannel]==1){LED_SEGMENT_H = 0;}else{LED_SEGMENT_H = 1;}
0003dd 2fe0      	MOV  R30,R16
0003de e0f0      	LDI  R31,0
0003df 59e8      	SUBI R30,LOW(-_LcdTaskas)
0003e0 4ffe      	SBCI R31,HIGH(-_LcdTaskas)
0003e1 81a0      	LD   R26,Z
0003e2 30a1      	CPI  R26,LOW(0x1)
0003e3 f411      	BRNE _0x10B
0003e4 98aa      	CBI  0x15,2
0003e5 c001      	RJMP _0x10E
                 _0x10B:
0003e6 9aaa      	SBI  0x15,2
                 _0x10E:
                 ; 0000 0309     }
0003e7 9628      	ADIW R28,8
                 ; 0000 030A     else{
0003e8 c00c      	RJMP _0x111
                 _0x3A:
                 ; 0000 030B     LED_SEGMENT_A = 1;
0003e9 9aae      	SBI  0x15,6
                 ; 0000 030C     LED_SEGMENT_B = 1;
0003ea 9aac      	SBI  0x15,4
                 ; 0000 030D     LED_SEGMENT_C = 1;
0003eb 9aa9      	SBI  0x15,1
                 ; 0000 030E     LED_SEGMENT_D = 1;
0003ec 9aab      	SBI  0x15,3
                 ; 0000 030F     LED_SEGMENT_E = 1;
0003ed 9a97      	SBI  0x12,7
                 ; 0000 0310     LED_SEGMENT_F = 1;
0003ee 9aad      	SBI  0x15,5
                 ; 0000 0311     LED_SEGMENT_G = 1;
0003ef 9aa8      	SBI  0x15,0
                 ; 0000 0312     LED_SEGMENT_H = 1;
0003f0 9aaa      	SBI  0x15,2
                 ; 0000 0313 
                 ; 0000 0314     PORTC.7 = 0;    // 1
0003f1 98af      	CBI  0x15,7
                 ; 0000 0315     PORTA.6 = 0;    // 2
0003f2 98de      	CBI  0x1B,6
                 ; 0000 0316     PORTA.7 = 0;    // 3
0003f3 98df      	CBI  0x1B,7
                 ; 0000 0317     PORTA.4 = 0;    // 4
0003f4 98dc      	CBI  0x1B,4
                 ; 0000 0318     }
                 _0x111:
                 ; 0000 0319 
                 ; 0000 031A     for(i=0;i<4;i++){LcdText[i] = 0;LcdTaskas[i] = 0;}
0003f5 e010      	LDI  R17,LOW(0)
                 _0x12B:
0003f6 3014      	CPI  R17,4
0003f7 f468      	BRSH _0x12C
0003f8 2fe1      	MOV  R30,R17
0003f9 e0f0      	LDI  R31,0
0003fa 59ec      	SUBI R30,LOW(-_LcdText)
0003fb 4ffe      	SBCI R31,HIGH(-_LcdText)
0003fc e0a0      	LDI  R26,LOW(0)
0003fd 83a0      	STD  Z+0,R26
0003fe 2fe1      	MOV  R30,R17
0003ff e0f0      	LDI  R31,0
000400 59e8      	SUBI R30,LOW(-_LcdTaskas)
000401 4ffe      	SBCI R31,HIGH(-_LcdTaskas)
000402 83a0      	STD  Z+0,R26
000403 5f1f      	SUBI R17,-1
000404 cff1      	RJMP _0x12B
                 _0x12C:
                 ; 0000 031B return 1;
000405 e0e1      	LDI  R30,LOW(1)
000406 9109      	LD   R16,Y+
000407 9119      	LD   R17,Y+
000408 9508      	RET
                 ; 0000 031C }
                 ;
                 ;char CheckButtons(){
                 ; 0000 031E char CheckButtons(){
                 _CheckButtons:
                 ; 0000 031F     if(PINA.0==0){BUTTON[0] = 1;}else{BUTTON[0] = 0;}
000409 99c8      	SBIC 0x19,0
00040a c002      	RJMP _0x12D
00040b e0e1      	LDI  R30,LOW(1)
00040c c001      	RJMP _0x214
                 _0x12D:
00040d e0e0      	LDI  R30,LOW(0)
                 _0x214:
00040e 93e0 0160 	STS  _BUTTON,R30
                 ; 0000 0320     if(PINA.1==0){BUTTON[1] = 1;}else{BUTTON[1] = 0;}
000410 99c9      	SBIC 0x19,1
000411 c002      	RJMP _0x12F
000412 e0e1      	LDI  R30,LOW(1)
000413 c001      	RJMP _0x215
                 _0x12F:
000414 e0e0      	LDI  R30,LOW(0)
                 _0x215:
                +
000415 93e0 0161+STS _BUTTON + ( 1 ) , R30
                 	__PUTB1MN _BUTTON,1
                 ; 0000 0321     if(PINA.2==0){BUTTON[2] = 1;}else{BUTTON[2] = 0;}
000417 99ca      	SBIC 0x19,2
000418 c002      	RJMP _0x131
000419 e0e1      	LDI  R30,LOW(1)
00041a c001      	RJMP _0x216
                 _0x131:
00041b e0e0      	LDI  R30,LOW(0)
                 _0x216:
                +
00041c 93e0 0162+STS _BUTTON + ( 2 ) , R30
                 	__PUTB1MN _BUTTON,2
                 ; 0000 0322     if(PINA.3==0){BUTTON[3] = 1;}else{BUTTON[3] = 0;}
00041e 99cb      	SBIC 0x19,3
00041f c002      	RJMP _0x133
000420 e0e1      	LDI  R30,LOW(1)
000421 c001      	RJMP _0x217
                 _0x133:
000422 e0e0      	LDI  R30,LOW(0)
                 _0x217:
                +
000423 93e0 0163+STS _BUTTON + ( 3 ) , R30
                 	__PUTB1MN _BUTTON,3
                 ; 0000 0323 return 1;
                 _0x2020002:
000425 e0e1      	LDI  R30,LOW(1)
000426 9508      	RET
                 ; 0000 0324 }
                 ;
                 ;void CheckBattery(){
                 ; 0000 0326 void CheckBattery(){
                 _CheckBattery:
                 ; 0000 0327 static unsigned int Timer29;
                 ; 0000 0328 Timer29++;
000427 e8ac      	LDI  R26,LOW(_Timer29_S0000007000)
000428 e0b1      	LDI  R27,HIGH(_Timer29_S0000007000)
000429 91ed      	LD   R30,X+
00042a 91fd      	LD   R31,X+
00042b 9631      	ADIW R30,1
00042c 93fe      	ST   -X,R31
00042d 93ee      	ST   -X,R30
                 ; 0000 0329     if(Timer29>=250){
00042e 91a0 018c 	LDS  R26,_Timer29_S0000007000
000430 91b0 018d 	LDS  R27,_Timer29_S0000007000+1
000432 3faa      	CPI  R26,LOW(0xFA)
000433 e0e0      	LDI  R30,HIGH(0xFA)
000434 07be      	CPC  R27,R30
000435 f410      	BRSH PC+3
000436 940c 048c 	JMP _0x135
                 ; 0000 032A     unsigned int Bits = read_adc(5);
                 ; 0000 032B     unsigned int MomentVoltage, VoltageSum = 0;
                 ; 0000 032C     char i;
                 ; 0000 032D 
                 ; 0000 032E     MomentVoltage = Bits/5 - Bits/90;
000438 9727      	SBIW R28,7
000439 e0e0      	LDI  R30,LOW(0)
00043a 83e9      	STD  Y+1,R30
00043b 83ea      	STD  Y+2,R30
                 ;	Bits -> Y+5
                 ;	MomentVoltage -> Y+3
                 ;	VoltageSum -> Y+1
                 ;	i -> Y+0
00043c e0e5      	LDI  R30,LOW(5)
00043d 93ea      	ST   -Y,R30
00043e dc21      	RCALL _read_adc
00043f 83ed      	STD  Y+5,R30
000440 83fe      	STD  Y+5+1,R31
000441 81ad      	LDD  R26,Y+5
000442 81be      	LDD  R27,Y+5+1
000443 e0e5      	LDI  R30,LOW(5)
000444 e0f0      	LDI  R31,HIGH(5)
000445 940e 0e3f 	CALL __DIVW21U
000447 01bf      	MOVW R22,R30
000448 81ad      	LDD  R26,Y+5
000449 81be      	LDD  R27,Y+5+1
00044a e5ea      	LDI  R30,LOW(90)
00044b e0f0      	LDI  R31,HIGH(90)
00044c 940e 0e3f 	CALL __DIVW21U
00044e 01db      	MOVW R26,R22
00044f 1bae      	SUB  R26,R30
000450 0bbf      	SBC  R27,R31
000451 83ab      	STD  Y+3,R26
000452 83bc      	STD  Y+3+1,R27
                 ; 0000 032F 
                 ; 0000 0330         for(i=9;i>0;i--){
000453 e0e9      	LDI  R30,LOW(9)
000454 83e8      	ST   Y,R30
                 _0x137:
000455 81a8      	LD   R26,Y
000456 30a1      	CPI  R26,LOW(0x1)
000457 f070      	BRLO _0x138
                 ; 0000 0331         BATTERY_VOLTAGE_ARCHIVE[i] = BATTERY_VOLTAGE_ARCHIVE[i-1];
000458 e0b0      	LDI  R27,0
000459 58a0      	SUBI R26,LOW(-_BATTERY_VOLTAGE_ARCHIVE)
00045a 4fbe      	SBCI R27,HIGH(-_BATTERY_VOLTAGE_ARCHIVE)
00045b 81e8      	LD   R30,Y
00045c e0f0      	LDI  R31,0
00045d 9731      	SBIW R30,1
00045e 58e0      	SUBI R30,LOW(-_BATTERY_VOLTAGE_ARCHIVE)
00045f 4ffe      	SBCI R31,HIGH(-_BATTERY_VOLTAGE_ARCHIVE)
000460 81e0      	LD   R30,Z
000461 93ec      	ST   X,R30
                 ; 0000 0332         }
000462 81e8      	LD   R30,Y
000463 50e1      	SUBI R30,LOW(1)
000464 83e8      	ST   Y,R30
000465 cfef      	RJMP _0x137
                 _0x138:
                 ; 0000 0333     BATTERY_VOLTAGE_ARCHIVE[0] = MomentVoltage;
000466 81eb      	LDD  R30,Y+3
000467 93e0 0180 	STS  _BATTERY_VOLTAGE_ARCHIVE,R30
                 ; 0000 0334 
                 ; 0000 0335         for(i=0;i<10;i++){
000469 e0e0      	LDI  R30,LOW(0)
00046a 83e8      	ST   Y,R30
                 _0x13A:
00046b 81a8      	LD   R26,Y
00046c 30aa      	CPI  R26,LOW(0xA)
00046d f480      	BRSH _0x13B
                 ; 0000 0336         VoltageSum = VoltageSum + BATTERY_VOLTAGE_ARCHIVE[i];
00046e 81e8      	LD   R30,Y
00046f e0f0      	LDI  R31,0
000470 58e0      	SUBI R30,LOW(-_BATTERY_VOLTAGE_ARCHIVE)
000471 4ffe      	SBCI R31,HIGH(-_BATTERY_VOLTAGE_ARCHIVE)
000472 81e0      	LD   R30,Z
000473 e0f0      	LDI  R31,0
000474 81a9      	LDD  R26,Y+1
000475 81ba      	LDD  R27,Y+1+1
000476 0fea      	ADD  R30,R26
000477 1ffb      	ADC  R31,R27
000478 83e9      	STD  Y+1,R30
000479 83fa      	STD  Y+1+1,R31
                 ; 0000 0337         }
00047a 81e8      	LD   R30,Y
00047b 5fef      	SUBI R30,-LOW(1)
00047c 83e8      	ST   Y,R30
00047d cfed      	RJMP _0x13A
                 _0x13B:
                 ; 0000 0338     BATTERY_VOLTAGE = VoltageSum/10;
00047e 81a9      	LDD  R26,Y+1
00047f 81ba      	LDD  R27,Y+1+1
000480 e0ea      	LDI  R30,LOW(10)
000481 e0f0      	LDI  R31,HIGH(10)
000482 940e 0e3f 	CALL __DIVW21U
000484 93e0 017f 	STS  _BATTERY_VOLTAGE,R30
                 ; 0000 0339 
                 ; 0000 033A     Timer29 = 0;
000486 e0e0      	LDI  R30,LOW(0)
000487 93e0 018c 	STS  _Timer29_S0000007000,R30
000489 93e0 018d 	STS  _Timer29_S0000007000+1,R30
                 ; 0000 033B     }
00048b 9627      	ADIW R28,7
                 ; 0000 033C }
                 _0x135:
00048c 9508      	RET
                 ;
                 ;unsigned char led_put_runing_text(unsigned int Position,unsigned char flash *str){
                 ; 0000 033E unsigned char led_put_runing_text(unsigned int Position,unsigned char flash *str){
                 _led_put_runing_text:
                 ; 0000 033F unsigned int StrLenght = strlenf(str);
                 ; 0000 0340 signed int i,a;
                 ; 0000 0341     for(i=0;i<4;i++){
00048d 940e 0e8e 	CALL __SAVELOCR6
                 ;	Position -> Y+8
                 ;	*str -> Y+6
                 ;	StrLenght -> R16,R17
                 ;	i -> R18,R19
                 ;	a -> R20,R21
00048f 81ee      	LDD  R30,Y+6
000490 81ff      	LDD  R31,Y+6+1
000491 93fa      	ST   -Y,R31
000492 93ea      	ST   -Y,R30
000493 940e 0e17 	CALL _strlenf
000495 018f      	MOVW R16,R30
                +
000496 e020     +LDI R18 , LOW ( 0 )
000497 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x13D:
                +
000498 3024     +CPI R18 , LOW ( 4 )
000499 e0e0     +LDI R30 , HIGH ( 4 )
00049a 073e     +CPC R19 , R30
                 	__CPWRN 18,19,4
00049b f504      	BRGE _0x13E
                 ; 0000 0342     a = i + Position - 4;
00049c 85e8      	LDD  R30,Y+8
00049d 85f9      	LDD  R31,Y+8+1
00049e 0fe2      	ADD  R30,R18
00049f 1ff3      	ADC  R31,R19
0004a0 9734      	SBIW R30,4
0004a1 01af      	MOVW R20,R30
                 ; 0000 0343         if(a>=0){
0004a2 2355      	TST  R21
0004a3 f0aa      	BRMI _0x13F
                 ; 0000 0344             if(a<StrLenght){
                +
0004a4 1740     +CP R20 , R16
0004a5 0751     +CPC R21 , R17
                 	__CPWRR 20,21,16,17
0004a6 f468      	BRSH _0x140
                 ; 0000 0345             //lcd_putchar(str[a]);
                 ; 0000 0346             LcdText[i] = str[a];
0004a7 01f9      	MOVW R30,R18
0004a8 59ec      	SUBI R30,LOW(-_LcdText)
0004a9 4ffe      	SBCI R31,HIGH(-_LcdText)
0004aa 010f      	MOVW R0,R30
0004ab 01fa      	MOVW R30,R20
0004ac 81ae      	LDD  R26,Y+6
0004ad 81bf      	LDD  R27,Y+6+1
0004ae 0fea      	ADD  R30,R26
0004af 1ffb      	ADC  R31,R27
0004b0 91e4      	LPM  R30,Z
0004b1 01d0      	MOVW R26,R0
0004b2 93ec      	ST   X,R30
                 ; 0000 0347             }
                 ; 0000 0348             else{
0004b3 c005      	RJMP _0x141
                 _0x140:
                 ; 0000 0349                 if(i==0){
0004b4 2e02      	MOV  R0,R18
0004b5 2a03      	OR   R0,R19
0004b6 f411      	BRNE _0x142
                 ; 0000 034A                 return 1;
0004b7 e0e1      	LDI  R30,LOW(1)
0004b8 c004      	RJMP _0x2020001
                 ; 0000 034B                 }
                 ; 0000 034C             }
                 _0x142:
                 _0x141:
                 ; 0000 034D         }
                 ; 0000 034E     }
                 _0x13F:
                +
0004b9 5f2f     +SUBI R18 , LOW ( - 1 )
0004ba 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
0004bb cfdc      	RJMP _0x13D
                 _0x13E:
                 ; 0000 034F return 0;
0004bc e0e0      	LDI  R30,LOW(0)
                 _0x2020001:
0004bd 940e 0e95 	CALL __LOADLOCR6
0004bf 962a      	ADIW R28,10
0004c0 9508      	RET
                 ; 0000 0350 }
                 ;
                 ;unsigned int Timer16;// 1 savaites taimerio sekundziu skaicius
                 ;eeprom unsigned int Timer17;// 1 savaites taimerio minuciu skaicius
                 ;eeprom unsigned int Timer18;// 1 savaites taimerio valandu skaicius
                 ;unsigned char StartDischargeAfter(   unsigned char days,     unsigned char hours,
                 ; 0000 0356                             unsigned char minutes,  unsigned char seconds){
                 _StartDischargeAfter:
                 ; 0000 0357 Timer16 = seconds;
                 ;	days -> Y+3
                 ;	hours -> Y+2
                 ;	minutes -> Y+1
                 ;	seconds -> Y+0
0004c1 81e8      	LD   R30,Y
0004c2 e0f0      	LDI  R31,0
0004c3 93e0 018e 	STS  _Timer16,R30
0004c5 93f0 018f 	STS  _Timer16+1,R31
                 ; 0000 0358 Timer17 = minutes;
0004c7 81e9      	LDD  R30,Y+1
0004c8 e0a5      	LDI  R26,LOW(_Timer17)
0004c9 e0b0      	LDI  R27,HIGH(_Timer17)
0004ca e0f0      	LDI  R31,0
0004cb 940e 0e75 	CALL __EEPROMWRW
                 ; 0000 0359 Timer18 = hours + days*24;
0004cd 816a      	LDD  R22,Y+2
0004ce 2777      	CLR  R23
0004cf 81ab      	LDD  R26,Y+3
0004d0 e1e8      	LDI  R30,LOW(24)
0004d1 02ea      	MULS R30,R26
0004d2 01f0      	MOVW R30,R0
0004d3 0fe6      	ADD  R30,R22
0004d4 1ff7      	ADC  R31,R23
0004d5 e0a7      	LDI  R26,LOW(_Timer18)
0004d6 e0b0      	LDI  R27,HIGH(_Timer18)
0004d7 940e 0e75 	CALL __EEPROMWRW
                 ; 0000 035A return 1;
0004d9 e0e1      	LDI  R30,LOW(1)
0004da 9624      	ADIW R28,4
0004db 9508      	RET
                 ; 0000 035B }
                 ;
                 ;
                 ;// Timer 0 overflow interrupt service routine
                 ;unsigned int InteruptTimer;
                 ;interrupt [TIM0_OVF] void timer0_ovf_isr(void){
                 ; 0000 0360 interrupt [10] void timer0_ovf_isr(void){
                 _timer0_ovf_isr:
0004dc 93aa      	ST   -Y,R26
0004dd 93ba      	ST   -Y,R27
0004de 93ea      	ST   -Y,R30
0004df 93fa      	ST   -Y,R31
0004e0 b7ef      	IN   R30,SREG
0004e1 93ea      	ST   -Y,R30
                 ; 0000 0361 
                 ; 0000 0362 InteruptTimer++;
0004e2 e9a0      	LDI  R26,LOW(_InteruptTimer)
0004e3 e0b1      	LDI  R27,HIGH(_InteruptTimer)
0004e4 91ed      	LD   R30,X+
0004e5 91fd      	LD   R31,X+
0004e6 9631      	ADIW R30,1
0004e7 93fe      	ST   -X,R31
0004e8 93ee      	ST   -X,R30
                 ; 0000 0363 /////////////////////////// 1 Second Callback ///////////////////////////////////////
                 ; 0000 0364     if(InteruptTimer>=495){
0004e9 91a0 0190 	LDS  R26,_InteruptTimer
0004eb 91b0 0191 	LDS  R27,_InteruptTimer+1
0004ed 3eaf      	CPI  R26,LOW(0x1EF)
0004ee e0e1      	LDI  R30,HIGH(0x1EF)
0004ef 07be      	CPC  R27,R30
0004f0 f038      	BRLO _0x143
                 ; 0000 0365     RealTime = 1;
0004f1 e0e1      	LDI  R30,LOW(1)
0004f2 2eae      	MOV  R10,R30
                 ; 0000 0366     InteruptTimer = 0;
0004f3 e0e0      	LDI  R30,LOW(0)
0004f4 93e0 0190 	STS  _InteruptTimer,R30
0004f6 93e0 0191 	STS  _InteruptTimer+1,R30
                 ; 0000 0367     }
                 ; 0000 0368 /////////////////////////////////////////////////////////////////////////////////////
                 ; 0000 0369 }
                 _0x143:
0004f8 91e9      	LD   R30,Y+
0004f9 bfef      	OUT  SREG,R30
0004fa 91f9      	LD   R31,Y+
0004fb 91e9      	LD   R30,Y+
0004fc 91b9      	LD   R27,Y+
0004fd 91a9      	LD   R26,Y+
0004fe 9518      	RETI
                 ;
                 ;
                 ;void main(void){
                 ; 0000 036C void main(void){
                 _main:
                 ; 0000 036D // Crystal Oscillator division factor: 1
                 ; 0000 036E PORTA=0x00;
0004ff e0e0      	LDI  R30,LOW(0)
000500 bbeb      	OUT  0x1B,R30
                 ; 0000 036F DDRA=0b11010000;
000501 ede0      	LDI  R30,LOW(208)
000502 bbea      	OUT  0x1A,R30
                 ; 0000 0370 
                 ; 0000 0371 PORTB=0x00;
000503 e0e0      	LDI  R30,LOW(0)
000504 bbe8      	OUT  0x18,R30
                 ; 0000 0372 DDRB=0b00;
000505 bbe7      	OUT  0x17,R30
                 ; 0000 0373 
                 ; 0000 0374 PORTC=0x00;
000506 bbe5      	OUT  0x15,R30
                 ; 0000 0375 DDRC=0b11111111;
000507 efef      	LDI  R30,LOW(255)
000508 bbe4      	OUT  0x14,R30
                 ; 0000 0376 
                 ; 0000 0377 PORTD=0x00;
000509 e0e0      	LDI  R30,LOW(0)
00050a bbe2      	OUT  0x12,R30
                 ; 0000 0378 DDRD=0b11111100;
00050b efec      	LDI  R30,LOW(252)
00050c bbe1      	OUT  0x11,R30
                 ; 0000 0379 
                 ; 0000 037A // Timer/Counter 0 initialization
                 ; 0000 037B // Clock source: System Clock
                 ; 0000 037C // Clock value: 125.000 kHz
                 ; 0000 037D // Mode: Normal top=FFh
                 ; 0000 037E // OC0 output: Disconnected
                 ; 0000 037F TCCR0=0x03;
00050d e0e3      	LDI  R30,LOW(3)
00050e bfe3      	OUT  0x33,R30
                 ; 0000 0380 TCNT0=0x00;
00050f e0e0      	LDI  R30,LOW(0)
000510 bfe2      	OUT  0x32,R30
                 ; 0000 0381 OCR0=0x00;
000511 bfec      	OUT  0x3C,R30
                 ; 0000 0382 
                 ; 0000 0383 // Timer/Counter 1 initialization
                 ; 0000 0384 // Clock source: System Clock
                 ; 0000 0385 // Clock value: Timer1 Stopped
                 ; 0000 0386 // Mode: Normal top=FFFFh
                 ; 0000 0387 // OC1A output: Discon.
                 ; 0000 0388 // OC1B output: Discon.
                 ; 0000 0389 // Noise Canceler: Off
                 ; 0000 038A // Input Capture on Falling Edge
                 ; 0000 038B // Timer1 Overflow Interrupt: Off
                 ; 0000 038C // Input Capture Interrupt: Off
                 ; 0000 038D // Compare A Match Interrupt: Off
                 ; 0000 038E // Compare B Match Interrupt: Off
                 ; 0000 038F TCCR1A=0x00;
000512 bdef      	OUT  0x2F,R30
                 ; 0000 0390 TCCR1B=0x00;
000513 bdee      	OUT  0x2E,R30
                 ; 0000 0391 TCNT1H=0x00;
000514 bded      	OUT  0x2D,R30
                 ; 0000 0392 TCNT1L=0x00;
000515 bdec      	OUT  0x2C,R30
                 ; 0000 0393 ICR1H=0x00;
000516 bde7      	OUT  0x27,R30
                 ; 0000 0394 ICR1L=0x00;
000517 bde6      	OUT  0x26,R30
                 ; 0000 0395 OCR1AH=0x00;
000518 bdeb      	OUT  0x2B,R30
                 ; 0000 0396 OCR1AL=0x00;
000519 bdea      	OUT  0x2A,R30
                 ; 0000 0397 OCR1BH=0x00;
00051a bde9      	OUT  0x29,R30
                 ; 0000 0398 OCR1BL=0x00;
00051b bde8      	OUT  0x28,R30
                 ; 0000 0399 
                 ; 0000 039A // Timer/Counter 2 initialization
                 ; 0000 039B // Clock source: System Clock
                 ; 0000 039C // Clock value: Timer2 Stopped
                 ; 0000 039D // Mode: Normal top=FFh
                 ; 0000 039E // OC2 output: Disconnected
                 ; 0000 039F ASSR=0x00;
00051c bde2      	OUT  0x22,R30
                 ; 0000 03A0 //TCCR2=0x00;
                 ; 0000 03A1 TCNT2=0x00;
00051d bde4      	OUT  0x24,R30
                 ; 0000 03A2 OCR2=0x00;
00051e bde3      	OUT  0x23,R30
                 ; 0000 03A3 
                 ; 0000 03A4 // External Interrupt(s) initialization
                 ; 0000 03A5 // INT0: Off
                 ; 0000 03A6 // INT1: Off
                 ; 0000 03A7 // INT2: Off
                 ; 0000 03A8 MCUCR=0x00;
00051f bfe5      	OUT  0x35,R30
                 ; 0000 03A9 MCUCSR=0x00;
000520 bfe4      	OUT  0x34,R30
                 ; 0000 03AA 
                 ; 0000 03AB // Timer(s)/Counter(s) Interrupt(s) initialization
                 ; 0000 03AC TIMSK=0x01;
000521 e0e1      	LDI  R30,LOW(1)
000522 bfe9      	OUT  0x39,R30
                 ; 0000 03AD 
                 ; 0000 03AE // Analog Comparator initialization
                 ; 0000 03AF // Analog Comparator: Off
                 ; 0000 03B0 // Analog Comparator Input Capture by Timer/Counter 1: Off
                 ; 0000 03B1 ACSR=0x80;
000523 e8e0      	LDI  R30,LOW(128)
000524 b9e8      	OUT  0x8,R30
                 ; 0000 03B2 SFIOR=0x00;
000525 e0e0      	LDI  R30,LOW(0)
000526 bfe0      	OUT  0x30,R30
                 ; 0000 03B3 
                 ; 0000 03B4 // ADC initialization
                 ; 0000 03B5 // ADC Clock frequency: 62.500 kHz
                 ; 0000 03B6 // ADC Voltage Reference: Int., cap. on AREF
                 ; 0000 03B7 // ADC Auto Trigger Source: Free Running
                 ; 0000 03B8 ADMUX=ADC_VREF_TYPE & 0xff;
000527 e4e0      	LDI  R30,LOW(64)
000528 b9e7      	OUT  0x7,R30
                 ; 0000 03B9 ADCSRA=0xA7;
000529 eae7      	LDI  R30,LOW(167)
00052a b9e6      	OUT  0x6,R30
                 ; 0000 03BA SFIOR&=0x1F;
00052b b7e0      	IN   R30,0x30
00052c 71ef      	ANDI R30,LOW(0x1F)
00052d bfe0      	OUT  0x30,R30
                 ; 0000 03BB 
                 ; 0000 03BC // Global enable interrupts
                 ; 0000 03BD #asm("sei")
00052e 9478      	sei
                 ; 0000 03BE 
                 ; 0000 03BF 
                 ; 0000 03C0 // Watchdog Timer initialization
                 ; 0000 03C1 // Watchdog Timer Prescaler: OSC/128k
                 ; 0000 03C2 WDTCR=0x0B;
00052f e0eb      	LDI  R30,LOW(11)
000530 bde1      	OUT  0x21,R30
                 ; 0000 03C3 
                 ; 0000 03C4 
                 ; 0000 03C5 // Kai pasijungia ir buna nesamoningi skaiciai reikia nuresetint i default'us
                 ; 0000 03C6     if((Timer4==65535)||(Timer5==65535)){Timer4 = 0;Timer5 = 0;}
000531 e0a1      	LDI  R26,LOW(_Timer4)
000532 e0b0      	LDI  R27,HIGH(_Timer4)
000533 940e 0e69 	CALL __EEPROMRDB
000535 e0f0      	LDI  R31,0
000536 3fef      	CPI  R30,LOW(0xFFFF)
000537 efaf      	LDI  R26,HIGH(0xFFFF)
000538 07fa      	CPC  R31,R26
000539 f049      	BREQ _0x145
00053a e0a2      	LDI  R26,LOW(_Timer5)
00053b e0b0      	LDI  R27,HIGH(_Timer5)
00053c 940e 0e69 	CALL __EEPROMRDB
00053e e0f0      	LDI  R31,0
00053f 3fef      	CPI  R30,LOW(0xFFFF)
000540 efaf      	LDI  R26,HIGH(0xFFFF)
000541 07fa      	CPC  R31,R26
000542 f449      	BRNE _0x144
                 _0x145:
000543 e0a1      	LDI  R26,LOW(_Timer4)
000544 e0b0      	LDI  R27,HIGH(_Timer4)
000545 e0e0      	LDI  R30,LOW(0)
000546 940e 0e7d 	CALL __EEPROMWRB
000548 e0a2      	LDI  R26,LOW(_Timer5)
000549 e0b0      	LDI  R27,HIGH(_Timer5)
00054a 940e 0e7d 	CALL __EEPROMWRB
                 ; 0000 03C7 
                 ; 0000 03C8     if(BATTERY_FOULT==255){BATTERY_FOULT = 0;}
                 _0x144:
00054c e0a0      	LDI  R26,LOW(_BATTERY_FOULT)
00054d e0b0      	LDI  R27,HIGH(_BATTERY_FOULT)
00054e 940e 0e69 	CALL __EEPROMRDB
000550 3fef      	CPI  R30,LOW(0xFF)
000551 f429      	BRNE _0x147
000552 e0a0      	LDI  R26,LOW(_BATTERY_FOULT)
000553 e0b0      	LDI  R27,HIGH(_BATTERY_FOULT)
000554 e0e0      	LDI  R30,LOW(0)
000555 940e 0e7d 	CALL __EEPROMWRB
                 ; 0000 03C9 
                 ; 0000 03CA     if(Timer18>168){ StartDischargeAfter(7,0,0,0);}
                 _0x147:
000557 e0a7      	LDI  R26,LOW(_Timer18)
000558 e0b0      	LDI  R27,HIGH(_Timer18)
000559 940e 0e65 	CALL __EEPROMRDW
00055b 3ae9      	CPI  R30,LOW(0xA9)
00055c e0a0      	LDI  R26,HIGH(0xA9)
00055d 07fa      	CPC  R31,R26
00055e f038      	BRLO _0x148
00055f e0e7      	LDI  R30,LOW(7)
000560 93ea      	ST   -Y,R30
000561 e0e0      	LDI  R30,LOW(0)
000562 93ea      	ST   -Y,R30
000563 93ea      	ST   -Y,R30
000564 93ea      	ST   -Y,R30
000565 df5b      	RCALL _StartDischargeAfter
                 ; 0000 03CB 
                 ; 0000 03CC     if(MAX_BATTERY_VOLTAGE>=200){MAX_BATTERY_VOLTAGE = 146;}
                 _0x148:
000566 e0a3      	LDI  R26,LOW(_MAX_BATTERY_VOLTAGE)
000567 e0b0      	LDI  R27,HIGH(_MAX_BATTERY_VOLTAGE)
000568 940e 0e69 	CALL __EEPROMRDB
00056a 3ce8      	CPI  R30,LOW(0xC8)
00056b f028      	BRLO _0x149
00056c e0a3      	LDI  R26,LOW(_MAX_BATTERY_VOLTAGE)
00056d e0b0      	LDI  R27,HIGH(_MAX_BATTERY_VOLTAGE)
00056e e9e2      	LDI  R30,LOW(146)
00056f 940e 0e7d 	CALL __EEPROMWRB
                 ; 0000 03CD 
                 ; 0000 03CE     if(MIN_BATTERY_VOLTAGE>=200){MIN_BATTERY_VOLTAGE = 110;}
                 _0x149:
000571 e0a4      	LDI  R26,LOW(_MIN_BATTERY_VOLTAGE)
000572 e0b0      	LDI  R27,HIGH(_MIN_BATTERY_VOLTAGE)
000573 940e 0e69 	CALL __EEPROMRDB
000575 3ce8      	CPI  R30,LOW(0xC8)
000576 f028      	BRLO _0x14A
000577 e0a4      	LDI  R26,LOW(_MIN_BATTERY_VOLTAGE)
000578 e0b0      	LDI  R27,HIGH(_MIN_BATTERY_VOLTAGE)
000579 e6ee      	LDI  R30,LOW(110)
00057a 940e 0e7d 	CALL __EEPROMWRB
                 ; 0000 03CF /////////////////////////////////////////////////////////////////////////////
                 ; 0000 03D0 
                 ; 0000 03D1 UPS_STATE = 1;
                 _0x14A:
00057c e0e1      	LDI  R30,LOW(1)
00057d 2e7e      	MOV  R7,R30
                 ; 0000 03D2 
                 ; 0000 03D3 // Ijungiant prabega uzrasas "HELLO"
                 ; 0000 03D4 static unsigned int Timer1;// "HELLO" Taimeris
                 ; 0000 03D5     while(Timer1<2000){
                 _0x14B:
00057e 91a0 0192 	LDS  R26,_Timer1_S000000B000
000580 91b0 0193 	LDS  R27,_Timer1_S000000B000+1
000582 3da0      	CPI  R26,LOW(0x7D0)
000583 e0e7      	LDI  R30,HIGH(0x7D0)
000584 07be      	CPC  R27,R30
000585 f500      	BRSH _0x14D
                 ; 0000 03D6     unsigned char HelloPadetis = Timer1/200;
                 ; 0000 03D7     UpdateVariableOSC();
000586 9721      	SBIW R28,1
                 ;	HelloPadetis -> Y+0
000587 ece8      	LDI  R30,LOW(200)
000588 e0f0      	LDI  R31,HIGH(200)
000589 940e 0e3f 	CALL __DIVW21U
00058b 83e8      	ST   Y,R30
00058c db15      	RCALL _UpdateVariableOSC
                 ; 0000 03D8     Timer1++;
00058d e9a2      	LDI  R26,LOW(_Timer1_S000000B000)
00058e e0b1      	LDI  R27,HIGH(_Timer1_S000000B000)
00058f 91ed      	LD   R30,X+
000590 91fd      	LD   R31,X+
000591 9631      	ADIW R30,1
000592 93fe      	ST   -X,R31
000593 93ee      	ST   -X,R30
                 ; 0000 03D9     led_put_runing_text(HelloPadetis,"HELLO");
000594 81e8      	LD   R30,Y
000595 e0f0      	LDI  R31,0
000596 93fa      	ST   -Y,R31
000597 93ea      	ST   -Y,R30
                +
000598 e5e4     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
000599 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
00059a 93fa      	ST   -Y,R31
00059b 93ea      	ST   -Y,R30
00059c def0      	RCALL _led_put_runing_text
                 ; 0000 03DA     UpdateLcd();
00059d db3a      	RCALL _UpdateLcd
                 ; 0000 03DB     delay_ms(1);
00059e e0e1      	LDI  R30,LOW(1)
00059f e0f0      	LDI  R31,HIGH(1)
0005a0 93fa      	ST   -Y,R31
0005a1 93ea      	ST   -Y,R30
0005a2 940e 0e22 	CALL _delay_ms
                 ; 0000 03DC     }
0005a4 9621      	ADIW R28,1
0005a5 cfd8      	RJMP _0x14B
                 _0x14D:
                 ; 0000 03DD 
                 ; 0000 03DE // Programos kodas
                 ; 0000 03DF     while(1){
                 _0x14E:
                 ; 0000 03E0     UpdateVariableOSC();
0005a6 dafb      	RCALL _UpdateVariableOSC
                 ; 0000 03E1     CheckBattery();
0005a7 de7f      	RCALL _CheckBattery
                 ; 0000 03E2 
                 ; 0000 03E3 
                 ; 0000 03E4 
                 ; 0000 03E5 //////////////////////////// 1 sec callback ////////////////////////////////////////
                 ; 0000 03E6         if(RealTime==1){
0005a8 e0e1      	LDI  R30,LOW(1)
0005a9 15ea      	CP   R30,R10
0005aa f011      	BREQ PC+3
0005ab 940c 062e 	JMP _0x151
                 ; 0000 03E7         //////////// 1 SAVAITES TIMERIS /////////////
                 ; 0000 03E8             if(UPS_STATE!=2){
0005ad e0e2      	LDI  R30,LOW(2)
0005ae 15e7      	CP   R30,R7
0005af f411      	BRNE PC+3
0005b0 940c 0609 	JMP _0x152
                 ; 0000 03E9                 if((Timer16>0)||(Timer17>0)||(Timer18>0)){
0005b2 91a0 018e 	LDS  R26,_Timer16
0005b4 91b0 018f 	LDS  R27,_Timer16+1
0005b6 9710      	SBIW R26,0
0005b7 f461      	BRNE _0x154
0005b8 e0a5      	LDI  R26,LOW(_Timer17)
0005b9 e0b0      	LDI  R27,HIGH(_Timer17)
0005ba 940e 0e65 	CALL __EEPROMRDW
0005bc 9730      	SBIW R30,0
0005bd f431      	BRNE _0x154
0005be e0a7      	LDI  R26,LOW(_Timer18)
0005bf e0b0      	LDI  R27,HIGH(_Timer18)
0005c0 940e 0e65 	CALL __EEPROMRDW
0005c2 9730      	SBIW R30,0
0005c3 f169      	BREQ _0x153
                 _0x154:
                 ; 0000 03EA                 // Taimeris skaiciuoja tik tada kai neissikraudinejama
                 ; 0000 03EB 
                 ; 0000 03EC                     if(Timer16==0){
0005c4 91e0 018e 	LDS  R30,_Timer16
0005c6 91f0 018f 	LDS  R31,_Timer16+1
0005c8 9730      	SBIW R30,0
0005c9 f4f1      	BRNE _0x156
                 ; 0000 03ED                     Timer16 = 60;//m
0005ca e3ec      	LDI  R30,LOW(60)
0005cb e0f0      	LDI  R31,HIGH(60)
0005cc 93e0 018e 	STS  _Timer16,R30
0005ce 93f0 018f 	STS  _Timer16+1,R31
                 ; 0000 03EE                         if(Timer17==0){
0005d0 e0a5      	LDI  R26,LOW(_Timer17)
0005d1 e0b0      	LDI  R27,HIGH(_Timer17)
0005d2 940e 0e65 	CALL __EEPROMRDW
0005d4 9730      	SBIW R30,0
0005d5 f449      	BRNE _0x157
                 ; 0000 03EF                         Timer17 = 60;
0005d6 e0a5      	LDI  R26,LOW(_Timer17)
0005d7 e0b0      	LDI  R27,HIGH(_Timer17)
0005d8 e3ec      	LDI  R30,LOW(60)
0005d9 e0f0      	LDI  R31,HIGH(60)
0005da 940e 0e75 	CALL __EEPROMWRW
                 ; 0000 03F0                         Timer18--;//h
0005dc e0a7      	LDI  R26,LOW(_Timer18)
0005dd e0b0      	LDI  R27,HIGH(_Timer18)
0005de c002      	RJMP _0x218
                 ; 0000 03F1                         }
                 ; 0000 03F2                         else{
                 _0x157:
                 ; 0000 03F3                         Timer17--;
0005df e0a5      	LDI  R26,LOW(_Timer17)
0005e0 e0b0      	LDI  R27,HIGH(_Timer17)
                 _0x218:
0005e1 940e 0e65 	CALL __EEPROMRDW
0005e3 9731      	SBIW R30,1
0005e4 940e 0e75 	CALL __EEPROMWRW
0005e6 9631      	ADIW R30,1
                 ; 0000 03F4                         }
                 ; 0000 03F5                     }
                 ; 0000 03F6                     else{
0005e7 c008      	RJMP _0x159
                 _0x156:
                 ; 0000 03F7                     Timer16--;//s
0005e8 e8ae      	LDI  R26,LOW(_Timer16)
0005e9 e0b1      	LDI  R27,HIGH(_Timer16)
0005ea 91ed      	LD   R30,X+
0005eb 91fd      	LD   R31,X+
0005ec 9731      	SBIW R30,1
0005ed 93fe      	ST   -X,R31
0005ee 93ee      	ST   -X,R30
0005ef 9631      	ADIW R30,1
                 ; 0000 03F8                     }
                 _0x159:
                 ; 0000 03F9 
                 ; 0000 03FA 
                 ; 0000 03FB                 }
                 ; 0000 03FC                 else{
0005f0 c018      	RJMP _0x15A
                 _0x153:
                 ; 0000 03FD                     if(UPS_STATE==0){
0005f1 2077      	TST  R7
0005f2 f471      	BRNE _0x15B
                 ; 0000 03FE                         if(SKIP==0){
0005f3 2044      	TST  R4
0005f4 f419      	BRNE _0x15C
                 ; 0000 03FF                         // Jei UPS neuzsiemes ir nera SKIP'o - issikraudineti
                 ; 0000 0400                         UPS_STATE = 2;
0005f5 e0e2      	LDI  R30,LOW(2)
0005f6 2e7e      	MOV  R7,R30
                 ; 0000 0401                         }
                 ; 0000 0402                         else{
0005f7 c008      	RJMP _0x15D
                 _0x15C:
                 ; 0000 0403                         // Jei UPS uzimtas pratesti
                 ; 0000 0404                         // savaitini taimeri pusvalandziu
                 ; 0000 0405                         StartDischargeAfter(0,0,30,0);
0005f8 e0e0      	LDI  R30,LOW(0)
0005f9 93ea      	ST   -Y,R30
0005fa 93ea      	ST   -Y,R30
0005fb e1ee      	LDI  R30,LOW(30)
0005fc 93ea      	ST   -Y,R30
0005fd e0e0      	LDI  R30,LOW(0)
0005fe 93ea      	ST   -Y,R30
0005ff dec1      	RCALL _StartDischargeAfter
                 ; 0000 0406                         }
                 _0x15D:
                 ; 0000 0407                     }
                 ; 0000 0408                     else{
000600 c008      	RJMP _0x15E
                 _0x15B:
                 ; 0000 0409                     // Jei UPS uzimtas pratesti
                 ; 0000 040A                     // savaitini taimeri pusvalandziu
                 ; 0000 040B                     StartDischargeAfter(0,0,30,0);
000601 e0e0      	LDI  R30,LOW(0)
000602 93ea      	ST   -Y,R30
000603 93ea      	ST   -Y,R30
000604 e1ee      	LDI  R30,LOW(30)
000605 93ea      	ST   -Y,R30
000606 e0e0      	LDI  R30,LOW(0)
000607 93ea      	ST   -Y,R30
000608 deb8      	RCALL _StartDischargeAfter
                 ; 0000 040C                     }
                 _0x15E:
                 ; 0000 040D                 }
                 _0x15A:
                 ; 0000 040E             }
                 ; 0000 040F     /////////////////////////////////////////////
                 ; 0000 0410     ////////// Discharge Time Counter ///////////
                 ; 0000 0411             if(UPS_STATE==2){
                 _0x152:
000609 e0e2      	LDI  R30,LOW(2)
00060a 15e7      	CP   R30,R7
00060b f509      	BRNE _0x15F
                 ; 0000 0412             // Iskrovimo laikas skaiciuojamas tik tada kai issikraudinejama
                 ; 0000 0413             Timer7++;//s
00060c 91e0 016c 	LDS  R30,_Timer7
00060e 5fef      	SUBI R30,-LOW(1)
00060f 93e0 016c 	STS  _Timer7,R30
                 ; 0000 0414             Timer24 = 0;
000611 e0e0      	LDI  R30,LOW(0)
000612 93e0 017b 	STS  _Timer24,R30
000614 93e0 017c 	STS  _Timer24+1,R30
                 ; 0000 0415                 if(Timer7>=60){
000616 91a0 016c 	LDS  R26,_Timer7
000618 33ac      	CPI  R26,LOW(0x3C)
000619 f098      	BRLO _0x160
                 ; 0000 0416                 Timer7 = 0;
00061a 93e0 016c 	STS  _Timer7,R30
                 ; 0000 0417                 Timer8++;//m
00061c 91e0 016d 	LDS  R30,_Timer8
00061e 5fef      	SUBI R30,-LOW(1)
00061f 93e0 016d 	STS  _Timer8,R30
                 ; 0000 0418                     if(Timer8>=60){
000621 91a0 016d 	LDS  R26,_Timer8
000623 33ac      	CPI  R26,LOW(0x3C)
000624 f040      	BRLO _0x161
                 ; 0000 0419                     Timer8 = 0;
000625 e0e0      	LDI  R30,LOW(0)
000626 93e0 016d 	STS  _Timer8,R30
                 ; 0000 041A                     Timer9++;//h
000628 91e0 016e 	LDS  R30,_Timer9
00062a 5fef      	SUBI R30,-LOW(1)
00062b 93e0 016e 	STS  _Timer9,R30
                 ; 0000 041B                     }
                 ; 0000 041C                 }
                 _0x161:
                 ; 0000 041D             }
                 _0x160:
                 ; 0000 041E     /////////////////////////////////////////////
                 ; 0000 041F         RealTime = 0;
                 _0x15F:
00062d 24aa      	CLR  R10
                 ; 0000 0420         }
                 ; 0000 0421 ////////////////////////////////////////////////////////////////////////////////////
                 ; 0000 0422 
                 ; 0000 0423 
                 ; 0000 0424 
                 ; 0000 0425 
                 ; 0000 0426 
                 ; 0000 0427 
                 ; 0000 0428 
                 ; 0000 0429 
                 ; 0000 042A 
                 ; 0000 042B 
                 ; 0000 042C 
                 ; 0000 042D 
                 ; 0000 042E 
                 ; 0000 042F //////////////////////////// SKIPER ////////////////////////////////////////////////
                 ; 0000 0430         if(PIND.2==1){
                 _0x151:
00062e 9b82      	SBIS 0x10,2
00062f c006      	RJMP _0x162
                 ; 0000 0431             if(SKIP==0){
000630 2044      	TST  R4
000631 f419      	BRNE _0x163
                 ; 0000 0432             // Isijungiant SKIP'o kontaktui - nutraukti viska ir ikrauti
                 ; 0000 0433             SKIP = 1;
000632 e0e1      	LDI  R30,LOW(1)
000633 2e4e      	MOV  R4,R30
                 ; 0000 0434             UPS_STATE = 1;
000634 2e7e      	MOV  R7,R30
                 ; 0000 0435             }
                 ; 0000 0436         }
                 _0x163:
                 ; 0000 0437         else{
000635 c001      	RJMP _0x164
                 _0x162:
                 ; 0000 0438         SKIP = 0;
000636 2444      	CLR  R4
                 ; 0000 0439         }
                 _0x164:
                 ; 0000 043A ////////////////////////////////////////////////////////////////////////////////////
                 ; 0000 043B 
                 ; 0000 043C 
                 ; 0000 043D 
                 ; 0000 043E 
                 ; 0000 043F 
                 ; 0000 0440 
                 ; 0000 0441 
                 ; 0000 0442 
                 ; 0000 0443 
                 ; 0000 0444 
                 ; 0000 0445 
                 ; 0000 0446 
                 ; 0000 0447 
                 ; 0000 0448 /////////////////////// UPS STATUSAS ///////////////////////////////////////////////
                 ; 0000 0449         if(UPS_STATE==0){
000637 2077      	TST  R7
000638 f011      	BREQ PC+3
000639 940c 067b 	JMP _0x165
                 ; 0000 044A         // Nulinis statusas
                 ; 0000 044B         unsigned char NulinioStatusoPadetis;
                 ; 0000 044C         Timer3++;// Begancio taskelio taimeris
00063b 9721      	SBIW R28,1
                 ;	NulinioStatusoPadetis -> Y+0
00063c 01f6      	MOVW R30,R12
00063d 9631      	ADIW R30,1
00063e 016f      	MOVW R12,R30
00063f 9731      	SBIW R30,1
                 ; 0000 044D 
                 ; 0000 044E             if(Timer3>=3000){// Begancio taskelio taimerio resetas
000640 ebe8      	LDI  R30,LOW(3000)
000641 e0fb      	LDI  R31,HIGH(3000)
000642 16ce      	CP   R12,R30
000643 06df      	CPC  R13,R31
000644 f010      	BRLO _0x166
                 ; 0000 044F             Timer3 = 0;
000645 24cc      	CLR  R12
000646 24dd      	CLR  R13
                 ; 0000 0450             }
                 ; 0000 0451         NulinioStatusoPadetis = Timer3/500;
                 _0x166:
000647 01d6      	MOVW R26,R12
000648 efe4      	LDI  R30,LOW(500)
000649 e0f1      	LDI  R31,HIGH(500)
00064a 940e 0e3f 	CALL __DIVW21U
00064c 83e8      	ST   Y,R30
                 ; 0000 0452             if(NulinioStatusoPadetis==0){     LcdTaskas[0] = 1;}
00064d 30e0      	CPI  R30,0
00064e f421      	BRNE _0x167
00064f e0e1      	LDI  R30,LOW(1)
000650 93e0 0168 	STS  _LcdTaskas,R30
                 ; 0000 0453             else if(NulinioStatusoPadetis==1){LcdTaskas[1] = 1;}
000652 c01d      	RJMP _0x168
                 _0x167:
000653 81a8      	LD   R26,Y
000654 30a1      	CPI  R26,LOW(0x1)
000655 f0b9      	BREQ _0x219
                 ; 0000 0454             else if(NulinioStatusoPadetis==2){LcdTaskas[2] = 1;}
000656 30a2      	CPI  R26,LOW(0x2)
000657 f421      	BRNE _0x16B
000658 e0e1      	LDI  R30,LOW(1)
                +
000659 93e0 016a+STS _LcdTaskas + ( 2 ) , R30
                 	__PUTB1MN _LcdTaskas,2
                 ; 0000 0455             else if(NulinioStatusoPadetis==3){LcdTaskas[3] = 1;}
00065b c014      	RJMP _0x16C
                 _0x16B:
00065c 81a8      	LD   R26,Y
00065d 30a3      	CPI  R26,LOW(0x3)
00065e f421      	BRNE _0x16D
00065f e0e1      	LDI  R30,LOW(1)
                +
000660 93e0 016b+STS _LcdTaskas + ( 3 ) , R30
                 	__PUTB1MN _LcdTaskas,3
                 ; 0000 0456             else if(NulinioStatusoPadetis==4){LcdTaskas[2] = 1;}
000662 c00d      	RJMP _0x16E
                 _0x16D:
000663 81a8      	LD   R26,Y
000664 30a4      	CPI  R26,LOW(0x4)
000665 f421      	BRNE _0x16F
000666 e0e1      	LDI  R30,LOW(1)
                +
000667 93e0 016a+STS _LcdTaskas + ( 2 ) , R30
                 	__PUTB1MN _LcdTaskas,2
                 ; 0000 0457             else if(NulinioStatusoPadetis==5){LcdTaskas[1] = 1;}
000669 c006      	RJMP _0x170
                 _0x16F:
00066a 81a8      	LD   R26,Y
00066b 30a5      	CPI  R26,LOW(0x5)
00066c f419      	BRNE _0x171
                 _0x219:
00066d e0e1      	LDI  R30,LOW(1)
                +
00066e 93e0 0169+STS _LcdTaskas + ( 1 ) , R30
                 	__PUTB1MN _LcdTaskas,1
                 ; 0000 0458 
                 ; 0000 0459 
                 ; 0000 045A         // Tikrinti baterijas del issikrovimo
                 ; 0000 045B             if(BATTERY_VOLTAGE<=MIN_BATTERY_VOLTAGE){
                 _0x171:
                 _0x170:
                 _0x16E:
                 _0x16C:
                 _0x168:
000670 e0a4      	LDI  R26,LOW(_MIN_BATTERY_VOLTAGE)
000671 e0b0      	LDI  R27,HIGH(_MIN_BATTERY_VOLTAGE)
000672 940e 0e69 	CALL __EEPROMRDB
000674 91a0 017f 	LDS  R26,_BATTERY_VOLTAGE
000676 17ea      	CP   R30,R26
000677 f010      	BRLO _0x172
                 ; 0000 045C             UPS_STATE = 1;
000678 e0e1      	LDI  R30,LOW(1)
000679 2e7e      	MOV  R7,R30
                 ; 0000 045D             }
                 ; 0000 045E 
                 ; 0000 045F 
                 ; 0000 0460         }
                 _0x172:
00067a c0e1      	RJMP _0x21A
                 ; 0000 0461         else if(UPS_STATE==1){
                 _0x165:
00067b e0e1      	LDI  R30,LOW(1)
00067c 15e7      	CP   R30,R7
00067d f011      	BREQ PC+3
00067e 940c 06cf 	JMP _0x174
                 ; 0000 0462         // Krovimo statusas
                 ; 0000 0463             if(OLD_UPS_STATE!=1){
000680 15e6      	CP   R30,R6
000681 f039      	BREQ _0x175
                 ; 0000 0464             Timer12 = 0;
000682 e0e0      	LDI  R30,LOW(0)
000683 93e0 0173 	STS  _Timer12,R30
000685 93e0 0174 	STS  _Timer12+1,R30
                 ; 0000 0465             KRAUTI = 0;
000687 2499      	CLR  R9
                 ; 0000 0466             LOAD = 0;
000688 2488      	CLR  R8
                 ; 0000 0467             }
                 ; 0000 0468         // Charge State
                 ; 0000 0469         Timer12++;
                 _0x175:
000689 e7a3      	LDI  R26,LOW(_Timer12)
00068a e0b1      	LDI  R27,HIGH(_Timer12)
00068b 91ed      	LD   R30,X+
00068c 91fd      	LD   R31,X+
00068d 9631      	ADIW R30,1
00068e 93fe      	ST   -X,R31
00068f 93ee      	ST   -X,R30
                 ; 0000 046A             if(Timer12>=30000){
000690 91a0 0173 	LDS  R26,_Timer12
000692 91b0 0174 	LDS  R27,_Timer12+1
000694 33a0      	CPI  R26,LOW(0x7530)
000695 e7e5      	LDI  R30,HIGH(0x7530)
000696 07be      	CPC  R27,R30
000697 f028      	BRLO _0x176
                 ; 0000 046B             Timer12 = 0;
000698 e0e0      	LDI  R30,LOW(0)
000699 93e0 0173 	STS  _Timer12,R30
00069b 93e0 0174 	STS  _Timer12+1,R30
                 ; 0000 046C             }
                 ; 0000 046D 
                 ; 0000 046E             if((Timer12>=0)&&(Timer12<3000)){
                 _0x176:
00069d 91a0 0173 	LDS  R26,_Timer12
00069f 91b0 0174 	LDS  R27,_Timer12+1
0006a1 9710      	SBIW R26,0
0006a2 f020      	BRLO _0x178
0006a3 3ba8      	CPI  R26,LOW(0xBB8)
0006a4 e0eb      	LDI  R30,HIGH(0xBB8)
0006a5 07be      	CPC  R27,R30
0006a6 f008      	BRLO _0x179
                 _0x178:
0006a7 c00e      	RJMP _0x177
                 _0x179:
                 ; 0000 046F             LOAD = 1;
0006a8 e0e1      	LDI  R30,LOW(1)
0006a9 2e8e      	MOV  R8,R30
                 ; 0000 0470             KRAUTI = 0;
0006aa 2499      	CLR  R9
                 ; 0000 0471             LcdText[0] = 'L';LcdText[1] = 'o';LcdText[2] = 'A';LcdText[3] = 'd';
0006ab e4ec      	LDI  R30,LOW(76)
0006ac 93e0 0164 	STS  _LcdText,R30
0006ae e6ef      	LDI  R30,LOW(111)
                +
0006af 93e0 0165+STS _LcdText + ( 1 ) , R30
                 	__PUTB1MN _LcdText,1
0006b1 e4e1      	LDI  R30,LOW(65)
                +
0006b2 93e0 0166+STS _LcdText + ( 2 ) , R30
                 	__PUTB1MN _LcdText,2
0006b4 e6e4      	LDI  R30,LOW(100)
0006b5 c00d      	RJMP _0x21B
                 ; 0000 0472             }
                 ; 0000 0473             else{
                 _0x177:
                 ; 0000 0474             LOAD = 0;
0006b6 2488      	CLR  R8
                 ; 0000 0475             KRAUTI = 1;
0006b7 e0e1      	LDI  R30,LOW(1)
0006b8 2e9e      	MOV  R9,R30
                 ; 0000 0476             LcdText[0] = 'c';LcdText[1] = 'h';LcdText[2] = 'A';LcdText[3] = 'r';
0006b9 e6e3      	LDI  R30,LOW(99)
0006ba 93e0 0164 	STS  _LcdText,R30
0006bc e6e8      	LDI  R30,LOW(104)
                +
0006bd 93e0 0165+STS _LcdText + ( 1 ) , R30
                 	__PUTB1MN _LcdText,1
0006bf e4e1      	LDI  R30,LOW(65)
                +
0006c0 93e0 0166+STS _LcdText + ( 2 ) , R30
                 	__PUTB1MN _LcdText,2
0006c2 e7e2      	LDI  R30,LOW(114)
                 _0x21B:
                +
0006c3 93e0 0167+STS _LcdText + ( 3 ) , R30
                 	__PUTB1MN _LcdText,3
                 ; 0000 0477             }
                 ; 0000 0478 
                 ; 0000 0479             if(BATTERY_VOLTAGE>=MAX_BATTERY_VOLTAGE){
0006c5 e0a3      	LDI  R26,LOW(_MAX_BATTERY_VOLTAGE)
0006c6 e0b0      	LDI  R27,HIGH(_MAX_BATTERY_VOLTAGE)
0006c7 940e 0e69 	CALL __EEPROMRDB
0006c9 91a0 017f 	LDS  R26,_BATTERY_VOLTAGE
0006cb 17ae      	CP   R26,R30
0006cc f008      	BRLO _0x17B
                 ; 0000 047A             // Jei baterija uzsikrovusi isjungti krovima
                 ; 0000 047B             UPS_STATE = 0;
0006cd 2477      	CLR  R7
                 ; 0000 047C             }
                 ; 0000 047D         }
                 _0x17B:
                 ; 0000 047E         else if(UPS_STATE==2){
0006ce c08e      	RJMP _0x17C
                 _0x174:
0006cf e0e2      	LDI  R30,LOW(2)
0006d0 15e7      	CP   R30,R7
0006d1 f011      	BREQ PC+3
0006d2 940c 075d 	JMP _0x17D
                 ; 0000 047F         // Iskrovimo statusas
                 ; 0000 0480         unsigned char DchrPadetis;
                 ; 0000 0481         Timer24++;
0006d4 9721      	SBIW R28,1
                 ;	DchrPadetis -> Y+0
0006d5 e7ab      	LDI  R26,LOW(_Timer24)
0006d6 e0b1      	LDI  R27,HIGH(_Timer24)
0006d7 91ed      	LD   R30,X+
0006d8 91fd      	LD   R31,X+
0006d9 9631      	ADIW R30,1
0006da 93fe      	ST   -X,R31
0006db 93ee      	ST   -X,R30
                 ; 0000 0482 
                 ; 0000 0483             if(OLD_UPS_STATE!=2){
0006dc e0e2      	LDI  R30,LOW(2)
0006dd 15e6      	CP   R30,R6
0006de f039      	BREQ _0x17E
                 ; 0000 0484             // Jei katik isijunge iskrovimas
                 ; 0000 0485 
                 ; 0000 0486             // Nuresetint dabartinio iskrovimo laikmati
                 ; 0000 0487             Timer7 = 0;
0006df e0e0      	LDI  R30,LOW(0)
0006e0 93e0 016c 	STS  _Timer7,R30
                 ; 0000 0488             Timer8 = 0;
0006e2 93e0 016d 	STS  _Timer8,R30
                 ; 0000 0489             Timer9 = 0;
0006e4 93e0 016e 	STS  _Timer9,R30
                 ; 0000 048A             }
                 ; 0000 048B 
                 ; 0000 048C         Timer20++;// Begancio uzrasio taimeris
                 _0x17E:
0006e6 e7a9      	LDI  R26,LOW(_Timer20)
0006e7 e0b1      	LDI  R27,HIGH(_Timer20)
0006e8 91ed      	LD   R30,X+
0006e9 91fd      	LD   R31,X+
0006ea 9631      	ADIW R30,1
0006eb 93fe      	ST   -X,R31
0006ec 93ee      	ST   -X,R30
                 ; 0000 048D             if(Timer20>=7500){
0006ed 91a0 0179 	LDS  R26,_Timer20
0006ef 91b0 017a 	LDS  R27,_Timer20+1
0006f1 34ac      	CPI  R26,LOW(0x1D4C)
0006f2 e1ed      	LDI  R30,HIGH(0x1D4C)
0006f3 07be      	CPC  R27,R30
0006f4 f028      	BRLO _0x17F
                 ; 0000 048E             Timer20 = 0;
0006f5 e0e0      	LDI  R30,LOW(0)
0006f6 93e0 0179 	STS  _Timer20,R30
0006f8 93e0 017a 	STS  _Timer20+1,R30
                 ; 0000 048F             }
                 ; 0000 0490         DchrPadetis = Timer20/500;
                 _0x17F:
0006fa 91a0 0179 	LDS  R26,_Timer20
0006fc 91b0 017a 	LDS  R27,_Timer20+1
0006fe efe4      	LDI  R30,LOW(500)
0006ff e0f1      	LDI  R31,HIGH(500)
000700 940e 0e3f 	CALL __DIVW21U
000702 83e8      	ST   Y,R30
                 ; 0000 0491         led_put_runing_text(DchrPadetis,"diSchArGinG");
000703 e0f0      	LDI  R31,0
000704 93fa      	ST   -Y,R31
000705 93ea      	ST   -Y,R30
                +
000706 e5ea     +LDI R30 , LOW ( 2 * _0x0 + ( 6 ) )
000707 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 6 ) )
                 	__POINTW1FN _0x0,6
000708 93fa      	ST   -Y,R31
000709 93ea      	ST   -Y,R30
00070a dd82      	RCALL _led_put_runing_text
                 ; 0000 0492 
                 ; 0000 0493 
                 ; 0000 0494         BEEPER_OFF = 0;
00070b 24bb      	CLR  R11
                 ; 0000 0495         // Beeper off
                 ; 0000 0496             if(Timer7==10){
00070c 91a0 016c 	LDS  R26,_Timer7
00070e 30aa      	CPI  R26,LOW(0xA)
00070f f451      	BRNE _0x180
                 ; 0000 0497                 if(Timer8==0){
000710 91e0 016d 	LDS  R30,_Timer8
000712 30e0      	CPI  R30,0
000713 f431      	BRNE _0x181
                 ; 0000 0498                     if(Timer9==0){
000714 91e0 016e 	LDS  R30,_Timer9
000716 30e0      	CPI  R30,0
000717 f411      	BRNE _0x182
                 ; 0000 0499                     BEEPER_OFF = 1;
000718 e0e1      	LDI  R30,LOW(1)
000719 2ebe      	MOV  R11,R30
                 ; 0000 049A                     }
                 ; 0000 049B                 }
                 _0x182:
                 ; 0000 049C             }
                 _0x181:
                 ; 0000 049D 
                 ; 0000 049E         // Iskrovimo stabdymo blokas pagal itampos davikli:
                 ; 0000 049F             //if(BATTERY==0){
                 ; 0000 04A0             if(BATTERY_VOLTAGE<=MIN_BATTERY_VOLTAGE){
                 _0x180:
00071a e0a4      	LDI  R26,LOW(_MIN_BATTERY_VOLTAGE)
00071b e0b0      	LDI  R27,HIGH(_MIN_BATTERY_VOLTAGE)
00071c 940e 0e69 	CALL __EEPROMRDB
00071e 91a0 017f 	LDS  R26,_BATTERY_VOLTAGE
000720 17ea      	CP   R30,R26
000721 f1a8      	BRLO _0x183
                 ; 0000 04A1             // Skaiciuoti 5 sekundes kad isjungti iskrovima kai
                 ; 0000 04A2             // tik baterija tampa tuscia
                 ; 0000 04A3             Timer14++;
000722 e7a5      	LDI  R26,LOW(_Timer14)
000723 e0b1      	LDI  R27,HIGH(_Timer14)
000724 91ed      	LD   R30,X+
000725 91fd      	LD   R31,X+
000726 9631      	ADIW R30,1
000727 93fe      	ST   -X,R31
000728 93ee      	ST   -X,R30
                 ; 0000 04A4                 if(Timer14>=5000){
000729 91a0 0175 	LDS  R26,_Timer14
00072b 91b0 0176 	LDS  R27,_Timer14+1
00072d 38a8      	CPI  R26,LOW(0x1388)
00072e e1e3      	LDI  R30,HIGH(0x1388)
00072f 07be      	CPC  R27,R30
000730 f128      	BRLO _0x184
                 ; 0000 04A5                 UPS_STATE = 1;// Vietoj iskrovimo ijungti krovima
000731 e0e1      	LDI  R30,LOW(1)
000732 2e7e      	MOV  R7,R30
                 ; 0000 04A6                 Timer14 = 0;
000733 e0e0      	LDI  R30,LOW(0)
000734 93e0 0175 	STS  _Timer14,R30
000736 93e0 0176 	STS  _Timer14+1,R30
                 ; 0000 04A7 
                 ; 0000 04A8                 // Dabartinio iskrovimo laiko vertes
                 ; 0000 04A9                 // perkelti i paskutinio iskrovimo laika
                 ; 0000 04AA                 Timer4 = Timer8;
000738 91e0 016d 	LDS  R30,_Timer8
00073a e0a1      	LDI  R26,LOW(_Timer4)
00073b e0b0      	LDI  R27,HIGH(_Timer4)
00073c 940e 0e7d 	CALL __EEPROMWRB
                 ; 0000 04AB                 Timer5 = Timer9;
00073e 91e0 016e 	LDS  R30,_Timer9
000740 e0a2      	LDI  R26,LOW(_Timer5)
000741 e0b0      	LDI  R27,HIGH(_Timer5)
000742 940e 0e7d 	CALL __EEPROMWRB
                 ; 0000 04AC 
                 ; 0000 04AD                 // Iskrovimas sekmingas todel savaitini
                 ; 0000 04AE                 // taimeri graziname i pradines vertes
                 ; 0000 04AF                 StartDischargeAfter(7,0,0,0);
000744 e0e7      	LDI  R30,LOW(7)
000745 93ea      	ST   -Y,R30
000746 e0e0      	LDI  R30,LOW(0)
000747 93ea      	ST   -Y,R30
000748 93ea      	ST   -Y,R30
000749 93ea      	ST   -Y,R30
00074a dd76      	RCALL _StartDischargeAfter
                 ; 0000 04B0 
                 ; 0000 04B1                 // Jei iskrovimo laikas nesiekia
                 ; 0000 04B2                 // 3 valandu rodyti baterijos klaida
                 ; 0000 04B3                     if(Timer5<3){
00074b e0a2      	LDI  R26,LOW(_Timer5)
00074c e0b0      	LDI  R27,HIGH(_Timer5)
00074d 940e 0e69 	CALL __EEPROMRDB
00074f 30e3      	CPI  R30,LOW(0x3)
000750 f428      	BRSH _0x185
                 ; 0000 04B4                     BATTERY_FOULT = 1;
000751 e0a0      	LDI  R26,LOW(_BATTERY_FOULT)
000752 e0b0      	LDI  R27,HIGH(_BATTERY_FOULT)
000753 e0e1      	LDI  R30,LOW(1)
000754 940e 0e7d 	CALL __EEPROMWRB
                 ; 0000 04B5                     }
                 ; 0000 04B6                 }
                 _0x185:
                 ; 0000 04B7             }
                 _0x184:
                 ; 0000 04B8             else{
000756 c005      	RJMP _0x186
                 _0x183:
                 ; 0000 04B9             Timer14 = 0;
000757 e0e0      	LDI  R30,LOW(0)
000758 93e0 0175 	STS  _Timer14,R30
00075a 93e0 0176 	STS  _Timer14+1,R30
                 ; 0000 04BA             }
                 _0x186:
                 ; 0000 04BB         }
                 _0x21A:
00075c 9621      	ADIW R28,1
                 ; 0000 04BC 
                 ; 0000 04BD     // Kai baigiasi krovimas, nesvarbu kas leme jo baigti
                 ; 0000 04BE         if((OLD_UPS_STATE==1)&&(UPS_STATE!=1)){
                 _0x17D:
                 _0x17C:
00075d e0e1      	LDI  R30,LOW(1)
00075e 15e6      	CP   R30,R6
00075f f411      	BRNE _0x188
000760 15e7      	CP   R30,R7
000761 f409      	BRNE _0x189
                 _0x188:
000762 c007      	RJMP _0x187
                 _0x189:
                 ; 0000 04BF         Timer12 = 0;
000763 e0e0      	LDI  R30,LOW(0)
000764 93e0 0173 	STS  _Timer12,R30
000766 93e0 0174 	STS  _Timer12+1,R30
                 ; 0000 04C0         KRAUTI = 0;
000768 2499      	CLR  R9
                 ; 0000 04C1         LOAD = 0;
000769 2488      	CLR  R8
                 ; 0000 04C2         }
                 ; 0000 04C3 
                 ; 0000 04C4     // Kai pasibaigia iskrovimas, nesvarbu kas leme jo baigti
                 ; 0000 04C5         if((OLD_UPS_STATE==2)&&(UPS_STATE!=2)){
                 _0x187:
00076a e0e2      	LDI  R30,LOW(2)
00076b 15e6      	CP   R30,R6
00076c f411      	BRNE _0x18B
00076d 15e7      	CP   R30,R7
00076e f409      	BRNE _0x18C
                 _0x18B:
00076f c00c      	RJMP _0x18A
                 _0x18C:
                 ; 0000 04C6         BEEPER_OFF = 0;
000770 24bb      	CLR  R11
                 ; 0000 04C7         Timer7 = 0;
000771 e0e0      	LDI  R30,LOW(0)
000772 93e0 016c 	STS  _Timer7,R30
                 ; 0000 04C8         Timer8 = 0;
000774 93e0 016d 	STS  _Timer8,R30
                 ; 0000 04C9         Timer9 = 0;
000776 93e0 016e 	STS  _Timer9,R30
                 ; 0000 04CA         Timer14 = 0;
000778 93e0 0175 	STS  _Timer14,R30
00077a 93e0 0176 	STS  _Timer14+1,R30
                 ; 0000 04CB         }
                 ; 0000 04CC 
                 ; 0000 04CD     OLD_UPS_STATE = UPS_STATE;
                 _0x18A:
00077c 2c67      	MOV  R6,R7
                 ; 0000 04CE ////////////////////////////////////////////////////////////////////////////////////
                 ; 0000 04CF 
                 ; 0000 04D0 
                 ; 0000 04D1 
                 ; 0000 04D2 
                 ; 0000 04D3 
                 ; 0000 04D4 
                 ; 0000 04D5 
                 ; 0000 04D6 
                 ; 0000 04D7 
                 ; 0000 04D8 
                 ; 0000 04D9 
                 ; 0000 04DA ///////////////////////// BATTERY_FOULT ////////////////////////////////////////////
                 ; 0000 04DB         if(BATTERY_FOULT==1){
00077d e0a0      	LDI  R26,LOW(_BATTERY_FOULT)
00077e e0b0      	LDI  R27,HIGH(_BATTERY_FOULT)
00077f 940e 0e69 	CALL __EEPROMRDB
000781 30e1      	CPI  R30,LOW(0x1)
000782 f591      	BRNE _0x18D
                 ; 0000 04DC             if(UPS_STATE==0){
000783 2077      	TST  R7
000784 f581      	BRNE _0x18E
                 ; 0000 04DD             unsigned char FoultPadetis;
                 ; 0000 04DE             static unsigned int Timer2;
                 ; 0000 04DF             Timer2++;
000785 9721      	SBIW R28,1
                 ;	FoultPadetis -> Y+0
000786 e9a4      	LDI  R26,LOW(_Timer2_S000000B003)
000787 e0b1      	LDI  R27,HIGH(_Timer2_S000000B003)
000788 91ed      	LD   R30,X+
000789 91fd      	LD   R31,X+
00078a 9631      	ADIW R30,1
00078b 93fe      	ST   -X,R31
00078c 93ee      	ST   -X,R30
                 ; 0000 04E0                 if(Timer2>=3400){
00078d 91a0 0194 	LDS  R26,_Timer2_S000000B003
00078f 91b0 0195 	LDS  R27,_Timer2_S000000B003+1
000791 34a8      	CPI  R26,LOW(0xD48)
000792 e0ed      	LDI  R30,HIGH(0xD48)
000793 07be      	CPC  R27,R30
000794 f028      	BRLO _0x18F
                 ; 0000 04E1                 Timer2 = 0;
000795 e0e0      	LDI  R30,LOW(0)
000796 93e0 0194 	STS  _Timer2_S000000B003,R30
000798 93e0 0195 	STS  _Timer2_S000000B003+1,R30
                 ; 0000 04E2                 }
                 ; 0000 04E3             FoultPadetis = Timer2/200;
                 _0x18F:
00079a 91a0 0194 	LDS  R26,_Timer2_S000000B003
00079c 91b0 0195 	LDS  R27,_Timer2_S000000B003+1
00079e ece8      	LDI  R30,LOW(200)
00079f e0f0      	LDI  R31,HIGH(200)
0007a0 940e 0e3f 	CALL __DIVW21U
0007a2 83e8      	ST   Y,R30
                 ; 0000 04E4             led_put_runing_text(FoultPadetis,"bAttErY FouLt");
0007a3 e0f0      	LDI  R31,0
0007a4 93fa      	ST   -Y,R31
0007a5 93ea      	ST   -Y,R30
                +
0007a6 e6e6     +LDI R30 , LOW ( 2 * _0x0 + ( 18 ) )
0007a7 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 18 ) )
                 	__POINTW1FN _0x0,18
0007a8 93fa      	ST   -Y,R31
0007a9 93ea      	ST   -Y,R30
0007aa dce2      	RCALL _led_put_runing_text
                 ; 0000 04E5 
                 ; 0000 04E6             LcdTaskas[0] = 0;
0007ab e0e0      	LDI  R30,LOW(0)
0007ac 93e0 0168 	STS  _LcdTaskas,R30
                 ; 0000 04E7             LcdTaskas[1] = 0;
                +
0007ae 93e0 0169+STS _LcdTaskas + ( 1 ) , R30
                 	__PUTB1MN _LcdTaskas,1
                 ; 0000 04E8             LcdTaskas[2] = 0;
                +
0007b0 93e0 016a+STS _LcdTaskas + ( 2 ) , R30
                 	__PUTB1MN _LcdTaskas,2
                 ; 0000 04E9             LcdTaskas[3] = 0;
                +
0007b2 93e0 016b+STS _LcdTaskas + ( 3 ) , R30
                 	__PUTB1MN _LcdTaskas,3
                 ; 0000 04EA             }
0007b4 9621      	ADIW R28,1
                 ; 0000 04EB         }
                 _0x18E:
                 ; 0000 04EC ////////////////////////////////////////////////////////////////////////////////////
                 ; 0000 04ED 
                 ; 0000 04EE 
                 ; 0000 04EF 
                 ; 0000 04F0 
                 ; 0000 04F1 
                 ; 0000 04F2 
                 ; 0000 04F3 
                 ; 0000 04F4 
                 ; 0000 04F5 
                 ; 0000 04F6 
                 ; 0000 04F7 
                 ; 0000 04F8 
                 ; 0000 04F9 
                 ; 0000 04FA ///////////////////////////// MYGTUKAI /////////////////////////////////////////////
                 ; 0000 04FB     // Kai nuspaustas tik 1 mygtukas
                 ; 0000 04FC         if((BUTTON[0]==1)&&(BUTTON[1]==0)&&(BUTTON[2]==0)&&(BUTTON[3]==0)){
                 _0x18D:
0007b5 91a0 0160 	LDS  R26,_BUTTON
0007b7 30a1      	CPI  R26,LOW(0x1)
0007b8 f461      	BRNE _0x191
                +
0007b9 91a0 0161+LDS R26 , _BUTTON + ( 1 )
                 	__GETB2MN _BUTTON,1
0007bb 30a0      	CPI  R26,LOW(0x0)
0007bc f441      	BRNE _0x191
                +
0007bd 91a0 0162+LDS R26 , _BUTTON + ( 2 )
                 	__GETB2MN _BUTTON,2
0007bf 30a0      	CPI  R26,LOW(0x0)
0007c0 f421      	BRNE _0x191
                +
0007c1 91a0 0163+LDS R26 , _BUTTON + ( 3 )
                 	__GETB2MN _BUTTON,3
0007c3 30a0      	CPI  R26,LOW(0x0)
0007c4 f009      	BREQ _0x192
                 _0x191:
0007c5 c004      	RJMP _0x190
                 _0x192:
                 ; 0000 04FD             if(UPS_STATE==0){
0007c6 2077      	TST  R7
0007c7 f411      	BRNE _0x193
                 ; 0000 04FE             UPS_STATE = 1;
0007c8 e0e1      	LDI  R30,LOW(1)
0007c9 2e7e      	MOV  R7,R30
                 ; 0000 04FF             }
                 ; 0000 0500         }
                 _0x193:
                 ; 0000 0501 
                 ; 0000 0502     // Kai nuspaustas tik 2 mygtukas:
                 ; 0000 0503     // Iskrovimo nutraukimas ir baterijos klaidos nuresetinimo:
                 ; 0000 0504         if((BUTTON[0]==0)&&(BUTTON[1]==1)&&(BUTTON[2]==0)&&(BUTTON[3]==0)){
                 _0x190:
0007ca 91a0 0160 	LDS  R26,_BUTTON
0007cc 30a0      	CPI  R26,LOW(0x0)
0007cd f461      	BRNE _0x195
                +
0007ce 91a0 0161+LDS R26 , _BUTTON + ( 1 )
                 	__GETB2MN _BUTTON,1
0007d0 30a1      	CPI  R26,LOW(0x1)
0007d1 f441      	BRNE _0x195
                +
0007d2 91a0 0162+LDS R26 , _BUTTON + ( 2 )
                 	__GETB2MN _BUTTON,2
0007d4 30a0      	CPI  R26,LOW(0x0)
0007d5 f421      	BRNE _0x195
                +
0007d6 91a0 0163+LDS R26 , _BUTTON + ( 3 )
                 	__GETB2MN _BUTTON,3
0007d8 30a0      	CPI  R26,LOW(0x0)
0007d9 f009      	BREQ _0x196
                 _0x195:
0007da c02b      	RJMP _0x194
                 _0x196:
                 ; 0000 0505             if(UPS_STATE==2){
0007db e0e2      	LDI  R30,LOW(2)
0007dc 15e7      	CP   R30,R7
0007dd f449      	BRNE _0x197
                 ; 0000 0506             UPS_STATE = 1;// Vietoj iskrovimo ijungti krovima
0007de e0e1      	LDI  R30,LOW(1)
0007df 2e7e      	MOV  R7,R30
                 ; 0000 0507 
                 ; 0000 0508             // Iskrovimas nutrauktas samoningai todel savaitini
                 ; 0000 0509             // taimeri graziname i pradines vertes
                 ; 0000 050A             StartDischargeAfter(7,0,0,0);
0007e0 e0e7      	LDI  R30,LOW(7)
0007e1 93ea      	ST   -Y,R30
0007e2 e0e0      	LDI  R30,LOW(0)
0007e3 93ea      	ST   -Y,R30
0007e4 93ea      	ST   -Y,R30
0007e5 93ea      	ST   -Y,R30
0007e6 dcda      	RCALL _StartDischargeAfter
                 ; 0000 050B             }
                 ; 0000 050C 
                 ; 0000 050D         // Jei buvo baterijos klaida laikant mygtuka ji nuresetinama
                 ; 0000 050E             if(BATTERY_FOULT==1){
                 _0x197:
0007e7 e0a0      	LDI  R26,LOW(_BATTERY_FOULT)
0007e8 e0b0      	LDI  R27,HIGH(_BATTERY_FOULT)
0007e9 940e 0e69 	CALL __EEPROMRDB
0007eb 30e1      	CPI  R30,LOW(0x1)
0007ec f4c1      	BRNE _0x198
                 ; 0000 050F             Timer10++;
0007ed e6af      	LDI  R26,LOW(_Timer10)
0007ee e0b1      	LDI  R27,HIGH(_Timer10)
0007ef 91ed      	LD   R30,X+
0007f0 91fd      	LD   R31,X+
0007f1 9631      	ADIW R30,1
0007f2 93fe      	ST   -X,R31
0007f3 93ee      	ST   -X,R30
                 ; 0000 0510                 if(Timer10>=2000){// ~ 2 sec
0007f4 91a0 016f 	LDS  R26,_Timer10
0007f6 91b0 0170 	LDS  R27,_Timer10+1
0007f8 3da0      	CPI  R26,LOW(0x7D0)
0007f9 e0e7      	LDI  R30,HIGH(0x7D0)
0007fa 07be      	CPC  R27,R30
0007fb f048      	BRLO _0x199
                 ; 0000 0511                 BATTERY_FOULT = 0;
0007fc e0a0      	LDI  R26,LOW(_BATTERY_FOULT)
0007fd e0b0      	LDI  R27,HIGH(_BATTERY_FOULT)
0007fe e0e0      	LDI  R30,LOW(0)
0007ff 940e 0e7d 	CALL __EEPROMWRB
                 ; 0000 0512                 Timer10 = 0;
000801 93e0 016f 	STS  _Timer10,R30
000803 93e0 0170 	STS  _Timer10+1,R30
                 ; 0000 0513                 }
                 ; 0000 0514             }
                 _0x199:
                 ; 0000 0515         }
                 _0x198:
                 ; 0000 0516         else{
000805 c005      	RJMP _0x19A
                 _0x194:
                 ; 0000 0517         Timer10 = 0;// Baterijos klaidos nuresetinimo taimeris
000806 e0e0      	LDI  R30,LOW(0)
000807 93e0 016f 	STS  _Timer10,R30
000809 93e0 0170 	STS  _Timer10+1,R30
                 ; 0000 0518         }
                 _0x19A:
                 ; 0000 0519 
                 ; 0000 051A     // Kai nuspaustas tik 3 mygtukas:
                 ; 0000 051B     // Iskrovimo ijungimas:
                 ; 0000 051C         if((BUTTON[0]==0)&&(BUTTON[1]==0)&&(BUTTON[2]==1)&&(BUTTON[3]==0)){
00080b 91a0 0160 	LDS  R26,_BUTTON
00080d 30a0      	CPI  R26,LOW(0x0)
00080e f461      	BRNE _0x19C
                +
00080f 91a0 0161+LDS R26 , _BUTTON + ( 1 )
                 	__GETB2MN _BUTTON,1
000811 30a0      	CPI  R26,LOW(0x0)
000812 f441      	BRNE _0x19C
                +
000813 91a0 0162+LDS R26 , _BUTTON + ( 2 )
                 	__GETB2MN _BUTTON,2
000815 30a1      	CPI  R26,LOW(0x1)
000816 f421      	BRNE _0x19C
                +
000817 91a0 0163+LDS R26 , _BUTTON + ( 3 )
                 	__GETB2MN _BUTTON,3
000819 30a0      	CPI  R26,LOW(0x0)
00081a f009      	BREQ _0x19D
                 _0x19C:
00081b c053      	RJMP _0x19B
                 _0x19D:
                 ; 0000 051D             if(UPS_STATE==0){
00081c 2077      	TST  R7
00081d f011      	BREQ PC+3
00081e 940c 086e 	JMP _0x19E
                 ; 0000 051E                 if(SKIP==0){
000820 2044      	TST  R4
000821 f4e1      	BRNE _0x19F
                 ; 0000 051F                 // Jei ups neuzimtas, SKIP'o nera, tai po ~2sec isijungs iskrovimas
                 ; 0000 0520                 Timer11++;
000822 e7a1      	LDI  R26,LOW(_Timer11)
000823 e0b1      	LDI  R27,HIGH(_Timer11)
000824 91ed      	LD   R30,X+
000825 91fd      	LD   R31,X+
000826 9631      	ADIW R30,1
000827 93fe      	ST   -X,R31
000828 93ee      	ST   -X,R30
000829 9731      	SBIW R30,1
                 ; 0000 0521                     if(Timer11>2000){
00082a 91a0 0171 	LDS  R26,_Timer11
00082c 91b0 0172 	LDS  R27,_Timer11+1
00082e 3da1      	CPI  R26,LOW(0x7D1)
00082f e0e7      	LDI  R30,HIGH(0x7D1)
000830 07be      	CPC  R27,R30
000831 f058      	BRLO _0x1A0
                 ; 0000 0522                     UPS_STATE = 2;
000832 e0e2      	LDI  R30,LOW(2)
000833 2e7e      	MOV  R7,R30
                 ; 0000 0523                     Timer11 = 0;
000834 e0e0      	LDI  R30,LOW(0)
000835 93e0 0171 	STS  _Timer11,R30
000837 93e0 0172 	STS  _Timer11+1,R30
                 ; 0000 0524                     BATTERY_FOULT = 0;
000839 e0a0      	LDI  R26,LOW(_BATTERY_FOULT)
00083a e0b0      	LDI  R27,HIGH(_BATTERY_FOULT)
00083b 940e 0e7d 	CALL __EEPROMWRB
                 ; 0000 0525                     }
                 ; 0000 0526                 }
                 _0x1A0:
                 ; 0000 0527                 else{
00083d c030      	RJMP _0x1A1
                 _0x19F:
                 ; 0000 0528                 // Jei ups neuzimtas, SKIP'as yra rodyti, kad iskrovima ijungti neimanoma
                 ; 0000 0529                 int FoultPadetis;
                 ; 0000 052A                 Timer19++;
00083e 9722      	SBIW R28,2
                 ;	FoultPadetis -> Y+0
00083f e7a7      	LDI  R26,LOW(_Timer19)
000840 e0b1      	LDI  R27,HIGH(_Timer19)
000841 91ed      	LD   R30,X+
000842 91fd      	LD   R31,X+
000843 9631      	ADIW R30,1
000844 93fe      	ST   -X,R31
000845 93ee      	ST   -X,R30
                 ; 0000 052B                     if(Timer19>=3600){
000846 91a0 0177 	LDS  R26,_Timer19
000848 91b0 0178 	LDS  R27,_Timer19+1
00084a 31a0      	CPI  R26,LOW(0xE10)
00084b e0ee      	LDI  R30,HIGH(0xE10)
00084c 07be      	CPC  R27,R30
00084d f028      	BRLO _0x1A2
                 ; 0000 052C                     Timer19 = 0;
00084e e0e0      	LDI  R30,LOW(0)
00084f 93e0 0177 	STS  _Timer19,R30
000851 93e0 0178 	STS  _Timer19+1,R30
                 ; 0000 052D                     }
                 ; 0000 052E                 FoultPadetis = Timer19/200;
                 _0x1A2:
000853 91a0 0177 	LDS  R26,_Timer19
000855 91b0 0178 	LDS  R27,_Timer19+1
000857 ece8      	LDI  R30,LOW(200)
000858 e0f0      	LDI  R31,HIGH(200)
000859 940e 0e3f 	CALL __DIVW21U
00085b 83e8      	ST   Y,R30
00085c 83f9      	STD  Y+1,R31
                 ; 0000 052F                 led_put_runing_text(FoultPadetis,"cAnt diSchArGE");
00085d 93fa      	ST   -Y,R31
00085e 93ea      	ST   -Y,R30
                +
00085f e7e4     +LDI R30 , LOW ( 2 * _0x0 + ( 32 ) )
000860 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 32 ) )
                 	__POINTW1FN _0x0,32
000861 93fa      	ST   -Y,R31
000862 93ea      	ST   -Y,R30
000863 dc29      	RCALL _led_put_runing_text
                 ; 0000 0530                 LcdTaskas[0] = 0;
000864 e0e0      	LDI  R30,LOW(0)
000865 93e0 0168 	STS  _LcdTaskas,R30
                 ; 0000 0531                 LcdTaskas[1] = 0;
                +
000867 93e0 0169+STS _LcdTaskas + ( 1 ) , R30
                 	__PUTB1MN _LcdTaskas,1
                 ; 0000 0532                 LcdTaskas[2] = 0;
                +
000869 93e0 016a+STS _LcdTaskas + ( 2 ) , R30
                 	__PUTB1MN _LcdTaskas,2
                 ; 0000 0533                 LcdTaskas[3] = 0;
                +
00086b 93e0 016b+STS _LcdTaskas + ( 3 ) , R30
                 	__PUTB1MN _LcdTaskas,3
                 ; 0000 0534                 }
00086d 9622      	ADIW R28,2
                 _0x1A1:
                 ; 0000 0535             }
                 ; 0000 0536         }
                 _0x19E:
                 ; 0000 0537         else{
00086e c009      	RJMP _0x1A3
                 _0x19B:
                 ; 0000 0538         Timer11 = 0;
00086f e0e0      	LDI  R30,LOW(0)
000870 93e0 0171 	STS  _Timer11,R30
000872 93e0 0172 	STS  _Timer11+1,R30
                 ; 0000 0539         Timer19 = 0;
000874 93e0 0177 	STS  _Timer19,R30
000876 93e0 0178 	STS  _Timer19+1,R30
                 ; 0000 053A         }
                 _0x1A3:
                 ; 0000 053B 
                 ; 0000 053C     // Kai nuspaustas 4 mygtukas, o su visais kitais valdoma
                 ; 0000 053D         if(BUTTON[3]==1){
                +
000878 91a0 0163+LDS R26 , _BUTTON + ( 3 )
                 	__GETB2MN _BUTTON,3
00087a 30a1      	CPI  R26,LOW(0x1)
00087b f011      	BREQ PC+3
00087c 940c 0dd4 	JMP _0x1A4
                 ; 0000 053E 
                 ; 0000 053F             // Langu valdymas
                 ; 0000 0540             if(BUTTON[2]==1){
                +
00087e 91a0 0162+LDS R26 , _BUTTON + ( 2 )
                 	__GETB2MN _BUTTON,2
000880 30a1      	CPI  R26,LOW(0x1)
000881 f4a1      	BRNE _0x1A5
                 ; 0000 0541                 if(LanguTrigeris==0){
000882 91e0 017e 	LDS  R30,_LanguTrigeris
000884 30e0      	CPI  R30,0
000885 f479      	BRNE _0x1A6
                 ; 0000 0542                 LanguTrigeris = 1;
000886 e0e1      	LDI  R30,LOW(1)
000887 93e0 017e 	STS  _LanguTrigeris,R30
                 ; 0000 0543                 LangoAdresas++;
000889 91e0 017d 	LDS  R30,_LangoAdresas
00088b 5fef      	SUBI R30,-LOW(1)
00088c 93e0 017d 	STS  _LangoAdresas,R30
                 ; 0000 0544                     if(LangoAdresas>4){
00088e 91a0 017d 	LDS  R26,_LangoAdresas
000890 30a5      	CPI  R26,LOW(0x5)
000891 f018      	BRLO _0x1A7
                 ; 0000 0545                     LangoAdresas = 0;
000892 e0e0      	LDI  R30,LOW(0)
000893 93e0 017d 	STS  _LangoAdresas,R30
                 ; 0000 0546                     }
                 ; 0000 0547                 }
                 _0x1A7:
                 ; 0000 0548             }
                 _0x1A6:
                 ; 0000 0549             else{
000895 c003      	RJMP _0x1A8
                 _0x1A5:
                 ; 0000 054A             LanguTrigeris = 0;
000896 e0e0      	LDI  R30,LOW(0)
000897 93e0 017e 	STS  _LanguTrigeris,R30
                 ; 0000 054B             }
                 _0x1A8:
                 ; 0000 054C 
                 ; 0000 054D             // Paskutinio iskrovimo langas
                 ; 0000 054E             if(LangoAdresas==0){
000899 91e0 017d 	LDS  R30,_LangoAdresas
00089b 30e0      	CPI  R30,0
00089c f011      	BREQ PC+3
00089d 940c 0a09 	JMP _0x1A9
                 ; 0000 054F                 if(UPS_STATE==2){
00089f e0e2      	LDI  R30,LOW(2)
0008a0 15e7      	CP   R30,R7
0008a1 f011      	BREQ PC+3
0008a2 940c 09b0 	JMP _0x1AA
                 ; 0000 0550                     if(Timer9>=10){
0008a4 91a0 016e 	LDS  R26,_Timer9
0008a6 30aa      	CPI  R26,LOW(0xA)
0008a7 f410      	BRSH PC+3
0008a8 940c 08f3 	JMP _0x1AB
                 ; 0000 0551                     LcdText[0] = NumToIndex(Timer9/10);
0008aa e0b0      	LDI  R27,0
0008ab e0ea      	LDI  R30,LOW(10)
0008ac e0f0      	LDI  R31,HIGH(10)
0008ad 940e 0e52 	CALL __DIVW21
0008af 93ea      	ST   -Y,R30
0008b0 940e 006d 	CALL _NumToIndex
0008b2 93e0 0164 	STS  _LcdText,R30
                 ; 0000 0552                     LcdText[1] = NumToIndex(Timer9 - (Timer9/10)*10);
0008b4 9160 016e 	LDS  R22,_Timer9
0008b6 2777      	CLR  R23
0008b7 91a0 016e 	LDS  R26,_Timer9
0008b9 e0b0      	LDI  R27,0
0008ba e0ea      	LDI  R30,LOW(10)
0008bb e0f0      	LDI  R31,HIGH(10)
0008bc 940e 0e52 	CALL __DIVW21
0008be e0aa      	LDI  R26,LOW(10)
0008bf e0b0      	LDI  R27,HIGH(10)
0008c0 940e 0e3a 	CALL __MULW12
0008c2 01db      	MOVW R26,R22
0008c3 1bae      	SUB  R26,R30
0008c4 0bbf      	SBC  R27,R31
0008c5 93aa      	ST   -Y,R26
0008c6 940e 006d 	CALL _NumToIndex
                +
0008c8 93e0 0165+STS _LcdText + ( 1 ) , R30
                 	__PUTB1MN _LcdText,1
                 ; 0000 0553                     LcdText[2] = NumToIndex(Timer8/10);
0008ca 91a0 016d 	LDS  R26,_Timer8
0008cc e0b0      	LDI  R27,0
0008cd e0ea      	LDI  R30,LOW(10)
0008ce e0f0      	LDI  R31,HIGH(10)
0008cf 940e 0e52 	CALL __DIVW21
0008d1 93ea      	ST   -Y,R30
0008d2 940e 006d 	CALL _NumToIndex
                +
0008d4 93e0 0166+STS _LcdText + ( 2 ) , R30
                 	__PUTB1MN _LcdText,2
                 ; 0000 0554                     LcdText[3] = NumToIndex(Timer8 - (Timer8/10)*10);
0008d6 9160 016d 	LDS  R22,_Timer8
0008d8 2777      	CLR  R23
0008d9 91a0 016d 	LDS  R26,_Timer8
0008db e0b0      	LDI  R27,0
0008dc e0ea      	LDI  R30,LOW(10)
0008dd e0f0      	LDI  R31,HIGH(10)
0008de 940e 0e52 	CALL __DIVW21
0008e0 e0aa      	LDI  R26,LOW(10)
0008e1 e0b0      	LDI  R27,HIGH(10)
0008e2 940e 0e3a 	CALL __MULW12
0008e4 01db      	MOVW R26,R22
0008e5 1bae      	SUB  R26,R30
0008e6 0bbf      	SBC  R27,R31
0008e7 93aa      	ST   -Y,R26
0008e8 940e 006d 	CALL _NumToIndex
                +
0008ea 93e0 0167+STS _LcdText + ( 3 ) , R30
                 	__PUTB1MN _LcdText,3
                 ; 0000 0555 
                 ; 0000 0556                     LcdTaskas[0] = 0;
0008ec e0e0      	LDI  R30,LOW(0)
0008ed 93e0 0168 	STS  _LcdTaskas,R30
                 ; 0000 0557                     LcdTaskas[1] = 1;
0008ef e0e1      	LDI  R30,LOW(1)
                +
0008f0 93e0 0169+STS _LcdTaskas + ( 1 ) , R30
                 	__PUTB1MN _LcdTaskas,1
                 ; 0000 0558                     LcdTaskas[2] = 0;
0008f2 c0b6      	RJMP _0x21C
                 ; 0000 0559                     LcdTaskas[3] = 0;
                 ; 0000 055A                     }
                 ; 0000 055B                     else if(Timer9==0){
                 _0x1AB:
0008f3 91e0 016e 	LDS  R30,_Timer9
0008f5 30e0      	CPI  R30,0
0008f6 f011      	BREQ PC+3
0008f7 940c 094e 	JMP _0x1AD
                 ; 0000 055C                     LcdText[0] = NumToIndex(Timer8/10);
0008f9 91a0 016d 	LDS  R26,_Timer8
0008fb e0b0      	LDI  R27,0
0008fc e0ea      	LDI  R30,LOW(10)
0008fd e0f0      	LDI  R31,HIGH(10)
0008fe 940e 0e52 	CALL __DIVW21
000900 93ea      	ST   -Y,R30
000901 940e 006d 	CALL _NumToIndex
000903 93e0 0164 	STS  _LcdText,R30
                 ; 0000 055D                     LcdText[1] = NumToIndex(Timer8 - (Timer8/10)*10);
000905 9160 016d 	LDS  R22,_Timer8
000907 2777      	CLR  R23
000908 91a0 016d 	LDS  R26,_Timer8
00090a e0b0      	LDI  R27,0
00090b e0ea      	LDI  R30,LOW(10)
00090c e0f0      	LDI  R31,HIGH(10)
00090d 940e 0e52 	CALL __DIVW21
00090f e0aa      	LDI  R26,LOW(10)
000910 e0b0      	LDI  R27,HIGH(10)
000911 940e 0e3a 	CALL __MULW12
000913 01db      	MOVW R26,R22
000914 1bae      	SUB  R26,R30
000915 0bbf      	SBC  R27,R31
000916 93aa      	ST   -Y,R26
000917 940e 006d 	CALL _NumToIndex
                +
000919 93e0 0165+STS _LcdText + ( 1 ) , R30
                 	__PUTB1MN _LcdText,1
                 ; 0000 055E                     LcdText[2] = NumToIndex(Timer7/10);
00091b 91a0 016c 	LDS  R26,_Timer7
00091d e0b0      	LDI  R27,0
00091e e0ea      	LDI  R30,LOW(10)
00091f e0f0      	LDI  R31,HIGH(10)
000920 940e 0e52 	CALL __DIVW21
000922 93ea      	ST   -Y,R30
000923 940e 006d 	CALL _NumToIndex
                +
000925 93e0 0166+STS _LcdText + ( 2 ) , R30
                 	__PUTB1MN _LcdText,2
                 ; 0000 055F                     LcdText[3] = NumToIndex(Timer7 - (Timer7/10)*10);
000927 9160 016c 	LDS  R22,_Timer7
000929 2777      	CLR  R23
00092a 91a0 016c 	LDS  R26,_Timer7
00092c e0b0      	LDI  R27,0
00092d e0ea      	LDI  R30,LOW(10)
00092e e0f0      	LDI  R31,HIGH(10)
00092f 940e 0e52 	CALL __DIVW21
000931 e0aa      	LDI  R26,LOW(10)
000932 e0b0      	LDI  R27,HIGH(10)
000933 940e 0e3a 	CALL __MULW12
000935 01db      	MOVW R26,R22
000936 1bae      	SUB  R26,R30
000937 0bbf      	SBC  R27,R31
000938 93aa      	ST   -Y,R26
000939 940e 006d 	CALL _NumToIndex
                +
00093b 93e0 0167+STS _LcdText + ( 3 ) , R30
                 	__PUTB1MN _LcdText,3
                 ; 0000 0560 
                 ; 0000 0561                     LcdTaskas[0] = 0;
00093d e0e0      	LDI  R30,LOW(0)
00093e 93e0 0168 	STS  _LcdTaskas,R30
                 ; 0000 0562                         if(Timer24<=300){
000940 91a0 017b 	LDS  R26,_Timer24
000942 91b0 017c 	LDS  R27,_Timer24+1
000944 32ad      	CPI  R26,LOW(0x12D)
000945 e0e1      	LDI  R30,HIGH(0x12D)
000946 07be      	CPC  R27,R30
000947 f410      	BRSH _0x1AE
                 ; 0000 0563                         LcdTaskas[1] = 1;
000948 e0e1      	LDI  R30,LOW(1)
000949 c001      	RJMP _0x21D
                 ; 0000 0564                         }
                 ; 0000 0565                         else{
                 _0x1AE:
                 ; 0000 0566                         LcdTaskas[1] = 0;
00094a e0e0      	LDI  R30,LOW(0)
                 _0x21D:
                +
00094b 93e0 0169+STS _LcdTaskas + ( 1 ) , R30
                 	__PUTB1MN _LcdTaskas,1
                 ; 0000 0567                         }
                 ; 0000 0568                     LcdTaskas[2] = 0;
00094d c05b      	RJMP _0x21C
                 ; 0000 0569                     LcdTaskas[3] = 0;
                 ; 0000 056A                     }
                 ; 0000 056B                     else if((Timer9>=1)&&(Timer9<=9)){
                 _0x1AD:
00094e 91a0 016e 	LDS  R26,_Timer9
000950 30a1      	CPI  R26,LOW(0x1)
000951 f010      	BRLO _0x1B2
000952 30aa      	CPI  R26,LOW(0xA)
000953 f008      	BRLO _0x1B3
                 _0x1B2:
000954 c05a      	RJMP _0x1B1
                 _0x1B3:
                 ; 0000 056C                     LcdText[0] = NumToIndex(Timer9 - (Timer9/10)*10);
000955 9160 016e 	LDS  R22,_Timer9
000957 2777      	CLR  R23
000958 91a0 016e 	LDS  R26,_Timer9
00095a e0b0      	LDI  R27,0
00095b e0ea      	LDI  R30,LOW(10)
00095c e0f0      	LDI  R31,HIGH(10)
00095d 940e 0e52 	CALL __DIVW21
00095f e0aa      	LDI  R26,LOW(10)
000960 e0b0      	LDI  R27,HIGH(10)
000961 940e 0e3a 	CALL __MULW12
000963 01db      	MOVW R26,R22
000964 1bae      	SUB  R26,R30
000965 0bbf      	SBC  R27,R31
000966 93aa      	ST   -Y,R26
000967 940e 006d 	CALL _NumToIndex
000969 93e0 0164 	STS  _LcdText,R30
                 ; 0000 056D                     LcdText[1] = NumToIndex(Timer8/10);
00096b 91a0 016d 	LDS  R26,_Timer8
00096d e0b0      	LDI  R27,0
00096e e0ea      	LDI  R30,LOW(10)
00096f e0f0      	LDI  R31,HIGH(10)
000970 940e 0e52 	CALL __DIVW21
000972 93ea      	ST   -Y,R30
000973 940e 006d 	CALL _NumToIndex
                +
000975 93e0 0165+STS _LcdText + ( 1 ) , R30
                 	__PUTB1MN _LcdText,1
                 ; 0000 056E                     LcdText[2] = NumToIndex(Timer8 - (Timer8/10)*10);
000977 9160 016d 	LDS  R22,_Timer8
000979 2777      	CLR  R23
00097a 91a0 016d 	LDS  R26,_Timer8
00097c e0b0      	LDI  R27,0
00097d e0ea      	LDI  R30,LOW(10)
00097e e0f0      	LDI  R31,HIGH(10)
00097f 940e 0e52 	CALL __DIVW21
000981 e0aa      	LDI  R26,LOW(10)
000982 e0b0      	LDI  R27,HIGH(10)
000983 940e 0e3a 	CALL __MULW12
000985 01db      	MOVW R26,R22
000986 1bae      	SUB  R26,R30
000987 0bbf      	SBC  R27,R31
000988 93aa      	ST   -Y,R26
000989 940e 006d 	CALL _NumToIndex
                +
00098b 93e0 0166+STS _LcdText + ( 2 ) , R30
                 	__PUTB1MN _LcdText,2
                 ; 0000 056F                     LcdText[3] = NumToIndex(Timer7/10);
00098d 91a0 016c 	LDS  R26,_Timer7
00098f e0b0      	LDI  R27,0
000990 e0ea      	LDI  R30,LOW(10)
000991 e0f0      	LDI  R31,HIGH(10)
000992 940e 0e52 	CALL __DIVW21
000994 93ea      	ST   -Y,R30
000995 940e 006d 	CALL _NumToIndex
                +
000997 93e0 0167+STS _LcdText + ( 3 ) , R30
                 	__PUTB1MN _LcdText,3
                 ; 0000 0570 
                 ; 0000 0571                     LcdTaskas[0] = 1;
000999 e0e1      	LDI  R30,LOW(1)
00099a 93e0 0168 	STS  _LcdTaskas,R30
                 ; 0000 0572                     LcdTaskas[1] = 0;
00099c e0e0      	LDI  R30,LOW(0)
                +
00099d 93e0 0169+STS _LcdTaskas + ( 1 ) , R30
                 	__PUTB1MN _LcdTaskas,1
                 ; 0000 0573                         if(Timer24<=300){
00099f 91a0 017b 	LDS  R26,_Timer24
0009a1 91b0 017c 	LDS  R27,_Timer24+1
0009a3 32ad      	CPI  R26,LOW(0x12D)
0009a4 e0e1      	LDI  R30,HIGH(0x12D)
0009a5 07be      	CPC  R27,R30
0009a6 f410      	BRSH _0x1B4
                 ; 0000 0574                         LcdTaskas[2] = 1;
0009a7 e0e1      	LDI  R30,LOW(1)
0009a8 c001      	RJMP _0x21E
                 ; 0000 0575                         }
                 ; 0000 0576                         else{
                 _0x1B4:
                 ; 0000 0577                         LcdTaskas[2] = 0;
                 _0x21C:
0009a9 e0e0      	LDI  R30,LOW(0)
                 _0x21E:
                +
0009aa 93e0 016a+STS _LcdTaskas + ( 2 ) , R30
                 	__PUTB1MN _LcdTaskas,2
                 ; 0000 0578                         }
                 ; 0000 0579                     LcdTaskas[3] = 0;
0009ac e0e0      	LDI  R30,LOW(0)
                +
0009ad 93e0 016b+STS _LcdTaskas + ( 3 ) , R30
                 	__PUTB1MN _LcdTaskas,3
                 ; 0000 057A                     }
                 ; 0000 057B                 }
                 _0x1B1:
                 ; 0000 057C                 else{
0009af c059      	RJMP _0x1B6
                 _0x1AA:
                 ; 0000 057D                 LcdText[0] = NumToIndex(Timer5/10);
0009b0 e0a2      	LDI  R26,LOW(_Timer5)
0009b1 e0b0      	LDI  R27,HIGH(_Timer5)
0009b2 940e 0e69 	CALL __EEPROMRDB
0009b4 e0f0      	LDI  R31,0
0009b5 01df      	MOVW R26,R30
0009b6 e0ea      	LDI  R30,LOW(10)
0009b7 e0f0      	LDI  R31,HIGH(10)
0009b8 940e 0e52 	CALL __DIVW21
0009ba 93ea      	ST   -Y,R30
0009bb 940e 006d 	CALL _NumToIndex
0009bd 93e0 0164 	STS  _LcdText,R30
                 ; 0000 057E                 LcdText[1] = NumToIndex(Timer5 - (Timer5/10)*10);
0009bf e0a2      	LDI  R26,LOW(_Timer5)
0009c0 e0b0      	LDI  R27,HIGH(_Timer5)
0009c1 940e 0e69 	CALL __EEPROMRDB
0009c3 2f6e      	MOV  R22,R30
0009c4 2777      	CLR  R23
0009c5 e0f0      	LDI  R31,0
0009c6 01df      	MOVW R26,R30
0009c7 e0ea      	LDI  R30,LOW(10)
0009c8 e0f0      	LDI  R31,HIGH(10)
0009c9 940e 0e52 	CALL __DIVW21
0009cb e0aa      	LDI  R26,LOW(10)
0009cc e0b0      	LDI  R27,HIGH(10)
0009cd 940e 0e3a 	CALL __MULW12
0009cf 01db      	MOVW R26,R22
0009d0 1bae      	SUB  R26,R30
0009d1 0bbf      	SBC  R27,R31
0009d2 93aa      	ST   -Y,R26
0009d3 940e 006d 	CALL _NumToIndex
                +
0009d5 93e0 0165+STS _LcdText + ( 1 ) , R30
                 	__PUTB1MN _LcdText,1
                 ; 0000 057F                 LcdText[2] = NumToIndex(Timer4/10);
0009d7 e0a1      	LDI  R26,LOW(_Timer4)
0009d8 e0b0      	LDI  R27,HIGH(_Timer4)
0009d9 940e 0e69 	CALL __EEPROMRDB
0009db e0f0      	LDI  R31,0
0009dc 01df      	MOVW R26,R30
0009dd e0ea      	LDI  R30,LOW(10)
0009de e0f0      	LDI  R31,HIGH(10)
0009df 940e 0e52 	CALL __DIVW21
0009e1 93ea      	ST   -Y,R30
0009e2 940e 006d 	CALL _NumToIndex
                +
0009e4 93e0 0166+STS _LcdText + ( 2 ) , R30
                 	__PUTB1MN _LcdText,2
                 ; 0000 0580                 LcdText[3] = NumToIndex(Timer4 - (Timer4/10)*10);
0009e6 e0a1      	LDI  R26,LOW(_Timer4)
0009e7 e0b0      	LDI  R27,HIGH(_Timer4)
0009e8 940e 0e69 	CALL __EEPROMRDB
0009ea 2f6e      	MOV  R22,R30
0009eb 2777      	CLR  R23
0009ec e0f0      	LDI  R31,0
0009ed 01df      	MOVW R26,R30
0009ee e0ea      	LDI  R30,LOW(10)
0009ef e0f0      	LDI  R31,HIGH(10)
0009f0 940e 0e52 	CALL __DIVW21
0009f2 e0aa      	LDI  R26,LOW(10)
0009f3 e0b0      	LDI  R27,HIGH(10)
0009f4 940e 0e3a 	CALL __MULW12
0009f6 01db      	MOVW R26,R22
0009f7 1bae      	SUB  R26,R30
0009f8 0bbf      	SBC  R27,R31
0009f9 93aa      	ST   -Y,R26
0009fa 940e 006d 	CALL _NumToIndex
                +
0009fc 93e0 0167+STS _LcdText + ( 3 ) , R30
                 	__PUTB1MN _LcdText,3
                 ; 0000 0581 
                 ; 0000 0582                 LcdTaskas[0] = 0;
0009fe e0e0      	LDI  R30,LOW(0)
0009ff 93e0 0168 	STS  _LcdTaskas,R30
                 ; 0000 0583                 LcdTaskas[1] = 1;
000a01 e0e1      	LDI  R30,LOW(1)
                +
000a02 93e0 0169+STS _LcdTaskas + ( 1 ) , R30
                 	__PUTB1MN _LcdTaskas,1
                 ; 0000 0584                 LcdTaskas[2] = 0;
000a04 e0e0      	LDI  R30,LOW(0)
                +
000a05 93e0 016a+STS _LcdTaskas + ( 2 ) , R30
                 	__PUTB1MN _LcdTaskas,2
                 ; 0000 0585                 LcdTaskas[3] = 0;
                +
000a07 93e0 016b+STS _LcdTaskas + ( 3 ) , R30
                 	__PUTB1MN _LcdTaskas,3
                 ; 0000 0586                 }
                 _0x1B6:
                 ; 0000 0587             }
                 ; 0000 0588 
                 ; 0000 0589             // Dabartine itampa
                 ; 0000 058A             if(LangoAdresas==1){
                 _0x1A9:
000a09 91a0 017d 	LDS  R26,_LangoAdresas
000a0b 30a1      	CPI  R26,LOW(0x1)
000a0c f011      	BREQ PC+3
000a0d 940c 0ae7 	JMP _0x1B7
                 ; 0000 058B             unsigned char Padetis;
                 ; 0000 058C             static unsigned int Timer26;
                 ; 0000 058D                 if(Timer26<=1500){
000a0f 9721      	SBIW R28,1
                 ;	Padetis -> Y+0
000a10 91a0 0196 	LDS  R26,_Timer26_S000000B003
000a12 91b0 0197 	LDS  R27,_Timer26_S000000B003+1
000a14 3dad      	CPI  R26,LOW(0x5DD)
000a15 e0e5      	LDI  R30,HIGH(0x5DD)
000a16 07be      	CPC  R27,R30
000a17 f438      	BRSH _0x1B8
                 ; 0000 058E                 Timer26++;
000a18 e9a6      	LDI  R26,LOW(_Timer26_S000000B003)
000a19 e0b1      	LDI  R27,HIGH(_Timer26_S000000B003)
000a1a 91ed      	LD   R30,X+
000a1b 91fd      	LD   R31,X+
000a1c 9631      	ADIW R30,1
000a1d 93fe      	ST   -X,R31
000a1e 93ee      	ST   -X,R30
                 ; 0000 058F                 }
                 ; 0000 0590             Padetis = Timer26/300;
                 _0x1B8:
000a1f 91a0 0196 	LDS  R26,_Timer26_S000000B003
000a21 91b0 0197 	LDS  R27,_Timer26_S000000B003+1
000a23 e2ec      	LDI  R30,LOW(300)
000a24 e0f1      	LDI  R31,HIGH(300)
000a25 940e 0e3f 	CALL __DIVW21U
000a27 83e8      	ST   Y,R30
                 ; 0000 0591 
                 ; 0000 0592             LcdTaskas[0] = 0;
000a28 e0e0      	LDI  R30,LOW(0)
000a29 93e0 0168 	STS  _LcdTaskas,R30
                 ; 0000 0593             LcdTaskas[1] = 0;
                +
000a2b 93e0 0169+STS _LcdTaskas + ( 1 ) , R30
                 	__PUTB1MN _LcdTaskas,1
                 ; 0000 0594             LcdTaskas[2] = 0;
                +
000a2d 93e0 016a+STS _LcdTaskas + ( 2 ) , R30
                 	__PUTB1MN _LcdTaskas,2
                 ; 0000 0595             LcdTaskas[3] = 0;
                +
000a2f 93e0 016b+STS _LcdTaskas + ( 3 ) , R30
                 	__PUTB1MN _LcdTaskas,3
                 ; 0000 0596                 if(Padetis==1){
000a31 81a8      	LD   R26,Y
000a32 30a1      	CPI  R26,LOW(0x1)
000a33 f449      	BRNE _0x1B9
                 ; 0000 0597                 LcdText[0] = ' ';
000a34 e2e0      	LDI  R30,LOW(32)
000a35 93e0 0164 	STS  _LcdText,R30
                 ; 0000 0598                 LcdText[1] = ' ';
                +
000a37 93e0 0165+STS _LcdText + ( 1 ) , R30
                 	__PUTB1MN _LcdText,1
                 ; 0000 0599                 LcdText[2] = ' ';
                +
000a39 93e0 0166+STS _LcdText + ( 2 ) , R30
                 	__PUTB1MN _LcdText,2
                 ; 0000 059A                 LcdText[3] = 'U';
000a3b e5e5      	LDI  R30,LOW(85)
000a3c c0a6      	RJMP _0x21F
                 ; 0000 059B                 }
                 ; 0000 059C                 else if(Padetis==2){
                 _0x1B9:
000a3d 81a8      	LD   R26,Y
000a3e 30a2      	CPI  R26,LOW(0x2)
000a3f f451      	BRNE _0x1BB
                 ; 0000 059D                 LcdText[0] = ' ';
000a40 e2e0      	LDI  R30,LOW(32)
000a41 93e0 0164 	STS  _LcdText,R30
                 ; 0000 059E                 LcdText[1] = ' ';
                +
000a43 93e0 0165+STS _LcdText + ( 1 ) , R30
                 	__PUTB1MN _LcdText,1
                 ; 0000 059F                 LcdText[2] = 'U';
000a45 e5e5      	LDI  R30,LOW(85)
                +
000a46 93e0 0166+STS _LcdText + ( 2 ) , R30
                 	__PUTB1MN _LcdText,2
                 ; 0000 05A0                 LcdText[3] = '=';
000a48 e3ed      	LDI  R30,LOW(61)
000a49 c099      	RJMP _0x21F
                 ; 0000 05A1                 }
                 ; 0000 05A2                 else if(Padetis==3){
                 _0x1BB:
000a4a 81a8      	LD   R26,Y
000a4b 30a3      	CPI  R26,LOW(0x3)
000a4c f4a1      	BRNE _0x1BD
                 ; 0000 05A3                 LcdText[0] = ' ';
000a4d e2e0      	LDI  R30,LOW(32)
000a4e 93e0 0164 	STS  _LcdText,R30
                 ; 0000 05A4                 LcdText[1] = 'U';
000a50 e5e5      	LDI  R30,LOW(85)
                +
000a51 93e0 0165+STS _LcdText + ( 1 ) , R30
                 	__PUTB1MN _LcdText,1
                 ; 0000 05A5                 LcdText[2] = '=';
000a53 e3ed      	LDI  R30,LOW(61)
                +
000a54 93e0 0166+STS _LcdText + ( 2 ) , R30
                 	__PUTB1MN _LcdText,2
                 ; 0000 05A6                 LcdText[3] = NumToIndex( BATTERY_VOLTAGE/100 );
000a56 91a0 017f 	LDS  R26,_BATTERY_VOLTAGE
000a58 e0b0      	LDI  R27,0
000a59 e6e4      	LDI  R30,LOW(100)
000a5a e0f0      	LDI  R31,HIGH(100)
000a5b 940e 0e52 	CALL __DIVW21
000a5d 93ea      	ST   -Y,R30
000a5e 940e 006d 	CALL _NumToIndex
000a60 c082      	RJMP _0x21F
                 ; 0000 05A7                 }
                 ; 0000 05A8                 else if(Padetis==4){
                 _0x1BD:
000a61 81a8      	LD   R26,Y
000a62 30a4      	CPI  R26,LOW(0x4)
000a63 f581      	BRNE _0x1BF
                 ; 0000 05A9                 LcdText[0] = 'U';
000a64 e5e5      	LDI  R30,LOW(85)
000a65 93e0 0164 	STS  _LcdText,R30
                 ; 0000 05AA                 LcdText[1] = '=';
000a67 e3ed      	LDI  R30,LOW(61)
                +
000a68 93e0 0165+STS _LcdText + ( 1 ) , R30
                 	__PUTB1MN _LcdText,1
                 ; 0000 05AB                 LcdText[2] = NumToIndex( BATTERY_VOLTAGE/100 );
000a6a 91a0 017f 	LDS  R26,_BATTERY_VOLTAGE
000a6c e0b0      	LDI  R27,0
000a6d e6e4      	LDI  R30,LOW(100)
000a6e e0f0      	LDI  R31,HIGH(100)
000a6f 940e 0e52 	CALL __DIVW21
000a71 93ea      	ST   -Y,R30
000a72 940e 006d 	CALL _NumToIndex
                +
000a74 93e0 0166+STS _LcdText + ( 2 ) , R30
                 	__PUTB1MN _LcdText,2
                 ; 0000 05AC                 LcdText[3] = NumToIndex( (BATTERY_VOLTAGE-(BATTERY_VOLTAGE/100)*100)/10);
000a76 9160 017f 	LDS  R22,_BATTERY_VOLTAGE
000a78 2777      	CLR  R23
000a79 91a0 017f 	LDS  R26,_BATTERY_VOLTAGE
000a7b e0b0      	LDI  R27,0
000a7c e6e4      	LDI  R30,LOW(100)
000a7d e0f0      	LDI  R31,HIGH(100)
000a7e 940e 0e52 	CALL __DIVW21
000a80 e6a4      	LDI  R26,LOW(100)
000a81 e0b0      	LDI  R27,HIGH(100)
000a82 940e 0e3a 	CALL __MULW12
000a84 01db      	MOVW R26,R22
000a85 1bae      	SUB  R26,R30
000a86 0bbf      	SBC  R27,R31
000a87 e0ea      	LDI  R30,LOW(10)
000a88 e0f0      	LDI  R31,HIGH(10)
000a89 940e 0e52 	CALL __DIVW21
000a8b 93ea      	ST   -Y,R30
000a8c 940e 006d 	CALL _NumToIndex
                +
000a8e 93e0 0167+STS _LcdText + ( 3 ) , R30
                 	__PUTB1MN _LcdText,3
                 ; 0000 05AD                 LcdTaskas[3] = 1;
000a90 e0e1      	LDI  R30,LOW(1)
                +
000a91 93e0 016b+STS _LcdTaskas + ( 3 ) , R30
                 	__PUTB1MN _LcdTaskas,3
                 ; 0000 05AE                 }
                 ; 0000 05AF                 else if(Padetis==5){
000a93 c051      	RJMP _0x1C0
                 _0x1BF:
000a94 81a8      	LD   R26,Y
000a95 30a5      	CPI  R26,LOW(0x5)
000a96 f011      	BREQ PC+3
000a97 940c 0adc 	JMP _0x1C1
                 ; 0000 05B0                 LcdText[0] = '=';
000a99 e3ed      	LDI  R30,LOW(61)
000a9a 93e0 0164 	STS  _LcdText,R30
                 ; 0000 05B1                 LcdText[1] = NumToIndex( BATTERY_VOLTAGE/100 );
000a9c 91a0 017f 	LDS  R26,_BATTERY_VOLTAGE
000a9e e0b0      	LDI  R27,0
000a9f e6e4      	LDI  R30,LOW(100)
000aa0 e0f0      	LDI  R31,HIGH(100)
000aa1 940e 0e52 	CALL __DIVW21
000aa3 93ea      	ST   -Y,R30
000aa4 940e 006d 	CALL _NumToIndex
                +
000aa6 93e0 0165+STS _LcdText + ( 1 ) , R30
                 	__PUTB1MN _LcdText,1
                 ; 0000 05B2                 LcdText[2] = NumToIndex( (BATTERY_VOLTAGE-(BATTERY_VOLTAGE/100)*100)/10);
000aa8 9160 017f 	LDS  R22,_BATTERY_VOLTAGE
000aaa 2777      	CLR  R23
000aab 91a0 017f 	LDS  R26,_BATTERY_VOLTAGE
000aad e0b0      	LDI  R27,0
000aae e6e4      	LDI  R30,LOW(100)
000aaf e0f0      	LDI  R31,HIGH(100)
000ab0 940e 0e52 	CALL __DIVW21
000ab2 e6a4      	LDI  R26,LOW(100)
000ab3 e0b0      	LDI  R27,HIGH(100)
000ab4 940e 0e3a 	CALL __MULW12
000ab6 01db      	MOVW R26,R22
000ab7 1bae      	SUB  R26,R30
000ab8 0bbf      	SBC  R27,R31
000ab9 e0ea      	LDI  R30,LOW(10)
000aba e0f0      	LDI  R31,HIGH(10)
000abb 940e 0e52 	CALL __DIVW21
000abd 93ea      	ST   -Y,R30
000abe 940e 006d 	CALL _NumToIndex
                +
000ac0 93e0 0166+STS _LcdText + ( 2 ) , R30
                 	__PUTB1MN _LcdText,2
                 ; 0000 05B3                 LcdText[3] = NumToIndex(  BATTERY_VOLTAGE-(BATTERY_VOLTAGE/10)*10);
000ac2 9160 017f 	LDS  R22,_BATTERY_VOLTAGE
000ac4 2777      	CLR  R23
000ac5 91a0 017f 	LDS  R26,_BATTERY_VOLTAGE
000ac7 e0b0      	LDI  R27,0
000ac8 e0ea      	LDI  R30,LOW(10)
000ac9 e0f0      	LDI  R31,HIGH(10)
000aca 940e 0e52 	CALL __DIVW21
000acc e0aa      	LDI  R26,LOW(10)
000acd e0b0      	LDI  R27,HIGH(10)
000ace 940e 0e3a 	CALL __MULW12
000ad0 01db      	MOVW R26,R22
000ad1 1bae      	SUB  R26,R30
000ad2 0bbf      	SBC  R27,R31
000ad3 93aa      	ST   -Y,R26
000ad4 940e 006d 	CALL _NumToIndex
                +
000ad6 93e0 0167+STS _LcdText + ( 3 ) , R30
                 	__PUTB1MN _LcdText,3
                 ; 0000 05B4                 LcdTaskas[2] = 1;
000ad8 e0e1      	LDI  R30,LOW(1)
                +
000ad9 93e0 016a+STS _LcdTaskas + ( 2 ) , R30
                 	__PUTB1MN _LcdTaskas,2
                 ; 0000 05B5                 }
                 ; 0000 05B6                 else{
000adb c009      	RJMP _0x1C2
                 _0x1C1:
                 ; 0000 05B7                 LcdText[0] = ' ';
000adc e2e0      	LDI  R30,LOW(32)
000add 93e0 0164 	STS  _LcdText,R30
                 ; 0000 05B8                 LcdText[1] = ' ';
                +
000adf 93e0 0165+STS _LcdText + ( 1 ) , R30
                 	__PUTB1MN _LcdText,1
                 ; 0000 05B9                 LcdText[2] = ' ';
                +
000ae1 93e0 0166+STS _LcdText + ( 2 ) , R30
                 	__PUTB1MN _LcdText,2
                 ; 0000 05BA                 LcdText[3] = ' ';
                 _0x21F:
                +
000ae3 93e0 0167+STS _LcdText + ( 3 ) , R30
                 	__PUTB1MN _LcdText,3
                 ; 0000 05BB                 }
                 _0x1C2:
                 _0x1C0:
                 ; 0000 05BC             }
000ae5 9621      	ADIW R28,1
                 ; 0000 05BD             else{
000ae6 c005      	RJMP _0x1C3
                 _0x1B7:
                 ; 0000 05BE             Timer26 = 0;
000ae7 e0e0      	LDI  R30,LOW(0)
000ae8 93e0 0196 	STS  _Timer26_S000000B003,R30
000aea 93e0 0197 	STS  _Timer26_S000000B003+1,R30
                 ; 0000 05BF             }
                 _0x1C3:
                 ; 0000 05C0 
                 ; 0000 05C1             // Minimali itampa
                 ; 0000 05C2             if(LangoAdresas==2){
000aec 91a0 017d 	LDS  R26,_LangoAdresas
000aee 30a2      	CPI  R26,LOW(0x2)
000aef f011      	BREQ PC+3
000af0 940c 0c67 	JMP _0x1C4
                 ; 0000 05C3             unsigned char Padetis;
                 ; 0000 05C4             static unsigned int Timer27;
                 ; 0000 05C5                 if(Timer27<=3300){
000af2 9721      	SBIW R28,1
                 ;	Padetis -> Y+0
000af3 91a0 0198 	LDS  R26,_Timer27_S000000B003
000af5 91b0 0199 	LDS  R27,_Timer27_S000000B003+1
000af7 3ea5      	CPI  R26,LOW(0xCE5)
000af8 e0ec      	LDI  R30,HIGH(0xCE5)
000af9 07be      	CPC  R27,R30
000afa f438      	BRSH _0x1C5
                 ; 0000 05C6                 Timer27++;
000afb e9a8      	LDI  R26,LOW(_Timer27_S000000B003)
000afc e0b1      	LDI  R27,HIGH(_Timer27_S000000B003)
000afd 91ed      	LD   R30,X+
000afe 91fd      	LD   R31,X+
000aff 9631      	ADIW R30,1
000b00 93fe      	ST   -X,R31
000b01 93ee      	ST   -X,R30
                 ; 0000 05C7                 }
                 ; 0000 05C8             Padetis = Timer27/300;
                 _0x1C5:
000b02 91a0 0198 	LDS  R26,_Timer27_S000000B003
000b04 91b0 0199 	LDS  R27,_Timer27_S000000B003+1
000b06 e2ec      	LDI  R30,LOW(300)
000b07 e0f1      	LDI  R31,HIGH(300)
000b08 940e 0e3f 	CALL __DIVW21U
000b0a 83e8      	ST   Y,R30
                 ; 0000 05C9 
                 ; 0000 05CA             LcdTaskas[0] = 0;
000b0b e0e0      	LDI  R30,LOW(0)
000b0c 93e0 0168 	STS  _LcdTaskas,R30
                 ; 0000 05CB             LcdTaskas[1] = 0;
                +
000b0e 93e0 0169+STS _LcdTaskas + ( 1 ) , R30
                 	__PUTB1MN _LcdTaskas,1
                 ; 0000 05CC             LcdTaskas[2] = 0;
                +
000b10 93e0 016a+STS _LcdTaskas + ( 2 ) , R30
                 	__PUTB1MN _LcdTaskas,2
                 ; 0000 05CD             LcdTaskas[3] = 0;
                +
000b12 93e0 016b+STS _LcdTaskas + ( 3 ) , R30
                 	__PUTB1MN _LcdTaskas,3
                 ; 0000 05CE                 if(Padetis==1){
000b14 81a8      	LD   R26,Y
000b15 30a1      	CPI  R26,LOW(0x1)
000b16 f449      	BRNE _0x1C6
                 ; 0000 05CF                 LcdText[0] = ' ';
000b17 e2e0      	LDI  R30,LOW(32)
000b18 93e0 0164 	STS  _LcdText,R30
                 ; 0000 05D0                 LcdText[1] = ' ';
                +
000b1a 93e0 0165+STS _LcdText + ( 1 ) , R30
                 	__PUTB1MN _LcdText,1
                 ; 0000 05D1                 LcdText[2] = ' ';
                +
000b1c 93e0 0166+STS _LcdText + ( 2 ) , R30
                 	__PUTB1MN _LcdText,2
                 ; 0000 05D2                 LcdText[3] = 'F';
000b1e e4e6      	LDI  R30,LOW(70)
000b1f c106      	RJMP _0x220
                 ; 0000 05D3                 }
                 ; 0000 05D4                 else if(Padetis==2){
                 _0x1C6:
000b20 81a8      	LD   R26,Y
000b21 30a2      	CPI  R26,LOW(0x2)
000b22 f451      	BRNE _0x1C8
                 ; 0000 05D5                 LcdText[0] = ' ';
000b23 e2e0      	LDI  R30,LOW(32)
000b24 93e0 0164 	STS  _LcdText,R30
                 ; 0000 05D6                 LcdText[1] = ' ';
                +
000b26 93e0 0165+STS _LcdText + ( 1 ) , R30
                 	__PUTB1MN _LcdText,1
                 ; 0000 05D7                 LcdText[2] = 'F';
000b28 e4e6      	LDI  R30,LOW(70)
                +
000b29 93e0 0166+STS _LcdText + ( 2 ) , R30
                 	__PUTB1MN _LcdText,2
                 ; 0000 05D8                 LcdText[3] = 'L';
000b2b e4ec      	LDI  R30,LOW(76)
000b2c c0f9      	RJMP _0x220
                 ; 0000 05D9                 }
                 ; 0000 05DA                 else if(Padetis==3){
                 _0x1C8:
000b2d 81a8      	LD   R26,Y
000b2e 30a3      	CPI  R26,LOW(0x3)
000b2f f459      	BRNE _0x1CA
                 ; 0000 05DB                 LcdText[0] = ' ';
000b30 e2e0      	LDI  R30,LOW(32)
000b31 93e0 0164 	STS  _LcdText,R30
                 ; 0000 05DC                 LcdText[1] = 'F';
000b33 e4e6      	LDI  R30,LOW(70)
                +
000b34 93e0 0165+STS _LcdText + ( 1 ) , R30
                 	__PUTB1MN _LcdText,1
                 ; 0000 05DD                 LcdText[2] = 'L';
000b36 e4ec      	LDI  R30,LOW(76)
                +
000b37 93e0 0166+STS _LcdText + ( 2 ) , R30
                 	__PUTB1MN _LcdText,2
                 ; 0000 05DE                 LcdText[3] = 'o';
000b39 e6ef      	LDI  R30,LOW(111)
000b3a c0eb      	RJMP _0x220
                 ; 0000 05DF                 }
                 ; 0000 05E0                 else if(Padetis==4){
                 _0x1CA:
000b3b 81a8      	LD   R26,Y
000b3c 30a4      	CPI  R26,LOW(0x4)
000b3d f451      	BRNE _0x1CC
                 ; 0000 05E1                 LcdText[0] = 'F';
000b3e e4e6      	LDI  R30,LOW(70)
000b3f 93e0 0164 	STS  _LcdText,R30
                 ; 0000 05E2                 LcdText[1] = 'L';
000b41 e4ec      	LDI  R30,LOW(76)
                +
000b42 93e0 0165+STS _LcdText + ( 1 ) , R30
                 	__PUTB1MN _LcdText,1
                 ; 0000 05E3                 LcdText[2] = 'o';
000b44 e6ef      	LDI  R30,LOW(111)
                +
000b45 93e0 0166+STS _LcdText + ( 2 ) , R30
                 	__PUTB1MN _LcdText,2
                 ; 0000 05E4                 LcdText[3] = 'o';
000b47 c0de      	RJMP _0x220
                 ; 0000 05E5                 }
                 ; 0000 05E6                 else if(Padetis==5){
                 _0x1CC:
000b48 81a8      	LD   R26,Y
000b49 30a5      	CPI  R26,LOW(0x5)
000b4a f451      	BRNE _0x1CE
                 ; 0000 05E7                 LcdText[0] = 'L';
000b4b e4ec      	LDI  R30,LOW(76)
000b4c 93e0 0164 	STS  _LcdText,R30
                 ; 0000 05E8                 LcdText[1] = 'o';
000b4e e6ef      	LDI  R30,LOW(111)
                +
000b4f 93e0 0165+STS _LcdText + ( 1 ) , R30
                 	__PUTB1MN _LcdText,1
                 ; 0000 05E9                 LcdText[2] = 'o';
                +
000b51 93e0 0166+STS _LcdText + ( 2 ) , R30
                 	__PUTB1MN _LcdText,2
                 ; 0000 05EA                 LcdText[3] = 'r';
000b53 e7e2      	LDI  R30,LOW(114)
000b54 c0d1      	RJMP _0x220
                 ; 0000 05EB                 }
                 ; 0000 05EC                 else if(Padetis==6){
                 _0x1CE:
000b55 81a8      	LD   R26,Y
000b56 30a6      	CPI  R26,LOW(0x6)
000b57 f451      	BRNE _0x1D0
                 ; 0000 05ED                 LcdText[0] = 'o';
000b58 e6ef      	LDI  R30,LOW(111)
000b59 93e0 0164 	STS  _LcdText,R30
                 ; 0000 05EE                 LcdText[1] = 'o';
                +
000b5b 93e0 0165+STS _LcdText + ( 1 ) , R30
                 	__PUTB1MN _LcdText,1
                 ; 0000 05EF                 LcdText[2] = 'r';
000b5d e7e2      	LDI  R30,LOW(114)
                +
000b5e 93e0 0166+STS _LcdText + ( 2 ) , R30
                 	__PUTB1MN _LcdText,2
                 ; 0000 05F0                 LcdText[3] = '_';
000b60 e5ef      	LDI  R30,LOW(95)
000b61 c0c4      	RJMP _0x220
                 ; 0000 05F1                 }
                 ; 0000 05F2                 else if(Padetis==7){
                 _0x1D0:
000b62 81a8      	LD   R26,Y
000b63 30a7      	CPI  R26,LOW(0x7)
000b64 f459      	BRNE _0x1D2
                 ; 0000 05F3                 LcdText[0] = 'o';
000b65 e6ef      	LDI  R30,LOW(111)
000b66 93e0 0164 	STS  _LcdText,R30
                 ; 0000 05F4                 LcdText[1] = 'r';
000b68 e7e2      	LDI  R30,LOW(114)
                +
000b69 93e0 0165+STS _LcdText + ( 1 ) , R30
                 	__PUTB1MN _LcdText,1
                 ; 0000 05F5                 LcdText[2] = '_';
000b6b e5ef      	LDI  R30,LOW(95)
                +
000b6c 93e0 0166+STS _LcdText + ( 2 ) , R30
                 	__PUTB1MN _LcdText,2
                 ; 0000 05F6                 LcdText[3] = 'U';
000b6e e5e5      	LDI  R30,LOW(85)
000b6f c0b6      	RJMP _0x220
                 ; 0000 05F7                 }
                 ; 0000 05F8                 else if(Padetis==8){
                 _0x1D2:
000b70 81a8      	LD   R26,Y
000b71 30a8      	CPI  R26,LOW(0x8)
000b72 f459      	BRNE _0x1D4
                 ; 0000 05F9                 LcdText[0] = 'r';
000b73 e7e2      	LDI  R30,LOW(114)
000b74 93e0 0164 	STS  _LcdText,R30
                 ; 0000 05FA                 LcdText[1] = '_';
000b76 e5ef      	LDI  R30,LOW(95)
                +
000b77 93e0 0165+STS _LcdText + ( 1 ) , R30
                 	__PUTB1MN _LcdText,1
                 ; 0000 05FB                 LcdText[2] = 'U';
000b79 e5e5      	LDI  R30,LOW(85)
                +
000b7a 93e0 0166+STS _LcdText + ( 2 ) , R30
                 	__PUTB1MN _LcdText,2
                 ; 0000 05FC                 LcdText[3] = '=';
000b7c e3ed      	LDI  R30,LOW(61)
000b7d c0a8      	RJMP _0x220
                 ; 0000 05FD                 }
                 ; 0000 05FE                 else if(Padetis==9){
                 _0x1D4:
000b7e 81a8      	LD   R26,Y
000b7f 30a9      	CPI  R26,LOW(0x9)
000b80 f4b9      	BRNE _0x1D6
                 ; 0000 05FF                 LcdText[0] = '_';
000b81 e5ef      	LDI  R30,LOW(95)
000b82 93e0 0164 	STS  _LcdText,R30
                 ; 0000 0600                 LcdText[1] = 'U';
000b84 e5e5      	LDI  R30,LOW(85)
                +
000b85 93e0 0165+STS _LcdText + ( 1 ) , R30
                 	__PUTB1MN _LcdText,1
                 ; 0000 0601                 LcdText[2] = '=';
000b87 e3ed      	LDI  R30,LOW(61)
                +
000b88 93e0 0166+STS _LcdText + ( 2 ) , R30
                 	__PUTB1MN _LcdText,2
                 ; 0000 0602                 LcdText[3] = NumToIndex( MIN_BATTERY_VOLTAGE/100 );
000b8a e0a4      	LDI  R26,LOW(_MIN_BATTERY_VOLTAGE)
000b8b e0b0      	LDI  R27,HIGH(_MIN_BATTERY_VOLTAGE)
000b8c 940e 0e69 	CALL __EEPROMRDB
000b8e e0f0      	LDI  R31,0
000b8f 01df      	MOVW R26,R30
000b90 e6e4      	LDI  R30,LOW(100)
000b91 e0f0      	LDI  R31,HIGH(100)
000b92 940e 0e52 	CALL __DIVW21
000b94 93ea      	ST   -Y,R30
000b95 940e 006d 	CALL _NumToIndex
000b97 c08e      	RJMP _0x220
                 ; 0000 0603                 }
                 ; 0000 0604                 else if(Padetis==10){
                 _0x1D6:
000b98 81a8      	LD   R26,Y
000b99 30aa      	CPI  R26,LOW(0xA)
000b9a f5a9      	BRNE _0x1D8
                 ; 0000 0605                 LcdText[0] = 'U';
000b9b e5e5      	LDI  R30,LOW(85)
000b9c 93e0 0164 	STS  _LcdText,R30
                 ; 0000 0606                 LcdText[1] = '=';
000b9e e3ed      	LDI  R30,LOW(61)
                +
000b9f 93e0 0165+STS _LcdText + ( 1 ) , R30
                 	__PUTB1MN _LcdText,1
                 ; 0000 0607                 LcdText[2] = NumToIndex( MIN_BATTERY_VOLTAGE/100 );
000ba1 e0a4      	LDI  R26,LOW(_MIN_BATTERY_VOLTAGE)
000ba2 e0b0      	LDI  R27,HIGH(_MIN_BATTERY_VOLTAGE)
000ba3 940e 0e69 	CALL __EEPROMRDB
000ba5 e0f0      	LDI  R31,0
000ba6 01df      	MOVW R26,R30
000ba7 e6e4      	LDI  R30,LOW(100)
000ba8 e0f0      	LDI  R31,HIGH(100)
000ba9 940e 0e52 	CALL __DIVW21
000bab 93ea      	ST   -Y,R30
000bac 940e 006d 	CALL _NumToIndex
                +
000bae 93e0 0166+STS _LcdText + ( 2 ) , R30
                 	__PUTB1MN _LcdText,2
                 ; 0000 0608                 LcdText[3] = NumToIndex( (MIN_BATTERY_VOLTAGE-(MIN_BATTERY_VOLTAGE/100)*100)/10);
000bb0 e0a4      	LDI  R26,LOW(_MIN_BATTERY_VOLTAGE)
000bb1 e0b0      	LDI  R27,HIGH(_MIN_BATTERY_VOLTAGE)
000bb2 940e 0e69 	CALL __EEPROMRDB
000bb4 2f6e      	MOV  R22,R30
000bb5 2777      	CLR  R23
000bb6 e0f0      	LDI  R31,0
000bb7 01df      	MOVW R26,R30
000bb8 e6e4      	LDI  R30,LOW(100)
000bb9 e0f0      	LDI  R31,HIGH(100)
000bba 940e 0e52 	CALL __DIVW21
000bbc e6a4      	LDI  R26,LOW(100)
000bbd e0b0      	LDI  R27,HIGH(100)
000bbe 940e 0e3a 	CALL __MULW12
000bc0 01db      	MOVW R26,R22
000bc1 1bae      	SUB  R26,R30
000bc2 0bbf      	SBC  R27,R31
000bc3 e0ea      	LDI  R30,LOW(10)
000bc4 e0f0      	LDI  R31,HIGH(10)
000bc5 940e 0e52 	CALL __DIVW21
000bc7 93ea      	ST   -Y,R30
000bc8 940e 006d 	CALL _NumToIndex
                +
000bca 93e0 0167+STS _LcdText + ( 3 ) , R30
                 	__PUTB1MN _LcdText,3
                 ; 0000 0609                 LcdTaskas[3] = 1;
000bcc e0e1      	LDI  R30,LOW(1)
                +
000bcd 93e0 016b+STS _LcdTaskas + ( 3 ) , R30
                 	__PUTB1MN _LcdTaskas,3
                 ; 0000 060A                 }
                 ; 0000 060B                 else if(Padetis==11){
000bcf c058      	RJMP _0x1D9
                 _0x1D8:
000bd0 81a8      	LD   R26,Y
000bd1 30ab      	CPI  R26,LOW(0xB)
000bd2 f011      	BREQ PC+3
000bd3 940c 0c1f 	JMP _0x1DA
                 ; 0000 060C                 LcdText[0] = '=';
000bd5 e3ed      	LDI  R30,LOW(61)
000bd6 93e0 0164 	STS  _LcdText,R30
                 ; 0000 060D                 LcdText[1] = NumToIndex( MIN_BATTERY_VOLTAGE/100 );
000bd8 e0a4      	LDI  R26,LOW(_MIN_BATTERY_VOLTAGE)
000bd9 e0b0      	LDI  R27,HIGH(_MIN_BATTERY_VOLTAGE)
000bda 940e 0e69 	CALL __EEPROMRDB
000bdc e0f0      	LDI  R31,0
000bdd 01df      	MOVW R26,R30
000bde e6e4      	LDI  R30,LOW(100)
000bdf e0f0      	LDI  R31,HIGH(100)
000be0 940e 0e52 	CALL __DIVW21
000be2 93ea      	ST   -Y,R30
000be3 940e 006d 	CALL _NumToIndex
                +
000be5 93e0 0165+STS _LcdText + ( 1 ) , R30
                 	__PUTB1MN _LcdText,1
                 ; 0000 060E                 LcdText[2] = NumToIndex( (MIN_BATTERY_VOLTAGE-(MIN_BATTERY_VOLTAGE/100)*100)/10);
000be7 e0a4      	LDI  R26,LOW(_MIN_BATTERY_VOLTAGE)
000be8 e0b0      	LDI  R27,HIGH(_MIN_BATTERY_VOLTAGE)
000be9 940e 0e69 	CALL __EEPROMRDB
000beb 2f6e      	MOV  R22,R30
000bec 2777      	CLR  R23
000bed e0f0      	LDI  R31,0
000bee 01df      	MOVW R26,R30
000bef e6e4      	LDI  R30,LOW(100)
000bf0 e0f0      	LDI  R31,HIGH(100)
000bf1 940e 0e52 	CALL __DIVW21
000bf3 e6a4      	LDI  R26,LOW(100)
000bf4 e0b0      	LDI  R27,HIGH(100)
000bf5 940e 0e3a 	CALL __MULW12
000bf7 01db      	MOVW R26,R22
000bf8 1bae      	SUB  R26,R30
000bf9 0bbf      	SBC  R27,R31
000bfa e0ea      	LDI  R30,LOW(10)
000bfb e0f0      	LDI  R31,HIGH(10)
000bfc 940e 0e52 	CALL __DIVW21
000bfe 93ea      	ST   -Y,R30
000bff 940e 006d 	CALL _NumToIndex
                +
000c01 93e0 0166+STS _LcdText + ( 2 ) , R30
                 	__PUTB1MN _LcdText,2
                 ; 0000 060F                 LcdText[3] = NumToIndex(  MIN_BATTERY_VOLTAGE-(MIN_BATTERY_VOLTAGE/10)*10);
000c03 e0a4      	LDI  R26,LOW(_MIN_BATTERY_VOLTAGE)
000c04 e0b0      	LDI  R27,HIGH(_MIN_BATTERY_VOLTAGE)
000c05 940e 0e69 	CALL __EEPROMRDB
000c07 2f6e      	MOV  R22,R30
000c08 2777      	CLR  R23
000c09 e0f0      	LDI  R31,0
000c0a 01df      	MOVW R26,R30
000c0b e0ea      	LDI  R30,LOW(10)
000c0c e0f0      	LDI  R31,HIGH(10)
000c0d 940e 0e52 	CALL __DIVW21
000c0f e0aa      	LDI  R26,LOW(10)
000c10 e0b0      	LDI  R27,HIGH(10)
000c11 940e 0e3a 	CALL __MULW12
000c13 01db      	MOVW R26,R22
000c14 1bae      	SUB  R26,R30
000c15 0bbf      	SBC  R27,R31
000c16 93aa      	ST   -Y,R26
000c17 940e 006d 	CALL _NumToIndex
                +
000c19 93e0 0167+STS _LcdText + ( 3 ) , R30
                 	__PUTB1MN _LcdText,3
                 ; 0000 0610                 LcdTaskas[2] = 1;
000c1b e0e1      	LDI  R30,LOW(1)
                +
000c1c 93e0 016a+STS _LcdTaskas + ( 2 ) , R30
                 	__PUTB1MN _LcdTaskas,2
                 ; 0000 0611                 }
                 ; 0000 0612                 else{
000c1e c009      	RJMP _0x1DB
                 _0x1DA:
                 ; 0000 0613                 LcdText[0] = ' ';
000c1f e2e0      	LDI  R30,LOW(32)
000c20 93e0 0164 	STS  _LcdText,R30
                 ; 0000 0614                 LcdText[1] = ' ';
                +
000c22 93e0 0165+STS _LcdText + ( 1 ) , R30
                 	__PUTB1MN _LcdText,1
                 ; 0000 0615                 LcdText[2] = ' ';
                +
000c24 93e0 0166+STS _LcdText + ( 2 ) , R30
                 	__PUTB1MN _LcdText,2
                 ; 0000 0616                 LcdText[3] = ' ';
                 _0x220:
                +
000c26 93e0 0167+STS _LcdText + ( 3 ) , R30
                 	__PUTB1MN _LcdText,3
                 ; 0000 0617                 }
                 _0x1DB:
                 _0x1D9:
                 ; 0000 0618 
                 ; 0000 0619                 if((BUTTON[0]==0)&&(BUTTON[1]==1)&&(BUTTON[2]==0)){
000c28 91a0 0160 	LDS  R26,_BUTTON
000c2a 30a0      	CPI  R26,LOW(0x0)
000c2b f441      	BRNE _0x1DD
                +
000c2c 91a0 0161+LDS R26 , _BUTTON + ( 1 )
                 	__GETB2MN _BUTTON,1
000c2e 30a1      	CPI  R26,LOW(0x1)
000c2f f421      	BRNE _0x1DD
                +
000c30 91a0 0162+LDS R26 , _BUTTON + ( 2 )
                 	__GETB2MN _BUTTON,2
000c32 30a0      	CPI  R26,LOW(0x0)
000c33 f009      	BREQ _0x1DE
                 _0x1DD:
000c34 c010      	RJMP _0x1DC
                 _0x1DE:
                 ; 0000 061A                     if(ItamposTrigeris1==0){
000c35 91e0 018a 	LDS  R30,_ItamposTrigeris1
000c37 30e0      	CPI  R30,0
000c38 f459      	BRNE _0x1DF
                 ; 0000 061B                     MIN_BATTERY_VOLTAGE++;
000c39 e0a4      	LDI  R26,LOW(_MIN_BATTERY_VOLTAGE)
000c3a e0b0      	LDI  R27,HIGH(_MIN_BATTERY_VOLTAGE)
000c3b 940e 0e69 	CALL __EEPROMRDB
000c3d 5fef      	SUBI R30,-LOW(1)
000c3e 940e 0e7d 	CALL __EEPROMWRB
000c40 50e1      	SUBI R30,LOW(1)
                 ; 0000 061C                     ItamposTrigeris1 = 1;
000c41 e0e1      	LDI  R30,LOW(1)
000c42 93e0 018a 	STS  _ItamposTrigeris1,R30
                 ; 0000 061D                     }
                 ; 0000 061E                 }
                 _0x1DF:
                 ; 0000 061F                 else if((BUTTON[0]==1)&&(BUTTON[1]==0)&&(BUTTON[2]==0)){
000c44 c020      	RJMP _0x1E0
                 _0x1DC:
000c45 91a0 0160 	LDS  R26,_BUTTON
000c47 30a1      	CPI  R26,LOW(0x1)
000c48 f441      	BRNE _0x1E2
                +
000c49 91a0 0161+LDS R26 , _BUTTON + ( 1 )
                 	__GETB2MN _BUTTON,1
000c4b 30a0      	CPI  R26,LOW(0x0)
000c4c f421      	BRNE _0x1E2
                +
000c4d 91a0 0162+LDS R26 , _BUTTON + ( 2 )
                 	__GETB2MN _BUTTON,2
000c4f 30a0      	CPI  R26,LOW(0x0)
000c50 f009      	BREQ _0x1E3
                 _0x1E2:
000c51 c010      	RJMP _0x1E1
                 _0x1E3:
                 ; 0000 0620                     if(ItamposTrigeris1==0){
000c52 91e0 018a 	LDS  R30,_ItamposTrigeris1
000c54 30e0      	CPI  R30,0
000c55 f459      	BRNE _0x1E4
                 ; 0000 0621                     MIN_BATTERY_VOLTAGE--;
000c56 e0a4      	LDI  R26,LOW(_MIN_BATTERY_VOLTAGE)
000c57 e0b0      	LDI  R27,HIGH(_MIN_BATTERY_VOLTAGE)
000c58 940e 0e69 	CALL __EEPROMRDB
000c5a 50e1      	SUBI R30,LOW(1)
000c5b 940e 0e7d 	CALL __EEPROMWRB
000c5d 5fef      	SUBI R30,-LOW(1)
                 ; 0000 0622                     ItamposTrigeris1 = 1;
000c5e e0e1      	LDI  R30,LOW(1)
000c5f 93e0 018a 	STS  _ItamposTrigeris1,R30
                 ; 0000 0623                     }
                 ; 0000 0624                 }
                 _0x1E4:
                 ; 0000 0625                 else{
000c61 c003      	RJMP _0x1E5
                 _0x1E1:
                 ; 0000 0626                 ItamposTrigeris1 = 0;
000c62 e0e0      	LDI  R30,LOW(0)
000c63 93e0 018a 	STS  _ItamposTrigeris1,R30
                 ; 0000 0627                 }
                 _0x1E5:
                 _0x1E0:
                 ; 0000 0628             }
000c65 9621      	ADIW R28,1
                 ; 0000 0629             else{
000c66 c005      	RJMP _0x1E6
                 _0x1C4:
                 ; 0000 062A             Timer27 = 0;
000c67 e0e0      	LDI  R30,LOW(0)
000c68 93e0 0198 	STS  _Timer27_S000000B003,R30
000c6a 93e0 0199 	STS  _Timer27_S000000B003+1,R30
                 ; 0000 062B             }
                 _0x1E6:
                 ; 0000 062C 
                 ; 0000 062D             // Maksimali itampa
                 ; 0000 062E             if(LangoAdresas==3){
000c6c 91a0 017d 	LDS  R26,_LangoAdresas
000c6e 30a3      	CPI  R26,LOW(0x3)
000c6f f011      	BREQ PC+3
000c70 940c 0dce 	JMP _0x1E7
                 ; 0000 062F             unsigned char Padetis;
                 ; 0000 0630             static unsigned int Timer28;
                 ; 0000 0631                 if(Timer28<=2700){
000c72 9721      	SBIW R28,1
                 ;	Padetis -> Y+0
000c73 91a0 019a 	LDS  R26,_Timer28_S000000B003
000c75 91b0 019b 	LDS  R27,_Timer28_S000000B003+1
000c77 38ad      	CPI  R26,LOW(0xA8D)
000c78 e0ea      	LDI  R30,HIGH(0xA8D)
000c79 07be      	CPC  R27,R30
000c7a f438      	BRSH _0x1E8
                 ; 0000 0632                 Timer28++;
000c7b e9aa      	LDI  R26,LOW(_Timer28_S000000B003)
000c7c e0b1      	LDI  R27,HIGH(_Timer28_S000000B003)
000c7d 91ed      	LD   R30,X+
000c7e 91fd      	LD   R31,X+
000c7f 9631      	ADIW R30,1
000c80 93fe      	ST   -X,R31
000c81 93ee      	ST   -X,R30
                 ; 0000 0633                 }
                 ; 0000 0634             Padetis = Timer28/300;
                 _0x1E8:
000c82 91a0 019a 	LDS  R26,_Timer28_S000000B003
000c84 91b0 019b 	LDS  R27,_Timer28_S000000B003+1
000c86 e2ec      	LDI  R30,LOW(300)
000c87 e0f1      	LDI  R31,HIGH(300)
000c88 940e 0e3f 	CALL __DIVW21U
000c8a 83e8      	ST   Y,R30
                 ; 0000 0635 
                 ; 0000 0636             LcdTaskas[0] = 0;
000c8b e0e0      	LDI  R30,LOW(0)
000c8c 93e0 0168 	STS  _LcdTaskas,R30
                 ; 0000 0637             LcdTaskas[1] = 0;
                +
000c8e 93e0 0169+STS _LcdTaskas + ( 1 ) , R30
                 	__PUTB1MN _LcdTaskas,1
                 ; 0000 0638             LcdTaskas[2] = 0;
                +
000c90 93e0 016a+STS _LcdTaskas + ( 2 ) , R30
                 	__PUTB1MN _LcdTaskas,2
                 ; 0000 0639             LcdTaskas[3] = 0;
                +
000c92 93e0 016b+STS _LcdTaskas + ( 3 ) , R30
                 	__PUTB1MN _LcdTaskas,3
                 ; 0000 063A                 if(Padetis==1){
000c94 81a8      	LD   R26,Y
000c95 30a1      	CPI  R26,LOW(0x1)
000c96 f449      	BRNE _0x1E9
                 ; 0000 063B                 LcdText[0] = ' ';
000c97 e2e0      	LDI  R30,LOW(32)
000c98 93e0 0164 	STS  _LcdText,R30
                 ; 0000 063C                 LcdText[1] = ' ';
                +
000c9a 93e0 0165+STS _LcdText + ( 1 ) , R30
                 	__PUTB1MN _LcdText,1
                 ; 0000 063D                 LcdText[2] = ' ';
                +
000c9c 93e0 0166+STS _LcdText + ( 2 ) , R30
                 	__PUTB1MN _LcdText,2
                 ; 0000 063E                 LcdText[3] = 't';
000c9e e7e4      	LDI  R30,LOW(116)
000c9f c0ed      	RJMP _0x221
                 ; 0000 063F                 }
                 ; 0000 0640                 else if(Padetis==2){
                 _0x1E9:
000ca0 81a8      	LD   R26,Y
000ca1 30a2      	CPI  R26,LOW(0x2)
000ca2 f451      	BRNE _0x1EB
                 ; 0000 0641                 LcdText[0] = ' ';
000ca3 e2e0      	LDI  R30,LOW(32)
000ca4 93e0 0164 	STS  _LcdText,R30
                 ; 0000 0642                 LcdText[1] = ' ';
                +
000ca6 93e0 0165+STS _LcdText + ( 1 ) , R30
                 	__PUTB1MN _LcdText,1
                 ; 0000 0643                 LcdText[2] = 't';
000ca8 e7e4      	LDI  R30,LOW(116)
                +
000ca9 93e0 0166+STS _LcdText + ( 2 ) , R30
                 	__PUTB1MN _LcdText,2
                 ; 0000 0644                 LcdText[3] = 'o';
000cab e6ef      	LDI  R30,LOW(111)
000cac c0e0      	RJMP _0x221
                 ; 0000 0645                 }
                 ; 0000 0646                 else if(Padetis==3){
                 _0x1EB:
000cad 81a8      	LD   R26,Y
000cae 30a3      	CPI  R26,LOW(0x3)
000caf f459      	BRNE _0x1ED
                 ; 0000 0647                 LcdText[0] = ' ';
000cb0 e2e0      	LDI  R30,LOW(32)
000cb1 93e0 0164 	STS  _LcdText,R30
                 ; 0000 0648                 LcdText[1] = 't';
000cb3 e7e4      	LDI  R30,LOW(116)
                +
000cb4 93e0 0165+STS _LcdText + ( 1 ) , R30
                 	__PUTB1MN _LcdText,1
                 ; 0000 0649                 LcdText[2] = 'o';
000cb6 e6ef      	LDI  R30,LOW(111)
                +
000cb7 93e0 0166+STS _LcdText + ( 2 ) , R30
                 	__PUTB1MN _LcdText,2
                 ; 0000 064A                 LcdText[3] = 'P';
000cb9 e5e0      	LDI  R30,LOW(80)
000cba c0d2      	RJMP _0x221
                 ; 0000 064B                 }
                 ; 0000 064C                 else if(Padetis==4){
                 _0x1ED:
000cbb 81a8      	LD   R26,Y
000cbc 30a4      	CPI  R26,LOW(0x4)
000cbd f459      	BRNE _0x1EF
                 ; 0000 064D                 LcdText[0] = 't';
000cbe e7e4      	LDI  R30,LOW(116)
000cbf 93e0 0164 	STS  _LcdText,R30
                 ; 0000 064E                 LcdText[1] = 'o';
000cc1 e6ef      	LDI  R30,LOW(111)
                +
000cc2 93e0 0165+STS _LcdText + ( 1 ) , R30
                 	__PUTB1MN _LcdText,1
                 ; 0000 064F                 LcdText[2] = 'P';
000cc4 e5e0      	LDI  R30,LOW(80)
                +
000cc5 93e0 0166+STS _LcdText + ( 2 ) , R30
                 	__PUTB1MN _LcdText,2
                 ; 0000 0650                 LcdText[3] = '_';
000cc7 e5ef      	LDI  R30,LOW(95)
000cc8 c0c4      	RJMP _0x221
                 ; 0000 0651                 }
                 ; 0000 0652                 else if(Padetis==5){
                 _0x1EF:
000cc9 81a8      	LD   R26,Y
000cca 30a5      	CPI  R26,LOW(0x5)
000ccb f459      	BRNE _0x1F1
                 ; 0000 0653                 LcdText[0] = 'o';
000ccc e6ef      	LDI  R30,LOW(111)
000ccd 93e0 0164 	STS  _LcdText,R30
                 ; 0000 0654                 LcdText[1] = 'P';
000ccf e5e0      	LDI  R30,LOW(80)
                +
000cd0 93e0 0165+STS _LcdText + ( 1 ) , R30
                 	__PUTB1MN _LcdText,1
                 ; 0000 0655                 LcdText[2] = '_';
000cd2 e5ef      	LDI  R30,LOW(95)
                +
000cd3 93e0 0166+STS _LcdText + ( 2 ) , R30
                 	__PUTB1MN _LcdText,2
                 ; 0000 0656                 LcdText[3] = 'U';
000cd5 e5e5      	LDI  R30,LOW(85)
000cd6 c0b6      	RJMP _0x221
                 ; 0000 0657                 }
                 ; 0000 0658                 else if(Padetis==6){
                 _0x1F1:
000cd7 81a8      	LD   R26,Y
000cd8 30a6      	CPI  R26,LOW(0x6)
000cd9 f459      	BRNE _0x1F3
                 ; 0000 0659                 LcdText[0] = 'P';
000cda e5e0      	LDI  R30,LOW(80)
000cdb 93e0 0164 	STS  _LcdText,R30
                 ; 0000 065A                 LcdText[1] = '_';
000cdd e5ef      	LDI  R30,LOW(95)
                +
000cde 93e0 0165+STS _LcdText + ( 1 ) , R30
                 	__PUTB1MN _LcdText,1
                 ; 0000 065B                 LcdText[2] = 'U';
000ce0 e5e5      	LDI  R30,LOW(85)
                +
000ce1 93e0 0166+STS _LcdText + ( 2 ) , R30
                 	__PUTB1MN _LcdText,2
                 ; 0000 065C                 LcdText[3] = '=';
000ce3 e3ed      	LDI  R30,LOW(61)
000ce4 c0a8      	RJMP _0x221
                 ; 0000 065D                 }
                 ; 0000 065E                 else if(Padetis==7){
                 _0x1F3:
000ce5 81a8      	LD   R26,Y
000ce6 30a7      	CPI  R26,LOW(0x7)
000ce7 f4b9      	BRNE _0x1F5
                 ; 0000 065F                 LcdText[0] = '_';
000ce8 e5ef      	LDI  R30,LOW(95)
000ce9 93e0 0164 	STS  _LcdText,R30
                 ; 0000 0660                 LcdText[1] = 'U';
000ceb e5e5      	LDI  R30,LOW(85)
                +
000cec 93e0 0165+STS _LcdText + ( 1 ) , R30
                 	__PUTB1MN _LcdText,1
                 ; 0000 0661                 LcdText[2] = '=';
000cee e3ed      	LDI  R30,LOW(61)
                +
000cef 93e0 0166+STS _LcdText + ( 2 ) , R30
                 	__PUTB1MN _LcdText,2
                 ; 0000 0662                 LcdText[3] = NumToIndex( MAX_BATTERY_VOLTAGE/100 );
000cf1 e0a3      	LDI  R26,LOW(_MAX_BATTERY_VOLTAGE)
000cf2 e0b0      	LDI  R27,HIGH(_MAX_BATTERY_VOLTAGE)
000cf3 940e 0e69 	CALL __EEPROMRDB
000cf5 e0f0      	LDI  R31,0
000cf6 01df      	MOVW R26,R30
000cf7 e6e4      	LDI  R30,LOW(100)
000cf8 e0f0      	LDI  R31,HIGH(100)
000cf9 940e 0e52 	CALL __DIVW21
000cfb 93ea      	ST   -Y,R30
000cfc 940e 006d 	CALL _NumToIndex
000cfe c08e      	RJMP _0x221
                 ; 0000 0663                 }
                 ; 0000 0664                 else if(Padetis==8){
                 _0x1F5:
000cff 81a8      	LD   R26,Y
000d00 30a8      	CPI  R26,LOW(0x8)
000d01 f5a9      	BRNE _0x1F7
                 ; 0000 0665                 LcdText[0] = 'U';
000d02 e5e5      	LDI  R30,LOW(85)
000d03 93e0 0164 	STS  _LcdText,R30
                 ; 0000 0666                 LcdText[1] = '=';
000d05 e3ed      	LDI  R30,LOW(61)
                +
000d06 93e0 0165+STS _LcdText + ( 1 ) , R30
                 	__PUTB1MN _LcdText,1
                 ; 0000 0667                 LcdText[2] = NumToIndex( MAX_BATTERY_VOLTAGE/100 );
000d08 e0a3      	LDI  R26,LOW(_MAX_BATTERY_VOLTAGE)
000d09 e0b0      	LDI  R27,HIGH(_MAX_BATTERY_VOLTAGE)
000d0a 940e 0e69 	CALL __EEPROMRDB
000d0c e0f0      	LDI  R31,0
000d0d 01df      	MOVW R26,R30
000d0e e6e4      	LDI  R30,LOW(100)
000d0f e0f0      	LDI  R31,HIGH(100)
000d10 940e 0e52 	CALL __DIVW21
000d12 93ea      	ST   -Y,R30
000d13 940e 006d 	CALL _NumToIndex
                +
000d15 93e0 0166+STS _LcdText + ( 2 ) , R30
                 	__PUTB1MN _LcdText,2
                 ; 0000 0668                 LcdText[3] = NumToIndex( (MAX_BATTERY_VOLTAGE-(MAX_BATTERY_VOLTAGE/100)*100)/10);
000d17 e0a3      	LDI  R26,LOW(_MAX_BATTERY_VOLTAGE)
000d18 e0b0      	LDI  R27,HIGH(_MAX_BATTERY_VOLTAGE)
000d19 940e 0e69 	CALL __EEPROMRDB
000d1b 2f6e      	MOV  R22,R30
000d1c 2777      	CLR  R23
000d1d e0f0      	LDI  R31,0
000d1e 01df      	MOVW R26,R30
000d1f e6e4      	LDI  R30,LOW(100)
000d20 e0f0      	LDI  R31,HIGH(100)
000d21 940e 0e52 	CALL __DIVW21
000d23 e6a4      	LDI  R26,LOW(100)
000d24 e0b0      	LDI  R27,HIGH(100)
000d25 940e 0e3a 	CALL __MULW12
000d27 01db      	MOVW R26,R22
000d28 1bae      	SUB  R26,R30
000d29 0bbf      	SBC  R27,R31
000d2a e0ea      	LDI  R30,LOW(10)
000d2b e0f0      	LDI  R31,HIGH(10)
000d2c 940e 0e52 	CALL __DIVW21
000d2e 93ea      	ST   -Y,R30
000d2f 940e 006d 	CALL _NumToIndex
                +
000d31 93e0 0167+STS _LcdText + ( 3 ) , R30
                 	__PUTB1MN _LcdText,3
                 ; 0000 0669                 LcdTaskas[3] = 1;
000d33 e0e1      	LDI  R30,LOW(1)
                +
000d34 93e0 016b+STS _LcdTaskas + ( 3 ) , R30
                 	__PUTB1MN _LcdTaskas,3
                 ; 0000 066A                 }
                 ; 0000 066B                 else if(Padetis==9){
000d36 c058      	RJMP _0x1F8
                 _0x1F7:
000d37 81a8      	LD   R26,Y
000d38 30a9      	CPI  R26,LOW(0x9)
000d39 f011      	BREQ PC+3
000d3a 940c 0d86 	JMP _0x1F9
                 ; 0000 066C                 LcdText[0] = '=';
000d3c e3ed      	LDI  R30,LOW(61)
000d3d 93e0 0164 	STS  _LcdText,R30
                 ; 0000 066D                 LcdText[1] = NumToIndex( MAX_BATTERY_VOLTAGE/100 );
000d3f e0a3      	LDI  R26,LOW(_MAX_BATTERY_VOLTAGE)
000d40 e0b0      	LDI  R27,HIGH(_MAX_BATTERY_VOLTAGE)
000d41 940e 0e69 	CALL __EEPROMRDB
000d43 e0f0      	LDI  R31,0
000d44 01df      	MOVW R26,R30
000d45 e6e4      	LDI  R30,LOW(100)
000d46 e0f0      	LDI  R31,HIGH(100)
000d47 940e 0e52 	CALL __DIVW21
000d49 93ea      	ST   -Y,R30
000d4a 940e 006d 	CALL _NumToIndex
                +
000d4c 93e0 0165+STS _LcdText + ( 1 ) , R30
                 	__PUTB1MN _LcdText,1
                 ; 0000 066E                 LcdText[2] = NumToIndex( (MAX_BATTERY_VOLTAGE-(MAX_BATTERY_VOLTAGE/100)*100)/10);
000d4e e0a3      	LDI  R26,LOW(_MAX_BATTERY_VOLTAGE)
000d4f e0b0      	LDI  R27,HIGH(_MAX_BATTERY_VOLTAGE)
000d50 940e 0e69 	CALL __EEPROMRDB
000d52 2f6e      	MOV  R22,R30
000d53 2777      	CLR  R23
000d54 e0f0      	LDI  R31,0
000d55 01df      	MOVW R26,R30
000d56 e6e4      	LDI  R30,LOW(100)
000d57 e0f0      	LDI  R31,HIGH(100)
000d58 940e 0e52 	CALL __DIVW21
000d5a e6a4      	LDI  R26,LOW(100)
000d5b e0b0      	LDI  R27,HIGH(100)
000d5c 940e 0e3a 	CALL __MULW12
000d5e 01db      	MOVW R26,R22
000d5f 1bae      	SUB  R26,R30
000d60 0bbf      	SBC  R27,R31
000d61 e0ea      	LDI  R30,LOW(10)
000d62 e0f0      	LDI  R31,HIGH(10)
000d63 940e 0e52 	CALL __DIVW21
000d65 93ea      	ST   -Y,R30
000d66 940e 006d 	CALL _NumToIndex
                +
000d68 93e0 0166+STS _LcdText + ( 2 ) , R30
                 	__PUTB1MN _LcdText,2
                 ; 0000 066F                 LcdText[3] = NumToIndex(  MAX_BATTERY_VOLTAGE-(MAX_BATTERY_VOLTAGE/10)*10);
000d6a e0a3      	LDI  R26,LOW(_MAX_BATTERY_VOLTAGE)
000d6b e0b0      	LDI  R27,HIGH(_MAX_BATTERY_VOLTAGE)
000d6c 940e 0e69 	CALL __EEPROMRDB
000d6e 2f6e      	MOV  R22,R30
000d6f 2777      	CLR  R23
000d70 e0f0      	LDI  R31,0
000d71 01df      	MOVW R26,R30
000d72 e0ea      	LDI  R30,LOW(10)
000d73 e0f0      	LDI  R31,HIGH(10)
000d74 940e 0e52 	CALL __DIVW21
000d76 e0aa      	LDI  R26,LOW(10)
000d77 e0b0      	LDI  R27,HIGH(10)
000d78 940e 0e3a 	CALL __MULW12
000d7a 01db      	MOVW R26,R22
000d7b 1bae      	SUB  R26,R30
000d7c 0bbf      	SBC  R27,R31
000d7d 93aa      	ST   -Y,R26
000d7e 940e 006d 	CALL _NumToIndex
                +
000d80 93e0 0167+STS _LcdText + ( 3 ) , R30
                 	__PUTB1MN _LcdText,3
                 ; 0000 0670                 LcdTaskas[2] = 1;
000d82 e0e1      	LDI  R30,LOW(1)
                +
000d83 93e0 016a+STS _LcdTaskas + ( 2 ) , R30
                 	__PUTB1MN _LcdTaskas,2
                 ; 0000 0671                 }
                 ; 0000 0672                 else{
000d85 c009      	RJMP _0x1FA
                 _0x1F9:
                 ; 0000 0673                 LcdText[0] = ' ';
000d86 e2e0      	LDI  R30,LOW(32)
000d87 93e0 0164 	STS  _LcdText,R30
                 ; 0000 0674                 LcdText[1] = ' ';
                +
000d89 93e0 0165+STS _LcdText + ( 1 ) , R30
                 	__PUTB1MN _LcdText,1
                 ; 0000 0675                 LcdText[2] = ' ';
                +
000d8b 93e0 0166+STS _LcdText + ( 2 ) , R30
                 	__PUTB1MN _LcdText,2
                 ; 0000 0676                 LcdText[3] = ' ';
                 _0x221:
                +
000d8d 93e0 0167+STS _LcdText + ( 3 ) , R30
                 	__PUTB1MN _LcdText,3
                 ; 0000 0677                 }
                 _0x1FA:
                 _0x1F8:
                 ; 0000 0678 
                 ; 0000 0679                 if((BUTTON[0]==0)&&(BUTTON[1]==1)&&(BUTTON[2]==0)){
000d8f 91a0 0160 	LDS  R26,_BUTTON
000d91 30a0      	CPI  R26,LOW(0x0)
000d92 f441      	BRNE _0x1FC
                +
000d93 91a0 0161+LDS R26 , _BUTTON + ( 1 )
                 	__GETB2MN _BUTTON,1
000d95 30a1      	CPI  R26,LOW(0x1)
000d96 f421      	BRNE _0x1FC
                +
000d97 91a0 0162+LDS R26 , _BUTTON + ( 2 )
                 	__GETB2MN _BUTTON,2
000d99 30a0      	CPI  R26,LOW(0x0)
000d9a f009      	BREQ _0x1FD
                 _0x1FC:
000d9b c010      	RJMP _0x1FB
                 _0x1FD:
                 ; 0000 067A                     if(ItamposTrigeris2==0){
000d9c 91e0 018b 	LDS  R30,_ItamposTrigeris2
000d9e 30e0      	CPI  R30,0
000d9f f459      	BRNE _0x1FE
                 ; 0000 067B                     MAX_BATTERY_VOLTAGE++;
000da0 e0a3      	LDI  R26,LOW(_MAX_BATTERY_VOLTAGE)
000da1 e0b0      	LDI  R27,HIGH(_MAX_BATTERY_VOLTAGE)
000da2 940e 0e69 	CALL __EEPROMRDB
000da4 5fef      	SUBI R30,-LOW(1)
000da5 940e 0e7d 	CALL __EEPROMWRB
000da7 50e1      	SUBI R30,LOW(1)
                 ; 0000 067C                     ItamposTrigeris2 = 1;
000da8 e0e1      	LDI  R30,LOW(1)
000da9 93e0 018b 	STS  _ItamposTrigeris2,R30
                 ; 0000 067D                     }
                 ; 0000 067E                 }
                 _0x1FE:
                 ; 0000 067F                 else if((BUTTON[0]==1)&&(BUTTON[1]==0)&&(BUTTON[2]==0)){
000dab c020      	RJMP _0x1FF
                 _0x1FB:
000dac 91a0 0160 	LDS  R26,_BUTTON
000dae 30a1      	CPI  R26,LOW(0x1)
000daf f441      	BRNE _0x201
                +
000db0 91a0 0161+LDS R26 , _BUTTON + ( 1 )
                 	__GETB2MN _BUTTON,1
000db2 30a0      	CPI  R26,LOW(0x0)
000db3 f421      	BRNE _0x201
                +
000db4 91a0 0162+LDS R26 , _BUTTON + ( 2 )
                 	__GETB2MN _BUTTON,2
000db6 30a0      	CPI  R26,LOW(0x0)
000db7 f009      	BREQ _0x202
                 _0x201:
000db8 c010      	RJMP _0x200
                 _0x202:
                 ; 0000 0680                     if(ItamposTrigeris2==0){
000db9 91e0 018b 	LDS  R30,_ItamposTrigeris2
000dbb 30e0      	CPI  R30,0
000dbc f459      	BRNE _0x203
                 ; 0000 0681                     MAX_BATTERY_VOLTAGE--;
000dbd e0a3      	LDI  R26,LOW(_MAX_BATTERY_VOLTAGE)
000dbe e0b0      	LDI  R27,HIGH(_MAX_BATTERY_VOLTAGE)
000dbf 940e 0e69 	CALL __EEPROMRDB
000dc1 50e1      	SUBI R30,LOW(1)
000dc2 940e 0e7d 	CALL __EEPROMWRB
000dc4 5fef      	SUBI R30,-LOW(1)
                 ; 0000 0682                     ItamposTrigeris2 = 1;
000dc5 e0e1      	LDI  R30,LOW(1)
000dc6 93e0 018b 	STS  _ItamposTrigeris2,R30
                 ; 0000 0683                     }
                 ; 0000 0684                 }
                 _0x203:
                 ; 0000 0685                 else{
000dc8 c003      	RJMP _0x204
                 _0x200:
                 ; 0000 0686                 ItamposTrigeris2 = 0;
000dc9 e0e0      	LDI  R30,LOW(0)
000dca 93e0 018b 	STS  _ItamposTrigeris2,R30
                 ; 0000 0687                 }
                 _0x204:
                 _0x1FF:
                 ; 0000 0688             }
000dcc 9621      	ADIW R28,1
                 ; 0000 0689             else{
000dcd c005      	RJMP _0x205
                 _0x1E7:
                 ; 0000 068A             Timer28 = 0;
000dce e0e0      	LDI  R30,LOW(0)
000dcf 93e0 019a 	STS  _Timer28_S000000B003,R30
000dd1 93e0 019b 	STS  _Timer28_S000000B003+1,R30
                 ; 0000 068B             }
                 _0x205:
                 ; 0000 068C         }
                 ; 0000 068D         else{
000dd3 c003      	RJMP _0x206
                 _0x1A4:
                 ; 0000 068E         LangoAdresas = 0;
000dd4 e0e0      	LDI  R30,LOW(0)
000dd5 93e0 017d 	STS  _LangoAdresas,R30
                 ; 0000 068F         }
                 _0x206:
                 ; 0000 0690 
                 ; 0000 0691     // Kai nuspaustas tik 1 ir 4 mygtukas:
                 ; 0000 0692     // Krovimo nutraukimo funkcija:
                 ; 0000 0693         if((BUTTON[0]==1)&&(BUTTON[1]==0)&&(BUTTON[2]==0)&&(BUTTON[3]==1)){
000dd7 91a0 0160 	LDS  R26,_BUTTON
000dd9 30a1      	CPI  R26,LOW(0x1)
000dda f461      	BRNE _0x208
                +
000ddb 91a0 0161+LDS R26 , _BUTTON + ( 1 )
                 	__GETB2MN _BUTTON,1
000ddd 30a0      	CPI  R26,LOW(0x0)
000dde f441      	BRNE _0x208
                +
000ddf 91a0 0162+LDS R26 , _BUTTON + ( 2 )
                 	__GETB2MN _BUTTON,2
000de1 30a0      	CPI  R26,LOW(0x0)
000de2 f421      	BRNE _0x208
                +
000de3 91a0 0163+LDS R26 , _BUTTON + ( 3 )
                 	__GETB2MN _BUTTON,3
000de5 30a1      	CPI  R26,LOW(0x1)
000de6 f009      	BREQ _0x209
                 _0x208:
000de7 c01b      	RJMP _0x207
                 _0x209:
                 ; 0000 0694         // Charge Off
                 ; 0000 0695         static unsigned int Timer21;
                 ; 0000 0696             if(UPS_STATE==1){
000de8 e0e1      	LDI  R30,LOW(1)
000de9 15e7      	CP   R30,R7
000dea f491      	BRNE _0x20A
                 ; 0000 0697             Timer21++;
000deb e9ac      	LDI  R26,LOW(_Timer21_S000000B002)
000dec e0b1      	LDI  R27,HIGH(_Timer21_S000000B002)
000ded 91ed      	LD   R30,X+
000dee 91fd      	LD   R31,X+
000def 9631      	ADIW R30,1
000df0 93fe      	ST   -X,R31
000df1 93ee      	ST   -X,R30
000df2 9731      	SBIW R30,1
                 ; 0000 0698                 if(Timer21>=5000){
000df3 91a0 019c 	LDS  R26,_Timer21_S000000B002
000df5 91b0 019d 	LDS  R27,_Timer21_S000000B002+1
000df7 38a8      	CPI  R26,LOW(0x1388)
000df8 e1e3      	LDI  R30,HIGH(0x1388)
000df9 07be      	CPC  R27,R30
000dfa f008      	BRLO _0x20B
                 ; 0000 0699                 UPS_STATE = 0;
000dfb 2477      	CLR  R7
                 ; 0000 069A                 }
                 ; 0000 069B             }
                 _0x20B:
                 ; 0000 069C             else{
000dfc c005      	RJMP _0x20C
                 _0x20A:
                 ; 0000 069D             Timer21 = 0;
000dfd e0e0      	LDI  R30,LOW(0)
000dfe 93e0 019c 	STS  _Timer21_S000000B002,R30
000e00 93e0 019d 	STS  _Timer21_S000000B002+1,R30
                 ; 0000 069E             }
                 _0x20C:
                 ; 0000 069F         }
                 ; 0000 06A0         else{
000e02 c005      	RJMP _0x20D
                 _0x207:
                 ; 0000 06A1         Timer21 = 0;
000e03 e0e0      	LDI  R30,LOW(0)
000e04 93e0 019c 	STS  _Timer21_S000000B002,R30
000e06 93e0 019d 	STS  _Timer21_S000000B002+1,R30
                 ; 0000 06A2         }
                 _0x20D:
                 ; 0000 06A3 
                 ; 0000 06A4 ////////////////////////////////////////////////////////////////////////////////////
                 ; 0000 06A5 
                 ; 0000 06A6 
                 ; 0000 06A7     RelayOutputs();
000e08 940e 00bc 	CALL _RelayOutputs
                 ; 0000 06A8     CheckButtons();
000e0a 940e 0409 	CALL _CheckButtons
                 ; 0000 06A9     UpdateLcd();
000e0c 940e 00d8 	CALL _UpdateLcd
                 ; 0000 06AA 
                 ; 0000 06AB     delay_ms(1);
000e0e e0e1      	LDI  R30,LOW(1)
000e0f e0f0      	LDI  R31,HIGH(1)
000e10 93fa      	ST   -Y,R31
000e11 93ea      	ST   -Y,R30
000e12 940e 0e22 	CALL _delay_ms
                 ; 0000 06AC     }
000e14 940c 05a6 	JMP  _0x14E
                 ; 0000 06AD }
                 _0x20E:
000e16 cfff      	RJMP _0x20E
                 
                 	.CSEG
                 _strlenf:
000e17 27aa          clr  r26
000e18 27bb          clr  r27
000e19 91e9          ld   r30,y+
000e1a 91f9          ld   r31,y+
                 strlenf0:
000e1b 9005      	lpm  r0,z+
000e1c 2000          tst  r0
000e1d f011          breq strlenf1
000e1e 9611          adiw r26,1
000e1f cffb          rjmp strlenf0
                 strlenf1:
000e20 01fd          movw r30,r26
000e21 9508          ret
                 
                 	.DSEG
                 _BUTTON:
000160           	.BYTE 0x4
                 
                 	.ESEG
                 _BATTERY_FOULT:
000000           	.BYTE 0x1
                 
                 	.DSEG
                 _LcdText:
000164           	.BYTE 0x4
                 _LcdTaskas:
000168           	.BYTE 0x4
                 
                 	.ESEG
                 _Timer4:
000001           	.BYTE 0x1
                 _Timer5:
000002           	.BYTE 0x1
                 
                 	.DSEG
                 _Timer7:
00016c           	.BYTE 0x1
                 _Timer8:
00016d           	.BYTE 0x1
                 _Timer9:
00016e           	.BYTE 0x1
                 _Timer10:
00016f           	.BYTE 0x2
                 _Timer11:
000171           	.BYTE 0x2
                 _Timer12:
000173           	.BYTE 0x2
                 _Timer14:
000175           	.BYTE 0x2
                 _Timer19:
000177           	.BYTE 0x2
                 _Timer20:
000179           	.BYTE 0x2
                 _Timer24:
00017b           	.BYTE 0x2
                 _LangoAdresas:
00017d           	.BYTE 0x1
                 _LanguTrigeris:
00017e           	.BYTE 0x1
                 _BATTERY_VOLTAGE:
00017f           	.BYTE 0x1
                 _BATTERY_VOLTAGE_ARCHIVE:
000180           	.BYTE 0xA
                 
                 	.ESEG
                 _MAX_BATTERY_VOLTAGE:
000003           	.BYTE 0x1
                 _MIN_BATTERY_VOLTAGE:
000004           	.BYTE 0x1
                 
                 	.DSEG
                 _ItamposTrigeris1:
00018a           	.BYTE 0x1
                 _ItamposTrigeris2:
00018b           	.BYTE 0x1
                 _Timer29_S0000007000:
00018c           	.BYTE 0x2
                 _Timer16:
00018e           	.BYTE 0x2
                 
                 	.ESEG
                 _Timer17:
000005           	.BYTE 0x2
                 _Timer18:
000007           	.BYTE 0x2
                 
                 	.DSEG
                 _InteruptTimer:
000190           	.BYTE 0x2
                 _Timer1_S000000B000:
000192           	.BYTE 0x2
                 _Timer2_S000000B003:
000194           	.BYTE 0x2
                 _Timer26_S000000B003:
000196           	.BYTE 0x2
                 _Timer27_S000000B003:
000198           	.BYTE 0x2
                 _Timer28_S000000B003:
00019a           	.BYTE 0x2
                 _Timer21_S000000B002:
00019c           	.BYTE 0x2
                 
                 	.CSEG
                 
                 	.CSEG
                 _delay_ms:
000e22 91e9      	ld   r30,y+
000e23 91f9      	ld   r31,y+
000e24 9630      	adiw r30,0
000e25 f039      	breq __delay_ms1
                 __delay_ms0:
                +
000e26 ed80     +LDI R24 , LOW ( 0x7D0 )
000e27 e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
000e28 9701     +SBIW R24 , 1
000e29 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
000e2a 95a8      	wdr
000e2b 9731      	sbiw r30,1
000e2c f7c9      	brne __delay_ms0
                 __delay_ms1:
000e2d 9508      	ret
                 
                 __ANEGW1:
000e2e 95f1      	NEG  R31
000e2f 95e1      	NEG  R30
000e30 40f0      	SBCI R31,0
000e31 9508      	RET
                 
                 __MULW12U:
000e32 9ffa      	MUL  R31,R26
000e33 2df0      	MOV  R31,R0
000e34 9feb      	MUL  R30,R27
000e35 0df0      	ADD  R31,R0
000e36 9fea      	MUL  R30,R26
000e37 2de0      	MOV  R30,R0
000e38 0df1      	ADD  R31,R1
000e39 9508      	RET
                 
                 __MULW12:
000e3a d01c      	RCALL __CHKSIGNW
000e3b dff6      	RCALL __MULW12U
000e3c f40e      	BRTC __MULW121
000e3d dff0      	RCALL __ANEGW1
                 __MULW121:
000e3e 9508      	RET
                 
                 __DIVW21U:
000e3f 2400      	CLR  R0
000e40 2411      	CLR  R1
000e41 e190      	LDI  R25,16
                 __DIVW21U1:
000e42 0faa      	LSL  R26
000e43 1fbb      	ROL  R27
000e44 1c00      	ROL  R0
000e45 1c11      	ROL  R1
000e46 1a0e      	SUB  R0,R30
000e47 0a1f      	SBC  R1,R31
000e48 f418      	BRCC __DIVW21U2
000e49 0e0e      	ADD  R0,R30
000e4a 1e1f      	ADC  R1,R31
000e4b c001      	RJMP __DIVW21U3
                 __DIVW21U2:
000e4c 60a1      	SBR  R26,1
                 __DIVW21U3:
000e4d 959a      	DEC  R25
000e4e f799      	BRNE __DIVW21U1
000e4f 01fd      	MOVW R30,R26
000e50 01d0      	MOVW R26,R0
000e51 9508      	RET
                 
                 __DIVW21:
000e52 d004      	RCALL __CHKSIGNW
000e53 dfeb      	RCALL __DIVW21U
000e54 f40e      	BRTC __DIVW211
000e55 dfd8      	RCALL __ANEGW1
                 __DIVW211:
000e56 9508      	RET
                 
                 __CHKSIGNW:
000e57 94e8      	CLT
000e58 fff7      	SBRS R31,7
000e59 c002      	RJMP __CHKSW1
000e5a dfd3      	RCALL __ANEGW1
000e5b 9468      	SET
                 __CHKSW1:
000e5c ffb7      	SBRS R27,7
000e5d c006      	RJMP __CHKSW2
000e5e 95a0      	COM  R26
000e5f 95b0      	COM  R27
000e60 9611      	ADIW R26,1
000e61 f800      	BLD  R0,0
000e62 9403      	INC  R0
000e63 fa00      	BST  R0,0
                 __CHKSW2:
000e64 9508      	RET
                 
                 __EEPROMRDW:
000e65 9611      	ADIW R26,1
000e66 d002      	RCALL __EEPROMRDB
000e67 2ffe      	MOV  R31,R30
000e68 9711      	SBIW R26,1
                 
                 __EEPROMRDB:
000e69 99e1      	SBIC EECR,EEWE
000e6a cffe      	RJMP __EEPROMRDB
000e6b 93ff      	PUSH R31
000e6c b7ff      	IN   R31,SREG
000e6d 94f8      	CLI
000e6e bbae      	OUT  EEARL,R26
000e6f bbbf      	OUT  EEARH,R27
000e70 9ae0      	SBI  EECR,EERE
000e71 b3ed      	IN   R30,EEDR
000e72 bfff      	OUT  SREG,R31
000e73 91ff      	POP  R31
000e74 9508      	RET
                 
                 __EEPROMWRW:
000e75 d007      	RCALL __EEPROMWRB
000e76 9611      	ADIW R26,1
000e77 93ef      	PUSH R30
000e78 2fef      	MOV  R30,R31
000e79 d003      	RCALL __EEPROMWRB
000e7a 91ef      	POP  R30
000e7b 9711      	SBIW R26,1
000e7c 9508      	RET
                 
                 __EEPROMWRB:
000e7d 9be1      	SBIS EECR,EEWE
000e7e c002      	RJMP __EEPROMWRB1
000e7f 95a8      	WDR
000e80 cffc      	RJMP __EEPROMWRB
                 __EEPROMWRB1:
000e81 b79f      	IN   R25,SREG
000e82 94f8      	CLI
000e83 bbae      	OUT  EEARL,R26
000e84 bbbf      	OUT  EEARH,R27
000e85 9ae0      	SBI  EECR,EERE
000e86 b38d      	IN   R24,EEDR
000e87 17e8      	CP   R30,R24
000e88 f019      	BREQ __EEPROMWRB0
000e89 bbed      	OUT  EEDR,R30
000e8a 9ae2      	SBI  EECR,EEMWE
000e8b 9ae1      	SBI  EECR,EEWE
                 __EEPROMWRB0:
000e8c bf9f      	OUT  SREG,R25
000e8d 9508      	RET
                 
                 __SAVELOCR6:
000e8e 935a      	ST   -Y,R21
                 __SAVELOCR5:
000e8f 934a      	ST   -Y,R20
                 __SAVELOCR4:
000e90 933a      	ST   -Y,R19
                 __SAVELOCR3:
000e91 932a      	ST   -Y,R18
                 __SAVELOCR2:
000e92 931a      	ST   -Y,R17
000e93 930a      	ST   -Y,R16
000e94 9508      	RET
                 
                 __LOADLOCR6:
000e95 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
000e96 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
000e97 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
000e98 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
000e99 8119      	LDD  R17,Y+1
000e9a 8108      	LD   R16,Y
000e9b 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega16L register use summary:
r0 :  18 r1 :   5 r2 :   0 r3 :   0 r4 :   5 r5 :   7 r6 :   5 r7 :  26 
r8 :   6 r9 :   6 r10:   3 r11:   5 r12:   5 r13:   2 r14:   0 r15:   0 
r16:  14 r17:  10 r18:   8 r19:   7 r20:   5 r21:   4 r22:  38 r23:  19 
r24:  10 r25:   6 r26: 561 r27: 182 r28:  23 r29:   1 r30:1380 r31: 200 
x  :  68 y  : 551 z  :   8 
Registers used: 31 out of 35 (88.6%)

ATmega16L instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   5 add   :   7 
adiw  :  35 and   :   0 andi  :   1 asr   :   0 bclr  :   0 bld   :   1 
brbc  :   0 brbs  :   0 brcc  :   1 brcs  :   0 break :   0 breq  :  31 
brge  :   1 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :  25 
brlt  :   0 brmi  :   1 brne  : 180 brpl  :   0 brsh  :  12 brtc  :   2 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   1 call  : 164 
cbi   :  28 cbr   :   0 clc   :   0 clh   :   0 cli   :   3 cln   :   0 
clr   :  42 cls   :   0 clt   :   1 clv   :   0 clz   :   0 com   :   2 
cp    :  29 cpc   :  24 cpi   : 196 cpse  :   0 dec   :   3 des   :   0 
eor   :   0 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   0 ijmp  :   0 
in    :   8 inc   :   2 jmp   :  42 ld    : 160 ldd   :  30 ldi   : 759 
lds   : 133 lpm   :   3 lsl   :   1 lsr   :   0 mov   :  33 movw  :  48 
mul   :   3 muls  :   1 mulsu :   0 neg   :   2 nop   :   0 or    :   1 
ori   :   1 out   :  50 pop   :   2 push  :   2 rcall :  25 ret   :  23 
reti  :   1 rjmp  : 188 rol   :   3 ror   :   0 sbc   :  19 sbci  :  10 
sbi   :  30 sbic  :   5 sbis  :   3 sbiw  :  28 sbr   :   1 sbrc  :   0 
sbrs  :   2 sec   :   0 seh   :   0 sei   :   1 sen   :   0 ser   :   1 
ses   :   0 set   :   1 sev   :   0 sez   :   0 sleep :   0 spm   :   0 
st    : 139 std   : 296 sts   : 235 sub   :  19 subi  :  24 swap  :   0 
tst   :  11 wdr   :   2 
Instructions used: 66 out of 116 (56.9%)

ATmega16L memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x001d38   7432     48   7480   16384  45.7%
[.dseg] 0x000060 0x00019e      0     62     62    1024   6.1%
[.eseg] 0x000000 0x000009      0      9      9     512   1.8%

Assembly complete, 0 errors, 10 warnings
