;/*****************************************************
;Project     : Soliariumo valdiklis V1.0
;Date        : 2012.06.11
;Author      : Tomas Vanagas
;Chip type   : ATmega32
;*****************************************************/
;
;#include <mega128.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x20
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x1C
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x10
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x18
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x14
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x1C
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x08
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <delay.h>
;
;// DS1307 Real Time Clock functions
;//#include <ds1307.h>
;
;// PINS
;#define BUTTON_UP 0
;#define BUTTON_LEFT 1
;#define BUTTON_ENTER 2
;#define BUTTON_RIGHT 3
;#define BUTTON_DOWN 4
;
;unsigned char OUTPUT(unsigned char address, unsigned char value){
; 0000 0015 unsigned char OUTPUT(unsigned char address, unsigned char value){

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 0016     if(address==17){
;	address -> Y+1
;	value -> Y+0
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
; 0000 0017 //    PORTC.3 = value;
; 0000 0018 //    return 1;
; 0000 0019     }
; 0000 001A     else if(address==18){
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
; 0000 001B //    PORTC.4 = value;
; 0000 001C //    return 1;
; 0000 001D     }
; 0000 001E     else if(address==19){
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
; 0000 001F //    PORTC.5 = value;
; 0000 0020 //    return 1;
; 0000 0021     }
; 0000 0022     else if(address==20){
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0000 0023 //    PORTD.5 = value;
; 0000 0024 //    return 1;
; 0000 0025     }
; 0000 0026     else if(address==21){
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
; 0000 0027 //    PORTD.4 = value;
; 0000 0028 //    return 1;
; 0000 0029     }
; 0000 002A     else if(address==22){
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
; 0000 002B //    PORTD.7 = value;
; 0000 002C //    return 1;
; 0000 002D     }
; 0000 002E return 0;
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
; 0000 002F }
;PCODE: $00000034 VOL: 0
;
;unsigned char BUTTON_INPUT(unsigned char input){
; 0000 0031 unsigned char BUTTON_INPUT(unsigned char input){
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
; 0000 0032     if(input==0){   return PING.1;  }
;	input -> Y+0
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
; 0000 0033     if(input==1){   return PING.0;  }
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
; 0000 0034     if(input==2){   return PINC.0;  }
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
; 0000 0035     if(input==3){   return PINC.1;  }
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
; 0000 0036     if(input==4){   return PINC.2;  }
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
; 0000 0037 return 0;
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
; 0000 0038 }
;PCODE: $00000062 VOL: 0
;
;// Real Time
;//unsigned char RealTimeYear, RealTimeMonth, RealTimeDay, RealTimeHour, RealTimeMinute, RealTimeWeekDay, RealTimeSecond;
;//eeprom unsigned char SUMMER_TIME_TURNED_ON;
;//eeprom unsigned char IS_CLOCK_SUMMER;
;
;//eeprom signed char RealTimePrecisioningValue;
;//unsigned char IsRealTimePrecisioned;
;
;
;
;// Code
;//eeprom unsigned int  CODE;
;//eeprom unsigned char IS_LOCK_TURNED_ON;
;
;
;// Neveiklumo taimeriai
;unsigned int STAND_BY_TIMER;
;unsigned char MAIN_MENU_TIMER,LCD_LED_TIMER;
;
;
;
;
;// Other
;char RefreshTime;
;
;//////////// Mygtukai /////////////
;#define ButtonFiltrationTimer 20 // x*cycle (cycle~1ms)
;///////////////////////////////////
;
;//-----------------------------------------------------------------------------------//
;//--------------------------------- Lcd System --------------------------------------//
;//-----------------------------------------------------------------------------------//
;#define LCD_LED PORTA.7
;
;static unsigned char RowsOnWindow;
;static unsigned char Address[6];
;static unsigned char SelectedRow;
;static unsigned char RefreshLcd;
;static unsigned char lcd_light_osc;
;static unsigned char lcd_light_now;
;eeprom unsigned char lcd_light;
;
;#asm
;PCODE: $00000063 VOL: 0
   .equ __lcd_port=0x18 ;PORTB
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
; 0000 0066 #endasm
;#include <lcd.h>
;
;// Ekrano apsvietimas
;interrupt [TIM0_OVF] void timer0_ovf_isr(void){
; 0000 006A interrupt [17] void timer0_ovf_isr(void){
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
; 0000 006B lcd_light_osc += 1;
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
; 0000 006C     if(lcd_light_osc>=100){
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
; 0000 006D     lcd_light_osc = 0;
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
; 0000 006E     }
; 0000 006F 
; 0000 0070     if(lcd_light_now>lcd_light_osc){
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
; 0000 0071     LCD_LED = 1;
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
; 0000 0072     }
; 0000 0073     else{
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
; 0000 0074     LCD_LED = 0;
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
; 0000 0075     }
;PCODE: $0000007C VOL: 0
; 0000 0076 }
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
;
;char SelectAnotherRow(char up_down){
; 0000 0078 char SelectAnotherRow(char up_down){
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
; 0000 0079 // 0 - down
; 0000 007A // 1 - up
; 0000 007B     if(up_down==0){
;	up_down -> Y+0
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
; 0000 007C         if(SelectedRow<RowsOnWindow-1){
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
; 0000 007D         SelectedRow++;
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
; 0000 007E             if(Address[5]+3<SelectedRow){
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
; 0000 007F             Address[5] = SelectedRow - 3;
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
; 0000 0080             }
; 0000 0081         return 1;
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
; 0000 0082         }
; 0000 0083     }
;PCODE: $000000A1 VOL: 0
; 0000 0084     else{
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
; 0000 0085         if(SelectedRow>0){
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
; 0000 0086         SelectedRow--;
;PCODE: $000000A7 VOL: 0
;PCODE: $000000A8 VOL: 0
;PCODE: $000000A9 VOL: 0
; 0000 0087             if(Address[5]>SelectedRow){
;PCODE: $000000AA VOL: 0
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
; 0000 0088             Address[5] = SelectedRow;
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
;PCODE: $000000B1 VOL: 0
; 0000 0089             }
; 0000 008A         return 1;
;PCODE: $000000B2 VOL: 0
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
;PCODE: $000000B5 VOL: 0
; 0000 008B         }
; 0000 008C     }
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
; 0000 008D return 0;
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
; 0000 008E }
;PCODE: $000000BB VOL: 0
;
;char NumToIndex(char Num){
; 0000 0090 char NumToIndex(char Num){
;PCODE: $000000BC VOL: 0
;PCODE: $000000BD VOL: 0
; 0000 0091     if(Num==0){     return '0';}
;	Num -> Y+0
;PCODE: $000000BE VOL: 0
;PCODE: $000000BF VOL: 0
;PCODE: $000000C0 VOL: 0
;PCODE: $000000C1 VOL: 0
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
; 0000 0092     else if(Num==1){return '1';}
;PCODE: $000000C4 VOL: 0
;PCODE: $000000C5 VOL: 0
;PCODE: $000000C6 VOL: 0
;PCODE: $000000C7 VOL: 0
;PCODE: $000000C8 VOL: 0
;PCODE: $000000C9 VOL: 0
;PCODE: $000000CA VOL: 0
; 0000 0093     else if(Num==2){return '2';}
;PCODE: $000000CB VOL: 0
;PCODE: $000000CC VOL: 0
;PCODE: $000000CD VOL: 0
;PCODE: $000000CE VOL: 0
;PCODE: $000000CF VOL: 0
;PCODE: $000000D0 VOL: 0
;PCODE: $000000D1 VOL: 0
; 0000 0094     else if(Num==3){return '3';}
;PCODE: $000000D2 VOL: 0
;PCODE: $000000D3 VOL: 0
;PCODE: $000000D4 VOL: 0
;PCODE: $000000D5 VOL: 0
;PCODE: $000000D6 VOL: 0
;PCODE: $000000D7 VOL: 0
;PCODE: $000000D8 VOL: 0
; 0000 0095     else if(Num==4){return '4';}
;PCODE: $000000D9 VOL: 0
;PCODE: $000000DA VOL: 0
;PCODE: $000000DB VOL: 0
;PCODE: $000000DC VOL: 0
;PCODE: $000000DD VOL: 0
;PCODE: $000000DE VOL: 0
;PCODE: $000000DF VOL: 0
; 0000 0096     else if(Num==5){return '5';}
;PCODE: $000000E0 VOL: 0
;PCODE: $000000E1 VOL: 0
;PCODE: $000000E2 VOL: 0
;PCODE: $000000E3 VOL: 0
;PCODE: $000000E4 VOL: 0
;PCODE: $000000E5 VOL: 0
;PCODE: $000000E6 VOL: 0
; 0000 0097     else if(Num==6){return '6';}
;PCODE: $000000E7 VOL: 0
;PCODE: $000000E8 VOL: 0
;PCODE: $000000E9 VOL: 0
;PCODE: $000000EA VOL: 0
;PCODE: $000000EB VOL: 0
;PCODE: $000000EC VOL: 0
;PCODE: $000000ED VOL: 0
; 0000 0098     else if(Num==7){return '7';}
;PCODE: $000000EE VOL: 0
;PCODE: $000000EF VOL: 0
;PCODE: $000000F0 VOL: 0
;PCODE: $000000F1 VOL: 0
;PCODE: $000000F2 VOL: 0
;PCODE: $000000F3 VOL: 0
;PCODE: $000000F4 VOL: 0
; 0000 0099     else if(Num==8){return '8';}
;PCODE: $000000F5 VOL: 0
;PCODE: $000000F6 VOL: 0
;PCODE: $000000F7 VOL: 0
;PCODE: $000000F8 VOL: 0
;PCODE: $000000F9 VOL: 0
;PCODE: $000000FA VOL: 0
;PCODE: $000000FB VOL: 0
; 0000 009A     else if(Num==9){return '9';}
;PCODE: $000000FC VOL: 0
;PCODE: $000000FD VOL: 0
;PCODE: $000000FE VOL: 0
;PCODE: $000000FF VOL: 0
;PCODE: $00000100 VOL: 0
;PCODE: $00000101 VOL: 0
;PCODE: $00000102 VOL: 0
; 0000 009B     else{           return '-';}
;PCODE: $00000103 VOL: 0
;PCODE: $00000104 VOL: 0
;PCODE: $00000105 VOL: 0
;PCODE: $00000106 VOL: 0
;PCODE: $00000107 VOL: 0
;PCODE: $00000108 VOL: 0
;PCODE: $00000109 VOL: 0
;PCODE: $0000010A VOL: 0
;PCODE: $0000010B VOL: 0
;PCODE: $0000010C VOL: 0
;PCODE: $0000010D VOL: 0
;PCODE: $0000010E VOL: 0
;PCODE: $0000010F VOL: 0
;PCODE: $00000110 VOL: 0
; 0000 009C return 0;
;PCODE: $00000111 VOL: 0
;PCODE: $00000112 VOL: 0
;PCODE: $00000113 VOL: 0
; 0000 009D }
;PCODE: $00000114 VOL: 0
;
;char lcd_put_number(char Type, char Lenght, char IsSign,
; 0000 00A0 
; 0000 00A1                     char NumbersAfterDot,
; 0000 00A2 
; 0000 00A3                     unsigned long int Number0,
; 0000 00A4                     signed long int Number1){
;PCODE: $00000115 VOL: 0
;PCODE: $00000116 VOL: 0
; 0000 00A5     if(Lenght>0){
;	Type -> Y+11
;	Lenght -> Y+10
;	IsSign -> Y+9
;	NumbersAfterDot -> Y+8
;	Number0 -> Y+4
;	Number1 -> Y+0
;PCODE: $00000117 VOL: 0
;PCODE: $00000118 VOL: 0
;PCODE: $00000119 VOL: 0
; 0000 00A6     unsigned long int k = 1;
; 0000 00A7     unsigned char i;
; 0000 00A8         for(i=0;i<Lenght-1;i++) k = k*10;
;PCODE: $0000011A VOL: 0
;PCODE: $0000011B VOL: 0
;PCODE: $0000011C VOL: 0
;PCODE: $0000011D VOL: 0
;PCODE: $0000011E VOL: 0
;PCODE: $0000011F VOL: 0
;PCODE: $00000120 VOL: 0
;PCODE: $00000121 VOL: 0
;PCODE: $00000122 VOL: 0
;	Type -> Y+16
;	Lenght -> Y+15
;	IsSign -> Y+14
;	NumbersAfterDot -> Y+13
;	Number0 -> Y+9
;	Number1 -> Y+5
;	k -> Y+1
;	i -> Y+0
;PCODE: $00000123 VOL: 0
;PCODE: $00000124 VOL: 0
;PCODE: $00000125 VOL: 0
;PCODE: $00000126 VOL: 0
;PCODE: $00000127 VOL: 0
;PCODE: $00000128 VOL: 0
;PCODE: $00000129 VOL: 0
;PCODE: $0000012A VOL: 0
;PCODE: $0000012B VOL: 0
;PCODE: $0000012C VOL: 0
;PCODE: $0000012D VOL: 0
;PCODE: $0000012E VOL: 0
;PCODE: $0000012F VOL: 0
;PCODE: $00000130 VOL: 0
;PCODE: $00000131 VOL: 0
;PCODE: $00000132 VOL: 0
;PCODE: $00000133 VOL: 0
;PCODE: $00000134 VOL: 0
;PCODE: $00000135 VOL: 0
;PCODE: $00000136 VOL: 0
;PCODE: $00000137 VOL: 0
;PCODE: $00000138 VOL: 0
;PCODE: $00000139 VOL: 0
;PCODE: $0000013A VOL: 0
; 0000 00AA if(Type==0){
;PCODE: $0000013B VOL: 0
;PCODE: $0000013C VOL: 0
;PCODE: $0000013D VOL: 0
; 0000 00AB         unsigned long int a;
; 0000 00AC         unsigned char b;
; 0000 00AD         a = Number0;
;PCODE: $0000013E VOL: 0
;	Type -> Y+21
;	Lenght -> Y+20
;	IsSign -> Y+19
;	NumbersAfterDot -> Y+18
;	Number0 -> Y+14
;	Number1 -> Y+10
;	k -> Y+6
;	i -> Y+5
;	a -> Y+1
;	b -> Y+0
;PCODE: $0000013F VOL: 0
;PCODE: $00000140 VOL: 0
; 0000 00AE 
; 0000 00AF             if(IsSign==1){
;PCODE: $00000141 VOL: 0
;PCODE: $00000142 VOL: 0
;PCODE: $00000143 VOL: 0
; 0000 00B0             lcd_putchar('+');
;PCODE: $00000144 VOL: 0
;PCODE: $00000145 VOL: 0
;PCODE: $00000146 VOL: 0
; 0000 00B1             }
; 0000 00B2 
; 0000 00B3             if(a<0){
;PCODE: $00000147 VOL: 0
;PCODE: $00000148 VOL: 0
;PCODE: $00000149 VOL: 0
; 0000 00B4             a = a*(-1);
;PCODE: $0000014A VOL: 0
;PCODE: $0000014B VOL: 0
;PCODE: $0000014C VOL: 0
;PCODE: $0000014D VOL: 0
; 0000 00B5             }
; 0000 00B6 
; 0000 00B7             if(k*10<a){
;PCODE: $0000014E VOL: 0
;PCODE: $0000014F VOL: 0
;PCODE: $00000150 VOL: 0
;PCODE: $00000151 VOL: 0
;PCODE: $00000152 VOL: 0
;PCODE: $00000153 VOL: 0
;PCODE: $00000154 VOL: 0
;PCODE: $00000155 VOL: 0
; 0000 00B8             a = k*10 - 1;
;PCODE: $00000156 VOL: 0
;PCODE: $00000157 VOL: 0
;PCODE: $00000158 VOL: 0
;PCODE: $00000159 VOL: 0
;PCODE: $0000015A VOL: 0
; 0000 00B9             }
; 0000 00BA 
; 0000 00BB             for(i=0;i<Lenght;i++){
;PCODE: $0000015B VOL: 0
;PCODE: $0000015C VOL: 0
;PCODE: $0000015D VOL: 0
;PCODE: $0000015E VOL: 0
;PCODE: $0000015F VOL: 0
;PCODE: $00000160 VOL: 0
;PCODE: $00000161 VOL: 0
;PCODE: $00000162 VOL: 0
;PCODE: $00000163 VOL: 0
;PCODE: $00000164 VOL: 0
;PCODE: $00000165 VOL: 0
;PCODE: $00000166 VOL: 0
; 0000 00BC                 if(NumbersAfterDot!=0){
;PCODE: $00000167 VOL: 0
;PCODE: $00000168 VOL: 0
;PCODE: $00000169 VOL: 0
; 0000 00BD                     if(Lenght-NumbersAfterDot==i){
;PCODE: $0000016A VOL: 0
;PCODE: $0000016B VOL: 0
;PCODE: $0000016C VOL: 0
;PCODE: $0000016D VOL: 0
;PCODE: $0000016E VOL: 0
;PCODE: $0000016F VOL: 0
;PCODE: $00000170 VOL: 0
;PCODE: $00000171 VOL: 0
;PCODE: $00000172 VOL: 0
; 0000 00BE                     lcd_putchar('.');
;PCODE: $00000173 VOL: 0
;PCODE: $00000174 VOL: 0
;PCODE: $00000175 VOL: 0
; 0000 00BF                     }
; 0000 00C0                 }
;PCODE: $00000176 VOL: 0
; 0000 00C1             b = a/k;
;PCODE: $00000177 VOL: 0
;PCODE: $00000178 VOL: 0
;PCODE: $00000179 VOL: 0
;PCODE: $0000017A VOL: 0
;PCODE: $0000017B VOL: 0
; 0000 00C2             lcd_putchar( NumToIndex( b ) );
;PCODE: $0000017C VOL: 0
;PCODE: $0000017D VOL: 0
;PCODE: $0000017E VOL: 0
;PCODE: $0000017F VOL: 0
;PCODE: $00000180 VOL: 0
; 0000 00C3             a = a - b*k;
;PCODE: $00000181 VOL: 0
;PCODE: $00000182 VOL: 0
;PCODE: $00000183 VOL: 0
;PCODE: $00000184 VOL: 0
;PCODE: $00000185 VOL: 0
;PCODE: $00000186 VOL: 0
;PCODE: $00000187 VOL: 0
;PCODE: $00000188 VOL: 0
; 0000 00C4             k = k/10;
;PCODE: $00000189 VOL: 0
;PCODE: $0000018A VOL: 0
;PCODE: $0000018B VOL: 0
;PCODE: $0000018C VOL: 0
; 0000 00C5             }
;PCODE: $0000018D VOL: 0
;PCODE: $0000018E VOL: 0
;PCODE: $0000018F VOL: 0
;PCODE: $00000190 VOL: 0
;PCODE: $00000191 VOL: 0
;PCODE: $00000192 VOL: 0
; 0000 00C6         return 1;
;PCODE: $00000193 VOL: 0
;PCODE: $00000194 VOL: 0
;PCODE: $00000195 VOL: 0
;PCODE: $00000196 VOL: 0
; 0000 00C7         }
;PCODE: $00000197 VOL: 0
; 0000 00C8 
; 0000 00C9         else if(Type==1){
;PCODE: $00000198 VOL: 0
;PCODE: $00000199 VOL: 0
;PCODE: $0000019A VOL: 0
;PCODE: $0000019B VOL: 0
; 0000 00CA         signed long int a;
; 0000 00CB         unsigned char b;
; 0000 00CC         a = Number1;
;PCODE: $0000019C VOL: 0
;	Type -> Y+21
;	Lenght -> Y+20
;	IsSign -> Y+19
;	NumbersAfterDot -> Y+18
;	Number0 -> Y+14
;	Number1 -> Y+10
;	k -> Y+6
;	i -> Y+5
;	a -> Y+1
;	b -> Y+0
;PCODE: $0000019D VOL: 0
;PCODE: $0000019E VOL: 0
; 0000 00CD 
; 0000 00CE             if(IsSign==1){
;PCODE: $0000019F VOL: 0
;PCODE: $000001A0 VOL: 0
;PCODE: $000001A1 VOL: 0
; 0000 00CF                 if(a>=0){
;PCODE: $000001A2 VOL: 0
;PCODE: $000001A3 VOL: 0
;PCODE: $000001A4 VOL: 0
; 0000 00D0                 lcd_putchar('+');
;PCODE: $000001A5 VOL: 0
;PCODE: $000001A6 VOL: 0
;PCODE: $000001A7 VOL: 0
; 0000 00D1                 }
; 0000 00D2                 else{
;PCODE: $000001A8 VOL: 0
;PCODE: $000001A9 VOL: 0
; 0000 00D3                 lcd_putchar('-');
;PCODE: $000001AA VOL: 0
;PCODE: $000001AB VOL: 0
;PCODE: $000001AC VOL: 0
; 0000 00D4                 }
;PCODE: $000001AD VOL: 0
; 0000 00D5             }
; 0000 00D6 
; 0000 00D7             if(a<0){
;PCODE: $000001AE VOL: 0
;PCODE: $000001AF VOL: 0
;PCODE: $000001B0 VOL: 0
;PCODE: $000001B1 VOL: 0
; 0000 00D8             a = a*(-1);
;PCODE: $000001B2 VOL: 0
;PCODE: $000001B3 VOL: 0
;PCODE: $000001B4 VOL: 0
;PCODE: $000001B5 VOL: 0
; 0000 00D9             }
; 0000 00DA 
; 0000 00DB             if(k*10<a){
;PCODE: $000001B6 VOL: 0
;PCODE: $000001B7 VOL: 0
;PCODE: $000001B8 VOL: 0
;PCODE: $000001B9 VOL: 0
;PCODE: $000001BA VOL: 0
;PCODE: $000001BB VOL: 0
;PCODE: $000001BC VOL: 0
;PCODE: $000001BD VOL: 0
; 0000 00DC             a = k*10 - 1;
;PCODE: $000001BE VOL: 0
;PCODE: $000001BF VOL: 0
;PCODE: $000001C0 VOL: 0
;PCODE: $000001C1 VOL: 0
;PCODE: $000001C2 VOL: 0
; 0000 00DD             }
; 0000 00DE 
; 0000 00DF             for(i=0;i<Lenght;i++){
;PCODE: $000001C3 VOL: 0
;PCODE: $000001C4 VOL: 0
;PCODE: $000001C5 VOL: 0
;PCODE: $000001C6 VOL: 0
;PCODE: $000001C7 VOL: 0
;PCODE: $000001C8 VOL: 0
;PCODE: $000001C9 VOL: 0
;PCODE: $000001CA VOL: 0
;PCODE: $000001CB VOL: 0
;PCODE: $000001CC VOL: 0
;PCODE: $000001CD VOL: 0
;PCODE: $000001CE VOL: 0
; 0000 00E0                 if(NumbersAfterDot!=0){
;PCODE: $000001CF VOL: 0
;PCODE: $000001D0 VOL: 0
;PCODE: $000001D1 VOL: 0
; 0000 00E1                     if(Lenght-NumbersAfterDot==i){
;PCODE: $000001D2 VOL: 0
;PCODE: $000001D3 VOL: 0
;PCODE: $000001D4 VOL: 0
;PCODE: $000001D5 VOL: 0
;PCODE: $000001D6 VOL: 0
;PCODE: $000001D7 VOL: 0
;PCODE: $000001D8 VOL: 0
;PCODE: $000001D9 VOL: 0
;PCODE: $000001DA VOL: 0
; 0000 00E2                     lcd_putchar('.');
;PCODE: $000001DB VOL: 0
;PCODE: $000001DC VOL: 0
;PCODE: $000001DD VOL: 0
; 0000 00E3                     }
; 0000 00E4                 }
;PCODE: $000001DE VOL: 0
; 0000 00E5             b = a/k;
;PCODE: $000001DF VOL: 0
;PCODE: $000001E0 VOL: 0
;PCODE: $000001E1 VOL: 0
;PCODE: $000001E2 VOL: 0
;PCODE: $000001E3 VOL: 0
; 0000 00E6             lcd_putchar( NumToIndex( b ) );
;PCODE: $000001E4 VOL: 0
;PCODE: $000001E5 VOL: 0
;PCODE: $000001E6 VOL: 0
;PCODE: $000001E7 VOL: 0
;PCODE: $000001E8 VOL: 0
; 0000 00E7             a = a - b*k;
;PCODE: $000001E9 VOL: 0
;PCODE: $000001EA VOL: 0
;PCODE: $000001EB VOL: 0
;PCODE: $000001EC VOL: 0
;PCODE: $000001ED VOL: 0
;PCODE: $000001EE VOL: 0
;PCODE: $000001EF VOL: 0
;PCODE: $000001F0 VOL: 0
; 0000 00E8             k = k/10;
;PCODE: $000001F1 VOL: 0
;PCODE: $000001F2 VOL: 0
;PCODE: $000001F3 VOL: 0
;PCODE: $000001F4 VOL: 0
; 0000 00E9             }
;PCODE: $000001F5 VOL: 0
;PCODE: $000001F6 VOL: 0
;PCODE: $000001F7 VOL: 0
;PCODE: $000001F8 VOL: 0
;PCODE: $000001F9 VOL: 0
;PCODE: $000001FA VOL: 0
; 0000 00EA         return 1;
;PCODE: $000001FB VOL: 0
;PCODE: $000001FC VOL: 0
;PCODE: $000001FD VOL: 0
;PCODE: $000001FE VOL: 0
; 0000 00EB         }
;PCODE: $000001FF VOL: 0
; 0000 00EC     }
;PCODE: $00000200 VOL: 0
;PCODE: $00000201 VOL: 0
;PCODE: $00000202 VOL: 0
; 0000 00ED return 0;
;PCODE: $00000203 VOL: 0
;PCODE: $00000204 VOL: 0
;PCODE: $00000205 VOL: 0
;PCODE: $00000206 VOL: 0
; 0000 00EE }
;PCODE: $00000207 VOL: 0
;
;//-----------------------------------------------------------------------------------//
;//-----------------------------------------------------------------------------------//
;//-----------------------------------------------------------------------------------//
;
;
;
;
;
;
;
;
;
;
;
;void main(void){
; 0000 00FE void main(void){
;PCODE: $00000208 VOL: 0
; 0000 00FF // Declare your local variables here
; 0000 0100 
; 0000 0101 // Input/Output Ports initialization
; 0000 0102 // Port A initialization
; 0000 0103 // Func7=Out Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 0104 // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 0105 PORTA=0b00000000;
;PCODE: $00000209 VOL: 0
;PCODE: $0000020A VOL: 0
; 0000 0106 DDRA= 0b10000000;
;PCODE: $0000020B VOL: 0
;PCODE: $0000020C VOL: 0
; 0000 0107 
; 0000 0108 // Port B initialization
; 0000 0109 // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 010A // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 010B PORTB=0b00000000;
;PCODE: $0000020D VOL: 0
;PCODE: $0000020E VOL: 0
; 0000 010C DDRB= 0b00000000;
;PCODE: $0000020F VOL: 0
;PCODE: $00000210 VOL: 0
; 0000 010D 
; 0000 010E // Port C initialization
; 0000 010F // Func7=In Func6=In Func5=Out Func4=Out Func3=Out Func2=In Func1=In Func0=In
; 0000 0110 // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 0111 PORTC=0b00000000;
;PCODE: $00000211 VOL: 0
;PCODE: $00000212 VOL: 0
; 0000 0112 DDRC= 0b00111000;
;PCODE: $00000213 VOL: 0
;PCODE: $00000214 VOL: 0
; 0000 0113 
; 0000 0114 // Port D initialization
; 0000 0115 // Func7=Out Func6=In Func5=Out Func4=Out Func3=In Func2=In Func1=In Func0=In
; 0000 0116 // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 0117 PORTD=0b00000000;
;PCODE: $00000215 VOL: 0
;PCODE: $00000216 VOL: 0
; 0000 0118 DDRD= 0b10110000;
;PCODE: $00000217 VOL: 0
;PCODE: $00000218 VOL: 0
; 0000 0119 
; 0000 011A // Port E initialization
; 0000 011B // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 011C // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 011D PORTE=0b00000000;
;PCODE: $00000219 VOL: 0
;PCODE: $0000021A VOL: 0
; 0000 011E DDRE= 0b00000000;
;PCODE: $0000021B VOL: 0
;PCODE: $0000021C VOL: 0
; 0000 011F 
; 0000 0120 // Port F initialization
; 0000 0121 // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 0122 // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 0123 PORTF=0b00000000;
;PCODE: $0000021D VOL: 0
;PCODE: $0000021E VOL: 0
; 0000 0124 DDRF= 0b00000000;
;PCODE: $0000021F VOL: 0
;PCODE: $00000220 VOL: 0
; 0000 0125 
; 0000 0126 // Port G initialization
; 0000 0127 // Func3=In Func2=In Func1=In Func0=In
; 0000 0128 // State3=T State2=T State1=T State0=T
; 0000 0129 PORTG=0b0000;
;PCODE: $00000221 VOL: 0
;PCODE: $00000222 VOL: 0
; 0000 012A DDRG= 0b0000;
;PCODE: $00000223 VOL: 0
;PCODE: $00000224 VOL: 0
; 0000 012B 
; 0000 012C /// Timer/Counter 0 initialization
; 0000 012D // Clock source: System Clock
; 0000 012E // Clock value: 1000.000 kHz
; 0000 012F // Mode: Normal top=FFh
; 0000 0130 // OC0 output: Disconnected
; 0000 0131 TCCR0=0x02;
;PCODE: $00000225 VOL: 0
;PCODE: $00000226 VOL: 0
; 0000 0132 TCNT0=0x00;
;PCODE: $00000227 VOL: 0
;PCODE: $00000228 VOL: 0
; 0000 0133 OCR0=0x00;
;PCODE: $00000229 VOL: 0
;PCODE: $0000022A VOL: 0
; 0000 0134 
; 0000 0135 // Timer/Counter 1 initialization
; 0000 0136 // Clock source: System Clock
; 0000 0137 // Clock value: Timer1 Stopped
; 0000 0138 // Mode: Normal top=FFFFh
; 0000 0139 // OC1A output: Discon.
; 0000 013A // OC1B output: Discon.
; 0000 013B // Noise Canceler: Off
; 0000 013C // Input Capture on Falling Edge
; 0000 013D // Timer1 Overflow Interrupt: Off
; 0000 013E // Input Capture Interrupt: Off
; 0000 013F // Compare A Match Interrupt: Off
; 0000 0140 // Compare B Match Interrupt: Off
; 0000 0141 TCCR1A=0x00;
;PCODE: $0000022B VOL: 0
;PCODE: $0000022C VOL: 0
; 0000 0142 TCCR1B=0x00;
;PCODE: $0000022D VOL: 0
;PCODE: $0000022E VOL: 0
; 0000 0143 TCNT1H=0x00;
;PCODE: $0000022F VOL: 0
;PCODE: $00000230 VOL: 0
; 0000 0144 TCNT1L=0x00;
;PCODE: $00000231 VOL: 0
;PCODE: $00000232 VOL: 0
; 0000 0145 ICR1H=0x00;
;PCODE: $00000233 VOL: 0
;PCODE: $00000234 VOL: 0
; 0000 0146 ICR1L=0x00;
;PCODE: $00000235 VOL: 0
;PCODE: $00000236 VOL: 0
; 0000 0147 OCR1AH=0x00;
;PCODE: $00000237 VOL: 0
;PCODE: $00000238 VOL: 0
; 0000 0148 OCR1AL=0x00;
;PCODE: $00000239 VOL: 0
;PCODE: $0000023A VOL: 0
; 0000 0149 OCR1BH=0x00;
;PCODE: $0000023B VOL: 0
;PCODE: $0000023C VOL: 0
; 0000 014A OCR1BL=0x00;
;PCODE: $0000023D VOL: 0
;PCODE: $0000023E VOL: 0
; 0000 014B 
; 0000 014C // Timer/Counter 2 initialization
; 0000 014D // Clock source: System Clock
; 0000 014E // Clock value: Timer2 Stopped
; 0000 014F // Mode: Normal top=FFh
; 0000 0150 // OC2 output: Disconnected
; 0000 0151 ASSR=0x00;
;PCODE: $0000023F VOL: 0
;PCODE: $00000240 VOL: 0
; 0000 0152 TCCR2=0x00;
;PCODE: $00000241 VOL: 0
;PCODE: $00000242 VOL: 0
; 0000 0153 TCNT2=0x00;
;PCODE: $00000243 VOL: 0
;PCODE: $00000244 VOL: 0
; 0000 0154 OCR2=0x00;
;PCODE: $00000245 VOL: 0
;PCODE: $00000246 VOL: 0
; 0000 0155 
; 0000 0156 // External Interrupt(s) initialization
; 0000 0157 // INT0: Off
; 0000 0158 // INT1: Off
; 0000 0159 // INT2: Off
; 0000 015A MCUCR=0x00;
;PCODE: $00000247 VOL: 0
;PCODE: $00000248 VOL: 0
; 0000 015B MCUCSR=0x00;
;PCODE: $00000249 VOL: 0
;PCODE: $0000024A VOL: 0
; 0000 015C 
; 0000 015D // Timer(s)/Counter(s) Interrupt(s) initialization
; 0000 015E TIMSK=0x01;
;PCODE: $0000024B VOL: 0
;PCODE: $0000024C VOL: 0
; 0000 015F 
; 0000 0160 // Analog Comparator initialization
; 0000 0161 // Analog Comparator: Off
; 0000 0162 // Analog Comparator Input Capture by Timer/Counter 1: Off
; 0000 0163 ACSR=0x80;
;PCODE: $0000024D VOL: 0
;PCODE: $0000024E VOL: 0
; 0000 0164 SFIOR=0x00;
;PCODE: $0000024F VOL: 0
;PCODE: $00000250 VOL: 0
; 0000 0165 
; 0000 0166 // I2C Bus initialization
; 0000 0167 //i2c_init();
; 0000 0168 
; 0000 0169 // DS1307 Real Time Clock initialization
; 0000 016A // Square wave output on pin SQW/OUT: Off
; 0000 016B // SQW/OUT pin state: 0
; 0000 016C //rtc_init(0,0,0);
; 0000 016D 
; 0000 016E // Global enable interrupts
; 0000 016F #asm("sei")
;PCODE: $00000251 VOL: 0
	sei
;PCODE: $00000252 VOL: 0
; 0000 0170 
; 0000 0171 
; 0000 0172 // 2 Wire Bus initialization
; 0000 0173 // Generate Acknowledge Pulse: Off
; 0000 0174 // 2 Wire Bus Slave Address: 0h
; 0000 0175 // General Call Recognition: Off
; 0000 0176 // Bit Rate: 400.000 kHz
; 0000 0177 //TWSR=0x00;
; 0000 0178 //TWBR=0x02;
; 0000 0179 //TWAR=0x00;
; 0000 017A //TWCR=0x04;
; 0000 017B 
; 0000 017C // I2C Bus initialization
; 0000 017D //i2c_init();
; 0000 017E 
; 0000 017F // DS1307 Real Time Clock initialization
; 0000 0180 // Square wave output on pin SQW/OUT: Off
; 0000 0181 // SQW/OUT pin state: 0
; 0000 0182 //rtc_init(0,0,0);
; 0000 0183 
; 0000 0184 // LCD module initialization
; 0000 0185 lcd_init(20);
;PCODE: $00000253 VOL: 0
;PCODE: $00000254 VOL: 0
;PCODE: $00000255 VOL: 0
; 0000 0186 
; 0000 0187 // Watchdog Timer initialization
; 0000 0188 // Watchdog Timer Prescaler: OSC/128k
; 0000 0189 WDTCR=0x0B;
;PCODE: $00000256 VOL: 0
;PCODE: $00000257 VOL: 0
; 0000 018A 
; 0000 018B LCD_LED_TIMER = 30; lcd_light_now = lcd_light;
;PCODE: $00000258 VOL: 0
;PCODE: $00000259 VOL: 0
;PCODE: $0000025A VOL: 0
;PCODE: $0000025B VOL: 0
;PCODE: $0000025C VOL: 0
; 0000 018C lcd_putsf("+------------------+");
;PCODE: $0000025D VOL: 0
;PCODE: $0000025E VOL: 0
;PCODE: $0000025F VOL: 0
;PCODE: $00000260 VOL: 0
; 0000 018D lcd_putsf("| SOLIAR. AUSINIMO |");
;PCODE: $00000261 VOL: 0
;PCODE: $00000262 VOL: 0
;PCODE: $00000263 VOL: 0
;PCODE: $00000264 VOL: 0
; 0000 018E lcd_putsf("| VALDIKLIS V1.");
;PCODE: $00000265 VOL: 0
;PCODE: $00000266 VOL: 0
;PCODE: $00000267 VOL: 0
;PCODE: $00000268 VOL: 0
; 0000 018F lcd_put_number(0,3,0,0,__BUILD__,0);
;PCODE: $00000269 VOL: 0
;PCODE: $0000026A VOL: 0
;PCODE: $0000026B VOL: 0
;PCODE: $0000026C VOL: 0
;PCODE: $0000026D VOL: 0
;PCODE: $0000026E VOL: 0
;PCODE: $0000026F VOL: 0
;PCODE: $00000270 VOL: 0
;PCODE: $00000271 VOL: 0
;PCODE: $00000272 VOL: 0
;PCODE: $00000273 VOL: 0
;PCODE: $00000274 VOL: 0
;PCODE: $00000275 VOL: 0
; 0000 0190 lcd_putsf(" |+------------------+");
;PCODE: $00000276 VOL: 0
;PCODE: $00000277 VOL: 0
;PCODE: $00000278 VOL: 0
;PCODE: $00000279 VOL: 0
; 0000 0191 delay_ms(1500);
;PCODE: $0000027A VOL: 0
;PCODE: $0000027B VOL: 0
;PCODE: $0000027C VOL: 0
; 0000 0192 
; 0000 0193 // Default values
; 0000 0194     if(lcd_light>100){lcd_light = 100;}
;PCODE: $0000027D VOL: 0
;PCODE: $0000027E VOL: 0
;PCODE: $0000027F VOL: 0
;PCODE: $00000280 VOL: 0
;PCODE: $00000281 VOL: 0
;PCODE: $00000282 VOL: 0
;PCODE: $00000283 VOL: 0
; 0000 0195 
; 0000 0196     while(1){
;PCODE: $00000284 VOL: 0
;PCODE: $00000285 VOL: 0
; 0000 0197     //////////////////////////////////////////////////////////////////////////////////
; 0000 0198     //////////////////////////// Funkcija kas 1 secunde //////////////////////////////
; 0000 0199     //////////////////////////////////////////////////////////////////////////////////
; 0000 019A     static unsigned int SecondCounter;
; 0000 019B     SecondCounter++;
;PCODE: $00000286 VOL: 0
;PCODE: $00000287 VOL: 0
;PCODE: $00000288 VOL: 0
;PCODE: $00000289 VOL: 0
; 0000 019C         if(SecondCounter>=500){
;PCODE: $0000028A VOL: 0
;PCODE: $0000028B VOL: 0
;PCODE: $0000028C VOL: 0
; 0000 019D         SecondCounter = 0;
;PCODE: $0000028D VOL: 0
;PCODE: $0000028E VOL: 0
; 0000 019E         RefreshTime++;
;PCODE: $0000028F VOL: 0
; 0000 019F         }
; 0000 01A0     //////////////////////////////////////////////////////////////////////////////////
; 0000 01A1     //////////////////////////////////////////////////////////////////////////////////
; 0000 01A2     //////////////////////////////////////////////////////////////////////////////////
; 0000 01A3 
; 0000 01A4 
; 0000 01A5     //////////////////////////////////////////////////////////////////////////////////
; 0000 01A6     /////////////////////////////////////// Mygtukai /////////////////////////////////
; 0000 01A7     //////////////////////////////////////////////////////////////////////////////////
; 0000 01A8     static unsigned char BUTTON[5], ButtonFilter[5];
;PCODE: $00000290 VOL: 0
; 0000 01A9         if(1){
; 0000 01AA         unsigned char i;
; 0000 01AB             for(i=0;i<5;i++){
;PCODE: $00000291 VOL: 0
;	i -> Y+0
;PCODE: $00000292 VOL: 0
;PCODE: $00000293 VOL: 0
;PCODE: $00000294 VOL: 0
;PCODE: $00000295 VOL: 0
;PCODE: $00000296 VOL: 0
;PCODE: $00000297 VOL: 0
;PCODE: $00000298 VOL: 0
;PCODE: $00000299 VOL: 0
;PCODE: $0000029A VOL: 0
;PCODE: $0000029B VOL: 0
; 0000 01AC                 if(BUTTON_INPUT(i)==1){
;PCODE: $0000029C VOL: 0
;PCODE: $0000029D VOL: 0
;PCODE: $0000029E VOL: 0
;PCODE: $0000029F VOL: 0
;PCODE: $000002A0 VOL: 0
; 0000 01AD                     if(ButtonFilter[i]<ButtonFiltrationTimer){
;PCODE: $000002A1 VOL: 0
;PCODE: $000002A2 VOL: 0
;PCODE: $000002A3 VOL: 0
;PCODE: $000002A4 VOL: 0
;PCODE: $000002A5 VOL: 0
;PCODE: $000002A6 VOL: 0
; 0000 01AE                     ButtonFilter[i]++;
;PCODE: $000002A7 VOL: 0
;PCODE: $000002A8 VOL: 0
;PCODE: $000002A9 VOL: 0
;PCODE: $000002AA VOL: 0
;PCODE: $000002AB VOL: 0
;PCODE: $000002AC VOL: 0
; 0000 01AF                     }
; 0000 01B0                 }
;PCODE: $000002AD VOL: 0
; 0000 01B1                 else{
;PCODE: $000002AE VOL: 0
;PCODE: $000002AF VOL: 0
; 0000 01B2                     if(ButtonFilter[i]>=ButtonFiltrationTimer){
;PCODE: $000002B0 VOL: 0
;PCODE: $000002B1 VOL: 0
;PCODE: $000002B2 VOL: 0
;PCODE: $000002B3 VOL: 0
;PCODE: $000002B4 VOL: 0
;PCODE: $000002B5 VOL: 0
; 0000 01B3                     BUTTON[i] = 1;
;PCODE: $000002B6 VOL: 0
;PCODE: $000002B7 VOL: 0
;PCODE: $000002B8 VOL: 0
;PCODE: $000002B9 VOL: 0
;PCODE: $000002BA VOL: 0
; 0000 01B4                     RefreshLcd = RefreshLcd + 2;
;PCODE: $000002BB VOL: 0
;PCODE: $000002BC VOL: 0
;PCODE: $000002BD VOL: 0
;PCODE: $000002BE VOL: 0
; 0000 01B5                     STAND_BY_TIMER = 45;
;PCODE: $000002BF VOL: 0
;PCODE: $000002C0 VOL: 0
; 0000 01B6                     MAIN_MENU_TIMER = 30;
;PCODE: $000002C1 VOL: 0
;PCODE: $000002C2 VOL: 0
; 0000 01B7                     LCD_LED_TIMER = 15; lcd_light_now = lcd_light;
;PCODE: $000002C3 VOL: 0
;PCODE: $000002C4 VOL: 0
;PCODE: $000002C5 VOL: 0
;PCODE: $000002C6 VOL: 0
;PCODE: $000002C7 VOL: 0
; 0000 01B8                     }
; 0000 01B9                     else{
;PCODE: $000002C8 VOL: 0
;PCODE: $000002C9 VOL: 0
; 0000 01BA                     BUTTON[i] = 0;
;PCODE: $000002CA VOL: 0
;PCODE: $000002CB VOL: 0
;PCODE: $000002CC VOL: 0
;PCODE: $000002CD VOL: 0
;PCODE: $000002CE VOL: 0
; 0000 01BB                     }
;PCODE: $000002CF VOL: 0
; 0000 01BC                 ButtonFilter[i] = 0;
;PCODE: $000002D0 VOL: 0
;PCODE: $000002D1 VOL: 0
;PCODE: $000002D2 VOL: 0
;PCODE: $000002D3 VOL: 0
;PCODE: $000002D4 VOL: 0
; 0000 01BD                 }
;PCODE: $000002D5 VOL: 0
; 0000 01BE             }
;PCODE: $000002D6 VOL: 0
;PCODE: $000002D7 VOL: 0
;PCODE: $000002D8 VOL: 0
;PCODE: $000002D9 VOL: 0
;PCODE: $000002DA VOL: 0
;PCODE: $000002DB VOL: 0
; 0000 01BF         }
;PCODE: $000002DC VOL: 0
; 0000 01C0     //////////////////////////////////////////////////////////////////////////////////
; 0000 01C1     //////////////////////////////////////////////////////////////////////////////////
; 0000 01C2     //////////////////////////////////////////////////////////////////////////////////
; 0000 01C3 
; 0000 01C4 
; 0000 01C5     //////////////////////////////////////////////////////////////////////////////////
; 0000 01C6     ///////////////////////////// LCD ////////////////////////////////////////////////
; 0000 01C7     //////////////////////////////////////////////////////////////////////////////////
; 0000 01C8     // Lcd led
; 0000 01C9     static unsigned char lcd_led_counter;
;PCODE: $000002DD VOL: 0
; 0000 01CA         if(LCD_LED_TIMER==0){
;PCODE: $000002DE VOL: 0
;PCODE: $000002DF VOL: 0
; 0000 01CB             if(lcd_light_now>0){
;PCODE: $000002E0 VOL: 0
;PCODE: $000002E1 VOL: 0
;PCODE: $000002E2 VOL: 0
; 0000 01CC             lcd_led_counter++;
;PCODE: $000002E3 VOL: 0
;PCODE: $000002E4 VOL: 0
;PCODE: $000002E5 VOL: 0
; 0000 01CD                 if(lcd_led_counter>=25){
;PCODE: $000002E6 VOL: 0
;PCODE: $000002E7 VOL: 0
;PCODE: $000002E8 VOL: 0
; 0000 01CE                 lcd_led_counter = 0;
;PCODE: $000002E9 VOL: 0
;PCODE: $000002EA VOL: 0
; 0000 01CF                 lcd_light_now--;
;PCODE: $000002EB VOL: 0
;PCODE: $000002EC VOL: 0
;PCODE: $000002ED VOL: 0
; 0000 01D0                 }
; 0000 01D1             }
;PCODE: $000002EE VOL: 0
; 0000 01D2         }
;PCODE: $000002EF VOL: 0
; 0000 01D3 
; 0000 01D4 
; 0000 01D5 
; 0000 01D6 
; 0000 01D7         if(RefreshLcd>=1){
;PCODE: $000002F0 VOL: 0
;PCODE: $000002F1 VOL: 0
;PCODE: $000002F2 VOL: 0
;PCODE: $000002F3 VOL: 0
; 0000 01D8         lcd_clear();
;PCODE: $000002F4 VOL: 0
; 0000 01D9         }
; 0000 01DA 
; 0000 01DB         // Pagrindinis langas
; 0000 01DC         if(Address[0]==0){
;PCODE: $000002F5 VOL: 0
;PCODE: $000002F6 VOL: 0
;PCODE: $000002F7 VOL: 0
;PCODE: $000002F8 VOL: 0
; 0000 01DD             if(BUTTON[BUTTON_DOWN]==1){
;PCODE: $000002F9 VOL: 0
;PCODE: $000002FA VOL: 0
;PCODE: $000002FB VOL: 0
;PCODE: $000002FC VOL: 0
; 0000 01DE             SelectAnotherRow(0);
;PCODE: $000002FD VOL: 0
;PCODE: $000002FE VOL: 0
;PCODE: $000002FF VOL: 0
; 0000 01DF             }
; 0000 01E0             else if(BUTTON[BUTTON_UP]==1){
;PCODE: $00000300 VOL: 0
;PCODE: $00000301 VOL: 0
;PCODE: $00000302 VOL: 0
;PCODE: $00000303 VOL: 0
;PCODE: $00000304 VOL: 0
; 0000 01E1             SelectAnotherRow(1);
;PCODE: $00000305 VOL: 0
;PCODE: $00000306 VOL: 0
;PCODE: $00000307 VOL: 0
; 0000 01E2             }
; 0000 01E3             else if(BUTTON[BUTTON_ENTER]==1){
;PCODE: $00000308 VOL: 0
;PCODE: $00000309 VOL: 0
;PCODE: $0000030A VOL: 0
;PCODE: $0000030B VOL: 0
;PCODE: $0000030C VOL: 0
;PCODE: $0000030D VOL: 0
; 0000 01E4             Address[0] = SelectedRow;
;PCODE: $0000030E VOL: 0
;PCODE: $0000030F VOL: 0
; 0000 01E5             SelectedRow = 0;
;PCODE: $00000310 VOL: 0
;PCODE: $00000311 VOL: 0
; 0000 01E6             Address[5] = 0;
;PCODE: $00000312 VOL: 0
;PCODE: $00000313 VOL: 0
;PCODE: $00000314 VOL: 0
; 0000 01E7             }
; 0000 01E8 
; 0000 01E9             if(RefreshLcd>=1){
;PCODE: $00000315 VOL: 0
;PCODE: $00000316 VOL: 0
;PCODE: $00000317 VOL: 0
;PCODE: $00000318 VOL: 0
;PCODE: $00000319 VOL: 0
;PCODE: $0000031A VOL: 0
; 0000 01EA             lcd_putsf("  -=PAGR. MENIU=-   ");
;PCODE: $0000031B VOL: 0
;PCODE: $0000031C VOL: 0
;PCODE: $0000031D VOL: 0
;PCODE: $0000031E VOL: 0
; 0000 01EB             lcd_putsf("VIDAUS TEMP.+22.5C <");
;PCODE: $0000031F VOL: 0
;PCODE: $00000320 VOL: 0
;PCODE: $00000321 VOL: 0
;PCODE: $00000322 VOL: 0
; 0000 01EC 
; 0000 01ED 
; 0000 01EE 
; 0000 01EF             lcd_putsf("UZSTATYTA T.+22.0C  ");
;PCODE: $00000323 VOL: 0
;PCODE: $00000324 VOL: 0
;PCODE: $00000325 VOL: 0
;PCODE: $00000326 VOL: 0
; 0000 01F0 
; 0000 01F1 
; 0000 01F2 
; 0000 01F3             lcd_putsf("NUSTATYMAI");
;PCODE: $00000327 VOL: 0
;PCODE: $00000328 VOL: 0
;PCODE: $00000329 VOL: 0
;PCODE: $0000032A VOL: 0
; 0000 01F4             lcd_gotoxy(19,SelectedRow-Address[5]);
;PCODE: $0000032B VOL: 0
;PCODE: $0000032C VOL: 0
;PCODE: $0000032D VOL: 0
;PCODE: $0000032E VOL: 0
;PCODE: $0000032F VOL: 0
;PCODE: $00000330 VOL: 0
;PCODE: $00000331 VOL: 0
;PCODE: $00000332 VOL: 0
;PCODE: $00000333 VOL: 0
;PCODE: $00000334 VOL: 0
; 0000 01F5             lcd_putchar('<');
;PCODE: $00000335 VOL: 0
;PCODE: $00000336 VOL: 0
;PCODE: $00000337 VOL: 0
; 0000 01F6             }
; 0000 01F7         }
;PCODE: $00000338 VOL: 0
; 0000 01F8         else if(Address[0]==1){
;PCODE: $00000339 VOL: 0
;PCODE: $0000033A VOL: 0
;PCODE: $0000033B VOL: 0
;PCODE: $0000033C VOL: 0
;PCODE: $0000033D VOL: 0
; 0000 01F9             if(BUTTON[BUTTON_DOWN]==1){
;PCODE: $0000033E VOL: 0
;PCODE: $0000033F VOL: 0
;PCODE: $00000340 VOL: 0
;PCODE: $00000341 VOL: 0
; 0000 01FA             SelectAnotherRow(0);
;PCODE: $00000342 VOL: 0
;PCODE: $00000343 VOL: 0
;PCODE: $00000344 VOL: 0
; 0000 01FB             }
; 0000 01FC             else if(BUTTON[BUTTON_UP]==1){
;PCODE: $00000345 VOL: 0
;PCODE: $00000346 VOL: 0
;PCODE: $00000347 VOL: 0
;PCODE: $00000348 VOL: 0
;PCODE: $00000349 VOL: 0
; 0000 01FD             SelectAnotherRow(1);
;PCODE: $0000034A VOL: 0
;PCODE: $0000034B VOL: 0
;PCODE: $0000034C VOL: 0
; 0000 01FE             }
; 0000 01FF             else if(BUTTON[BUTTON_ENTER]==1){
;PCODE: $0000034D VOL: 0
;PCODE: $0000034E VOL: 0
;PCODE: $0000034F VOL: 0
;PCODE: $00000350 VOL: 0
;PCODE: $00000351 VOL: 0
;PCODE: $00000352 VOL: 0
; 0000 0200             Address[0] = SelectedRow;
;PCODE: $00000353 VOL: 0
;PCODE: $00000354 VOL: 0
; 0000 0201             SelectedRow = 0;
;PCODE: $00000355 VOL: 0
;PCODE: $00000356 VOL: 0
; 0000 0202             Address[5] = 0;
;PCODE: $00000357 VOL: 0
;PCODE: $00000358 VOL: 0
;PCODE: $00000359 VOL: 0
; 0000 0203             }
; 0000 0204 
; 0000 0205             if(RefreshLcd>=1){
;PCODE: $0000035A VOL: 0
;PCODE: $0000035B VOL: 0
;PCODE: $0000035C VOL: 0
;PCODE: $0000035D VOL: 0
;PCODE: $0000035E VOL: 0
;PCODE: $0000035F VOL: 0
; 0000 0206             lcd_putsf("-=VIDIN.TERMOMETR.=-");
;PCODE: $00000360 VOL: 0
;PCODE: $00000361 VOL: 0
;PCODE: $00000362 VOL: 0
;PCODE: $00000363 VOL: 0
; 0000 0207             lcd_putsf("VIDAUS TEMP.+22.5C <");
;PCODE: $00000364 VOL: 0
;PCODE: $00000365 VOL: 0
;PCODE: $00000366 VOL: 0
;PCODE: $00000367 VOL: 0
; 0000 0208             lcd_putsf("PADERINIMAS: +0.0C  ");
;PCODE: $00000368 VOL: 0
;PCODE: $00000369 VOL: 0
;PCODE: $0000036A VOL: 0
;PCODE: $0000036B VOL: 0
; 0000 0209             lcd_putsf("ADRESAS: 012345678  ");
;PCODE: $0000036C VOL: 0
;PCODE: $0000036D VOL: 0
;PCODE: $0000036E VOL: 0
;PCODE: $0000036F VOL: 0
; 0000 020A             lcd_gotoxy(19,SelectedRow-Address[5]);
;PCODE: $00000370 VOL: 0
;PCODE: $00000371 VOL: 0
;PCODE: $00000372 VOL: 0
;PCODE: $00000373 VOL: 0
;PCODE: $00000374 VOL: 0
;PCODE: $00000375 VOL: 0
;PCODE: $00000376 VOL: 0
;PCODE: $00000377 VOL: 0
;PCODE: $00000378 VOL: 0
;PCODE: $00000379 VOL: 0
; 0000 020B             lcd_putchar('<');
;PCODE: $0000037A VOL: 0
;PCODE: $0000037B VOL: 0
;PCODE: $0000037C VOL: 0
; 0000 020C             }
; 0000 020D         }
;PCODE: $0000037D VOL: 0
; 0000 020E         else if(Address[0]==2){
;PCODE: $0000037E VOL: 0
;PCODE: $0000037F VOL: 0
;PCODE: $00000380 VOL: 0
;PCODE: $00000381 VOL: 0
;PCODE: $00000382 VOL: 0
; 0000 020F             if(BUTTON[BUTTON_DOWN]==1){
;PCODE: $00000383 VOL: 0
;PCODE: $00000384 VOL: 0
;PCODE: $00000385 VOL: 0
;PCODE: $00000386 VOL: 0
; 0000 0210             SelectAnotherRow(0);
;PCODE: $00000387 VOL: 0
;PCODE: $00000388 VOL: 0
;PCODE: $00000389 VOL: 0
; 0000 0211             }
; 0000 0212             else if(BUTTON[BUTTON_UP]==1){
;PCODE: $0000038A VOL: 0
;PCODE: $0000038B VOL: 0
;PCODE: $0000038C VOL: 0
;PCODE: $0000038D VOL: 0
;PCODE: $0000038E VOL: 0
; 0000 0213             SelectAnotherRow(1);
;PCODE: $0000038F VOL: 0
;PCODE: $00000390 VOL: 0
;PCODE: $00000391 VOL: 0
; 0000 0214             }
; 0000 0215             else if(BUTTON[BUTTON_ENTER]==1){
;PCODE: $00000392 VOL: 0
;PCODE: $00000393 VOL: 0
;PCODE: $00000394 VOL: 0
;PCODE: $00000395 VOL: 0
;PCODE: $00000396 VOL: 0
;PCODE: $00000397 VOL: 0
; 0000 0216             Address[0] = SelectedRow;
;PCODE: $00000398 VOL: 0
;PCODE: $00000399 VOL: 0
; 0000 0217             SelectedRow = 0;
;PCODE: $0000039A VOL: 0
;PCODE: $0000039B VOL: 0
; 0000 0218             Address[5] = 0;
;PCODE: $0000039C VOL: 0
;PCODE: $0000039D VOL: 0
;PCODE: $0000039E VOL: 0
; 0000 0219             }
; 0000 021A 
; 0000 021B             if(RefreshLcd>=1){
;PCODE: $0000039F VOL: 0
;PCODE: $000003A0 VOL: 0
;PCODE: $000003A1 VOL: 0
;PCODE: $000003A2 VOL: 0
;PCODE: $000003A3 VOL: 0
;PCODE: $000003A4 VOL: 0
; 0000 021C             lcd_putsf("-=UZSTATY.=-");
;PCODE: $000003A5 VOL: 0
;PCODE: $000003A6 VOL: 0
;PCODE: $000003A7 VOL: 0
;PCODE: $000003A8 VOL: 0
; 0000 021D             lcd_putsf("VIDAUS TEMP.+22.5C <");
;PCODE: $000003A9 VOL: 0
;PCODE: $000003AA VOL: 0
;PCODE: $000003AB VOL: 0
;PCODE: $000003AC VOL: 0
; 0000 021E             lcd_putsf("PADERINIMAS: +0.0C  ");
;PCODE: $000003AD VOL: 0
;PCODE: $000003AE VOL: 0
;PCODE: $000003AF VOL: 0
;PCODE: $000003B0 VOL: 0
; 0000 021F             lcd_putsf("ADRESAS: 012345678  ");
;PCODE: $000003B1 VOL: 0
;PCODE: $000003B2 VOL: 0
;PCODE: $000003B3 VOL: 0
;PCODE: $000003B4 VOL: 0
; 0000 0220             lcd_gotoxy(19,SelectedRow-Address[5]);
;PCODE: $000003B5 VOL: 0
;PCODE: $000003B6 VOL: 0
;PCODE: $000003B7 VOL: 0
;PCODE: $000003B8 VOL: 0
;PCODE: $000003B9 VOL: 0
;PCODE: $000003BA VOL: 0
;PCODE: $000003BB VOL: 0
;PCODE: $000003BC VOL: 0
;PCODE: $000003BD VOL: 0
;PCODE: $000003BE VOL: 0
; 0000 0221             lcd_putchar('<');
;PCODE: $000003BF VOL: 0
;PCODE: $000003C0 VOL: 0
;PCODE: $000003C1 VOL: 0
; 0000 0222             }
; 0000 0223         }
;PCODE: $000003C2 VOL: 0
; 0000 0224 
; 0000 0225         if(RefreshLcd>=1){
;PCODE: $000003C3 VOL: 0
;PCODE: $000003C4 VOL: 0
;PCODE: $000003C5 VOL: 0
;PCODE: $000003C6 VOL: 0
;PCODE: $000003C7 VOL: 0
;PCODE: $000003C8 VOL: 0
; 0000 0226         RefreshLcd--;
;PCODE: $000003C9 VOL: 0
;PCODE: $000003CA VOL: 0
;PCODE: $000003CB VOL: 0
; 0000 0227         }
; 0000 0228     //////////////////////////////////////////////////////////////////////////////////
; 0000 0229     //////////////////////////////////////////////////////////////////////////////////
; 0000 022A     //////////////////////////////////////////////////////////////////////////////////
; 0000 022B     delay_ms(1);
;PCODE: $000003CC VOL: 0
;PCODE: $000003CD VOL: 0
;PCODE: $000003CE VOL: 0
;PCODE: $000003CF VOL: 0
; 0000 022C     }
;PCODE: $000003D0 VOL: 0
;PCODE: $000003D1 VOL: 0
; 0000 022D }
;PCODE: $000003D2 VOL: 0
;PCODE: $000003D3 VOL: 0
;PCODE: $000003D4 VOL: 0
