;/*****************************************************
;Project : UPS
;Version : v2
;Date    : 2011-03-25
;Author  : Tomas
;
;Chip type               : ATmega16
;AVR Core Clock frequency: 8.000000 MHz
;Memory model            : Small
;External RAM size       : 0
;Data Stack size         : 512
;*****************************************************/
;
;#include <mega16.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;//#include <string.h>
;#include <delay.h>
;
;///////////////////// VARIABLES /////////////////////////////////////
;/*int OSC, CYCLE;
;char LcdText[4];
;char LcdTaskas[4], LcdDuty;
;unsigned int HelloLaikas;
;
;char ISKROVIMAS,KRAUTI,LOAD,BEEPER_OFF;
;
;
;/////////////////////////////////////////////////////////////////////
;char UpdateVariableOSC(){
;    OSC++;
;        if(OSC>=15){
;        OSC = 0;
;        }
;    return 1;
;    }
;
;char WhatLcdChannelIsOn(){
;    //if(CYCLE==LcdDuty){
;        if(OSC==0){
;        return 0;
;        }
;        else if(OSC==4){
;        return 1;
;        }
;        else if(OSC==8){
;        return 2;
;        }
;        else if(OSC==12){
;        return 3;
;        }
;        else{
;        return -1;
;        }
;    //}
;    //else{
;    //return -1;
;    //}
;return -1;
;}
;
;char EraseLcd(){
;PORTC.6 = 1;    // a
;PORTC.4 = 1;    // b
;PORTC.1 = 1;    // c
;PORTC.3 = 1;    // d
;PORTD.7 = 1;    // e
;PORTC.5 = 1;    // f
;PORTC.0 = 1;    // g
;PORTC.2 = 1;    // h
;
;PORTC.7 = 0;    // 1
;PORTA.6 = 0;    // 2
;PORTA.7 = 0;    // 3
;PORTA.4 = 0;    // 4
;return 1;
;}
;
;char LetterToInts(char input, char a, char b, char c, char d, char e, char f, char g){
;    switch(input){
;        case '0':{
;        a = 1;
;        b = 1;
;        c = 1;
;        d = 1;
;        e = 1;
;        f = 1;
;        g = 0;
;        return 1;
;        }
;        case '1':{
;        a = 0;
;        b = 1;
;        c = 1;
;        d = 0;
;        e = 0;
;        f = 0;
;        g = 0;
;        return 1;
;        }
;        case '2':{
;        a = 1;
;        b = 1;
;        c = 0;
;        d = 1;
;        e = 1;
;        f = 0;
;        g = 1;
;        return 1;
;        }
;        case '3':{
;        a = 1;
;        b = 1;
;        c = 1;
;        d = 1;
;        e = 0;
;        f = 0;
;        g = 1;
;        return 1;
;        }
;        case '4':{
;        a = 0;
;        b = 1;
;        c = 1;
;        d = 0;
;        e = 0;
;        f = 1;
;        g = 1;
;        return 1;
;        }
;        case '5':{
;        a = 1;
;        b = 0;
;        c = 1;
;        d = 1;
;        e = 0;
;        f = 1;
;        g = 1;
;        return 1;
;        }
;        case '6':{
;        a = 1;
;        b = 0;
;        c = 1;
;        d = 1;
;        e = 1;
;        f = 1;
;        g = 1;
;        return 1;
;        }
;        case '7':{
;        a = 1;
;        b = 1;
;        c = 1;
;        d = 0;
;        e = 0;
;        f = 0;
;        g = 0;
;        return 1;
;        }
;        case '8':{
;        a = 1;
;        b = 1;
;        c = 1;
;        d = 1;
;        e = 1;
;        f = 1;
;        g = 1;
;        return 1;
;        }
;        case '9':{
;        a = 1;
;        b = 1;
;        c = 1;
;        d = 1;
;        e = 0;
;        f = 1;
;        g = 1;
;        return 1;
;        }
;        case 'a':{
;        return 0;
;        }
;        case 'A':{
;        a = 1;
;        b = 1;
;        c = 1;
;        d = 0;
;        e = 1;
;        f = 1;
;        g = 1;
;        return 1;
;        }
;        case 'b':{
;        a = 0;
;        b = 0;
;        c = 1;
;        d = 1;
;        e = 1;
;        f = 1;
;        g = 1;
;        return 1;
;        }
;        case 'B':{
;        return 0;
;        }
;        case 'c':{
;        a = 0;
;        b = 0;
;        c = 0;
;        d = 1;
;        e = 1;
;        f = 0;
;        g = 1;
;        return 1;
;        }
;        case 'C':{
;        a = 1;
;        b = 0;
;        c = 0;
;        d = 1;
;        e = 1;
;        f = 1;
;        g = 1;
;        return 1;
;        }
;        case 'd':{
;        a = 0;
;        b = 1;
;        c = 1;
;        d = 1;
;        e = 1;
;        f = 0;
;        g = 1;
;        return 1;
;        }
;        case 'D':{
;        return 0;
;        }
;        case 'e':{
;        return 0;
;        }
;        case 'E':{
;        a = 1;
;        b = 0;
;        c = 0;
;        d = 1;
;        e = 1;
;        f = 1;
;        g = 1;
;        return 1;
;        }
;        case 'f':{
;        return 0;
;        }
;        case 'F':{
;        a = 1;
;        b = 0;
;        c = 0;
;        d = 0;
;        e = 1;
;        f = 1;
;        g = 1;
;        return 1;
;        }
;        case 'g':{
;        return 0;
;        }
;        case 'G':{
;        return 0;
;        }
;        case 'h':{
;        a = 0;
;        b = 0;
;        c = 1;
;        d = 0;
;        e = 1;
;        f = 1;
;        g = 1;
;        return 1;
;        }
;        case 'H':{
;        a = 0;
;        b = 1;
;        c = 1;
;        d = 0;
;        e = 1;
;        f = 1;
;        g = 1;
;        return 1;
;        }
;        case 'i':{
;        a = 0;
;        b = 0;
;        c = 1;
;        d = 0;
;        e = 0;
;        f = 0;
;        g = 0;
;        return 1;
;        }
;        case 'I':{
;        a = 0;
;        b = 1;
;        c = 1;
;        d = 0;
;        e = 0;
;        f = 0;
;        g = 0;
;        return 1;
;        }
;        case 'j':{
;        return 0;
;        }
;        case 'J':{
;        a = 0;
;        b = 1;
;        c = 1;
;        d = 1;
;        e = 0;
;        f = 0;
;        g = 0;
;        return 1;
;        }
;        case 'k':{
;        return 0;
;        }
;        case 'K':{
;        return 0;
;        }
;        case 'l':{
;        return 0;
;        }
;        case 'L':{
;        a = 0;
;        b = 0;
;        c = 0;
;        d = 1;
;        e = 1;
;        f = 1;
;        g = 0;
;        return 1;
;        }
;        case 'm':{
;        return 0;
;        }
;        case 'M':{
;        return 0;
;        }
;        case 'n':{
;        a = 0;
;        b = 0;
;        c = 1;
;        d = 0;
;        e = 1;
;        f = 0;
;        g = 1;
;        return 1;
;        }
;        case 'N':{
;        return 0;
;        }
;        case 'o':{
;        a = 0;
;        b = 0;
;        c = 1;
;        d = 1;
;        e = 1;
;        f = 0;
;        g = 1;
;        return 1;
;        }
;        case 'O':{
;        a = 1;
;        b = 1;
;        c = 1;
;        d = 1;
;        e = 1;
;        f = 1;
;        g = 0;
;        return 1;
;        }
;        case 'p':{
;        return 0;
;        }
;        case 'P':{
;        a = 1;
;        b = 1;
;        c = 0;
;        d = 0;
;        e = 1;
;        f = 1;
;        g = 1;
;        return 1;
;        }
;        case 'q':{
;        return 0;
;        }
;        case 'Q':{
;        return 0;
;        }
;        case 'r':{
;        a = 0;
;        b = 0;
;        c = 0;
;        d = 0;
;        e = 1;
;        f = 0;
;        g = 1;
;        return 1;
;        }
;        case 'R':{
;        return 0;
;        }
;        case 's':{
;        return 0;
;        }
;        case 'S':{
;        a = 1;
;        b = 0;
;        c = 1;
;        d = 1;
;        e = 0;
;        f = 1;
;        g = 1;
;        return 1;
;        }
;        case 't':{
;        a = 0;
;        b = 0;
;        c = 0;
;        d = 1;
;        e = 1;
;        f = 1;
;        g = 1;
;        return 1;
;        }
;        case 'T':{
;        return 0;
;        }
;        case 'u':{
;        a = 0;
;        b = 0;
;        c = 1;
;        d = 1;
;        e = 1;
;        f = 0;
;        g = 0;
;        return 1;
;        }
;        case 'U':{
;        a = 0;
;        b = 1;
;        c = 1;
;        d = 1;
;        e = 1;
;        f = 1;
;        g = 0;
;        return 1;
;        }
;        case 'v':{
;        return 0;
;        }
;        case 'V':{
;        return 0;
;        }
;        case 'w':{
;        return 0;
;        }
;        case 'W':{
;        return 0;
;        }
;        case 'x':{
;        return 0;
;        }
;        case 'X':{
;        return 0;
;        }
;        case 'y':{
;        return 0;
;        }
;        case 'Y':{
;        return 0;
;        }
;        case 'z':{
;        return 0;
;        }
;        case 'Z':{
;        return 0;
;        }
;        case ' ':{
;        a = 0;
;        b = 0;
;        c = 0;
;        d = 0;
;        e = 0;
;        f = 0;
;        g = 0;
;        return 1;
;        }
;    }
;}
;
;char RelayOutputs(){
;    if(ISKROVIMAS==1){
;    PORTD.3 = 1;
;    }
;    else{
;    PORTD.3 = 0;
;    }
;
;    if(KRAUTI==1){
;    PORTD.6 = 1;
;    }
;    else{
;    PORTD.6 = 0;
;    }
;
;    if(LOAD==1){
;    PORTD.5 = 1;
;    }
;    else{
;    PORTD.5 = 0;
;    }
;
;    if(BEEPER_OFF==1){
;    PORTD.4 = 1;
;    }
;    else{
;    PORTD.4 = 0;
;    }
;return 1;
;}
;
;char UpdateLcd(){
;    char LcdChannel = WhatLcdChannelIsOn();
;        if(LcdChannel!=-1){
;        char segm[7];
;        char i;
;        // Bloko valdymas
;            switch(LcdChannel){
;                case 0:{PORTC.7 = 1;}
;                case 1:{PORTA.6 = 1;}
;                case 2:{PORTA.7 = 1;}
;                case 3:{PORTA.4 = 1;}
;            }
;
;        // Segmentu valdymas
;        LetterToInts(LcdText[LcdChannel],segm[0],segm[1],segm[2],segm[3],segm[4],segm[5],segm[6]);
;            // Invertuoti signala
;
;            for(i=0;i<7;i++){
;                if(segm[i]==1){
;                segm[i] = 0;
;                }
;                else{
;                segm[i] = 1;
;                }
;            }
;
;        PORTC.6 = 0;// a
;        PORTC.4 = segm[1];// b
;        PORTC.1 = segm[2];// c
;        PORTC.3 = segm[3];// d
;        PORTD.7 = segm[4];// e
;        PORTC.5 = segm[5];// f
;        PORTC.0 = segm[6];// g
;        PORTC.2 = LcdTaskas[LcdChannel];
;        }
;        else{
;        EraseLcd();
;        }
;    return 1;
;    }*/
;
;void main(void){
; 0000 023E void main(void){

	.CSEG
;PCODE: $0000000D VOL: 0
; 0000 023F // Crystal Oscillator division factor: 1
; 0000 0240 
; 0000 0241 PORTA=0x00;
;PCODE: $0000000E VOL: 0
;PCODE: $0000000F VOL: 0
; 0000 0242 DDRA=0b11010000;
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
; 0000 0243 
; 0000 0244 PORTB=0x00;
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
; 0000 0245 DDRB=0b00;
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
; 0000 0246 
; 0000 0247 PORTC=0x00;
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
; 0000 0248 DDRC=0b11111111;
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
; 0000 0249 
; 0000 024A PORTD=0x00;
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
; 0000 024B DDRD=0b11111100;
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
; 0000 024C 
; 0000 024D // Timer/Counter 0 initialization
; 0000 024E // Clock source: System Clock
; 0000 024F // Clock value: Timer 0 Stopped
; 0000 0250 // Mode: Normal top=FFh
; 0000 0251 // OC0 output: Disconnected
; 0000 0252 TCCR0=0x00;
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
; 0000 0253 TCNT0=0x00;
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
; 0000 0254 OCR0=0x00;
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
; 0000 0255 
; 0000 0256 // Timer/Counter 1 initialization
; 0000 0257 // Clock source: System Clock
; 0000 0258 // Clock value: Timer1 Stopped
; 0000 0259 // Mode: Normal top=FFFFh
; 0000 025A // OC1A output: Discon.
; 0000 025B // OC1B output: Discon.
; 0000 025C // Noise Canceler: Off
; 0000 025D // Input Capture on Falling Edge
; 0000 025E // Timer1 Overflow Interrupt: Off
; 0000 025F // Input Capture Interrupt: Off
; 0000 0260 // Compare A Match Interrupt: Off
; 0000 0261 // Compare B Match Interrupt: Off
; 0000 0262 TCCR1A=0x00;
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
; 0000 0263 TCCR1B=0x00;
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
; 0000 0264 TCNT1H=0x00;
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
; 0000 0265 TCNT1L=0x00;
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
; 0000 0266 ICR1H=0x00;
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
; 0000 0267 ICR1L=0x00;
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
; 0000 0268 OCR1AH=0x00;
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
; 0000 0269 OCR1AL=0x00;
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
; 0000 026A OCR1BH=0x00;
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
; 0000 026B OCR1BL=0x00;
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
; 0000 026C 
; 0000 026D // Timer/Counter 2 initialization
; 0000 026E // Clock source: System Clock
; 0000 026F // Clock value: Timer2 Stopped
; 0000 0270 // Mode: Normal top=FFh
; 0000 0271 // OC2 output: Disconnected
; 0000 0272 ASSR=0x00;
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
; 0000 0273 TCCR2=0x00;
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
; 0000 0274 TCNT2=0x00;
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
; 0000 0275 OCR2=0x00;
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
; 0000 0276 
; 0000 0277 // External Interrupt(s) initialization
; 0000 0278 // INT0: Off
; 0000 0279 // INT1: Off
; 0000 027A // INT2: Off
; 0000 027B MCUCR=0x00;
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
; 0000 027C MCUCSR=0x00;
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
; 0000 027D 
; 0000 027E // Timer(s)/Counter(s) Interrupt(s) initialization
; 0000 027F TIMSK=0x00;
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
; 0000 0280 
; 0000 0281 // Analog Comparator initialization
; 0000 0282 // Analog Comparator: Off
; 0000 0283 // Analog Comparator Input Capture by Timer/Counter 1: Off
; 0000 0284 ACSR=0x80;
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
; 0000 0285 SFIOR=0x00;
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
; 0000 0286 
; 0000 0287 
; 0000 0288 
; 0000 0289 
; 0000 028A 
; 0000 028B 
; 0000 028C /*
; 0000 028D // Ijungiant rabega uzrasas "HELLO"
; 0000 028E     while(HelloLaikas<10000){
; 0000 028F     char HelloPadetis = HelloLaikas/1000;
; 0000 0290     UpdateVariableOSC();
; 0000 0291     HelloLaikas++;
; 0000 0292 
; 0000 0293         switch(HelloPadetis){
; 0000 0294             case 0:{strcpy(LcdText, "   H");}
; 0000 0295             case 2:{strcpy(LcdText, "  HE");}
; 0000 0296             case 3:{strcpy(LcdText, " HEL");}
; 0000 0297             case 4:{strcpy(LcdText, "HELL");}
; 0000 0298             case 5:{strcpy(LcdText, "ELLO");}
; 0000 0299             case 6:{strcpy(LcdText, "LLO ");}
; 0000 029A             case 7:{strcpy(LcdText, "LO  ");}
; 0000 029B             case 8:{strcpy(LcdText, "O   ");}
; 0000 029C         }
; 0000 029D 
; 0000 029E     UpdateLcd();
; 0000 029F     delay_ms(1);
; 0000 02A0     }*/
; 0000 02A1 
; 0000 02A2 // Programos kodas
; 0000 02A3     while(1){
;PCODE: $0000004A VOL: 0
; 0000 02A4     PORTC.6 = 0;
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
; 0000 02A5 PORTC.7 = 1;
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
; 0000 02A6 delay_ms(1000);
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
; 0000 02A7     //UpdateVariableOSC();
; 0000 02A8 
; 0000 02A9     // UpdateLcd();
; 0000 02AA     //RelayOutputs();
; 0000 02AB     //delay_ms(1);
; 0000 02AC     }
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
; 0000 02AD }
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
;
;
